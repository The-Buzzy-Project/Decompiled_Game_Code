
struct s0 {
    signed char[524] pad524;
    uint32_t f524;
    void*** f528;
};

uint32_t fun_40c1f0(struct s0* a1, void** a2) {
    uint32_t eax3;
    uint32_t edx4;
    void** esi5;
    void**** ecx6;

    eax3 = 0;
    edx4 = a1->f524;
    if (!edx4) {
        addr_0x40c21a_2:
        eax3 = 0xfffffff;
    } else {
        esi5 = a2;
        ecx6 = &a1->f528;
        do {
            if (**ecx6 == esi5) 
                break;
            ++eax3;
            ++ecx6;
        } while (eax3 < edx4);
        goto addr_0x40c21a_2;
    }
    return eax3;
}

void** g42ed34;

void** fun_414dd0(void** ecx, void** a2, void** a3, void** a4, void** a5);

void** fun_414db0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** eax13;
    void** eax14;

    eax13 = g42ed34;
    eax14 = fun_414dd0(a1, a1, eax13, __return_address(), a1);
    return eax14;
}

void** fun_414d40(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18);

void** fun_40c2d0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** edi13;
    void** esi14;
    void** ebx15;
    void** eax16;
    void** ebx17;
    void** ecx18;
    void** eax19;
    void** edx20;
    signed char* edi21;
    uint32_t ecx22;
    uint32_t ecx23;
    uint32_t eax24;
    void*** esi25;
    void** edi26;
    uint32_t ecx27;
    void** eax28;
    uint32_t ecx29;

    eax16 = fun_414db0(12, edi13, esi14, ebx15, __return_address(), a1, a2, a3, a4, a5, a6, a7);
    ebx17 = eax16;
    if (ebx17) {
        *reinterpret_cast<void***>(ebx17) = *reinterpret_cast<void***>(a2);
        *reinterpret_cast<void***>(ebx17 + 4) = *reinterpret_cast<void***>(a2 + 4);
        *reinterpret_cast<void***>(ebx17 + 8) = *reinterpret_cast<void***>(a2 + 8);
        ecx18 = *reinterpret_cast<void***>(ebx17 + 4);
        eax19 = fun_414db0(ecx18, edi13, esi14, ebx15, __return_address(), a1, a2, a3, a4, a5, a6, a7);
        edx20 = eax19;
        *reinterpret_cast<void***>(ebx17 + 8) = edx20;
        if (!edx20) {
            fun_414d40(ecx18, ebx17, edi13, esi14, ebx15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
            ebx17 = reinterpret_cast<void**>(0);
        } else {
            edi21 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 8)) + reinterpret_cast<unsigned char>(a1));
            ecx22 = 0xffffffff;
            do {
                if (!ecx22) 
                    break;
                --ecx22;
                ++edi21;
            } while (*edi21);
            ecx23 = ~ecx22;
            eax24 = ecx23;
            esi25 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edi21) - ecx23);
            edi26 = edx20;
            ecx27 = ecx23 >> 2;
            while (ecx27) {
                --ecx27;
                *reinterpret_cast<void***>(edi26) = *esi25;
                edi26 = edi26 + 4;
                esi25 = esi25 + 4;
            }
            eax28 = ebx17;
            ecx29 = eax24 & 3;
            while (ecx29) {
                --ecx29;
                *reinterpret_cast<void***>(edi26) = *esi25;
                ++edi26;
                ++esi25;
            }
            return eax28;
        }
    }
    return ebx17;
}

void** fun_40c350(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

void** fun_40c3d0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** ebp8;
    void** v9;
    void** esi10;
    void** v11;
    void** edi12;
    void** ebx13;
    void** eax14;
    void** ebp15;
    void** ebx16;
    void** ecx17;
    void** esi18;
    void** edi19;
    void** edi20;
    void** esi21;
    void* eax22;
    void* v23;
    void** v24;
    void** eax25;

    v7 = ebp8;
    v9 = esi10;
    v11 = edi12;
    eax14 = fun_414db0(0x68, v11, v9, v7, ebx13, __return_address(), a1, a2, a3, a4, a5, a6);
    ebp15 = eax14;
    if (!ebp15) {
        addr_0x40c43b_2:
        return ebp15;
    } else {
        ebx16 = a1;
        ecx17 = reinterpret_cast<void**>(26);
        esi18 = ebx16;
        edi19 = ebp15;
        while (ecx17) {
            --ecx17;
            *reinterpret_cast<void***>(edi19) = *reinterpret_cast<void***>(esi18);
            edi19 = edi19 + 4;
            esi18 = esi18 + 4;
        }
        edi20 = reinterpret_cast<void**>(0);
        if (!*reinterpret_cast<void***>(ebp15 + 16)) 
            goto addr_0x40c43b_2;
    }
    esi21 = ebp15 + 24;
    eax22 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx16) - reinterpret_cast<unsigned char>(ebp15));
    v23 = eax22;
    while (v24 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax22) + reinterpret_cast<unsigned char>(esi21))) + reinterpret_cast<unsigned char>(ebx16)), eax25 = fun_40c350(ecx17, ebx16, v24, v11, v9, v7), *reinterpret_cast<void***>(esi21) = eax25, !!eax25) {
        ++edi20;
        esi21 = esi21 + 4;
        if (reinterpret_cast<unsigned char>(edi20) >= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp15 + 16))) 
            goto addr_0x40c42d_10;
        eax22 = v23;
    }
    return 0;
    addr_0x40c42d_10:
    return ebp15;
}

void fun_417120(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13);

struct s1 {
    struct s1* f0;
    signed char[12] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
};

signed char* fun_417540(void** a1, struct s1** a2, void** a3);

void** fun_4171a0(void*** a1);

void** g4313ac;

int32_t HeapFree = 0x32944;

void fun_4175a0(void** a1, void** a2, signed char* a3, void** a4, void** a5, void** a6);

void** fun_414d40(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18) {
    void** esi19;
    void* esp20;
    signed char* eax21;
    void** ecx22;
    void** eax23;
    void** eax24;

    if (a2) {
        fun_417120(ecx, 9, esi19, ecx, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
        esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 + 4 + 4);
        eax21 = fun_417540(a2, reinterpret_cast<int32_t>(esp20) + 4, reinterpret_cast<int32_t>(esp20) + 12);
        if (!eax21) {
            fun_4171a0(9);
            ecx22 = g4313ac;
            eax23 = reinterpret_cast<void**>(HeapFree(ecx22, 0, a2));
        } else {
            fun_4175a0(ecx, a2, eax21, esi19, ecx, __return_address());
            eax24 = fun_4171a0(9);
            return eax24;
        }
    }
    return eax23;
}

void** g429188 = reinterpret_cast<void**>(97);

void** g42918c = reinterpret_cast<void**>(32);

void** g429190 = reinterpret_cast<void**>(0x73);

void** fun_40c450(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** eax11;
    void** edx12;
    int32_t ecx13;
    void** edi14;
    void** ecx15;
    void** ecx16;
    void** ecx17;

    eax11 = fun_414db0(0x68, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    edx12 = eax11;
    if (edx12) {
        ecx13 = 26;
        edi14 = edx12;
        while (ecx13) {
            --ecx13;
            *reinterpret_cast<void***>(edi14) = reinterpret_cast<void**>(0);
            edi14 = edi14 + 4;
        }
        ecx15 = g429188;
        *reinterpret_cast<void***>(edx12) = ecx15;
        ecx16 = g42918c;
        *reinterpret_cast<void***>(edx12 + 4) = ecx16;
        ecx17 = g429190;
        *reinterpret_cast<void***>(edx12 + 12) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(edx12 + 16) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(edx12 + 8) = ecx17;
        *reinterpret_cast<void***>(edx12 + 20) = reinterpret_cast<void**>(0);
    }
    return edx12;
}

struct s2 {
    unsigned char f0;
    unsigned char f1;
};

void** fun_411eb0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_41fd00(void** a1, void** a2, struct s2* a3) {
    void** esi4;
    void** ebx5;
    struct s2* eax6;
    uint1_t cf7;
    unsigned char v8;
    uint1_t cf9;
    uint32_t eax10;
    void** ecx11;

    fun_411eb0(a2, a1, a2, 40, reinterpret_cast<int32_t>(__zero_stack_offset()) - 52 - 4 + 16, esi4, ebx5);
    eax6 = a3;
    do {
        cf7 = reinterpret_cast<uint1_t>(eax6->f0 < 0);
        if (eax6->f0) 
            break;
        if (!eax6->f0) 
            goto addr_0x41fd5f_4;
        cf7 = reinterpret_cast<uint1_t>(eax6->f1 < v8);
        if (eax6->f1 != v8) 
            break;
        ++eax6;
    } while (eax6->f1);
    goto addr_0x41fd5f_4;
    cf9 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax6) < reinterpret_cast<uint32_t>(eax6) + cf7);
    eax10 = reinterpret_cast<uint32_t>(eax6) - (reinterpret_cast<uint32_t>(eax6) + cf9);
    ecx11 = reinterpret_cast<void**>(0);
    *reinterpret_cast<unsigned char*>(&ecx11) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax10 - (1 - reinterpret_cast<uint1_t>(eax10 < 1 - cf9)) == 0));
    return ecx11;
    addr_0x41fd5f_4:
    return 1;
}

uint32_t* fun_40c760(int32_t a1, int32_t a2, int32_t a3) {
    if (__intrinsic() || !__intrinsic()) {
    }
    __asm__("rol ecx, 1");
}

struct s3 {
    signed char[4] pad4;
    void* f4;
};

struct s4 {
    signed char f0;
    signed char[93] pad94;
    unsigned char f94;
    signed char[1166870510] pad1166870605;
    unsigned char f1166870605;
    signed char[1207961639] pad1301090421;
    unsigned char f1301090421;
};

int32_t g42ea00;

signed char fun_40c6e0(unsigned char* ecx, struct s3* a2, unsigned char* a3, uint32_t a4, signed char* a5) {
    struct s4* ebx6;
    int32_t eax7;
    signed char* esi8;
    unsigned char* edx9;
    int32_t v10;
    int32_t edi11;
    struct s4* edi12;
    uint32_t ecx13;
    uint32_t ecx14;
    int1_t pf15;

    ebx6 = reinterpret_cast<struct s4*>(reinterpret_cast<int32_t>(a2->f4) + reinterpret_cast<uint32_t>(a3));
    if (!(__intrinsic() || !__intrinsic())) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx6) + 0x4d8d1075) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx6) + 0x4d8d1075) | 8);
    }
    eax7 = reinterpret_cast<int32_t>(g42ea00());
    if (!eax7) {
        addr_0x40c750_5:
        goto 4;
    } else {
        esi8 = a5;
        edx9 = a3;
        v10 = edi11;
        edi12 = ebx6;
        ecx13 = reinterpret_cast<uint32_t>(a3) >> 2;
        while (ecx13) {
            --ecx13;
            edi12->f0 = *esi8;
            edi12 = reinterpret_cast<struct s4*>(reinterpret_cast<uint32_t>(edi12) + 4);
            esi8 = esi8 + 4;
        }
        ecx14 = reinterpret_cast<uint32_t>(edx9) & 3;
        pf15 = __intrinsic();
        while (ecx14) {
            --ecx14;
            edi12->f0 = *esi8;
            edi12 = reinterpret_cast<struct s4*>(&edi12->pad94);
            ++esi8;
        }
        if (pf15) 
            goto addr_0x40c729_13;
        if (pf15) 
            goto addr_0x40c732_15;
    }
    addr_0x40c729_13:
    addr_0x40c733_16:
    g42ea00(ebx6, edx9, ecx14, eax7, v10);
    if (!(pf15 || !pf15)) {
        edi12->f94 = reinterpret_cast<unsigned char>(edi12->f94 ^ *reinterpret_cast<unsigned char*>(&ebx6));
    }
    goto addr_0x40c750_5;
    addr_0x40c732_15:
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx6) + 0x458d084d) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx6) + 0x458d084d) | 12);
    pf15 = __intrinsic();
    goto addr_0x40c733_16;
}

struct s5 {
    signed char[4] pad4;
    unsigned char f4;
};

int32_t GetVersionExA = 0x3259c;

int32_t LoadLibraryExA = 0x32718;

struct s5* g42eb10;

int32_t GetProcAddress = 0x325e2;

struct s5* g42eb14;

int32_t GetModuleFileNameA = 0x3251c;

void** fun_416160(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, int32_t a9, int32_t a10, int32_t a11, int32_t a12, void* a13);

struct s5* fun_4229f0(struct s5* a1, int32_t a2, struct s5** a3) {
    struct s5* eax4;
    int32_t v5;
    struct s5* v6;
    int1_t zf7;
    int1_t zf8;
    int1_t zf9;
    int1_t zf10;
    void** ecx11;

    eax4 = reinterpret_cast<struct s5*>(GetVersionExA(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x298));
    if (!eax4 || v5 == 2) {
        eax4 = reinterpret_cast<struct s5*>(LoadLibraryExA("drvmgt.dll", 0, 8, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x298));
        v6 = eax4;
        if (v6) {
            zf7 = g42eb10 == 0;
            if (!zf7 || (eax4 = reinterpret_cast<struct s5*>(GetProcAddress(v6, "Setup", "drvmgt.dll", 0, 8, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x298)), g42eb10 = eax4, zf8 = g42eb10 == 0, !zf8)) {
                zf9 = g42eb14 == 0;
                if (!zf9 || (eax4 = reinterpret_cast<struct s5*>(GetProcAddress(v6, "Remove", "drvmgt.dll", 0, 8, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x298)), g42eb14 = eax4, zf10 = g42eb14 == 0, !zf10)) {
                    GetModuleFileNameA(0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffefc, 0x104, "drvmgt.dll", 0, 8, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x298);
                    ecx11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffdfc);
                    fun_416160(ecx11, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffefc, 0, 0, ecx11, 0, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffefc, 0x104, "drvmgt.dll", 0, 8, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x298);
                    eax4 = a1;
                    if (eax4 == 0xfa) {
                        eax4 = reinterpret_cast<struct s5*>(g42eb10(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x204, a2, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffefc, 0x104, "drvmgt.dll", 0, 8, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x298));
                        *a3 = eax4;
                    } else {
                        if (eax4 == 0xfb) {
                            eax4 = reinterpret_cast<struct s5*>(g42eb14(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x204, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffefc, 0x104, "drvmgt.dll", 0, 8, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x298));
                            *a3 = eax4;
                        } else {
                            *reinterpret_cast<int16_t*>(&eax4) = 0;
                            goto addr_0x422b3c_11;
                        }
                    }
                } else {
                    *reinterpret_cast<int16_t*>(&eax4) = 0;
                    goto addr_0x422b3c_11;
                }
            } else {
                *reinterpret_cast<int16_t*>(&eax4) = 0;
                goto addr_0x422b3c_11;
            }
        } else {
            *reinterpret_cast<int16_t*>(&eax4) = 0;
            goto addr_0x422b3c_11;
        }
    } else {
        *reinterpret_cast<int16_t*>(&eax4) = 1;
        goto addr_0x422b3c_11;
    }
    *reinterpret_cast<int16_t*>(&eax4) = 1;
    addr_0x422b3c_11:
    return eax4;
}

void** g42e594;

int32_t SetEnvironmentVariableA = 0x326e4;

int32_t fun_40f680() {
    void** ecx1;
    int32_t eax2;

    ecx1 = g42e594;
    eax2 = 1;
    if (ecx1) {
        eax2 = reinterpret_cast<int32_t>(SetEnvironmentVariableA("PATH", ecx1));
    }
    return eax2;
}

void** fun_40c4d0(void** ecx, void** a2, void** a3, void** a4);

void** fun_40c4f0(void** ecx, void** a2, void** a3, void** a4);

int32_t CreateFileA = 0x3257a;

int32_t SetFilePointer = 0x32568;

int32_t ReadFile = 0x3255c;

int32_t CloseHandle = 0x324de;

void** fun_40c4b0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_40c510(void** ecx) {
    void** esi2;
    void** edi3;
    void** esi4;
    void** ebx5;
    void** eax6;
    void** eax7;
    int32_t eax8;
    void** eax9;
    void** eax10;
    void** v11;
    int32_t eax12;
    void** eax13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** eax28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;

    esi2 = reinterpret_cast<void**>(0);
    eax6 = fun_40c4d0(ecx, edi3, esi4, ebx5);
    eax7 = fun_40c4f0(ecx, edi3, esi4, ebx5);
    eax8 = reinterpret_cast<int32_t>(GetModuleFileNameA());
    if (eax8 && (ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffef4), eax9 = reinterpret_cast<void**>(CreateFileA(ecx, 0x80000000, 1, 0, 3, 0x80, 0)), eax9 != 0xffffffff)) {
        SetFilePointer(eax9, eax7, 0, 0, ecx, 0x80000000, 1, 0, 3, 0x80, 0);
        eax10 = fun_414db0(eax6, eax9, eax7, 0, 0, ecx, 0x80000000, 1, 0, 3, 0x80, 0);
        esi2 = eax10;
        v11 = esi2;
        eax12 = reinterpret_cast<int32_t>(ReadFile(eax9, v11, eax6, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, 0, eax9, eax7, 0, 0, ecx, 0x80000000, 1, 0, 3, 0x80, 0));
        if (!eax12 || eax6) {
            fun_414d40(ecx, esi2, eax9, v11, eax6, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, 0, eax9, eax7, 0, 0, ecx, 0x80000000, 1, 0, 3, 0x80, 0);
            esi2 = reinterpret_cast<void**>(0);
        }
        CloseHandle(eax9, eax9, v11, eax6, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, 0, eax9, eax7, 0, 0, ecx, 0x80000000, 1, 0, 3, 0x80, 0);
    }
    if (esi2) {
        eax13 = fun_40c4b0(esi2, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffef4, 0x104, edi3, esi4, ebx5);
        fun_414d40(ecx, esi2, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffef4, 0x104, edi3, esi4, ebx5, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
        return eax13;
    } else {
        eax28 = fun_40c450(0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffef4, 0x104, edi3, esi4, ebx5, v24, v25, v26, v27);
        fun_414d40(ecx, esi2, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffef4, 0x104, edi3, esi4, ebx5, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38);
        return eax28;
    }
}

void** g42e588;

void** fun_40f2b0(void** a1) {
    g42e588 = a1;
    return a1;
}

int32_t fun_40f310(void** a1, void** a2, int32_t a3);

int32_t fun_40f4d0() {
    void** esi1;
    int32_t eax2;

    esi1 = reinterpret_cast<void**>(0);
    do {
        eax2 = fun_40f310(esi1, esi1, 16);
        ++esi1;
    } while (reinterpret_cast<unsigned char>(esi1) < reinterpret_cast<unsigned char>(11));
    return eax2;
}

int32_t GetCurrentProcessId = 0x3272a;

struct s6 {
    signed char f0;
    signed char f1;
};

int32_t fun_4150c0(void** a1, struct s6* a2, void* a3, void* a4);

struct s7 {
    signed char[8] pad8;
    int32_t f8;
    void** f12;
    signed char[3] pad16;
    signed char f16;
};

struct s7* fun_411600(void* ecx, signed char* a2, void* a3);

void** fun_40f410(void** a1, void** a2, void** a3);

struct s8 {
    unsigned char f0;
    signed char[4384027] pad4384028;
    unsigned char f4384028;
};

struct s7* fun_4116a0(struct s8* a1, struct s7* a2);

int32_t fun_411450(void** a1, void** a2, int32_t a3) {
    void* eax4;
    void** esp5;
    void* ebp6;
    void* esp7;
    void* ecx8;
    struct s7* eax9;
    void** ebp10;
    struct s7* ebx11;
    void* esp12;
    void* esp13;
    void* esp14;
    signed char* edi15;
    uint32_t ecx16;
    signed char* edx17;
    signed char v18;
    uint32_t ecx19;
    struct s7* v20;
    uint32_t eax21;
    signed char* esi22;
    signed char* edi23;
    uint32_t ecx24;
    uint32_t ecx25;
    struct s8* v26;
    int32_t eax27;

    eax4 = reinterpret_cast<void*>(GetCurrentProcessId());
    esp5 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x638 - 4 - 4 - 4 + 4 - 4);
    fun_4150c0(esp5 + 4, 0x42a870, eax4, ebp6);
    esp7 = reinterpret_cast<void*>(esp5 - 1 - 1 - 1 + 1 + 3);
    ecx8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) + 8);
    eax9 = fun_411600(ecx8, reinterpret_cast<int32_t>(esp7) + 12, ecx8);
    ebp10 = a2;
    ebx11 = eax9;
    if (ebx11) {
        esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 + 4 + 8 - 4 - 4);
        ebx11->f12 = ebp10;
        fun_40f410(a1, reinterpret_cast<int32_t>(esp12) + 64, 0x200);
        esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp12) - 4 - 4 - 4 - 4 + 4 + 12);
        fun_40f410(ebp10, reinterpret_cast<int32_t>(esp13) + 0x448, 0x200);
        esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4 - 4 + 4 + 12);
        fun_4150c0(reinterpret_cast<int32_t>(esp14) + 64, 0x42a888, reinterpret_cast<int32_t>(esp14) + 64, reinterpret_cast<int32_t>(esp14) + 0x448);
        edi15 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp14) - 4 - 4 - 4 - 4 - 4 + 4 + 80);
        ecx16 = 0xffffffff;
        edx17 = &ebx11->f16;
        do {
            if (!ecx16) 
                break;
            --ecx16;
            ++edi15;
        } while (v18);
        ecx19 = ~ecx16;
        v20 = ebx11;
        eax21 = ecx19;
        esi22 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi15) - ecx19);
        edi23 = edx17;
        ecx24 = ecx19 >> 2;
        while (ecx24) {
            --ecx24;
            *edi23 = *esi22;
            edi23 = edi23 + 4;
            esi22 = esi22 + 4;
        }
        ecx25 = eax21 & 3;
        while (ecx25) {
            --ecx25;
            *edi23 = *esi22;
            ++edi23;
            ++esi22;
        }
        fun_4116a0(v26, v20);
    }
    eax27 = fun_40f310(a1, ebp10, a3);
    return eax27;
}

struct s9 {
    signed char[4] pad4;
    unsigned char f4;
};

int32_t GetModuleHandleA = 0x3291c;

struct s10 {
    signed char[8] pad8;
    void** f8;
};

void** fun_411c70(struct s10* a1, void** a2, ...);

int16_t fun_4117e0(void** a1, void** a2, void** a3, void** a4);

struct s11 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s12 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_422199(int32_t ecx) {
    void* esp2;
    uint1_t cf3;
    int1_t pf4;
    uint144_t v5;
    int32_t ebx6;
    int32_t esi7;
    int32_t edi8;
    struct s9* ebx9;
    struct s9* ebx10;
    struct s9* ebx11;
    int32_t ecx12;
    int1_t pf13;
    int32_t eax14;
    uint32_t edi15;
    uint32_t edi16;
    void* ebp17;
    uint32_t edi18;
    int16_t es19;
    uint32_t edi20;
    struct s11* ebx21;
    struct s12* ebx22;
    uint32_t edi23;

    esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    cf3 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esp2) < 12);
    pf4 = __intrinsic();
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v5) + 10) = ebx6;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v5) + 6) = esi7;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v5) + 2) = edi8;
    if (!pf4 && pf4) {
    }
    if (pf4) 
        goto addr_0x4221b0_5;
    ecx = ecx;
    if (pf4) 
        goto addr_0x4221b9_7;
    addr_0x4221b0_5:
    ecx = ecx;
    addr_0x4221ba_8:
    ebx9 = ebx10;
    if (!(pf4 || (ebx9 = ebx9, !pf4))) {
        ebx9->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx9->f4) >> 1);
        cf3 = __intrinsic();
    }
    ebx11 = ebx9;
    ecx12 = ecx;
    pf13 = __intrinsic();
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&v5) + 14) = eax14 + 0x432358 + cf3;
    if (pf13 || (ebx11 = ebx11, !pf13)) {
        ecx12 = ecx12;
    } else {
        ebx11->f4 = 0;
        pf13 = __intrinsic();
    }
    edi15 = edi16;
    ebp17 = esp2;
    GetModuleHandleA(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v5) + 2), *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v5) + 6), *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v5) + 10), *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&v5) + 14));
    if (!(pf13 || (edi15 = edi15, !pf13))) {
        ebx11->f4 = reinterpret_cast<unsigned char>(ebx11->f4 | edi15);
    }
    edi18 = edi15;
    do {
        *reinterpret_cast<unsigned char*>(&ebx11) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx11) >> *reinterpret_cast<signed char*>(&ecx12));
        *reinterpret_cast<int16_t*>(&v5) = es19;
        edi18 = edi18;
    } while (!__intrinsic());
    ebx11->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx11->f4 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx11) + 1)) + __intrinsic());
    edi20 = edi18;
    if (!(__intrinsic() || !__intrinsic())) {
        edi20 = edi20 | ebx11->f4;
    }
    fun_411c70(reinterpret_cast<uint32_t>(ebp17) + 0xfffffff4, *reinterpret_cast<void***>(&v5));
    if (__intrinsic() || (ebp17 = ebp17, !__intrinsic())) {
    }
    __asm__("in eax, dx");
    fun_4117e0(reinterpret_cast<uint32_t>(ebp17) + 0xfffffff4, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v5) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v5) + 8), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v5) + 12));
    if (!(__intrinsic() || !__intrinsic())) {
        ebx11->f4 = reinterpret_cast<unsigned char>(ebx11->f4 & edi20);
    }
    __asm__("sti ");
    addr_0x4221b9_7:
    ebx21->f4 = ebx22->f4 & edi23;
    cf3 = 0;
    pf4 = __intrinsic();
    goto addr_0x4221ba_8;
}

void** fun_40a85f(void* ecx) {
    __asm__("pushad ");
    __asm__("sahf ");
}

signed char gab7743d7;

int32_t fun_404e90() {
    int32_t eax1;
    int16_t ax2;

    __asm__("out 0x60, al");
    eax1 = static_cast<int32_t>(ax2);
    gab7743d7 = *reinterpret_cast<signed char*>(&eax1);
    __asm__("arpl [esi-0x2e], si");
}

void** fun_411c30(void** a1);

void fun_413080(void** a1);

void fun_412ca0(void** a1);

void** fun_4118a0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** eax15;
    void** esi16;
    void** edi17;
    void** v18;
    void** edi19;
    void** esi20;

    eax15 = fun_411c30(a2);
    esi16 = eax15;
    if (esi16) {
        edi17 = esi16 + 20;
        fun_413080(edi17);
        fun_412ca0(edi17);
        if (*reinterpret_cast<void***>(esi16 + 0xc4)) {
            v18 = *reinterpret_cast<void***>(esi16 + 0xc4);
            fun_414d40(ecx, v18, edi19, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
            *reinterpret_cast<void***>(esi16 + 0xc4) = reinterpret_cast<void**>(0);
        }
        eax15 = *reinterpret_cast<void***>(esi16 + 60);
        if (eax15) {
            eax15 = fun_414d40(ecx, eax15, edi19, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
            *reinterpret_cast<void***>(esi16 + 60) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(esi16) = reinterpret_cast<void**>(0);
    }
    return eax15;
}

void** fun_4159a0(void** ecx, void** a2, void** a3);

void** fun_41fa00(void** a1, int32_t a2, void** a3, void** a4, void** a5, void** a6);

void** fun_40c7a0(void** ecx, void** a2, void** a3, int32_t a4, struct s2* a5) {
    void*** ebp6;
    void** ebp7;
    void** eax8;
    void** edx9;
    void** eax10;
    void** esi11;
    int1_t pf12;
    struct s2* edi13;
    void** v14;

    ebp6 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax8 = fun_4159a0(ecx, ebp7, __return_address());
    if (__intrinsic() || !__intrinsic()) {
        ecx = ecx;
    }
    edx9 = reinterpret_cast<void**>(ebp6 + 0xfffffff4);
    eax10 = fun_41fa00(ebp6 + 8, 1, 0, edx9, ecx, eax8);
    esi11 = eax10;
    pf12 = __intrinsic();
    if (!esi11) {
        addr_0x40c837_5:
        if (!pf12 && pf12) {
        }
    } else {
        edi13 = a5;
        do {
            eax10 = fun_41fd00(ebp6 + 8, esi11, edi13);
            pf12 = __intrinsic();
            if (eax10) 
                goto addr_0x40c826_9;
            if (pf12 || (ebp6 = ebp6, !pf12)) {
                ebp6 = ebp6;
            }
            v14 = edx9;
            edx9 = reinterpret_cast<void**>(ebp6 + 8);
            eax10 = fun_41fa00(edx9, 1, esi11 + 40, ebp6 + 0xfffffff4, eax10, v14);
            esi11 = eax10;
            pf12 = __intrinsic();
        } while (esi11);
        goto addr_0x40c824_14;
    }
    if (pf12) 
        goto addr_0x40c84a_17;
    if (pf12) 
        goto addr_0x40c853_19;
    addr_0x40c84a_17:
    addr_0x40c854_20:
    return eax10;
    addr_0x40c853_19:
    goto addr_0x40c854_20;
    addr_0x40c826_9:
    if (pf12 || !pf12) {
        goto addr_0x40c837_5;
    } else {
        eax10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax10) ^ 0x75db8566);
        pf12 = __intrinsic();
        goto addr_0x40c837_5;
    }
    addr_0x40c824_14:
    goto addr_0x40c837_5;
}

struct s13 {
    int32_t f0;
    void* f4;
};

int32_t GetFileAttributesA = 0x324ec;

int32_t g42e5e0;

struct s14 {
    int32_t f0;
    void* f4;
};

void* g42e5e4;

int16_t fun_4116e0(void* a1, struct s13* a2) {
    void** esp3;
    int32_t eax4;
    void* eax5;
    int32_t eax6;
    int32_t edx7;
    struct s14* v8;
    void* ecx9;
    int32_t v10;
    void* eax11;

    if (a1) {
        esp3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x108 - 4 - 4 - 4 - 4);
        fun_4150c0(esp3 + 5, 0x42a958, a1, "00000001.TMP");
        eax4 = reinterpret_cast<int32_t>(GetFileAttributesA());
        if (eax4 != -1 && (eax5 = reinterpret_cast<void*>(CreateFileA(esp3 - 1 - 1 - 1 + 1 + 4 - 1 - 1 + 1 - 1 - 1 - 1 - 1 - 1 + 8, 0x80000000, 0, 0, 3, 0x80, 0)), !!eax5)) {
            eax6 = reinterpret_cast<int32_t>(ReadFile(eax5, 0x42e5e0));
            if (eax6 && !0) {
                edx7 = g42e5e0;
                v8->f0 = edx7;
                ecx9 = g42e5e4;
                v8->f4 = ecx9;
            }
            CloseHandle(eax5, eax5, 0x42e5e0);
        }
        goto v10;
    } else {
        g42e5e0 = 1;
        g42e5e4 = reinterpret_cast<void*>(0);
        a2->f0 = 1;
        eax11 = g42e5e4;
        a2->f4 = eax11;
        return 1;
    }
}

int32_t FindFirstFileA = 0x32660;

int32_t FindNextFileA = 0x32650;

int32_t FindClose = 0x32644;

struct s15 {
    unsigned char f0;
    unsigned char f1;
};

struct s16 {
    unsigned char f0;
    unsigned char f1;
};

void fun_40efc0(signed char* ecx, signed char* a2, signed char* a3, signed char* a4, int32_t a5, signed char* a6) {
    int32_t v7;
    uint32_t ecx8;
    signed char* ebx9;
    int32_t v10;
    int32_t ebp11;
    int32_t* esp12;
    int32_t v13;
    int32_t edi14;
    signed char* edi15;
    signed char* edi16;
    uint32_t ecx17;
    uint32_t ecx18;
    signed char* edi19;
    uint32_t ecx20;
    uint32_t eax21;
    uint32_t ecx22;
    uint32_t ecx23;
    signed char* edi24;
    uint32_t ecx25;
    uint32_t ebp26;
    uint32_t ecx27;
    signed char v28;
    uint32_t ecx29;
    uint32_t ecx30;
    signed char* edi31;
    uint32_t ecx32;
    uint32_t ebp33;
    uint32_t ecx34;
    signed char v35;
    uint32_t ecx36;
    int32_t ebp37;
    uint32_t ecx38;
    int32_t eax39;
    void* esp40;
    int32_t esi41;
    signed char* eax42;
    void* v43;
    int32_t eax44;
    signed char* edi45;
    uint32_t ecx46;
    uint32_t ecx47;
    uint32_t eax48;
    uint32_t ecx49;
    uint32_t ecx50;
    signed char* edi51;
    uint32_t ecx52;
    uint32_t edx53;
    uint32_t ecx54;
    signed char v55;
    uint32_t ecx56;
    uint32_t ecx57;
    void* esp58;
    int32_t eax59;
    void* esp60;
    int32_t ebp61;
    struct s15* eax62;
    uint1_t cf63;
    unsigned char v64;
    unsigned char v65;
    unsigned char v66;
    unsigned char v67;
    uint1_t cf68;
    uint32_t eax69;
    uint32_t eax70;
    void* v71;
    int32_t eax72;
    struct s16* eax73;
    uint1_t cf74;
    unsigned char v75;
    unsigned char v76;
    unsigned char v77;
    unsigned char v78;
    uint1_t cf79;
    uint32_t eax80;
    uint32_t eax81;
    uint32_t ecx82;
    signed char* edi83;
    uint32_t ecx84;
    uint32_t eax85;
    uint32_t ecx86;
    uint32_t ecx87;
    signed char* edi88;
    uint32_t ecx89;
    uint32_t edx90;
    uint32_t ecx91;
    signed char v92;
    uint32_t ecx93;
    uint32_t ecx94;
    uint32_t ecx95;
    signed char v96;
    uint32_t edx97;
    uint32_t ecx98;
    signed char v99;
    uint32_t ecx100;
    signed char* eax101;
    signed char* edx102;
    signed char* v103;
    uint32_t ecx104;
    signed char** esp105;
    signed char* ecx106;
    signed char* v107;
    int32_t v108;

    v7 = reinterpret_cast<int32_t>(__return_address());
    ecx8 = 0xffffffff;
    ebx9 = a2;
    v10 = ebp11;
    esp12 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x348 - 4 - 4 - 4 - 4);
    v13 = edi14;
    edi15 = ebx9;
    do {
        if (!ecx8) 
            break;
        --ecx8;
        ++edi15;
    } while (*edi15);
    if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(~ecx8) - 1 + reinterpret_cast<uint32_t>(ebx9) - 1) == 92) {
        edi16 = ebx9;
        ecx17 = 0xffffffff;
        do {
            if (!ecx17) 
                break;
            --ecx17;
            ++edi16;
        } while (*edi16);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(~ecx17) - 1 + reinterpret_cast<uint32_t>(ebx9) - 1) = 0;
    }
    ecx18 = 0xffffffff;
    edi19 = ebx9;
    do {
        if (!ecx18) 
            break;
        --ecx18;
        ++edi19;
    } while (*edi19);
    ecx20 = ~ecx18;
    eax21 = ecx20;
    ecx22 = ecx20 >> 2;
    while (ecx22) {
        --ecx22;
    }
    ecx23 = eax21 & 3;
    while (ecx23) {
        --ecx23;
    }
    edi24 = reinterpret_cast<signed char*>(0x429118);
    ecx25 = 0xffffffff;
    do {
        if (!ecx25) 
            break;
        --ecx25;
        ++edi24;
    } while (*edi24);
    ebp26 = ~ecx25;
    ecx27 = 0xffffffff;
    do {
        if (!ecx27) 
            break;
        --ecx27;
    } while (v28);
    ecx29 = ebp26 >> 2;
    while (ecx29) {
        --ecx29;
    }
    ecx30 = ebp26 & 3;
    while (ecx30) {
        --ecx30;
    }
    edi31 = a3;
    ecx32 = 0xffffffff;
    do {
        if (!ecx32) 
            break;
        --ecx32;
        ++edi31;
    } while (*edi31);
    ebp33 = ~ecx32;
    ecx34 = 0xffffffff;
    do {
        if (!ecx34) 
            break;
        --ecx34;
    } while (v35);
    ecx36 = ebp33 >> 2;
    while (ecx36) {
        --ecx36;
    }
    ebp37 = FindFirstFileA;
    ecx38 = ebp33 & 3;
    while (ecx38) {
        --ecx38;
    }
    eax39 = reinterpret_cast<int32_t>(ebp37());
    esp40 = reinterpret_cast<void*>(esp12 - 1 - 1 - 1 + 1);
    esi41 = eax39;
    if (esi41 != -1) {
        while (1) {
            if (v10 != 16) {
                eax42 = a3;
                if (!eax42) {
                    addr_0x40f0ca_45:
                    v43 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) + 16);
                    eax44 = reinterpret_cast<int32_t>(FindNextFileA(esi41, v43));
                    esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4 - 4 - 4 + 4);
                    if (!eax44) 
                        break;
                } else {
                    addr_0x40f0b7_46:
                    eax42(ebx9, reinterpret_cast<int32_t>(esp40) + 60, a2);
                    esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4 - 4 - 4 - 4 + 4 + 12);
                    goto addr_0x40f0ca_45;
                }
            } else {
                eax42 = a4;
                if (!eax42) 
                    goto addr_0x40f0ca_45;
                goto addr_0x40f0b7_46;
            }
        }
        FindClose(esi41, esi41, v43);
        esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4 - 4 + 4);
    }
    edi45 = ebx9;
    ecx46 = 0xffffffff;
    do {
        if (!ecx46) 
            break;
        --ecx46;
        ++edi45;
    } while (*edi45);
    ecx47 = ~ecx46;
    eax48 = ecx47;
    ecx49 = ecx47 >> 2;
    while (ecx49) {
        --ecx49;
    }
    ecx50 = eax48 & 3;
    while (ecx50) {
        --ecx50;
    }
    edi51 = reinterpret_cast<signed char*>(0x4296e4);
    ecx52 = 0xffffffff;
    do {
        if (!ecx52) 
            break;
        --ecx52;
        ++edi51;
    } while (*edi51);
    edx53 = ~ecx52;
    ecx54 = 0xffffffff;
    do {
        if (!ecx54) 
            break;
        --ecx54;
    } while (v55);
    ecx56 = edx53 >> 2;
    while (ecx56) {
        --ecx56;
    }
    ecx57 = edx53 & 3;
    esp58 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 4);
    while (ecx57) {
        --ecx57;
    }
    eax59 = reinterpret_cast<int32_t>(ebp37());
    esp60 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp58) - 4 - 4 + 4);
    ebp61 = eax59;
    if (ebp61 != -1) {
        while (1) {
            if (!(*reinterpret_cast<unsigned char*>(&v13) & 16)) 
                goto addr_0x40f286_73;
            eax62 = reinterpret_cast<struct s15*>(0x4295c4);
            do {
                cf63 = reinterpret_cast<uint1_t>(eax62->f0 < v64);
                if (eax62->f0 != v65) 
                    break;
                if (!eax62->f0) 
                    goto addr_0x40f186_77;
                cf63 = reinterpret_cast<uint1_t>(eax62->f1 < v66);
                if (eax62->f1 != v67) 
                    break;
                ++eax62;
            } while (eax62->f1);
            goto addr_0x40f186_77;
            cf68 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax62) < reinterpret_cast<uint32_t>(eax62) + cf63);
            eax69 = reinterpret_cast<uint32_t>(eax62) - (reinterpret_cast<uint32_t>(eax62) + cf68);
            eax70 = eax69 - (1 - reinterpret_cast<uint1_t>(eax69 < 1 - cf68));
            addr_0x40f18f_81:
            if (!eax70) {
                addr_0x40f286_73:
                v71 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp60) + 16);
                eax72 = reinterpret_cast<int32_t>(FindNextFileA(ebp61, v71));
                esp60 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp60) - 4 - 4 - 4 + 4);
                if (eax72) 
                    continue; else 
                    break;
            } else {
                eax73 = reinterpret_cast<struct s16*>(0x4296e0);
                do {
                    cf74 = reinterpret_cast<uint1_t>(eax73->f0 < v75);
                    if (eax73->f0 != v76) 
                        break;
                    if (!eax73->f0) 
                        goto addr_0x40f1c0_85;
                    cf74 = reinterpret_cast<uint1_t>(eax73->f1 < v77);
                    if (eax73->f1 != v78) 
                        break;
                    ++eax73;
                } while (eax73->f1);
                goto addr_0x40f1c0_85;
            }
            cf79 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax73) < reinterpret_cast<uint32_t>(eax73) + cf74);
            eax80 = reinterpret_cast<uint32_t>(eax73) - (reinterpret_cast<uint32_t>(eax73) + cf79);
            eax81 = eax80 - (1 - reinterpret_cast<uint1_t>(eax80 < 1 - cf79));
            addr_0x40f1c9_89:
            if (eax81) {
                ecx82 = 0xffffffff;
                edi83 = ebx9;
                do {
                    if (!ecx82) 
                        break;
                    --ecx82;
                    ++edi83;
                } while (*edi83);
                ecx84 = ~ecx82;
                eax85 = ecx84;
                ecx86 = ecx84 >> 2;
                while (ecx86) {
                    --ecx86;
                }
                ecx87 = eax85 & 3;
                while (ecx87) {
                    --ecx87;
                }
                edi88 = reinterpret_cast<signed char*>(0x429118);
                ecx89 = 0xffffffff;
                do {
                    if (!ecx89) 
                        break;
                    --ecx89;
                    ++edi88;
                } while (*edi88);
                edx90 = ~ecx89;
                ecx91 = 0xffffffff;
                do {
                    if (!ecx91) 
                        break;
                    --ecx91;
                } while (v92);
                ecx93 = edx90 >> 2;
                while (ecx93) {
                    --ecx93;
                }
                ecx94 = edx90 & 3;
                while (ecx94) {
                    --ecx94;
                }
                ecx95 = 0xffffffff;
                do {
                    if (!ecx95) 
                        break;
                    --ecx95;
                } while (v96);
                edx97 = ~ecx95;
                ecx98 = 0xffffffff;
                do {
                    if (!ecx98) 
                        break;
                    --ecx98;
                } while (v99);
                ecx100 = edx97 >> 2;
                while (ecx100) {
                    --ecx100;
                }
                eax101 = a2;
                edx102 = v103;
                ecx104 = edx97 & 3;
                while (ecx104) {
                    --ecx104;
                }
                esp105 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp60) - 4 - 4 - 4);
                ecx106 = reinterpret_cast<signed char*>(esp105 + 0x98);
                fun_40efc0(ecx106, ecx106, v107, edx102, v7, eax101);
                esp60 = reinterpret_cast<void*>(esp105 - 1 - 1 - 1 + 1 + 5);
                goto addr_0x40f286_73;
            }
            addr_0x40f1c0_85:
            eax81 = 0;
            goto addr_0x40f1c9_89;
            addr_0x40f186_77:
            eax70 = 0;
            goto addr_0x40f18f_81;
        }
        FindClose(ebp61, ebp61, v71);
    }
    goto v108;
}

void** fun_40c230(void** a1, void** a2, int16_t a3);

struct s17 {
    signed char[8] pad8;
    void** f8;
};

void** fun_40c280(void** a1, void** a2, void** a3, void** a4) {
    void** v5;
    void** edi6;
    void** eax7;
    struct s0* esi8;
    uint32_t eax9;

    v5 = a4;
    edi6 = reinterpret_cast<void**>(0);
    eax7 = fun_40c230(a1, a2, *reinterpret_cast<int16_t*>(&v5));
    if (eax7 != 0xfffffff && (esi8 = *reinterpret_cast<struct s0**>(reinterpret_cast<uint32_t>(a1 + reinterpret_cast<unsigned char>(eax7) * 4) + 24), eax9 = fun_40c1f0(esi8, a3), eax9 != 0xfffffff)) {
        edi6 = (*reinterpret_cast<struct s17**>(reinterpret_cast<int32_t>(esi8) + eax9 * 4 + 0x210))->f8;
    }
    return edi6;
}

struct s19 {
    void** f0;
    signed char[7] pad8;
    void** f8;
};

struct s18 {
    uint16_t f0;
    signed char[2] pad4;
    struct s19* f4;
};

void** fun_40f2c0(int32_t a1, void** a2) {
    void** esi3;
    int32_t edi4;
    struct s18* edx5;
    uint32_t eax6;
    struct s19* ecx7;

    esi3 = a2;
    edi4 = a1;
    edx5 = reinterpret_cast<struct s18*>(0x429af0);
    do {
        *reinterpret_cast<uint16_t*>(&eax6) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edi4) ^ edx5->f0);
        if (!(eax6 & 0x3ff)) {
            ecx7 = edx5->f4;
            eax6 = 0;
            do {
                if (ecx7->f0 == esi3) 
                    goto addr_0x40f2fe_5;
                ++eax6;
                ecx7 = reinterpret_cast<struct s19*>(reinterpret_cast<int32_t>(ecx7) + 12);
            } while (eax6 < 11);
        }
        ++edx5;
    } while (reinterpret_cast<uint32_t>(edx5) < 0x429b18);
    return 0;
    addr_0x40f2fe_5:
    return ecx7->f8;
}

void** fun_414c40(void** a1, void** a2, void** a3) {
    void** ecx4;
    void** ebx5;
    void** esi6;
    void** edi7;
    uint32_t ecx8;
    void** eax9;
    uint32_t ecx10;
    void** edx11;

    ecx4 = a3;
    if (!ecx4) {
        addr_0x414cc3_2:
        return a1;
    } else {
        ebx5 = ecx4;
        esi6 = a2;
        edi7 = a1;
        if (!(reinterpret_cast<unsigned char>(esi6) & 3)) {
            ecx8 = reinterpret_cast<unsigned char>(ecx4) >> 2;
            if (!ecx8) {
                goto addr_0x414c85_6;
            }
        }
        do {
            eax9 = *reinterpret_cast<void***>(esi6);
            ++esi6;
            *reinterpret_cast<void***>(edi7) = eax9;
            ++edi7;
            --ecx4;
            if (!ecx4) 
                goto addr_0x414c92_8;
            if (!eax9) 
                break;
        } while (reinterpret_cast<unsigned char>(esi6) & 3);
        goto addr_0x414c79_11;
    }
    if (reinterpret_cast<unsigned char>(edi7) & 3) {
        do {
            *reinterpret_cast<void***>(edi7) = eax9;
            ++edi7;
            --ecx4;
            if (!ecx4) 
                goto addr_0x414d36_14;
        } while (reinterpret_cast<unsigned char>(edi7) & 3);
    }
    ebx5 = ecx4;
    ecx10 = reinterpret_cast<unsigned char>(ecx4) >> 2;
    if (ecx10) 
        goto addr_0x414d27_17; else 
        goto addr_0x414cbb_18;
    addr_0x414c79_11:
    ebx5 = ecx4;
    ecx8 = reinterpret_cast<unsigned char>(ecx4) >> 2;
    if (ecx8) {
        do {
            edx11 = *reinterpret_cast<void***>(esi6);
            esi6 = esi6 + 4;
            if ((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(esi6) + 0x7efefeff)) & 0x81010100) {
                if (!*reinterpret_cast<signed char*>(&edx11)) 
                    break;
                if (!*reinterpret_cast<signed char*>(&edx11 + 1)) 
                    goto addr_0x414d11_22;
                if (!(reinterpret_cast<unsigned char>(edx11) & 0xff0000)) 
                    goto addr_0x414d07_24;
                if (!(reinterpret_cast<unsigned char>(edx11) & 0xff000000)) 
                    goto addr_0x414d03_26;
            }
            *reinterpret_cast<void***>(edi7) = edx11;
            edi7 = edi7 + 4;
            --ecx8;
        } while (ecx8);
        goto addr_0x414c80_28;
    } else {
        addr_0x414c80_28:
        ebx5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx5) & 3);
        if (!ebx5) {
            addr_0x414c92_8:
            return a1;
        } else {
            do {
                addr_0x414c85_6:
                eax9 = *reinterpret_cast<void***>(esi6);
                ++esi6;
                *reinterpret_cast<void***>(edi7) = eax9;
                ++edi7;
                if (!eax9) 
                    goto addr_0x414cbe_29;
                --ebx5;
            } while (ebx5);
            goto addr_0x414c92_8;
        }
    }
    *reinterpret_cast<void***>(edi7) = reinterpret_cast<void**>(0);
    addr_0x414d1f_32:
    edi7 = edi7 + 4;
    eax9 = reinterpret_cast<void**>(0);
    ecx10 = ecx8 - 1;
    if (!ecx10) {
        addr_0x414d31_33:
        ebx5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx5) & 3);
        if (ebx5) {
            do {
                addr_0x414cbb_18:
                *reinterpret_cast<void***>(edi7) = eax9;
                ++edi7;
                addr_0x414cbe_29:
                --ebx5;
            } while (ebx5);
        } else {
            addr_0x414d36_14:
            return a1;
        }
    } else {
        addr_0x414d27_17:
        eax9 = reinterpret_cast<void**>(0);
        goto addr_0x414d29_34;
    }
    goto addr_0x414cc3_2;
    do {
        addr_0x414d29_34:
        *reinterpret_cast<void***>(edi7) = reinterpret_cast<void**>(0);
        edi7 = edi7 + 4;
        --ecx10;
    } while (ecx10);
    goto addr_0x414d31_33;
    addr_0x414d11_22:
    *reinterpret_cast<void***>(edi7) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx11) & 0xff);
    goto addr_0x414d1f_32;
    addr_0x414d07_24:
    *reinterpret_cast<void***>(edi7) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx11) & 0xffff);
    goto addr_0x414d1f_32;
    addr_0x414d03_26:
    *reinterpret_cast<void***>(edi7) = edx11;
    goto addr_0x414d1f_32;
}

struct s20 {
    void** f0;
    void** f1;
};

struct s21 {
    void** f0;
    void** f1;
};

void fun_416300(void** a1, void** a2, void** a3, struct s20* a4, struct s21* a5);

int16_t fun_40f950(void** a1);

int16_t fun_40fa20(void** a1, signed char* a2, void* a3, int32_t a4, void* a5, int32_t a6) {
    void** esp7;
    void** esp8;
    int16_t ax9;
    signed char* edi10;
    uint32_t ecx11;
    signed char v12;
    uint32_t ecx13;
    uint32_t eax14;
    signed char* esi15;
    signed char* edi16;
    uint32_t ecx17;
    uint32_t ecx18;

    esp7 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x104);
    fun_416300(esp7, a1, 0x429118, 0, 0);
    esp8 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp7 - 4) - 4 - 4 - 4 - 4 - 4 + 4 + 20);
    ax9 = fun_40f950(esp8);
    if (!ax9) {
        return 0;
    } else {
        edi10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp8 - 4) - 4 + 4 + 4 - 4 + 4);
        ecx11 = 0xffffffff;
        do {
            if (!ecx11) 
                break;
            --ecx11;
            ++edi10;
        } while (v12);
        ecx13 = ~ecx11;
        eax14 = ecx13;
        esi15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi10) - ecx13);
        edi16 = a2;
        ecx17 = ecx13 >> 2;
        while (ecx17) {
            --ecx17;
            *edi16 = *esi15;
            edi16 = edi16 + 4;
            esi15 = esi15 + 4;
        }
        ecx18 = eax14 & 3;
        while (ecx18) {
            --ecx18;
            *edi16 = *esi15;
            ++edi16;
            ++esi15;
        }
        return 1;
    }
}

void** g42f120;

void** fun_4164a0(void** a1, void** a2, void** a3);

int32_t fun_4163a0(void** a1, void** a2, void** a3);

int16_t fun_40f950(void** a1) {
    void** esp2;
    void** v3;
    void** esi4;
    void** v5;
    void** edi6;
    int32_t v7;
    int32_t v8;
    int32_t v9;
    int32_t v10;
    void* v11;
    void** eax12;
    void* esp13;
    void** edi14;
    void*** esi15;
    void** edx16;
    void** ecx17;
    int32_t v18;
    int32_t v19;
    int32_t v20;
    int32_t v21;
    void* v22;
    void* esp23;
    struct s20** esp24;
    void*** esp25;
    void* esp26;
    void** eax27;
    void** eax28;

    esp2 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x408);
    v3 = esi4;
    v5 = edi6;
    fun_416160(esp2, a1, esp2, esp2 + 0x104, 0, 0, v5, v3, v7, v8, v9, v10, v11);
    eax12 = g42f120;
    esp13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp2 - 4) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
    edi14 = reinterpret_cast<void**>(0);
    if (!eax12) {
        addr_0x40fa09_2:
        return *reinterpret_cast<int16_t*>(&eax12);
    } else {
        esi15 = reinterpret_cast<void***>(0x42f124);
        do {
            edx16 = *esi15;
            ecx17 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp13) + 12);
            fun_416160(ecx17, edx16, 0, 0, ecx17, reinterpret_cast<uint32_t>(esp13) + 0x20c, v5, v3, v18, v19, v20, v21, v22);
            esp23 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp13) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
            esp24 = reinterpret_cast<struct s20**>(reinterpret_cast<uint32_t>(esp23) - 4 - 4);
            esp25 = reinterpret_cast<void***>(esp24 - 1);
            fun_416300(esp25 + 0x318, esp24 + 4, reinterpret_cast<uint32_t>(esp23) + 0x10c, reinterpret_cast<uint32_t>(esp23) + 12, reinterpret_cast<uint32_t>(esp23) + 0x20c);
            esp26 = reinterpret_cast<void*>(esp25 - 4 - 4 - 4 + 4 + 20);
            eax27 = fun_4164a0(reinterpret_cast<uint32_t>(esp26) + 0x30c, 0, v5);
            if (eax27 == 0xffffffff) 
                break;
            fun_4163a0(eax27, v5, v3);
            eax28 = g42f120;
            esp13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp26) - 4 - 4 - 4 + 4 + 8 - 4 - 4 + 4 + 4);
            ++edi14;
            esi15 = esi15 + 4;
        } while (reinterpret_cast<unsigned char>(edi14) < reinterpret_cast<unsigned char>(eax28));
        goto addr_0x40f9fd_6;
    }
    *reinterpret_cast<int16_t*>(&eax12) = 0;
    goto addr_0x40fa09_2;
    addr_0x40f9fd_6:
    return *reinterpret_cast<int16_t*>(&eax28);
}

void** fun_41a7b0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

void fun_416300(void** a1, void** a2, void** a3, struct s20* a4, struct s21* a5) {
    void** v6;
    void** v7;
    void** esi8;
    void** esi9;
    void** esi10;
    void** edx11;
    void** ecx12;
    void** al13;
    struct s20* ecx14;
    void** al15;
    void** eax16;
    void** al17;
    void** esi18;
    void*** ecx19;
    void** al20;

    v6 = reinterpret_cast<void**>(__return_address());
    v7 = esi8;
    if (!a2 || !*reinterpret_cast<void***>(a2)) {
        esi9 = a1;
    } else {
        *reinterpret_cast<void***>(a1) = *reinterpret_cast<void***>(a2);
        esi10 = a1 + 1;
        *reinterpret_cast<void***>(esi10) = reinterpret_cast<void**>(58);
        esi9 = esi10 + 1;
    }
    edx11 = a3;
    ecx12 = edx11;
    if (!edx11 || (al13 = *reinterpret_cast<void***>(edx11), al13 == 0)) {
        addr_0x416353_5:
        ecx14 = a4;
        if (ecx14 && (al15 = ecx14->f0, !!al15)) {
            do {
                *reinterpret_cast<void***>(esi9) = al15;
                al15 = ecx14->f1;
                ++esi9;
                ecx14 = reinterpret_cast<struct s20*>(&ecx14->f1);
            } while (al15);
        }
    } else {
        do {
            *reinterpret_cast<void***>(esi9) = al13;
            al13 = *reinterpret_cast<void***>(ecx12 + 1);
            ++esi9;
            ++ecx12;
        } while (al13);
        eax16 = fun_41a7b0(ecx12, edx11, ecx12, v7, v6, a1, a2, a3);
        if (*reinterpret_cast<void***>(eax16) == 47) 
            goto addr_0x416353_5;
        if (*reinterpret_cast<void***>(eax16) == 92) 
            goto addr_0x416353_5; else 
            goto addr_0x41634f_10;
    }
    if (!a5) {
        *reinterpret_cast<void***>(esi9) = reinterpret_cast<void**>(0);
    } else {
        if (a5->f0 && a5->f0 != 46) {
            *reinterpret_cast<void***>(esi9) = reinterpret_cast<void**>(46);
            ++esi9;
        }
        al17 = a5->f0;
        *reinterpret_cast<void***>(esi9) = al17;
        esi18 = esi9 + 1;
        ecx19 = &a5->f1;
        if (al17) {
            do {
                al20 = *ecx19;
                *reinterpret_cast<void***>(esi18) = al20;
                ++esi18;
                ++ecx19;
            } while (al20);
            return;
        }
    }
    return;
    addr_0x41634f_10:
    *reinterpret_cast<void***>(esi9) = reinterpret_cast<void**>(92);
    ++esi9;
    goto addr_0x416353_5;
}

void** fun_41a700(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

void** fun_416160(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, int32_t a9, int32_t a10, int32_t a11, int32_t a12, void* a13) {
    void** v14;
    void** ebx15;
    void** v16;
    void** ebp17;
    void** ebp18;
    void** v19;
    void** esi20;
    void** v21;
    void** edi22;
    void** edi23;
    uint32_t ecx24;
    void** ecx25;
    void** v26;
    void** eax27;
    void** v28;
    void** esi29;
    void** eax30;
    void** edi31;
    void** eax32;
    void** esi33;
    void** eax34;
    void** edi35;
    void** esi36;
    void** eax37;

    v14 = ebx15;
    v16 = ebp17;
    ebp18 = a2;
    v19 = esi20;
    v21 = edi22;
    edi23 = ebp18;
    ecx24 = 0xffffffff;
    do {
        if (!ecx24) 
            break;
        --ecx24;
        ++edi23;
    } while (*reinterpret_cast<void***>(edi23));
    ecx25 = reinterpret_cast<void**>(~ecx24 - 1);
    v26 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(ecx25) < reinterpret_cast<unsigned char>(1) || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp18 + 1) == 58)) {
        if (a3) {
            *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
        }
    } else {
        if (a3) {
            fun_41a700(ecx25, a3, ebp18, 2, v21, v19, v16, v14);
            *reinterpret_cast<void***>(a3 + 2) = reinterpret_cast<void**>(0);
        }
        ebp18 = ebp18 + 2;
    }
    ecx25 = *reinterpret_cast<void***>(ebp18);
    eax27 = reinterpret_cast<void**>(0);
    v28 = reinterpret_cast<void**>(0);
    esi29 = ebp18;
    if (ecx25) {
        ecx25 = reinterpret_cast<void**>(4);
        do {
            eax27 = *reinterpret_cast<void***>(esi29);
            if (!(*reinterpret_cast<unsigned char*>((reinterpret_cast<unsigned char>(eax27) & 0xff) + 0x42ee61) & 4)) {
                if (eax27 == 47 || eax27 == 92) {
                    eax27 = esi29 + 1;
                    v28 = eax27;
                } else {
                    if (reinterpret_cast<int1_t>(eax27 == 46)) {
                        v26 = esi29;
                    }
                }
            } else {
                ++esi29;
            }
            ++esi29;
        } while (*reinterpret_cast<void***>(esi29 + 1));
        eax27 = v28;
    }
    if (!eax27) {
        if (a4) {
            *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
        }
    } else {
        if (a4) {
            eax30 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax27) - reinterpret_cast<unsigned char>(ebp18));
            edi31 = eax30;
            if (reinterpret_cast<unsigned char>(eax30) >= reinterpret_cast<unsigned char>(0xff)) {
                edi31 = reinterpret_cast<void**>(0xff);
            }
            fun_41a700(ecx25, a4, ebp18, edi31, v21, v19, v16, v14);
            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi31) + reinterpret_cast<unsigned char>(a4)) = 0;
        }
        ebp18 = v28;
    }
    eax32 = v26;
    if (!eax32 || reinterpret_cast<unsigned char>(eax32) < reinterpret_cast<unsigned char>(ebp18)) {
        if (a5) {
            esi33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi29) - reinterpret_cast<unsigned char>(ebp18));
            if (reinterpret_cast<unsigned char>(esi33) >= reinterpret_cast<unsigned char>(0xff)) {
                esi33 = reinterpret_cast<void**>(0xff);
            }
            fun_41a700(ecx25, a5, ebp18, esi33, v21, v19, v16, v14);
            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi33) + reinterpret_cast<unsigned char>(a5)) = 0;
        }
        eax32 = a6;
        if (eax32) {
            *reinterpret_cast<void***>(eax32) = reinterpret_cast<void**>(0);
        }
    } else {
        if (a5) {
            eax34 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax32) - reinterpret_cast<unsigned char>(ebp18));
            edi35 = eax34;
            if (reinterpret_cast<unsigned char>(eax34) >= reinterpret_cast<unsigned char>(0xff)) {
                edi35 = reinterpret_cast<void**>(0xff);
            }
            eax32 = fun_41a700(ecx25, a5, ebp18, edi35, v21, v19, v16, v14);
            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi35) + reinterpret_cast<unsigned char>(a5)) = 0;
        }
        if (a6) {
            esi36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi29) - reinterpret_cast<unsigned char>(v26));
            if (reinterpret_cast<unsigned char>(esi36) >= reinterpret_cast<unsigned char>(0xff)) {
                esi36 = reinterpret_cast<void**>(0xff);
            }
            eax37 = fun_41a700(ecx25, a6, v26, esi36, v21, v19, v16, v14);
            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi36) + reinterpret_cast<unsigned char>(a6)) = 0;
            return eax37;
        }
    }
    return eax32;
}

void** fun_4164c0(void** a1, void** a2, void** a3, void** a4);

void** fun_4164a0(void** a1, void** a2, void** a3) {
    void** eax4;

    eax4 = fun_4164c0(a1, a2, 64, a3);
    return eax4;
}

void** g430380;

void** fun_419020(void** a1, void** a2, void** a3);

void*** fun_419030(void** a1, void** a2);

void fun_41ab50(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

int32_t fun_416410(void** a1);

int32_t fun_41abc0(void** a1);

int32_t fun_4163a0(void** a1, void** a2, void** a3) {
    void** eax4;
    uint32_t eax5;
    void** edi6;
    void** esi7;
    void** eax8;
    void*** eax9;
    int32_t eax10;

    eax4 = g430380;
    if (reinterpret_cast<unsigned char>(a1) >= reinterpret_cast<unsigned char>(eax4) || (eax5 = reinterpret_cast<unsigned char>(a1) & 31, (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + (eax5 + eax5 * 8) * 4 + 4) & 1) == 0)) {
        eax8 = fun_419020(edi6, esi7, __return_address());
        *reinterpret_cast<void***>(eax8) = reinterpret_cast<void**>(9);
        eax9 = fun_419030(edi6, esi7);
        *eax9 = reinterpret_cast<void**>(0);
        return -1;
    } else {
        fun_41ab50(a1, edi6, esi7, __return_address(), a1, a2, a3);
        eax10 = fun_416410(a1);
        fun_41abc0(a1);
        return eax10;
    }
}

void fun_4080d0(int32_t ecx);

int32_t fun_4103d0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int16_t a6) {
    void* esp7;
    int1_t of8;
    int1_t of9;
    int1_t sf10;
    int1_t sf11;
    int32_t ecx12;
    int1_t cf13;
    int1_t cf14;
    void* esp15;
    int1_t less_or_equal16;
    int1_t less_or_equal17;
    int1_t of18;
    int1_t of19;
    void* esp20;
    int1_t sf21;
    int1_t sf22;
    void* esp23;
    int1_t cf24;
    int1_t cf25;
    void* esp26;
    int1_t less_or_equal27;
    int1_t less_or_equal28;
    void* esp29;
    int1_t of30;
    int1_t of31;
    void* esp32;
    int1_t sf33;
    int1_t sf34;
    int1_t cf35;
    int1_t cf36;
    void* esp37;
    int1_t less_or_equal38;
    int1_t less_or_equal39;
    void* esp40;
    int1_t of41;
    int1_t of42;
    void* esp43;
    int1_t sf44;
    int1_t sf45;
    void* esp46;
    int1_t cf47;
    int1_t cf48;
    void* esp49;
    int1_t less_or_equal50;
    int1_t less_or_equal51;
    void* esp52;
    int1_t of53;
    int1_t of54;
    uint32_t eax55;
    int1_t sf56;
    int1_t sf57;
    void* esp58;
    int1_t cf59;
    int1_t cf60;
    int1_t less_or_equal61;
    int1_t less_or_equal62;
    int1_t of63;
    int1_t of64;
    int1_t sf65;
    void* esp66;
    int1_t cf67;
    int1_t cf68;
    void* esp69;
    int1_t less_or_equal70;
    int1_t less_or_equal71;
    int1_t of72;
    int1_t of73;
    int32_t* esp74;
    int1_t sf75;
    int1_t sf76;
    int32_t* esp77;
    int1_t cf78;
    int1_t sf79;
    int1_t of80;
    uint1_t less_or_equal81;
    int32_t eax82;
    void* esp83;
    void* esp84;
    void* esp85;
    void* esp86;
    void* esp87;
    void* esp88;
    void* esp89;
    void* esp90;
    void* esp91;
    void* esp92;
    void* esp93;
    void* esp94;
    void* esp95;
    void* esp96;
    void* esp97;
    void* esp98;
    void* esp99;
    void* esp100;
    void* esp101;
    void* esp102;
    void* esp103;
    int32_t* esp104;
    int32_t* esp105;
    int32_t* esp106;
    int32_t* esp107;

    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    do {
    } while (!of8 && of9);
    while (!sf10 && sf11) {
    }
    do {
        ecx12 = ecx12;
    } while (cf13 && !cf14);
    esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) + 2);
    while (less_or_equal16 && !less_or_equal17) {
    }
    while (!of18 && of19) {
    }
    esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp15) + 2);
    while (!sf21 && sf22) {
    }
    esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) + 2);
    while ((ecx12 = ecx12, cf24) && !cf25) {
    }
    esp26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) + 2);
    while (less_or_equal27 && !less_or_equal28) {
    }
    esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp26) + 2);
    while (!of30 && of31) {
    }
    esp32 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) + 2);
    while (!sf33 && sf34) {
    }
    while (cf35 && !cf36) {
    }
    esp37 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp32) + 2);
    while (less_or_equal38 && !less_or_equal39) {
    }
    esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp37) + 2);
    while (!of41 && of42) {
    }
    esp43 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) + 2);
    while (!sf44 && sf45) {
    }
    esp46 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp43) + 2);
    while (cf47 && !cf48) {
    }
    esp49 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp46) + 2);
    while (less_or_equal50 && !less_or_equal51) {
    }
    esp52 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp49) + 2);
    while (!of53 && of54) {
    }
    do {
        eax55 = eax55;
    } while (!sf56 && sf57);
    esp58 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp52) + 2);
    while ((eax55 = eax55, cf59) && !cf60) {
    }
    do {
        ecx12 = ecx12;
    } while (less_or_equal61 && !less_or_equal62);
    while (!of63 && of64) {
    }
    while (esp58 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp58) - 2), sf65) {
    }
    esp66 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp58) + 2);
    while ((eax55 = eax55, cf67) && !cf68) {
    }
    esp69 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp66) + 2);
    while (less_or_equal70 && !less_or_equal71) {
    }
    while (!of72 && of73) {
    }
    esp74 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp69) + 2);
    while (!sf75 && sf76) {
    }
    __asm__("rol byte [ebx+ecx*4], 0x0");
    esp77 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp74) + (eax55 >> 31 << 4));
    cf78 = __intrinsic();
    sf79 = reinterpret_cast<int32_t>(esp77) < reinterpret_cast<int32_t>(0);
    of80 = __intrinsic();
    less_or_equal81 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf79 != of80) | reinterpret_cast<uint1_t>(esp77 == 0));
    eax82 = *esp77;
    esp83 = reinterpret_cast<void*>(esp77 + 1);
    do {
    } while (cf78 && !cf78);
    esp84 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp83) + 2);
    while (less_or_equal81 && !less_or_equal81) {
    }
    esp85 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp84) + 2);
    while ((eax82 = eax82, !of80) && of80) {
    }
    esp86 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp85) + 2);
    while (!sf79 && sf79) {
    }
    esp87 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp86) + 2);
    while (cf78 && !cf78) {
    }
    while (less_or_equal81 && !less_or_equal81) {
    }
    while (!of80 && of80) {
    }
    esp88 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp87) + 2);
    while (!sf79 && sf79) {
    }
    esp89 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp88) + 2);
    while ((ecx12 = ecx12, cf78) && !cf78) {
    }
    esp90 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp89) + 2);
    while (less_or_equal81 && !less_or_equal81) {
    }
    esp91 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp90) + 2);
    while (!of80 && of80) {
    }
    esp92 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp91) + 2);
    while ((eax82 = eax82, !sf79) && sf79) {
    }
    esp93 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp92) + 2);
    while (cf78 && !cf78) {
    }
    esp94 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp93) + 2);
    while ((ecx12 = ecx12, less_or_equal81) && !less_or_equal81) {
    }
    esp95 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp94) + 2);
    while ((ecx12 = ecx12, !of80) && of80) {
    }
    esp96 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp95) + 2);
    while (!sf79 && sf79) {
    }
    esp97 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp96) + 2);
    while (cf78 && !cf78) {
    }
    do {
    } while (less_or_equal81 && !less_or_equal81);
    esp98 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp97) + 2);
    while ((ecx12 = ecx12, !of80) && of80) {
    }
    do {
    } while (!sf79 && sf79);
    esp99 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp98) + 2);
    while ((ecx12 = ecx12, cf78) && !cf78) {
    }
    esp100 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp99) + 2);
    while ((ecx12 = ecx12, less_or_equal81) && !less_or_equal81) {
    }
    while (!of80 && of80) {
    }
    esp101 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp100) + 2);
    while (!sf79 && sf79) {
    }
    esp102 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp101) + 2);
    while (cf78 && !cf78) {
    }
    esp103 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp102) + 2);
    while (less_or_equal81 && !less_or_equal81) {
    }
    esp104 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp103) - 4);
    *esp104 = reinterpret_cast<int32_t>("C-Dilla");
    esp105 = esp104 - 1;
    *esp105 = 64;
    esp106 = esp105 - 1;
    *esp106 = eax82;
    esp107 = esp106 - 1;
    *esp107 = 0x410666;
    fun_4080d0(ecx12);
    goto (esp107 + 1 + 4)[1];
}

int32_t UnmapViewOfFile = 0x324cc;

struct s7* fun_4116a0(struct s8* a1, struct s7* a2) {
    struct s7* eax3;

    if (a1) {
        CloseHandle(a1);
    }
    eax3 = a2;
    if (eax3) {
        eax3 = reinterpret_cast<struct s7*>(UnmapViewOfFile(eax3));
    }
    return eax3;
}

int32_t GetSystemDefaultLCID = 0x32544;

void** fun_40f410(void** a1, void** a2, void** a3) {
    void** eax4;
    void** eax5;
    void** eax6;
    void** edx7;
    void** ecx8;
    void** eax9;
    void** eax10;
    void** v11;
    void** eax12;
    void** eax13;
    void** edi14;
    uint32_t ecx15;
    void** edi16;
    uint32_t ecx17;
    uint32_t ecx18;
    uint32_t edx19;
    void*** esi20;
    void** edi21;
    uint32_t ecx22;
    uint32_t ecx23;
    void** eax24;

    eax4 = reinterpret_cast<void**>(GetSystemDefaultLCID());
    eax5 = g42e588;
    eax6 = fun_40c280(eax5, eax4, a1, 0);
    edx7 = eax6;
    if (!edx7 && ((ecx8 = g42e588, eax9 = fun_40c280(ecx8, eax4, a1, 1), edx7 = eax9, !edx7) && (eax10 = g42e588, v11 = *reinterpret_cast<void***>(eax10 + 20), eax12 = fun_40c280(eax10, v11, a1, 1), edx7 = eax12, !edx7))) {
        eax13 = fun_40f2c0(9, a1);
        edx7 = eax13;
    }
    edi14 = edx7;
    ecx15 = 0xffffffff;
    do {
        if (!ecx15) 
            break;
        --ecx15;
        ++edi14;
    } while (*reinterpret_cast<void***>(edi14));
    if (reinterpret_cast<unsigned char>(~ecx15) <= reinterpret_cast<unsigned char>(a3)) {
        edi16 = edx7;
        ecx17 = 0xffffffff;
        do {
            if (!ecx17) 
                break;
            --ecx17;
            ++edi16;
        } while (*reinterpret_cast<void***>(edi16));
        ecx18 = ~ecx17;
        edx19 = ecx18;
        esi20 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi16) - ecx18);
        edi21 = a2;
        ecx22 = ecx18 >> 2;
        while (ecx22) {
            --ecx22;
            *reinterpret_cast<void***>(edi21) = *esi20;
            edi21 = edi21 + 4;
            esi20 = esi20 + 4;
        }
        ecx23 = edx19 & 3;
        while (ecx23) {
            --ecx23;
            *reinterpret_cast<void***>(edi21) = *esi20;
            ++edi21;
            ++esi20;
        }
        return 1;
    } else {
        eax24 = fun_414c40(a2, edx7, a3);
        *reinterpret_cast<int16_t*>(&eax24) = 1;
        return eax24;
    }
}

int32_t fun_417e80(void** a1, struct s6* a2, void* a3);

void** fun_417d50(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

int32_t fun_4150c0(void** a1, struct s6* a2, void* a3, void* a4) {
    void*** esp5;
    void** esp6;
    int32_t eax7;
    void** esi8;

    esp5 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 32);
    esp6 = reinterpret_cast<void**>(esp5 - 4 - 4);
    eax7 = fun_417e80(esp6 + 2, a2, esp5 + 44);
    if (0) {
        fun_417d50(0, esp6 - 1 - 1 - 1 + 1 + 3 + 1, esi8, a1, 0x7ffffffe, a1, 66);
        return eax7;
    } else {
        *reinterpret_cast<void***>(a1) = reinterpret_cast<void**>(0);
        return eax7;
    }
}

int32_t GetDesktopWindow = 0x3278a;

int32_t MessageBoxA = 0x3277c;

int32_t fun_40f310(void** a1, void** a2, int32_t a3) {
    void** esi4;
    void** edi5;
    void** eax6;
    void** eax7;
    void** eax8;
    void** ecx9;
    void** eax10;
    void** eax11;
    void** v12;
    void** eax13;
    void** eax14;
    void** eax15;
    void** ecx16;
    void** eax17;
    void** eax18;
    void** v19;
    void** eax20;
    int32_t edi21;

    esi4 = reinterpret_cast<void**>(0);
    edi5 = reinterpret_cast<void**>(0);
    eax6 = reinterpret_cast<void**>(GetSystemDefaultLCID());
    if (reinterpret_cast<unsigned char>(a1) > reinterpret_cast<unsigned char>(11)) {
        esi4 = a1;
    }
    if (!esi4 && ((eax7 = g42e588, eax8 = fun_40c280(eax7, eax6, a1, esi4), !eax8) && ((ecx9 = g42e588, eax10 = fun_40c280(ecx9, eax6, a1, 1), !eax10) && (eax11 = g42e588, v12 = *reinterpret_cast<void***>(eax11 + 20), eax13 = fun_40c280(eax11, v12, a1, 1), !eax13)))) {
        fun_40f2c0(9, a1);
    }
    if (reinterpret_cast<unsigned char>(a2) > reinterpret_cast<unsigned char>(11)) {
        edi5 = a2;
    }
    if (!edi5 && ((eax14 = g42e588, eax15 = fun_40c280(eax14, eax6, a2, edi5), !eax15) && ((ecx16 = g42e588, eax17 = fun_40c280(ecx16, eax6, a2, 1), !eax17) && (eax18 = g42e588, v19 = *reinterpret_cast<void***>(eax18 + 20), eax20 = fun_40c280(eax18, v19, a2, 1), !eax20)))) {
        fun_40f2c0(9, a2);
    }
    GetDesktopWindow();
    MessageBoxA();
    goto edi21;
}

void** g42ed50;

int32_t InterlockedIncrement = 0x32974;

int32_t g4313a4;

int32_t InterlockedDecrement = 0x3295c;

void** fun_417b00(void** a1, int32_t a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void fun_41e830(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** v11;
    void** v12;
    void** eax13;
    void** v14;
    void** ebx15;
    void** v16;
    void** ebp17;
    void** ebp18;
    void** v19;
    void** esi20;
    void** v21;
    void** edi22;
    int32_t eax23;
    void** eax24;
    void** ebx25;
    void** eax26;
    void** eax27;
    void** eax28;
    void** eax29;
    void** edi30;
    uint32_t ecx31;
    uint32_t ecx32;
    uint32_t edx33;
    void*** esi34;
    void** edi35;
    uint32_t ecx36;
    void** edx37;
    void** edx38;

    v11 = reinterpret_cast<void**>(__return_address());
    v12 = ecx;
    eax13 = g42ed50;
    v14 = ebx15;
    v16 = ebp17;
    ebp18 = reinterpret_cast<void**>(0);
    v19 = esi20;
    v21 = edi22;
    if (eax13) {
        InterlockedIncrement();
        eax23 = g4313a4;
        if (!eax23) {
            v14 = reinterpret_cast<void**>(0);
        } else {
            InterlockedDecrement(0x4313a8);
            fun_417120(ecx, 19, 0x4313a8, 0x4313a8, v21, v19, v16, v14, v12, v11, a2, a3, a4);
            v16 = reinterpret_cast<void**>(1);
        }
        eax24 = g42ed50;
        if (eax24) {
            ebx25 = v11;
            eax26 = fun_417b00(eax24, 0x200, ebx25, 0xff, 0, 0, 0);
            if (eax26 && ((eax27 = fun_414db0(eax26, 0x4313a8, v21, v19, v16, v14, v12, v11, a2, a3, a4, a5), ebp18 = eax27, !!ebp18) && (eax28 = g42ed50, eax29 = fun_417b00(eax28, 0x200, ebx25, 0xff, ebp18, eax26, 0), !!eax29))) {
                edi30 = ebp18;
                ecx31 = 0xffffffff;
                do {
                    if (!ecx31) 
                        break;
                    --ecx31;
                    ++edi30;
                } while (*reinterpret_cast<void***>(edi30));
                ecx32 = ~ecx31;
                edx33 = ecx32;
                esi34 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi30) - ecx32);
                edi35 = ebx25;
                ecx36 = ecx32 >> 2;
                while (ecx36) {
                    --ecx36;
                    *reinterpret_cast<void***>(edi35) = *esi34;
                    edi35 = edi35 + 4;
                    esi34 = esi34 + 4;
                }
                ecx = reinterpret_cast<void**>(edx33 & 3);
                while (ecx) {
                    --ecx;
                    *reinterpret_cast<void***>(edi35) = *esi34;
                    ++edi35;
                    ++esi34;
                }
            }
            if (!v14) {
                InterlockedDecrement(0x4313a8);
                fun_414d40(ecx, ebp18, 0x4313a8, 0x4313a8, v21, v19, v16, v14, v12, v11, a2, a3, a4, a5, a6, a7, a8, a9);
            } else {
                fun_4171a0(19);
                fun_414d40(ecx, ebp18, 0x4313a8, v21, v19, v16, v14, v12, v11, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                goto v12;
            }
        } else {
            if (!v14) {
                InterlockedDecrement(0x4313a8);
            } else {
                fun_4171a0(19);
            }
            edx37 = v11;
            if (*reinterpret_cast<void***>(v11)) {
                do {
                    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx37)) >= reinterpret_cast<signed char>(97) && reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx37)) <= reinterpret_cast<signed char>(0x7a)) {
                        *reinterpret_cast<void***>(edx37) = *reinterpret_cast<void***>(edx37) - 32;
                    }
                    ++edx37;
                } while (*reinterpret_cast<void***>(edx37 + 1));
                goto v12;
            }
        }
    } else {
        edx38 = a2;
        if (*reinterpret_cast<void***>(a2)) {
            do {
                if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx38)) >= reinterpret_cast<signed char>(97) && reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx38)) <= reinterpret_cast<signed char>(0x7a)) {
                    *reinterpret_cast<void***>(edx38) = *reinterpret_cast<void***>(edx38) - 32;
                }
                ++edx38;
            } while (*reinterpret_cast<void***>(edx38 + 1));
            return;
        }
    }
    goto v11;
}

int32_t fun_41fb40(void** ecx, void** a2, void** a3, void** a4, int32_t a5, int32_t a6, uint32_t a7, void** a8, int32_t a9, int32_t a10, int16_t a11);

int32_t fun_41f970(void** a1, void*** a2) {
    void** esp3;
    int32_t edi4;
    int32_t esi5;
    uint32_t v6;
    void** v7;
    int32_t v8;
    int32_t v9;
    int16_t v10;
    int32_t eax11;
    void*** edi12;
    int32_t ecx13;
    void** v14;

    esp3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x138);
    eax11 = fun_41fb40(esp3, a1, esp3, esp3 + 64, edi4, esi5, v6, v7, v8, v9, v10);
    edi12 = a2;
    ecx13 = 32;
    while (ecx13) {
        --ecx13;
        *edi12 = v14;
        edi12 = edi12 + 4;
    }
    return eax11;
}

void** fun_411930(void** a1, void** a2, void** a3, void** a4);

void** fun_41fa90(void** a1, void** a2, void** a3, void** a4);

void** fun_411910(void** a1);

void** fun_412ae0(void** ecx, void** a2, void** a3, void* a4, void** a5, void** a6);

void** fun_412a30(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** eax13;
    void* esp14;
    void** ecx15;
    void** edi16;
    void** esi17;
    void** ebx18;
    void** ax19;
    void** v20;
    void** v21;

    eax13 = a3;
    if (eax13 && (fun_411930(a1, a2, (reinterpret_cast<unsigned char>(eax13) & 1) + reinterpret_cast<unsigned char>(eax13), 1), esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 16), ecx15 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp14) + 16), fun_41fa90(a1, ecx15, reinterpret_cast<int32_t>(esp14) + 24, reinterpret_cast<int32_t>(esp14) + 20), eax13 = fun_414db0(a3, edi16, esi17, ebx18, __return_address(), a1, a2, a3, a4, a5, a6, a7), !!eax13)) {
        ax19 = fun_411910(a1);
        if (!ax19) {
            v20 = a3;
            v21 = a1;
        } else {
            ecx15 = a2;
            v20 = a3;
            v21 = ecx15;
        }
        fun_411eb0(ecx15, a1, v21, v20, eax13, edi16, esi17);
        fun_412ae0(a3, a1, a2, reinterpret_cast<unsigned char>(eax13) - reinterpret_cast<unsigned char>(a2), a2, a3);
        eax13 = fun_414d40(a3, eax13, edi16, esi17, ebx18, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    }
    return eax13;
}

void** fun_41fa60(void** a1, void** a2, void** a3, void** a4, int32_t* a5);

void fun_4128e0(void** a1, void** a2, void** a3, void** a4, void** a5);

void** fun_412820(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** eax13;
    void* esp14;
    void** edi15;
    void** esi16;
    void** ebx17;
    void** ax18;
    void** ecx19;
    void** v20;
    void** v21;
    void** ecx22;

    eax13 = a4;
    if (eax13 && (fun_411930(a2, a3, (reinterpret_cast<unsigned char>(eax13) & 1) + reinterpret_cast<unsigned char>(eax13), 1), esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 16), fun_41fa60(a2, reinterpret_cast<int32_t>(esp14) - 4 - 4 + 28, reinterpret_cast<int32_t>(esp14) + 28, reinterpret_cast<int32_t>(esp14) + 24, reinterpret_cast<int32_t>(esp14) + 12), eax13 = fun_414db0(a4, edi15, esi16, ebx17, ecx, __return_address(), a2, a3, a4, a5, a6, a7), !!eax13)) {
        ax18 = fun_411910(a2);
        if (!ax18) {
            ecx19 = a2;
            v20 = a4;
            v21 = ecx19;
        } else {
            ecx19 = a4;
            v20 = ecx19;
            v21 = a3;
        }
        fun_411eb0(ecx19, a2, v21, v20, eax13, edi15, esi16);
        ecx22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax13) - reinterpret_cast<unsigned char>(a3));
        fun_4128e0(a2, a3, ecx22, a3, a4);
        eax13 = fun_414d40(ecx22, eax13, edi15, esi16, ebx17, ecx, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    }
    return eax13;
}

void** fun_41fa30(void** a1, int32_t a2, void** a3, void** a4, void** a5);

void** fun_4126d0(void** a1, void** a2, void** a3, void** a4);

void** fun_412620(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** eax13;
    void* esp14;
    void** ecx15;
    void** edi16;
    void** esi17;
    void** ebx18;
    void** ax19;
    void** v20;
    void** v21;
    void** ecx22;

    eax13 = a3;
    if (eax13 && (fun_411930(a1, a2, (reinterpret_cast<unsigned char>(eax13) & 1) + reinterpret_cast<unsigned char>(eax13), 2), esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 16), ecx15 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp14) + 16), fun_41fa30(a1, 5, ecx15, reinterpret_cast<int32_t>(esp14) + 24, reinterpret_cast<int32_t>(esp14) + 20), eax13 = fun_414db0(a3, edi16, esi17, ebx18, __return_address(), a1, a2, a3, a4, a5, a6, a7), !!eax13)) {
        ax19 = fun_411910(a1);
        if (!ax19) {
            v20 = a3;
            v21 = a1;
        } else {
            ecx15 = a2;
            v20 = a3;
            v21 = ecx15;
        }
        fun_411eb0(ecx15, a1, v21, v20, eax13, edi16, esi17);
        ecx22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax13) - reinterpret_cast<unsigned char>(a2));
        fun_4126d0(a1, a2, ecx22, a2);
        eax13 = fun_414d40(ecx22, eax13, edi16, esi17, ebx18, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    }
    return eax13;
}

void** fun_41fac0(void** a1, void** a2, void** a3, void** a4);

void** fun_412530(void** ecx, void** a2, void** a3, void* a4);

void** fun_412490(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** eax13;
    void* esp14;
    void** edi15;
    void** esi16;
    void** ebx17;
    void** ax18;
    void** ecx19;
    void** v20;
    void** v21;

    eax13 = a3;
    if (eax13 && (fun_411930(a1, a2, eax13, 0), esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 16), fun_41fac0(a1, reinterpret_cast<int32_t>(esp14) + 16, reinterpret_cast<int32_t>(esp14) + 24, reinterpret_cast<int32_t>(esp14) + 20), eax13 = fun_414db0(a3, edi15, esi16, ebx17, __return_address(), a1, a2, a3, a4, a5, a6, a7), !!eax13)) {
        ax18 = fun_411910(a1);
        if (!ax18) {
            ecx19 = a1;
            v20 = a3;
            v21 = ecx19;
        } else {
            ecx19 = a3;
            v20 = ecx19;
            v21 = a2;
        }
        fun_411eb0(ecx19, a1, v21, v20, eax13, edi15, esi16);
        fun_412530(ecx19, a1, a2, reinterpret_cast<unsigned char>(eax13) - reinterpret_cast<unsigned char>(a2));
        eax13 = fun_414d40(ecx19, eax13, edi15, esi16, ebx17, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    }
    return eax13;
}

void** fun_41faf0(void** a1, void** a2, void** a3, void** a4);

void** fun_412350(void** a1, void** a2, void** a3);

void** fun_4122a0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void* esp12;
    void** edi13;
    void** esi14;
    void** ebp15;
    void** ebx16;
    void** eax17;
    void** ax18;
    void** ecx19;
    void** v20;
    void** v21;

    if (a3 && (fun_411930(a1, a2, a3, 7), esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 16), fun_41faf0(a1, reinterpret_cast<int32_t>(esp12) + 20, reinterpret_cast<int32_t>(esp12) + 28, reinterpret_cast<int32_t>(esp12) + 24), eax17 = fun_414db0(a3, edi13, esi14, ebp15, ebx16, __return_address(), a1, a2, a3, a4, a5, a6), !!eax17)) {
        ax18 = fun_411910(a1);
        if (!ax18) {
            ecx19 = a1;
            v20 = a3;
            v21 = ecx19;
        } else {
            ecx19 = a3;
            v20 = ecx19;
            v21 = a2;
        }
        fun_411eb0(ecx19, a1, v21, v20, eax17, edi13, esi14);
        fun_412350(a1, reinterpret_cast<unsigned char>(eax17) - reinterpret_cast<unsigned char>(a2) + reinterpret_cast<unsigned char>(a2), a3);
        eax17 = fun_414d40(a2, eax17, edi13, esi14, ebp15, ebx16, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    }
    return eax17;
}

void fun_412230(void** a1, int32_t a2, int32_t a3);

void fun_412210(void** a1) {
    fun_412230(a1, 0, 0xff);
    return;
}

void fun_4121a0(void** a1, int32_t a2, int32_t a3);

void fun_412180(void** a1) {
    fun_4121a0(a1, 0, 0xff);
    return;
}

void fun_412110(void** a1, int32_t a2, int32_t a3);

void fun_4120f0(void** a1) {
    fun_412110(a1, 0, 0xff);
    return;
}

void fun_413050(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void fun_413080(void** a1) {
    int32_t ecx2;
    void** v3;
    void** esi4;
    void** v5;
    void** edi6;
    int32_t edi7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;

    ecx2 = 8;
    v3 = esi4;
    v5 = edi6;
    while (ecx2) {
        --ecx2;
    }
    edi7 = 8;
    do {
        fun_413050(v8, v5, v3, v9, v10, v11, v12);
        --edi7;
    } while (edi7);
    return;
}

void** fun_412c70(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15);

void fun_412ca0(void** a1) {
    void** v2;
    void** ecx3;
    void** v4;
    void** ebx5;
    void** ebx6;
    void** v7;
    void** esi8;
    void** v9;
    void** edi10;
    int32_t edi11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    int32_t ecx21;
    void** edi22;

    v2 = reinterpret_cast<void**>(__return_address());
    ecx3 = reinterpret_cast<void**>(8);
    v4 = ebx5;
    ebx6 = a1;
    v7 = esi8;
    v9 = edi10;
    while (ecx3) {
        --ecx3;
    }
    edi11 = 8;
    do {
        fun_412c70(ecx3, v12, v9, v7, v4, v13, v14, v15, v16, v17, v18, v19, v20, v2, a1);
        --edi11;
    } while (edi11);
    ecx21 = 8;
    edi22 = ebx6;
    while (ecx21) {
        --ecx21;
        *reinterpret_cast<void***>(edi22) = reinterpret_cast<void**>(0);
        edi22 = edi22 + 4;
    }
    return;
}

int16_t fun_413860(void** a1, void** a2);

void fun_413480(void** a1, void** a2) {
    void** ebx3;
    void** esi4;
    void** edi5;
    void** eax6;
    int16_t ax7;

    ebx3 = a1;
    if (!ebx3) {
        addr_0x4134bc_2:
        return;
    } else {
        esi4 = *reinterpret_cast<void***>(ebx3 + 8);
        if (!esi4) {
            esi4 = *reinterpret_cast<void***>(ebx3);
        } else {
            edi5 = a2;
            do {
                eax6 = *reinterpret_cast<void***>(esi4);
                ax7 = fun_413860(eax6, edi5);
                if (ax7) 
                    break;
                esi4 = *reinterpret_cast<void***>(esi4 + 8);
            } while (esi4);
            goto addr_0x4134ae_8;
        }
    }
    *reinterpret_cast<void***>(ebx3 + 8) = esi4;
    goto addr_0x4134bc_2;
    addr_0x4134ae_8:
    *reinterpret_cast<void***>(ebx3 + 8) = esi4;
    return;
}

void** fun_412fe0(void** a1, void** a2, void** a3, void** a4);

void** fun_412d60(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;

    eax5 = fun_412fe0(a1, a2, a3, a4);
    if (!eax5) {
        *reinterpret_cast<int16_t*>(&eax5) = 0;
        return eax5;
    } else {
        *reinterpret_cast<void***>(a1 + 8) = eax5;
        *reinterpret_cast<int16_t*>(&eax5) = 1;
        return eax5;
    }
}

void** fun_413150(void** a1, void** a2, void** a3, void** a4);

void fun_4137a0(void** a1, void** a2, void** a3);

void** fun_412ee0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6);

void** fun_412d90(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;
    void** eax6;
    void** edx7;
    void** edi8;
    void** esi9;
    void** ebp10;
    void** ebx11;
    void** eax12;

    eax5 = *reinterpret_cast<void***>(a1 + 8);
    if (!eax5) {
        eax5 = *reinterpret_cast<void***>(a1);
    }
    eax6 = fun_413150(eax5, a2, a3, a4);
    if (!eax6) {
        *reinterpret_cast<int16_t*>(&eax6) = 0;
        return eax6;
    } else {
        edx7 = *reinterpret_cast<void***>(eax6);
        fun_4137a0(edx7, a2, a3);
        eax12 = fun_412ee0(a1, eax6, edi8, esi9, ebp10, ebx11);
        *reinterpret_cast<void***>(a1 + 8) = eax6;
        *reinterpret_cast<int16_t*>(&eax12) = 1;
        return eax12;
    }
}

void** fun_413110(void** a1, void** a2);

void** fun_412cf0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14);

void** fun_412e50(void** a1, void** a2);

void** fun_412df0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** eax8;
    void** eax9;
    void** edi10;
    void** esi11;
    void** ebx12;
    void** eax13;
    void** eax14;

    eax8 = *reinterpret_cast<void***>(a1 + 8);
    if (!eax8) {
        eax8 = *reinterpret_cast<void***>(a1);
    }
    eax9 = fun_413110(eax8, a2);
    if (!eax9) {
        *reinterpret_cast<int16_t*>(&eax9) = 0;
        return eax9;
    } else {
        eax13 = fun_412cf0(a2, a3, a4, edi10, esi11, ebx12, __return_address(), a1, a2, a3, a4, a5, a6, a7);
        eax14 = fun_412e50(eax9, eax13);
        *reinterpret_cast<void***>(a1 + 8) = *reinterpret_cast<void***>(eax9 + 8);
        *reinterpret_cast<int16_t*>(&eax14) = 1;
        return eax14;
    }
}

void** fun_411c30(void** a1) {
    void** edx2;
    void** eax3;
    int32_t ecx4;
    void** edi5;
    void** esi6;
    int1_t zf7;

    edx2 = a1;
    eax3 = reinterpret_cast<void**>(0x42e5e8);
    do {
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax3) == 1)) {
            ecx4 = 12;
            edi5 = edx2;
            esi6 = eax3 + 4;
            zf7 = 1;
            while (ecx4) {
                --ecx4;
                zf7 = *reinterpret_cast<void***>(esi6) == *reinterpret_cast<void***>(edi5);
                *reinterpret_cast<void***>(edi5) = *reinterpret_cast<void***>(esi6);
                ++edi5;
                ++esi6;
            }
            if (zf7) 
                goto addr_0x411c60_7;
        }
        eax3 = eax3 + 0xcc;
    } while (reinterpret_cast<unsigned char>(eax3) < reinterpret_cast<unsigned char>(0x42e9e4));
    eax3 = reinterpret_cast<void**>(0);
    addr_0x411c60_7:
    return eax3;
}

void** fun_411ad0(void** a1, int32_t a2, void** a3, void** a4);

void** fun_4135e0(void** a1, void** a2, void** a3) {
    void** eax4;

    eax4 = fun_411ad0(a1, 3, a2, a3);
    return eax4;
}

int16_t fun_413a30(void** a1, void** a2, void** a3, void** a4);

void** fun_411b00(void** a1);

void* fun_411b50(void** a1);

int16_t fun_413600(void** ecx, void** a2, void** a3, void* a4, void** a5, void** a6, void** a7, int16_t a8);

int16_t fun_411b20(void** a1, void** a2);

int16_t fun_411b70(void** a1, void* a2);

int16_t fun_4134c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, int32_t a7) {
    void** ebp8;
    void** ebx9;
    int16_t ax10;
    void* esp11;
    void** eax12;
    void*** esp13;
    void* eax14;
    int32_t v15;
    void** eax16;
    void** ecx17;
    void** edi18;
    void** esi19;
    void** ebp20;
    void** ebx21;
    void** edi22;
    void** ax23;
    void** v24;
    void** v25;

    if (!a4) 
        goto addr_0x4135bc_2;
    ebp8 = a3;
    ebx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a4) + (reinterpret_cast<unsigned char>(a4) & 1));
    ax10 = fun_413a30(ebp8, reinterpret_cast<unsigned char>(ebx9) + reinterpret_cast<unsigned char>(ebp8) + 0xffffffff, a5, a6);
    esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 16);
    if (ax10) {
        fun_411930(a2, ebp8, ebx9, 3);
        esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp11) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
    }
    eax12 = fun_411b00(a2);
    esp13 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp11) - 4 - 4 + 4 + 4);
    if (!eax12) 
        goto addr_0x413519_6;
    addr_0x413598_7:
    eax14 = fun_411b50(a2);
    v15 = a7;
    *reinterpret_cast<int16_t*>(&eax16) = fun_413600(a5, a2, ebp8, eax14, ebx9, a5, a6, *reinterpret_cast<int16_t*>(&v15));
    goto addr_0x4135bc_2;
    addr_0x413519_6:
    fun_41fa30(a2, 8, esp13 - 4 + 20, esp13 + 32, esp13 + 24);
    ecx17 = a4;
    eax16 = fun_414db0(ecx17, edi18, esi19, ebp20, ebx21, ecx, __return_address(), a2, a3, a4, a5, a6);
    edi22 = eax16;
    if (!edi22) {
        addr_0x4135bc_2:
        return *reinterpret_cast<int16_t*>(&eax16);
    } else {
        ax23 = fun_411910(a2);
        if (!ax23) {
            ecx17 = a4;
            v24 = ecx17;
            v25 = ecx;
        } else {
            v24 = a4;
            v25 = a2;
        }
        fun_411eb0(ecx17, a2, v25, v24, edi22, edi18, esi19);
        fun_411b20(a2, edi22);
        *reinterpret_cast<int16_t*>(&eax16) = fun_411b70(a2, reinterpret_cast<unsigned char>(edi22) - reinterpret_cast<unsigned char>(a2));
        ebp8 = a3;
        if (!edi22) 
            goto addr_0x4135bc_2; else 
            goto addr_0x413598_7;
    }
}

void** fun_412fa0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12);

void fun_413050(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    void** v9;
    void** esi10;
    void** v11;
    void** edi12;
    void** edi13;
    void** esi14;
    void** v15;

    v8 = reinterpret_cast<void**>(__return_address());
    v9 = esi10;
    v11 = edi12;
    edi13 = a1;
    esi14 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi13) + 4);
    if (esi14 != *reinterpret_cast<void***>(edi13 + 4)) {
        do {
            esi14 = *reinterpret_cast<void***>(esi14 + 4);
            v15 = *reinterpret_cast<void***>(esi14 + 8);
            fun_412fa0(edi13, v15, v11, v9, v8, a1, a2, a3, a4, a5, a6, a7);
        } while (esi14 != *reinterpret_cast<void***>(edi13 + 4));
    }
    return;
}

void** fun_413a00(void** a1, void** a2, void** a3);

void** fun_4130c0(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** v7;
    void** ebx8;
    void** ebx9;
    void** v10;
    void** esi11;
    void** eax12;
    void** esi13;
    void** v14;
    void** edi15;
    void** v16;
    void** ebp17;
    void** ebp18;
    void** edx19;
    void** edi20;

    v6 = reinterpret_cast<void**>(__return_address());
    v7 = ebx8;
    ebx9 = a1;
    v10 = esi11;
    eax12 = *reinterpret_cast<void***>(ebx9);
    esi13 = *reinterpret_cast<void***>(eax12 + 4);
    if (esi13) {
        v14 = edi15;
        v16 = ebp17;
        ebp18 = a3;
        do {
            if (esi13 == *reinterpret_cast<void***>(ebx9 + 4) || (edx19 = *reinterpret_cast<void***>(esi13), eax12 = fun_413a00(edx19, a2, ebp18), !!*reinterpret_cast<int16_t*>(&eax12))) {
                esi13 = *reinterpret_cast<void***>(esi13 + 4);
            } else {
                edi20 = *reinterpret_cast<void***>(esi13 + 4);
                eax12 = fun_412fa0(ebx9, esi13, v16, v14, v10, v7, v6, a1, a2, a3, a4, a5);
                esi13 = edi20;
            }
        } while (esi13);
    }
    return eax12;
}

void** fun_412b90(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13);

void** fun_412c10(void** a1) {
    void** v2;
    void** v3;
    void** esi4;
    void*** esp5;
    void** v6;
    void** edi7;
    void** esi8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** eax17;
    void** v18;
    void** edi19;
    int32_t ecx20;

    v2 = reinterpret_cast<void**>(__return_address());
    v3 = esi4;
    esp5 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 32 - 4 - 4);
    v6 = edi7;
    esi8 = reinterpret_cast<void**>(0);
    do {
        eax17 = fun_412b90(esi8, v6, v3, v9, v10, v11, v12, v13, v14, v15, v16, v2, a1);
        esp5 = esp5 - 4 - 4 + 4 + 4;
        v18 = eax17;
        if (!eax17) 
            break;
        ++esi8;
    } while (reinterpret_cast<signed char>(esi8) < reinterpret_cast<signed char>(8));
    goto addr_0x412c33_4;
    fun_412ca0(esp5 + 8);
    goto v2;
    addr_0x412c33_4:
    edi19 = a1;
    ecx20 = 8;
    while (ecx20) {
        --ecx20;
        *reinterpret_cast<void***>(edi19) = v18;
        edi19 = edi19 + 4;
    }
    goto v2;
}

int16_t g42e9f4;

void** fun_411f90(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13);

void** fun_412050(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11);

void** g42e9f0;

void** g42e9ec;

void** g42e9e8;

void** fun_411f10(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    int32_t edi10;
    int1_t zf11;
    void** eax12;
    void** esi13;
    void** edi14;
    void** eax15;
    void** eax16;
    void** eax17;

    edi10 = 1;
    zf11 = g42e9f4 == 1;
    if (zf11) {
        *reinterpret_cast<int16_t*>(&eax12) = 1;
        return eax12;
    }
    eax15 = fun_411f90(ecx, 0x42a978, esi13, edi14, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
    if (!eax15) {
        addr_0x411f81_4:
        edi10 = 0;
    } else {
        eax16 = fun_412050(ecx, eax15, 0x42a988, esi13, edi14, __return_address(), a2, a3, a4, a5, a6);
        g42e9f0 = eax16;
        if (!eax16) {
            edi10 = 0;
        }
        eax17 = fun_412050(ecx, eax15, 0x42a9a0, esi13, edi14, __return_address(), a2, a3, a4, a5, a6);
        g42e9ec = eax17;
        if (!eax17) {
            edi10 = 0;
        }
        eax15 = fun_412050(ecx, eax15, 0x42a9b8, esi13, edi14, __return_address(), a2, a3, a4, a5, a6);
        g42e9e8 = eax15;
        if (!eax15) 
            goto addr_0x411f81_4;
    }
    g42e9f4 = *reinterpret_cast<int16_t*>(&edi10);
    *reinterpret_cast<int16_t*>(&eax15) = *reinterpret_cast<int16_t*>(&edi10);
    return eax15;
}

int32_t GetLastError = 0x32496;

void** fun_411d40(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;
    void** eax6;
    void*** esi7;
    void** edi8;
    uint32_t ecx9;
    void** ecx10;
    uint32_t ecx11;
    int32_t eax12;
    void** edi13;

    eax5 = a1;
    if (*reinterpret_cast<void***>(eax5 + 8) == 0x67) {
        addr_0x411d5e_2:
        eax6 = a3;
        esi7 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax5 + 4)) + reinterpret_cast<unsigned char>(a2));
        edi8 = a4;
        ecx9 = reinterpret_cast<unsigned char>(a3) >> 2;
    } else {
        if (*reinterpret_cast<void***>(eax5 + 8) != 0x66) {
            *reinterpret_cast<int16_t*>(&eax5) = 0;
            return eax5;
        }
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax5 + 8) == 0x67)) 
            goto addr_0x411d84_6; else 
            goto addr_0x411d5e_2;
    }
    while (ecx9) {
        --ecx9;
        *reinterpret_cast<void***>(edi8) = *esi7;
        edi8 = edi8 + 4;
        esi7 = esi7 + 4;
    }
    ecx10 = eax6;
    *reinterpret_cast<int16_t*>(&eax6) = 1;
    ecx11 = reinterpret_cast<unsigned char>(ecx10) & 3;
    while (ecx11) {
        --ecx11;
        *reinterpret_cast<void***>(edi8) = *esi7;
        ++edi8;
        ++esi7;
    }
    return eax6;
    addr_0x411d84_6:
    eax12 = reinterpret_cast<int32_t>(g42e9f0());
    if (!eax12 || edi13 != a3) {
        if (eax12) {
            addr_0x411dde_14:
            if (edi13 != a3) {
                GetLastError();
                goto a4;
            }
        } else {
            if (edi13 == a3) {
                GetLastError();
                goto a4;
            }
            if (eax12) 
                goto addr_0x411dde_14;
        }
    } else {
        addr_0x411dee_19:
        goto a4;
    }
    if (edi13 != a3) {
        GetLastError();
        goto a4;
    }
    if (!eax12) 
        goto addr_0x411dee_19; else 
        goto addr_0x411dde_14;
}

void** fun_411fd0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

void** fun_412050(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** edi12;
    void** edi13;
    void** esi14;
    void** ebx15;
    void** eax16;
    void** eax17;

    edi12 = reinterpret_cast<void**>(0);
    if (a2 && (eax16 = fun_411fd0(ecx, a3, edi13, esi14, ebx15, __return_address(), a2, a3), !!eax16)) {
        eax17 = reinterpret_cast<void**>(GetProcAddress(a2, eax16));
        edi12 = eax17;
        fun_414d40(ecx, eax16, a2, eax16, edi13, esi14, ebx15, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    }
    return edi12;
}

void** fun_412010(void** a1, void** a2);

void** fun_411fd0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void** v9;
    void** v10;
    void** ebx11;
    void** ebx12;
    void** v13;
    void** esi14;
    void** v15;
    void** edi16;
    void** edi17;
    uint32_t ecx18;
    void** eax19;

    v9 = reinterpret_cast<void**>(__return_address());
    v10 = ebx11;
    ebx12 = a2;
    v13 = esi14;
    v15 = edi16;
    edi17 = ebx12;
    ecx18 = 0xffffffff;
    do {
        if (!ecx18) 
            break;
        --ecx18;
        ++edi17;
    } while (*reinterpret_cast<void***>(edi17));
    eax19 = fun_414db0(~ecx18, v15, v13, v10, v9, a2, a3, a4, a5, a6, a7, a8);
    if (eax19) {
        fun_412010(eax19, ebx12);
    }
    return eax19;
}

void** fun_412010(void** a1, void** a2) {
    void** ecx3;
    void** ebp4;
    void* edi5;
    void* esi6;

    ecx3 = a2;
    ebp4 = a1;
    edi5 = reinterpret_cast<void*>(0);
    *reinterpret_cast<void***>(ebp4) = *reinterpret_cast<void***>(ecx3);
    if (*reinterpret_cast<void***>(ecx3)) {
        esi6 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebp4) - reinterpret_cast<unsigned char>(ecx3));
        do {
            edi5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi5) + 1);
            ++ecx3;
            *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ecx3)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ecx3)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx3 + 1) - 1));
        } while (*reinterpret_cast<void***>(ecx3));
    }
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi5) + reinterpret_cast<unsigned char>(ebp4)) = 0;
    return ebp4;
}

int16_t fun_411e00(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;
    void*** esp6;
    signed char* ebx7;
    void* v8;
    int32_t eax9;
    void** edi10;
    signed char* v11;
    int32_t eax12;
    signed char* esi13;
    void** edx14;
    signed char* edi15;
    uint32_t ecx16;
    uint32_t ecx17;
    int32_t eax18;

    eax5 = *reinterpret_cast<void***>(a1 + 8);
    esp6 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4);
    if (eax5 == 0x67) 
        goto addr_0x411e19_2;
    if (!reinterpret_cast<int1_t>(eax5 == 0x66)) 
        goto addr_0x411e9e_4;
    addr_0x411e19_2:
    ebx7 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(a2));
    if (!reinterpret_cast<int1_t>(eax5 == 0x67)) {
        v8 = reinterpret_cast<void*>(esp6 + 20);
        eax9 = reinterpret_cast<int32_t>(g42e9ec());
        if (!eax9 || edi10 != a3) {
            addr_0x411e9e_4:
            goto __return_address();
        } else {
            addr_0x411e95_6:
            goto v8;
        }
    } else {
        v8 = reinterpret_cast<void*>(esp6 + 28);
        v11 = ebx7;
        eax12 = reinterpret_cast<int32_t>(g42e9e8());
        if (!eax12) 
            goto addr_0x411e9e_4;
        esi13 = reinterpret_cast<signed char*>(__return_address());
        edx14 = a3;
        edi15 = ebx7;
        ecx16 = reinterpret_cast<unsigned char>(a3) >> 2;
        while (ecx16) {
            --ecx16;
            *edi15 = *esi13;
            edi15 = edi15 + 4;
            esi13 = esi13 + 4;
        }
        ecx17 = reinterpret_cast<unsigned char>(edx14) & 3;
        while (ecx17) {
            --ecx17;
            *edi15 = *esi13;
            ++edi15;
            ++esi13;
        }
        eax18 = reinterpret_cast<int32_t>(g42e9e8());
        if (eax18) 
            goto addr_0x411e95_6;
        goto v11;
    }
}

void** fun_411930(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;
    void** esi6;
    void** edi7;
    void** esi8;
    void** ebp9;

    eax5 = fun_411c30(a1);
    if (eax5 && ((esi6 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax5 + reinterpret_cast<unsigned char>(a4) * 4) + 20), fun_413480(esi6, a2), eax5 = fun_412d60(esi6, a2, a3, a4), !*reinterpret_cast<int16_t*>(&eax5)) && (eax5 = fun_412d90(esi6, a2, a3, a4), !*reinterpret_cast<int16_t*>(&eax5)))) {
        eax5 = fun_412df0(esi6, a2, a3, a4, edi7, esi8, ebp9);
    }
    return eax5;
}

void** fun_41f3e0(void** a1, int32_t a2, void** a3, void** a4, void** a5, void** a6, int32_t* a7);

void** fun_41fa00(void** a1, int32_t a2, void** a3, void** a4, void** a5, void** a6) {
    void** eax7;

    eax7 = fun_41f3e0(a1, a2, a3, a4, a5, a6, reinterpret_cast<int32_t>(__zero_stack_offset()) + 24);
    return eax7;
}

void** fun_41faf0(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;

    eax5 = fun_41f3e0(a1, 9, 0, a2, a3, a4, reinterpret_cast<int32_t>(__zero_stack_offset()) + 16);
    return eax5;
}

void** fun_411910(void** a1) {
    void** eax2;

    eax2 = fun_411c30(a1);
    if (!eax2) {
        return 0;
    } else {
        return *reinterpret_cast<void***>(eax2 + 16);
    }
}

void** fun_41f8b0(void** a1, void** a2, void** a3, void*** a4, int32_t* a5);

struct s22 {
    int32_t f0;
    int32_t f4;
};

void** fun_4123c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void** v13;
    void** v14;
    void** ebx15;
    void** v16;
    void** ebp17;
    void*** esp18;
    void** v19;
    void** edi20;
    void** eax21;
    void** ebp22;
    void** ecx23;
    void** edi24;
    void** v25;
    void** esi26;
    int32_t esi27;
    void** ax28;
    void** v29;
    void** v30;
    void** ecx31;
    struct s22* eax32;

    v12 = reinterpret_cast<void**>(__return_address());
    v13 = ecx;
    v14 = ebx15;
    v16 = ebp17;
    esp18 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4);
    v19 = edi20;
    eax21 = *reinterpret_cast<void***>(a3 + 12);
    if (eax21 && ((ebp22 = a2, ecx23 = reinterpret_cast<void**>(esp18 - 4 + 16), fun_41f8b0(ebp22, reinterpret_cast<unsigned char>(eax21) - reinterpret_cast<unsigned char>(a4), ecx23, esp18 + 28, esp18 + 20), eax21 = a4, !!eax21) && (eax21 = fun_414db0(eax21, v19, v16, v14, v13, v12, a2, a3, a4, a5, a6, a7), edi24 = eax21, !!edi24))) {
        v25 = esi26;
        esi27 = 1;
        ax28 = fun_411910(ebp22);
        if (!ax28) {
            ecx23 = a4;
            v29 = ecx23;
            v30 = v13;
        } else {
            v29 = a4;
            v30 = a2;
        }
        fun_411eb0(ecx23, ebp22, v30, v29, edi24, v25, v19);
        ecx31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3 + 12)) - reinterpret_cast<unsigned char>(a4));
        eax32 = reinterpret_cast<struct s22*>(reinterpret_cast<unsigned char>(edi24) - reinterpret_cast<unsigned char>(a2) + reinterpret_cast<unsigned char>(ecx31));
        if (eax32->f0) {
            do {
                eax32 = reinterpret_cast<struct s22*>(&eax32->f4);
                ++esi27;
            } while (eax32->f4);
        }
        fun_411930(ebp22, ecx31, esi27 * 4, 7);
        eax21 = fun_414d40(ecx31, edi24, v25, v19, v16, v14, v13, v12, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    }
    return eax21;
}

void** fun_41fb90(void** a1, void** a2, void** a3, void** a4, void** a5);

struct s23 {
    signed char[8] pad8;
    void** f8;
    signed char[7] pad16;
    void** f16;
};

void** fun_41fd90(struct s23* a1);

void** fun_41f8b0(void** a1, void** a2, void** a3, void*** a4, int32_t* a5) {
    void* esp6;
    void** ecx7;
    int32_t edi8;
    int32_t esi9;
    uint32_t ebp10;
    void** ebx11;
    int32_t v12;
    int32_t v13;
    int16_t v14;
    void** ecx15;
    void* v16;
    uint32_t v17;
    uint32_t eax18;
    uint32_t v19;
    void* esp20;
    void** eax21;
    void** v22;
    int32_t v23;
    void** eax24;

    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x160);
    ecx7 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp6) + 40);
    fun_41fb40(ecx7, a1, ecx7, reinterpret_cast<int32_t>(esp6) + 0x68, edi8, esi9, ebp10, ebx11, v12, v13, v14);
    ecx15 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v16) + (v17 & 0xffff) + 24);
    eax18 = v19 & 0xffff;
    esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12);
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    *a4 = reinterpret_cast<void**>(0);
    *a5 = 0;
    eax21 = fun_41fb90(a1, a2, ecx15, ecx15 + (eax18 + eax18 * 4) * 8, reinterpret_cast<int32_t>(esp20) + 16);
    if (eax21) {
        *reinterpret_cast<void***>(a3) = v22;
        *a5 = v23;
        eax24 = fun_41fd90(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20 + 16);
        *a4 = eax24;
    }
    return eax21;
}

void** fun_41fac0(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;

    eax5 = fun_41f3e0(a1, 7, 0, a2, a3, a4, reinterpret_cast<int32_t>(__zero_stack_offset()) + 16);
    return eax5;
}

void** fun_4125b0(void** a1, void** a2, void* a3, int32_t a4) {
    void* ebx5;
    void** ebp6;
    void*** esi7;
    int32_t eax8;
    int32_t v9;
    void** edx10;
    uint32_t ecx11;
    signed char* edi12;
    int32_t eax13;
    void** eax14;

    ebx5 = a3;
    ebp6 = a1;
    esi7 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx5) + reinterpret_cast<unsigned char>(a2));
    eax8 = a4;
    if (eax8) {
        v9 = eax8;
        do {
            edx10 = *esi7;
            ecx11 = 0xffffffff;
            edi12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx5) + reinterpret_cast<unsigned char>(edx10));
            do {
                if (!ecx11) 
                    break;
                --ecx11;
                ++edi12;
                ++esi7;
            } while (*edi12);
            fun_411930(ebp6, edx10, ~ecx11, 0);
            esi7 = esi7 + 4;
            eax13 = v9 - 1;
            v9 = eax13;
        } while (eax13);
        eax8 = a4;
    }
    eax14 = fun_411930(ebp6, a2, eax8 * 4, 0);
    return eax14;
}

void** fun_41fa30(void** a1, int32_t a2, void** a3, void** a4, void** a5) {
    void** eax6;

    eax6 = fun_41fa00(a1, a2, 0, a3, a4, a5);
    return eax6;
}

void** fun_4127b0(void** a1, void** a2, void** a3);

void** fun_4127e0(void** a1, void** a2, void** a3, void** a4);

void** fun_412730(void** a1, void** a2, void** a3, void** a4) {
    void* eax5;
    uint32_t eax6;
    void** eax7;

    if (*reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2)) & 0x80000000) {
        eax5 = reinterpret_cast<void*>(*reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2)) & 0x7fffffff);
        fun_4127b0(a1, reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<unsigned char>(a4), a3);
    }
    eax6 = *reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2) + 4);
    if (!(eax6 & 0x80000000)) {
        fun_4127e0(a1, (eax6 & 0x7fffffff) + reinterpret_cast<unsigned char>(a4), a3, a4);
    } else {
        fun_4126d0(a1, (eax6 & 0x7fffffff) + reinterpret_cast<unsigned char>(a4), a3, a4);
    }
    eax7 = fun_411930(a1, a2, 8, 2);
    return eax7;
}

void** fun_4127b0(void** a1, void** a2, void** a3) {
    void* ecx4;
    void** eax5;

    ecx4 = reinterpret_cast<void*>(0);
    *reinterpret_cast<int16_t*>(&ecx4) = *reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2));
    eax5 = fun_411930(a1, a2, reinterpret_cast<int32_t>(ecx4) + reinterpret_cast<int32_t>(ecx4) + 2, 2);
    return eax5;
}

void** fun_4126d0(void** a1, void** a2, void** a3, void** a4) {
    void** ebx5;
    void** esi6;
    int32_t edi7;
    int32_t eax8;
    int32_t edi9;
    void** ebp10;
    void** ebx11;
    void** eax12;

    ebx5 = a2;
    esi6 = a3;
    edi7 = 0;
    *reinterpret_cast<int16_t*>(&edi7) = *reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 14);
    eax8 = 0;
    *reinterpret_cast<int16_t*>(&eax8) = *reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 12);
    edi9 = edi7 + eax8;
    if (edi9) {
        ebp10 = a4;
        ebx11 = ebx5 + 16;
        do {
            fun_412730(a1, ebx11, esi6, ebp10);
            --edi9;
        } while (edi9);
        ebx5 = a2;
    }
    eax12 = fun_411930(a1, ebx5, 16, 2);
    return eax12;
}

void** fun_41fa60(void** a1, void** a2, void** a3, void** a4, int32_t* a5) {
    void** eax6;

    eax6 = fun_41f3e0(a1, 6, 0, a2, a3, a4, a5);
    return eax6;
}

struct s24 {
    signed char[4] pad4;
    void** f4;
};

void** fun_412990(void** ecx, void** a2, void** a3, void** a4, int16_t a5) {
    void** eax6;
    void** ebx7;
    void** ebp8;
    uint32_t v9;
    void** edx10;
    struct s24* esi11;
    signed char* edi12;
    uint32_t ecx13;
    void* ecx14;

    eax6 = a3;
    if (eax6) {
        ebx7 = a4;
        ebp8 = a2;
        v9 = 1;
        edx10 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ebx7) + reinterpret_cast<unsigned char>(eax6));
        esi11 = reinterpret_cast<struct s24*>(reinterpret_cast<unsigned char>(ebx7) + reinterpret_cast<unsigned char>(eax6));
        if (edx10) {
            do {
                ++v9;
                if (!a5 && !(reinterpret_cast<unsigned char>(edx10) & 0x80000000)) {
                    edi12 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx7) + reinterpret_cast<unsigned char>(edx10) + 2);
                    ecx13 = 0xffffffff;
                    do {
                        if (!ecx13) 
                            break;
                        --ecx13;
                        ++edi12;
                        esi11 = reinterpret_cast<struct s24*>(reinterpret_cast<uint32_t>(esi11) + 1);
                    } while (*edi12);
                    ecx14 = reinterpret_cast<void*>(~ecx13 + 2);
                    fun_411930(ebp8, edx10, (reinterpret_cast<uint32_t>(ecx14) & 1) + reinterpret_cast<uint32_t>(ecx14), 1);
                }
                edx10 = esi11->f4;
                esi11 = reinterpret_cast<struct s24*>(&esi11->f4);
            } while (edx10);
            eax6 = a3;
        }
        eax6 = fun_411930(ebp8, eax6, v9 * 4, 1);
    }
    return eax6;
}

void** fun_41fa90(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;

    eax5 = fun_41f3e0(a1, 11, 0, a2, a3, a4, reinterpret_cast<int32_t>(__zero_stack_offset()) + 16);
    return eax5;
}

void** fun_413760(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

void** fun_412cf0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** esi15;
    void** eax16;
    void** esi17;
    void** eax18;

    eax16 = fun_414db0(12, esi15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9);
    esi17 = eax16;
    if (esi17) {
        *reinterpret_cast<void***>(esi17 + 4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(esi17 + 8) = reinterpret_cast<void**>(0);
        eax18 = fun_413760(a1, a2, a3, esi15, __return_address(), a1, a2, a3, a4, a5);
        if (!eax18) {
            fun_414d40(a2, esi17, esi15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
            esi17 = reinterpret_cast<void**>(0);
        } else {
            *reinterpret_cast<void***>(esi17) = eax18;
            return esi17;
        }
    }
    return esi17;
}

void** fun_413790(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16);

void** fun_412d40(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    void** v16;
    void** esi17;
    void** eax18;

    v16 = *reinterpret_cast<void***>(a2);
    fun_413790(ecx, v16, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    eax18 = fun_414d40(ecx, a2, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    return eax18;
}

void** fun_412c70(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    void** v16;
    void** esi17;
    void** ecx18;
    void** eax19;

    if (a2) {
        v16 = *reinterpret_cast<void***>(a2);
        fun_412d40(ecx, v16, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
        ecx18 = *reinterpret_cast<void***>(a2 + 4);
        fun_412d40(ecx18, ecx18, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
        eax19 = fun_414d40(ecx18, a2, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    }
    return eax19;
}

void** fun_413760(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** eax11;

    eax11 = fun_414db0(12, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    if (eax11) {
        *reinterpret_cast<void***>(eax11) = a1;
        *reinterpret_cast<void***>(eax11 + 4) = a2;
        *reinterpret_cast<void***>(eax11 + 8) = a3;
    }
    return eax11;
}

int16_t fun_413960(void** a1, void** a2, void** a3, void** a4);

int16_t fun_413880(void** a1, void** a2);

void** fun_413150(void** a1, void** a2, void** a3, void** a4) {
    void** esi5;
    void** ebx6;
    void** ebp7;
    void** edi8;
    void** eax9;
    int16_t ax10;
    void** ecx11;
    int16_t ax12;

    esi5 = a1;
    if (!esi5) {
        addr_0x4131a1_2:
        return 0;
    } else {
        ebx6 = a4;
        ebp7 = a3;
        edi8 = a2;
        do {
            eax9 = *reinterpret_cast<void***>(esi5);
            ax10 = fun_413960(eax9, edi8, ebp7, ebx6);
            if (ax10) 
                break;
            ecx11 = *reinterpret_cast<void***>(esi5);
            ax12 = fun_413880(ecx11, edi8);
            if (ax12) 
                goto addr_0x4131a1_2;
            esi5 = *reinterpret_cast<void***>(esi5 + 4);
        } while (esi5);
        goto addr_0x413193_7;
    }
    return esi5;
    addr_0x413193_7:
    return 0;
}

void fun_4137a0(void** a1, void** a2, void** a3) {
    if (reinterpret_cast<unsigned char>(a2) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1))) {
        *reinterpret_cast<void***>(a1) = a2;
    }
    *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(a3));
    return;
}

int16_t fun_4139a0(void** a1, void** a2);

void** fun_4139e0(void** a1, void** a2);

void fun_4137c0(void** a1, void** a2);

void** fun_412ee0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** v8;
    void** ebx9;
    void** ebx10;
    void** v11;
    void** esi12;
    void** esi13;
    void** v14;
    void** edi15;
    void** edx16;
    int32_t edi17;
    void** v18;
    int16_t ax19;
    void** edx20;
    void** v21;
    void** eax22;
    void** edx23;
    void** v24;
    void** v25;
    void** eax26;
    void** v27;
    int16_t ax28;
    void** eax29;
    void** v30;
    void** eax31;
    void** eax32;
    void** v33;
    void** v34;

    v7 = reinterpret_cast<void**>(__return_address());
    v8 = ebx9;
    ebx10 = a1;
    v11 = esi12;
    esi13 = a2;
    v14 = edi15;
    do {
        edx16 = *reinterpret_cast<void***>(esi13);
        edi17 = 0;
        v18 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi13 + 8));
        ax19 = fun_4139a0(edx16, v18);
        if (ax19 || (edx20 = *reinterpret_cast<void***>(esi13), v21 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi13 + 8)), eax22 = fun_4139e0(edx20, v21), !!*reinterpret_cast<int16_t*>(&eax22))) {
            edx23 = *reinterpret_cast<void***>(esi13);
            v24 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi13 + 8));
            fun_4137c0(edx23, v24);
            v25 = *reinterpret_cast<void***>(esi13 + 8);
            fun_412fa0(ebx10, v25, v14, v11, v8, v7, a1, a2, a3, a4, a5, a6);
            edi17 = 1;
        }
        eax26 = *reinterpret_cast<void***>(esi13);
        v27 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi13 + 4));
        ax28 = fun_4139a0(eax26, v27);
        if (ax28 || (eax29 = *reinterpret_cast<void***>(esi13), v30 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi13 + 4)), eax31 = fun_4139e0(eax29, v30), !!*reinterpret_cast<int16_t*>(&eax31))) {
            eax32 = *reinterpret_cast<void***>(esi13);
            v33 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi13 + 4));
            fun_4137c0(eax32, v33);
            v34 = *reinterpret_cast<void***>(esi13 + 4);
            eax31 = fun_412fa0(ebx10, v34, v14, v11, v8, v7, a1, a2, a3, a4, a5, a6);
            edi17 = 1;
        }
    } while (*reinterpret_cast<int16_t*>(&edi17));
    return eax31;
}

void** fun_413110(void** a1, void** a2) {
    void** esi3;
    void** edi4;
    void** eax5;
    int16_t ax6;

    esi3 = a1;
    if (!esi3) {
        return 0;
    }
    edi4 = a2;
    do {
        eax5 = *reinterpret_cast<void***>(esi3);
        ax6 = fun_413880(eax5, edi4);
        if (ax6) 
            break;
        esi3 = *reinterpret_cast<void***>(esi3 + 4);
    } while (esi3);
    goto addr_0x413136_6;
    return esi3;
    addr_0x413136_6:
    return 0;
}

void** fun_412e90(void** a1);

void** fun_412e50(void** a1, void** a2) {
    void** eax3;
    int32_t esi4;
    void** edx5;

    eax3 = a2;
    esi4 = 0;
    if (eax3) {
        *reinterpret_cast<void***>(eax3 + 4) = a1;
        esi4 = 1;
        edx5 = *reinterpret_cast<void***>(a1 + 8);
        *reinterpret_cast<void***>(eax3 + 8) = edx5;
        *reinterpret_cast<void***>(edx5 + 4) = eax3;
        *reinterpret_cast<void***>(a1 + 8) = eax3;
        eax3 = fun_412e90(eax3);
    }
    *reinterpret_cast<int16_t*>(&eax3) = *reinterpret_cast<int16_t*>(&esi4);
    return eax3;
}

void** fun_412e90(void** a1) {
    void** eax2;
    void** edx3;
    void** v4;
    void** eax5;
    void** edx6;
    void** v7;
    void** eax8;

    eax2 = reinterpret_cast<void**>(0);
    if (a1) {
        edx3 = *reinterpret_cast<void***>(a1);
        v4 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 8));
        eax5 = fun_4139e0(edx3, v4);
        if (*reinterpret_cast<int16_t*>(&eax5) || (edx6 = *reinterpret_cast<void***>(a1), v7 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 4)), eax8 = fun_4139e0(edx6, v7), !!*reinterpret_cast<int16_t*>(&eax8))) {
            eax2 = reinterpret_cast<void**>(1);
        } else {
            return 0;
        }
    }
    return eax2;
}

void** fun_4139e0(void** a1, void** a2) {
    void** eax3;
    void** v4;
    void** eax5;

    eax3 = *reinterpret_cast<void***>(a2);
    v4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)) + reinterpret_cast<unsigned char>(eax3));
    eax5 = fun_413a00(a1, eax3, v4);
    return eax5;
}

void fun_4137c0(void** a1, void** a2) {
    void** eax3;
    void** edi4;
    void* eax5;
    void* ecx6;

    eax3 = *reinterpret_cast<void***>(a1);
    edi4 = eax3;
    if (reinterpret_cast<unsigned char>(eax3) >= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2))) {
        edi4 = *reinterpret_cast<void***>(a2);
    }
    eax5 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax3) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)));
    ecx6 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)));
    if (reinterpret_cast<uint32_t>(eax5) < reinterpret_cast<uint32_t>(ecx6)) {
        eax5 = ecx6;
    }
    *reinterpret_cast<void***>(a1) = edi4;
    *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax5) - reinterpret_cast<unsigned char>(edi4));
    return;
}

void** fun_412fa0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** eax13;
    void** edx14;
    void** eax15;

    if (a2 == *reinterpret_cast<void***>(a1 + 8)) {
        *reinterpret_cast<void***>(a1 + 8) = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 8) + 8);
    }
    if (a2 == *reinterpret_cast<void***>(a1 + 12)) {
        *reinterpret_cast<void***>(a1 + 12) = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 12) + 8);
    }
    eax13 = *reinterpret_cast<void***>(a2 + 8);
    edx14 = *reinterpret_cast<void***>(a2 + 4);
    *reinterpret_cast<void***>(eax13 + 4) = edx14;
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2 + 4) + 8) = *reinterpret_cast<void***>(a2 + 8);
    eax15 = fun_412d40(a2, a2, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    return eax15;
}

int16_t fun_413880(void** a1, void** a2) {
    int32_t eax3;

    eax3 = reinterpret_cast<int32_t>(-(reinterpret_cast<unsigned char>(a2) - (reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(a2) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(a2) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1))))))));
    return *reinterpret_cast<int16_t*>(&eax3);
}

int16_t fun_413800(void** a1, void** a2, void** a3, void** a4) {
    void** edi5;
    void** edx6;

    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) <= reinterpret_cast<unsigned char>(a2) && (edi5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1))), reinterpret_cast<unsigned char>(a2) < reinterpret_cast<unsigned char>(edi5))) {
        edx6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2) + 0xffffffff);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) > reinterpret_cast<unsigned char>(edx6) || reinterpret_cast<unsigned char>(edx6) >= reinterpret_cast<unsigned char>(edi5)) {
            if (*reinterpret_cast<void***>(a1 + 8) == a4) {
                *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)));
                return 1;
            }
        } else {
            if (*reinterpret_cast<void***>(a1 + 8) == a4) {
                return 1;
            }
        }
    }
    return 0;
}

void** fun_413a00(void** a1, void** a2, void** a3) {
    void** eax4;

    eax4 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) >= reinterpret_cast<unsigned char>(a2)) {
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) <= reinterpret_cast<unsigned char>(a3)) 
            goto addr_0x413a24_3;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) > reinterpret_cast<unsigned char>(a2)) 
            goto addr_0x413a29_5;
    }
    if (reinterpret_cast<unsigned char>(a2) >= reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)))) {
        addr_0x413a29_5:
        return eax4;
    } else {
        addr_0x413a24_3:
        eax4 = reinterpret_cast<void**>(1);
        goto addr_0x413a29_5;
    }
}

int16_t fun_413960(void** a1, void** a2, void** a3, void** a4) {
    int32_t eax5;

    eax5 = 0;
    if (*reinterpret_cast<void***>(a1 + 8) == a4 && (a2 == reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) || reinterpret_cast<int1_t>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2) == *reinterpret_cast<void***>(a1)))) {
        eax5 = 1;
    }
    return *reinterpret_cast<int16_t*>(&eax5);
}

int16_t fun_413860(void** a1, void** a2) {
    if (!a1 || reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) > reinterpret_cast<unsigned char>(a2)) {
        return 0;
    } else {
        return 1;
    }
}

void** fun_4138d0(void** a1) {
    return reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1));
}

int16_t fun_413890(void** a1, void** a2) {
    if (!a1 || *reinterpret_cast<void***>(a1) != a2) {
        return 0;
    } else {
        return 1;
    }
}

void** fun_413940(void** a1, void** a2) {
    void** eax3;

    eax3 = *reinterpret_cast<void***>(a1) - 1;
    if (reinterpret_cast<unsigned char>(a2) < reinterpret_cast<unsigned char>(eax3)) {
        eax3 = a2;
    }
    return eax3;
}

void** fun_4138e0(void** a1, void** a2) {
    void** eax3;

    eax3 = *reinterpret_cast<void***>(a1);
    if (reinterpret_cast<unsigned char>(a2) >= reinterpret_cast<unsigned char>(eax3)) {
        eax3 = a2;
    }
    return eax3;
}

void** fun_413900(void** a1, void** a2) {
    void** eax3;

    eax3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) + 0xffffffff);
    if (reinterpret_cast<unsigned char>(a2) < reinterpret_cast<unsigned char>(eax3)) {
        eax3 = a2;
    }
    return eax3;
}

int16_t fun_4138b0(void** a1, void** a2) {
    if (!a1 || *reinterpret_cast<void***>(a1 + 8) != a2) {
        return 0;
    } else {
        return 1;
    }
}

struct s25 {
    void** f0;
    signed char[11] pad12;
    void** f12;
};

void** fun_413220(struct s25* a1, void** a2);

void** fun_413370(void** a1, void** a2, void** a3, void** a4);

void** fun_4132e0(struct s25* a1, void*** a2, void*** a3, void** a4) {
    void** v5;
    void** eax6;
    void** ecx7;
    void** edx8;
    void** eax9;
    void** esi10;
    void** ecx11;
    void** edx12;
    void** v13;
    void** ecx14;
    void** v15;
    void** eax16;
    void** eax17;
    void** v18;
    void** eax19;

    v5 = *a2;
    eax6 = fun_413220(a1, v5);
    ecx7 = *a3;
    edx8 = *a2;
    eax9 = fun_413370(eax6, edx8, ecx7, a4);
    esi10 = eax9;
    if (!esi10 || (ecx11 = *a2, edx12 = *reinterpret_cast<void***>(esi10), v13 = *a3, eax9 = fun_413a00(edx12, ecx11, v13), *reinterpret_cast<int16_t*>(&eax9) == 0)) {
        *reinterpret_cast<int16_t*>(&eax9) = 0;
        *a2 = *a3 - 1;
        return eax9;
    } else {
        ecx14 = *reinterpret_cast<void***>(esi10);
        v15 = *a2;
        eax16 = fun_4138e0(ecx14, v15);
        *a2 = eax16;
        eax17 = *reinterpret_cast<void***>(esi10);
        v18 = *a3;
        eax19 = fun_413900(eax17, v18);
        *a3 = eax19;
        a1->f12 = esi10;
        *reinterpret_cast<int16_t*>(&eax19) = 1;
        return eax19;
    }
}

void** fun_413260(void** a1, void*** a2, void*** a3);

void** fun_4131b0(struct s25* a1, void*** a2, int32_t* a3) {
    void** v4;
    void** eax5;
    void** v6;
    void** eax7;
    void** edx8;
    void* esp9;
    int32_t eax10;
    void** eax11;

    v4 = *a2;
    eax5 = fun_413220(a1, v4);
    v6 = *a2;
    eax7 = fun_413110(eax5, v6);
    if (eax7) {
        edx8 = *a2;
        esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 - 4);
        eax10 = *a3;
        eax11 = fun_413260(eax7, reinterpret_cast<int32_t>(esp9) + 24, reinterpret_cast<int32_t>(esp9) + 20);
        if (*reinterpret_cast<int16_t*>(&eax11) == 1) {
            *a2 = edx8;
            *a3 = eax10;
            a1->f12 = eax7;
        }
        return eax11;
    } else {
        *reinterpret_cast<int16_t*>(&eax7) = 0;
        return eax7;
    }
}

int16_t fun_413a30(void** a1, void** a2, void** a3, void** a4) {
    int32_t eax5;

    eax5 = 0;
    if (reinterpret_cast<unsigned char>(a1) <= reinterpret_cast<unsigned char>(a3) && reinterpret_cast<unsigned char>(a3) <= reinterpret_cast<unsigned char>(a2) || (reinterpret_cast<unsigned char>(a1) <= reinterpret_cast<unsigned char>(a4) && reinterpret_cast<unsigned char>(a4) <= reinterpret_cast<unsigned char>(a2) || (reinterpret_cast<unsigned char>(a3) <= reinterpret_cast<unsigned char>(a1) && reinterpret_cast<unsigned char>(a1) <= reinterpret_cast<unsigned char>(a4) || reinterpret_cast<unsigned char>(a3) <= reinterpret_cast<unsigned char>(a2) && reinterpret_cast<unsigned char>(a2) <= reinterpret_cast<unsigned char>(a4)))) {
        eax5 = 1;
    }
    return *reinterpret_cast<int16_t*>(&eax5);
}

void* fun_411b50(void** a1) {
    void** eax2;

    eax2 = fun_411c30(a1);
    if (!eax2) {
        return 0;
    } else {
        return *reinterpret_cast<void**>(eax2 + 0xc8);
    }
}

struct s26 {
    void** f0;
    signed char[3] pad4;
    struct s26* f4;
    int16_t f8;
};

void fun_4136a0(void** a1, int16_t* a2, uint32_t a3, void** a4, void** a5, void** a6);

int16_t fun_413600(void** ecx, void** a2, void** a3, void* a4, void** a5, void** a6, void** a7, int16_t a8) {
    struct s26* esi9;
    struct s26* v10;
    struct s26* eax11;
    struct s26* v12;
    void** ebp13;
    void** eax14;
    int16_t ax15;
    void** ecx16;
    struct s26* ecx17;

    esi9 = reinterpret_cast<struct s26*>(reinterpret_cast<uint32_t>(a4) + reinterpret_cast<unsigned char>(a3));
    v10 = reinterpret_cast<struct s26*>(0);
    eax11 = reinterpret_cast<struct s26*>(reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<unsigned char>(a5));
    v12 = eax11;
    if (reinterpret_cast<uint32_t>(esi9) < reinterpret_cast<uint32_t>(eax11)) {
        ebp13 = a7;
        do {
            eax11 = esi9->f4;
            if (!eax11) 
                break;
            eax14 = esi9->f0;
            ax15 = fun_413a30(eax14, eax14 + 0xfff, a6, ebp13);
        } while ((!ax15 || ((ecx16 = esi9->f0, fun_4136a0(a2, &esi9->f8, reinterpret_cast<uint32_t>(eax11) + 0xfffffff8 >> 1, ecx16, a6, ebp13), ecx17 = reinterpret_cast<struct s26*>(&v10->pad4), v10 = ecx17, a8 == 0) || (eax11 = ecx17, reinterpret_cast<uint32_t>(eax11) <= 1))) && (eax11 = v12, esi9 = reinterpret_cast<struct s26*>(reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<uint32_t>(esi9->f4)), reinterpret_cast<uint32_t>(esi9) < reinterpret_cast<uint32_t>(eax11)));
    }
    return *reinterpret_cast<int16_t*>(&eax11);
}

void fun_4136a0(void** a1, int16_t* a2, uint32_t a3, void** a4, void** a5, void** a6) {
    void** ebp7;
    void** ebx8;
    uint32_t v9;
    int16_t* eax10;
    uint32_t eax11;
    uint32_t edi12;
    void** edi13;
    int16_t ax14;
    uint32_t eax15;

    if (a3) {
        ebp7 = a5;
        ebx8 = a6;
        v9 = a3;
        do {
            eax10 = a2;
            *reinterpret_cast<int16_t*>(&eax10) = *eax10;
            eax11 = reinterpret_cast<uint32_t>(eax10) & 0xffff;
            switch (eax11 >> 12) {
            default:
                edi12 = 0;
                break;
            case 1:
            case 2:
                edi12 = 2;
                break;
            case 3:
            case 4:
            case 5:
                edi12 = 4;
            }
            if (*reinterpret_cast<int16_t*>(&edi12) && (edi13 = reinterpret_cast<void**>(edi12 & 0xffff), ax14 = fun_413a30((eax11 & 0xfff) + reinterpret_cast<unsigned char>(a4), reinterpret_cast<unsigned char>((eax11 & 0xfff) + reinterpret_cast<unsigned char>(a4)) + reinterpret_cast<unsigned char>(edi13), ebp7, ebx8), !!ax14)) {
                fun_411930(a1, (eax11 & 0xfff) + reinterpret_cast<unsigned char>(a4), edi13, 3);
            }
            eax15 = v9 - 1;
            ++a2;
            v9 = eax15;
        } while (eax15);
    }
    return;
}

void** fun_411c80(void** a1, void** a2, void** a3, void** a4);

void** fun_411eb0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    int1_t zf8;
    void** esi9;
    void** eax10;
    int1_t zf11;
    void** eax12;
    void** eax13;
    void** eax14;

    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a2 + 8) == 100)) {
        zf8 = g42e9f4 == 1;
        if (zf8 || (eax10 = fun_411f10(ecx, esi9, __return_address(), a2, a3, a4, a5, a6, a7), !!*reinterpret_cast<int16_t*>(&eax10))) {
            zf11 = reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a2 + 8) == 0x65);
            if (zf11) {
                eax12 = fun_411c80(a2, a3, a4, a5);
                return eax12;
            } else {
                eax13 = fun_411d40(a2, a3, a4, a5);
                return eax13;
            }
        } else {
            return eax10;
        }
    } else {
        *reinterpret_cast<int16_t*>(&eax14) = 0;
        return eax14;
    }
}

int16_t g42e9e4;

void fun_4135d0(void** a1, void** a2);

void** fun_4133e0(void** a1, void*** a2, void*** a3, void** a4);

void** fun_4119a0(void** a1, void*** a2, void*** a3, void** a4, int16_t a5, int24_t a6) {
    void*** ebp7;
    void** eax8;
    void** edi9;
    void** ebx10;
    int1_t zf11;
    void** edi12;
    void** edx13;
    void** eax14;
    void** ecx15;
    void** eax16;

    if (!a2 || ((ebp7 = a3, ebp7 == 0) || ((eax8 = *a2, reinterpret_cast<unsigned char>(eax8) >= reinterpret_cast<unsigned char>(*ebp7)) || (eax8 = fun_411c30(a1), eax8 == 0)))) {
        *reinterpret_cast<int16_t*>(&eax8) = 0;
        return eax8;
    } else {
        edi9 = *a2;
        ebx10 = *ebp7;
        if (edi9 && !(reinterpret_cast<unsigned char>(edi9) & 0xfff)) {
            --edi9;
        }
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax8 + 52)) > reinterpret_cast<unsigned char>(edi9) || (reinterpret_cast<unsigned char>(ebx10) > reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax8 + 56)) || (reinterpret_cast<unsigned char>(edi9) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax8 + 52))) & 0xfffff000)) {
            zf11 = g42e9e4 == 0;
            if (!zf11) {
                if (!a5) {
                    fun_4135d0(eax8 + 4, edi12);
                } else {
                    fun_4135e0(eax8 + 4, edi9, ebx10);
                }
                g42e9e4 = 0;
            }
            if (a5) {
                edx13 = *reinterpret_cast<void***>(eax8 + 0x70);
                eax14 = *reinterpret_cast<void***>(eax8 + 0x6c);
                ecx15 = eax8 + 4;
                fun_4134c0(ecx15, ecx15, eax14, edx13, edi9, ebx10, 1);
                g42e9e4 = 1;
            }
            ebp7 = a3;
            *reinterpret_cast<void***>(eax8 + 52) = edi9;
            *reinterpret_cast<void***>(eax8 + 56) = ebx10;
        }
        eax16 = fun_4133e0(eax8 + 20, a2, ebp7, a4);
        return eax16;
    }
}

void** fun_414b11(int32_t* ecx, int32_t* a2, void** a3, int16_t a4) {
    int1_t of5;
    int1_t of6;
    int1_t sf7;
    int1_t sf8;
    int1_t cf9;
    int1_t cf10;
    int1_t less_or_equal11;
    int1_t less_or_equal12;
    int1_t of13;
    int1_t of14;
    int1_t sf15;
    int1_t sf16;
    int1_t cf17;
    int1_t cf18;
    int1_t less_or_equal19;
    int1_t less_or_equal20;
    int1_t of21;
    int1_t of22;
    int1_t sf23;
    int1_t sf24;
    int32_t ecx25;
    int1_t cf26;
    int1_t sf27;
    int1_t of28;
    uint1_t less_or_equal29;
    int32_t v30;

    do {
    } while (!of5 && of6);
    while (!sf7 && sf8) {
    }
    while (cf9 && !cf10) {
    }
    while (less_or_equal11 && !less_or_equal12) {
    }
    while (!of13 && of14) {
    }
    while (!sf15 && sf16) {
    }
    while (cf17 && !cf18) {
    }
    while (less_or_equal19 && !less_or_equal20) {
    }
    while (!of21 && of22) {
    }
    while (!sf23 && sf24) {
    }
    ecx25 = reinterpret_cast<int32_t>(ecx) * 0xf2a534e5 + 0x361962e9;
    cf26 = __intrinsic();
    sf27 = ecx25 < 0;
    of28 = __intrinsic();
    less_or_equal29 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf27 != of28) | reinterpret_cast<uint1_t>(ecx25 == 0));
    *a2 = ecx25;
    do {
    } while (cf26 && !cf26);
    while (less_or_equal29 && !less_or_equal29) {
    }
    while (!of28 && of28) {
    }
    while (!sf27 && sf27) {
    }
    while (cf26 && !cf26) {
    }
    while (less_or_equal29 && !less_or_equal29) {
    }
    while (!of28 && of28) {
    }
    while (!sf27 && sf27) {
    }
    while (cf26 && !cf26) {
    }
    while (less_or_equal29 && !less_or_equal29) {
    }
    while (!of28 && of28) {
    }
    while (!sf27 && sf27) {
    }
    goto v30;
}

void fun_416a10(uint32_t a1, void** a2, void** a3, void** a4, void** a5);

int32_t InitializeCriticalSection = 0x32a3e;

int32_t EnterCriticalSection = 0x32a72;

void fun_417120(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** esi14;
    void** edi15;
    void** ebp16;
    void** eax17;
    int1_t zf18;

    if (!*reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(a2) * 4 + 0x42ae08)) {
        eax17 = fun_414db0(24, esi14, edi15, ebp16, __return_address(), a2, a3, a4, a5, a6, a7, a8);
        if (!eax17) {
            fun_416a10(17, esi14, edi15, ebp16, __return_address());
        }
        fun_417120(ecx, 17, esi14, edi15, ebp16, __return_address(), a2, a3, a4, a5, a6, a7, a8);
        zf18 = *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(a2) * 4 + 0x42ae08) == 0;
        if (!zf18) {
            fun_414d40(ecx, eax17, esi14, edi15, ebp16, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
        } else {
            InitializeCriticalSection(eax17);
            *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(a2) * 4 + 0x42ae08) = eax17;
        }
        fun_4171a0(17);
    }
    EnterCriticalSection();
    goto ebp16;
}

signed char* fun_417540(void** a1, struct s1** a2, void** a3) {
    void** ecx4;
    struct s1* eax5;
    void** eax6;

    ecx4 = a1;
    eax5 = reinterpret_cast<struct s1*>(0x42aec8);
    while (reinterpret_cast<unsigned char>(ecx4) <= reinterpret_cast<unsigned char>(eax5->f16) || reinterpret_cast<unsigned char>(ecx4) >= reinterpret_cast<unsigned char>(eax5->f20)) {
        eax5 = eax5->f0;
        if (eax5 == 0x42aec8) 
            goto addr_0x417596_4;
    }
    if (!(*reinterpret_cast<unsigned char*>(&ecx4) & 15) && (reinterpret_cast<unsigned char>(ecx4) & 0xfff) >= 0x100) {
        *a2 = eax5;
        eax6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx4) & 0xfffff000);
        *reinterpret_cast<void***>(a3) = eax6;
        return (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ecx4) - reinterpret_cast<unsigned char>(eax6) - 0x100) >> 4) + reinterpret_cast<unsigned char>(eax6) + 8;
    }
    addr_0x417596_4:
    return 0;
}

struct s27 {
    int32_t f0;
    int32_t f4;
};

int32_t g42ed30;

void fun_417470(int32_t a1);

void fun_4175a0(void** a1, void** a2, signed char* a3, void** a4, void** a5, void** a6) {
    int32_t edx7;
    int32_t ecx8;
    struct s27* eax9;
    int32_t ecx10;
    int32_t eax11;
    int32_t eax12;

    edx7 = 0;
    ecx8 = reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a2) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 16))) >> 12;
    eax9 = reinterpret_cast<struct s27*>(reinterpret_cast<uint32_t>(a1 + ecx8 * 8) + 24);
    *reinterpret_cast<signed char*>(&edx7) = *a3;
    eax9->f0 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(a1 + ecx8 * 8) + 24) + edx7;
    *a3 = 0;
    ecx10 = eax9->f0;
    eax9->f4 = 0xf1;
    if (ecx10 == 0xf0 && (eax11 = g42ed30, eax12 = eax11 + 1, g42ed30 = eax12, eax12 == 32)) {
        fun_417470(16);
    }
    return;
}

int32_t LeaveCriticalSection = 0x32a8a;

void** fun_4171a0(void*** a1) {
    int32_t ebp2;

    LeaveCriticalSection();
    goto ebp2;
}

void** g42ceec = reinterpret_cast<void**>(0xe0);

void** fun_417600(void** ecx, void** a2);

int32_t HeapAlloc = 0x32950;

void** fun_414e20(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void** eax10;
    void** esi11;
    void** edi12;
    void** esi13;
    void** ecx14;
    void** eax15;

    eax10 = g42ceec;
    esi11 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(a2 + 15) & 0xfffffff0);
    if (reinterpret_cast<unsigned char>(esi11) > reinterpret_cast<unsigned char>(eax10) || (fun_417120(ecx, 9, edi12, esi13, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9), ecx14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi11) >> 4), eax15 = fun_417600(ecx14, ecx14), fun_4171a0(9), eax15 == 0)) {
        HeapAlloc();
        goto esi11;
    } else {
        return eax15;
    }
}

int32_t g42ed38;

void** fun_417a90(void** a1) {
    int32_t eax2;
    int32_t eax3;

    eax2 = g42ed38;
    if (!eax2 || (eax3 = reinterpret_cast<int32_t>(eax2(a1)), eax3 == 0)) {
        return 0;
    } else {
        return 1;
    }
}

struct s29 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s32 {
    signed char f0;
    signed char f1;
};

struct s31 {
    struct s32* f0;
    void** f4;
    signed char[3] pad8;
    signed char f8;
    signed char[239] pad248;
    signed char f248;
    signed char[7] pad256;
    void** f256;
};

struct s30 {
    struct s31* f0;
    signed char[4] pad8;
    struct s31* f8;
};

struct s28 {
    struct s28* f0;
    struct s28* f4;
    struct s29* f8;
    struct s30* f12;
    struct s31* f16;
    uint32_t f20;
    void** f24;
    signed char[7] pad32;
    int32_t f32;
    signed char[116] pad152;
    struct s31* f152;
    signed char[8052] pad8208;
    struct s31* f8208;
    signed char[4] pad8216;
    void** f8216;
};

struct s28* __image_base = reinterpret_cast<struct s28*>(0x42aec8);

void** fun_417840(struct s31* a1, void** a2, void** a3);

struct s33 {
    struct s32* f0;
    uint32_t f4;
    signed char f8;
};

int32_t VirtualAlloc = 0x32450;

struct s34 {
    uint32_t f0;
    signed char[240] pad244;
    signed char f244;
};

struct s28* fun_4172a0();

void** fun_417600(void** ecx, void** a2) {
    struct s28* ecx3;
    void** ebx4;
    struct s29* v5;
    struct s29* ebp6;
    int32_t v7;
    int32_t esi8;
    struct s28* v9;
    struct s29* edi10;
    struct s29* ebp11;
    struct s31* esi12;
    void** eax13;
    void** eax14;
    struct s29* ebp15;
    struct s31* edi16;
    struct s29* esi17;
    void** eax18;
    void** eax19;
    struct s28* eax20;
    struct s28* ebp21;
    struct s30* eax22;
    struct s31* esi23;
    struct s33* edi24;
    int32_t esi25;
    struct s33* eax26;
    struct s29* edx27;
    struct s29* ecx28;
    struct s34* eax29;
    struct s29* eax30;
    uint1_t cf31;
    struct s28* eax32;
    struct s31* ecx33;

    ecx3 = __image_base;
    ebx4 = a2;
    v5 = ebp6;
    v7 = esi8;
    v9 = ecx3;
    while (1) {
        if (ecx3->f16 != 0xffffffff) {
            edi10 = ecx3->f8;
            ebp11 = reinterpret_cast<struct s29*>(&ecx3->f8216);
            esi12 = reinterpret_cast<struct s31*>((reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(edi10) - reinterpret_cast<uint32_t>(ecx3) - 24) >> 3 << 12) + reinterpret_cast<uint32_t>(ecx3->f16));
            if (reinterpret_cast<uint32_t>(edi10) < reinterpret_cast<uint32_t>(ebp11)) {
                do {
                    eax13 = edi10->f0;
                    if (reinterpret_cast<signed char>(eax13) >= reinterpret_cast<signed char>(ebx4) && reinterpret_cast<unsigned char>(edi10->f4) > reinterpret_cast<unsigned char>(ebx4)) {
                        eax14 = fun_417840(esi12, eax13, ebx4);
                        if (eax14) 
                            goto addr_0x4176b8_6;
                        ecx3 = v9;
                        edi10->f4 = ebx4;
                    }
                    edi10 = reinterpret_cast<struct s29*>(reinterpret_cast<uint32_t>(edi10) + 8);
                    esi12 = reinterpret_cast<struct s31*>(reinterpret_cast<uint32_t>(esi12) + 0x1000);
                } while (reinterpret_cast<uint32_t>(edi10) < reinterpret_cast<uint32_t>(ebp11));
            }
            ebp15 = ecx3->f8;
            edi16 = ecx3->f16;
            esi17 = reinterpret_cast<struct s29*>(&ecx3->f24);
            if (reinterpret_cast<uint32_t>(esi17) < reinterpret_cast<uint32_t>(ebp15)) {
                do {
                    eax18 = esi17->f0;
                    if (reinterpret_cast<signed char>(eax18) >= reinterpret_cast<signed char>(ebx4) && reinterpret_cast<unsigned char>(esi17->f4) > reinterpret_cast<unsigned char>(ebx4)) {
                        eax19 = fun_417840(edi16, eax18, ebx4);
                        if (eax19) 
                            goto addr_0x4176d1_12;
                        ecx3 = v9;
                        esi17->f4 = ebx4;
                    }
                    esi17 = reinterpret_cast<struct s29*>(reinterpret_cast<uint32_t>(esi17) + 8);
                    edi16 = reinterpret_cast<struct s31*>(reinterpret_cast<uint32_t>(edi16) + 0x1000);
                } while (reinterpret_cast<uint32_t>(esi17) < reinterpret_cast<uint32_t>(ebp15));
            }
        }
        ecx3 = ecx3->f0;
        eax20 = __image_base;
        v9 = ecx3;
        if (ecx3 == eax20) 
            break;
    }
    ebp21 = reinterpret_cast<struct s28*>(0x42aec8);
    while (ebp21->f16 == 0xffffffff || !ebp21->f12) {
        ebp21 = ebp21->f0;
        if (ebp21 == 0x42aec8) 
            goto addr_0x4177ed_20;
    }
    eax22 = ebp21->f12;
    esi23 = ebp21->f16;
    edi24 = reinterpret_cast<struct s33*>((reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(eax22) - reinterpret_cast<uint32_t>(ebp21) - 24) >> 3 << 12) + reinterpret_cast<uint32_t>(esi23));
    esi25 = 0;
    if (reinterpret_cast<int1_t>(eax22->f0 == 0xffffffff)) {
        do {
            if (esi25 >= 16) 
                break;
            eax22 = reinterpret_cast<struct s30*>(&eax22->f8);
            ++esi25;
        } while (eax22->f8 == 0xffffffff);
    }
    eax26 = reinterpret_cast<struct s33*>(VirtualAlloc());
    if (eax26 == edi24) {
        edx27 = v5;
        ecx28 = edx27;
        if (!(reinterpret_cast<uint1_t>(esi25 < 0) | reinterpret_cast<uint1_t>(esi25 == 0))) {
            eax29 = reinterpret_cast<struct s34*>(&edi24->f4);
            do {
                eax29->f0 = 0xf0;
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax29) - 4) = reinterpret_cast<uint32_t>(&eax29->pad244);
                eax29->f244 = -1;
                ecx28->f0 = reinterpret_cast<void**>(0xf0);
                ecx28->f4 = reinterpret_cast<void**>(0xf1);
                eax29 = reinterpret_cast<struct s34*>(reinterpret_cast<uint32_t>(eax29) + 0x1000);
                ecx28 = reinterpret_cast<struct s29*>(reinterpret_cast<uint32_t>(ecx28) + 8);
                --esi25;
            } while (esi25);
            edx27 = v5;
        }
        eax30 = reinterpret_cast<struct s29*>(&ebp21->f8216);
        __image_base = ebp21;
        cf31 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(ecx28) < reinterpret_cast<uint32_t>(eax30));
        if (cf31) {
            do {
                if (ecx28->f0 == 0xffffffff) 
                    break;
                ecx28 = reinterpret_cast<struct s29*>(reinterpret_cast<uint32_t>(ecx28) + 8);
            } while (reinterpret_cast<uint32_t>(ecx28) < reinterpret_cast<uint32_t>(eax30));
            cf31 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(ecx28) < reinterpret_cast<uint32_t>(eax30));
        }
        ebp21->f12 = reinterpret_cast<struct s30*>(reinterpret_cast<uint32_t>(eax30) - (reinterpret_cast<uint32_t>(eax30) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax30) < reinterpret_cast<uint32_t>(eax30) + cf31)) & reinterpret_cast<uint32_t>(ecx28));
        edi24->f8 = *reinterpret_cast<signed char*>(&ebx4);
        ebp21->f8 = edx27;
        edx27->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx27->f0) - reinterpret_cast<unsigned char>(ebx4));
        edi24->f4 = edi24->f4 - reinterpret_cast<unsigned char>(ebx4);
        edi24->f0 = reinterpret_cast<struct s32*>(reinterpret_cast<uint32_t>(edi24) + reinterpret_cast<unsigned char>(ebx4) + 8);
        goto v7;
    }
    return 0;
    addr_0x4177ed_20:
    eax32 = fun_4172a0();
    if (eax32) {
        ecx33 = eax32->f16;
        ecx33->f8 = *reinterpret_cast<signed char*>(&ebx4);
        __image_base = eax32;
        ecx33->f0 = reinterpret_cast<struct s32*>(reinterpret_cast<uint32_t>(ecx33) + reinterpret_cast<unsigned char>(ebx4) + 8);
        ecx33->f4 = reinterpret_cast<void**>(0xf0 - reinterpret_cast<unsigned char>(ebx4));
        eax32->f24 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax32->f24) - (reinterpret_cast<unsigned char>(ebx4) & 0xff));
        return &ecx33->f256;
    }
    addr_0x4176d1_12:
    __image_base = v9;
    esi17->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi17->f0) - reinterpret_cast<unsigned char>(ebx4));
    v9->f8 = esi17;
    return eax19;
    addr_0x4176b8_6:
    __image_base = v9;
    edi10->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi10->f0) - reinterpret_cast<unsigned char>(ebx4));
    v9->f8 = edi10;
    return eax14;
}

void** __image_base = reinterpret_cast<void**>(0xca);

void** fun_41a2c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_415fc0(void** ecx, void** a2, uint32_t a3) {
    void** esi4;
    void** eax5;
    void* esp6;
    void** ecx7;
    void** eax8;
    void** edx9;
    uint32_t eax10;

    if (reinterpret_cast<unsigned char>(a2 + 1) > reinterpret_cast<unsigned char>(0x100)) {
        esi4 = __image_base;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi4 + (reinterpret_cast<uint32_t>(reinterpret_cast<signed char>(a2) >> 8) & 0xff) * 2) + 1) & 0x80)) {
            eax5 = reinterpret_cast<void**>(1);
        } else {
            eax5 = reinterpret_cast<void**>(2);
        }
        esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4);
        ecx7 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp6) + 8);
        eax8 = fun_41a2c0(ecx7, 1, reinterpret_cast<int32_t>(esp6) - 4 - 4 + 24, eax5, ecx7, 0, 0);
        if (eax8) {
            return reinterpret_cast<unsigned char>(ecx) & 0xffff & a3;
        } else {
            return eax8;
        }
    } else {
        edx9 = __image_base;
        eax10 = 0;
        *reinterpret_cast<void***>(&eax10) = *reinterpret_cast<void***>(edx9 + reinterpret_cast<unsigned char>(a2) * 2);
        return eax10 & a3;
    }
}

void** fun_418af0(void** a1, void** a2, void** a3);

void** fun_415b00(void** a1) {
    void** ebx2;
    uint32_t ecx3;
    void** eax4;
    void** edi5;
    void** edx6;
    void** eax7;
    void** eax8;
    void** eax9;

    ebx2 = reinterpret_cast<void**>(0);
    ecx3 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 12)) & 3;
    if (*reinterpret_cast<signed char*>(&ecx3) == 2 && (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 12)) & 0x108 && (eax4 = *reinterpret_cast<void***>(a1 + 8), edi5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) - reinterpret_cast<unsigned char>(eax4)), !(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edi5) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edi5 == 0))))) {
        edx6 = *reinterpret_cast<void***>(a1 + 16);
        eax7 = fun_418af0(edx6, eax4, edi5);
        eax8 = *reinterpret_cast<void***>(a1 + 12);
        if (eax7 != edi5) {
            *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax8) | 32);
            ebx2 = reinterpret_cast<void**>(0xffffffff);
            *reinterpret_cast<void***>(a1 + 12) = eax8;
        } else {
            if (*reinterpret_cast<unsigned char*>(&eax8) & 0x80) {
                *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax8) & 0xfd);
                *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(a1 + 12) = eax8;
                *reinterpret_cast<void***>(a1) = *reinterpret_cast<void***>(a1 + 8);
                return 0;
            }
        }
    }
    eax9 = *reinterpret_cast<void***>(a1 + 8);
    *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(a1) = eax9;
    return ebx2;
}

void** fun_419040(void** a1, void** a2, void** a3, void** a4, void** a5);

void* fun_419140(void** a1) {
    void** v2;
    void** esi3;
    void** esi4;
    void** v5;
    void** edi6;
    void** ebx7;
    void** eax8;
    void** v9;
    void** eax10;
    void** ecx11;
    void** edi12;
    void* edx13;
    void* v14;
    void** ebp15;
    void** eax16;
    uint32_t eax17;
    void** eax18;
    void** edx19;
    void** esi20;
    uint32_t eax21;
    void** ebp22;
    uint32_t edi23;
    void** eax24;
    void** eax25;
    void** edx26;
    void** eax27;
    void** ecx28;
    void** eax29;

    v2 = esi3;
    esi4 = a1;
    v5 = edi6;
    ebx7 = *reinterpret_cast<void***>(esi4 + 16);
    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi4 + 4)) < reinterpret_cast<signed char>(0)) {
        *reinterpret_cast<void***>(esi4 + 4) = reinterpret_cast<void**>(0);
    }
    eax8 = fun_419040(ebx7, 0, 1, v5, v2);
    v9 = eax8;
    if (reinterpret_cast<signed char>(eax8) < reinterpret_cast<signed char>(0)) {
        return 0xffffffff;
    }
    eax10 = *reinterpret_cast<void***>(esi4 + 12);
    if (!(reinterpret_cast<unsigned char>(eax10) & 0x108)) {
        return reinterpret_cast<unsigned char>(eax8) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi4 + 4));
    }
    ecx11 = *reinterpret_cast<void***>(esi4);
    edi12 = *reinterpret_cast<void***>(esi4 + 8);
    edx13 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx11) - reinterpret_cast<unsigned char>(edi12));
    v14 = edx13;
    if (!(*reinterpret_cast<unsigned char*>(&eax10) & 3)) {
        if (!(*reinterpret_cast<unsigned char*>(&eax10) & 0x80)) {
            eax16 = fun_419020(v5, v2, ebp15);
            *reinterpret_cast<void***>(eax16) = reinterpret_cast<void**>(22);
            return 0xffffffff;
        }
    } else {
        eax17 = reinterpret_cast<unsigned char>(ebx7) & 31;
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(ebx7) >> 5) * 4 + 0x430280)) + (eax17 + eax17 * 8) * 4 + 4) & 0x80 && (eax18 = edi12, reinterpret_cast<unsigned char>(eax18) < reinterpret_cast<unsigned char>(ecx11))) {
            do {
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax18) == 10)) {
                    edx13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx13) + 1);
                }
                ++eax18;
            } while (reinterpret_cast<unsigned char>(eax18) < reinterpret_cast<unsigned char>(ecx11));
            v14 = edx13;
        }
    }
    if (!v9) {
        return edx13;
    }
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi4 + 12)) & 1) 
        goto addr_0x4191f8_18;
    addr_0x4192b7_19:
    return reinterpret_cast<unsigned char>(v9) + reinterpret_cast<uint32_t>(edx13);
    addr_0x4191f8_18:
    if (!*reinterpret_cast<void***>(esi4 + 4)) {
        edx19 = *reinterpret_cast<void***>(esi4 + 4);
        return reinterpret_cast<unsigned char>(v9) + reinterpret_cast<unsigned char>(edx19);
    }
    esi20 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx11) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi4 + 4)) - reinterpret_cast<unsigned char>(edi12));
    eax21 = reinterpret_cast<unsigned char>(ebx7) & 31;
    ebp22 = reinterpret_cast<void**>((reinterpret_cast<signed char>(ebx7) >> 5) * 4 + 0x430280);
    edi23 = eax21 + eax21 * 8 << 2;
    if (*reinterpret_cast<unsigned char*>(edi23 + reinterpret_cast<int32_t>(*ebp22) + 4) & 0x80) 
        goto addr_0x41923a_22;
    addr_0x4192b3_23:
    v9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v9) - reinterpret_cast<unsigned char>(esi20));
    goto addr_0x4192b7_19;
    addr_0x41923a_22:
    eax24 = fun_419040(ebx7, 0, 2, v5, v2);
    if (eax24 != v9) {
        fun_419040(ebx7, v9, 0, v5, v2);
        if (reinterpret_cast<unsigned char>(esi20) > reinterpret_cast<unsigned char>(0x200) || ((eax25 = *reinterpret_cast<void***>(a1 + 12), (*reinterpret_cast<unsigned char*>(&eax25) & 8) == 0) || *reinterpret_cast<unsigned char*>(&eax25 + 1) & 4)) {
            esi20 = *reinterpret_cast<void***>(a1 + 24);
        } else {
            esi20 = reinterpret_cast<void**>(0x200);
        }
        if (*reinterpret_cast<unsigned char*>(edi23 + reinterpret_cast<int32_t>(*ebp22) + 4) & 4) 
            goto addr_0x4192ae_28;
    } else {
        edx26 = a1;
        eax27 = *reinterpret_cast<void***>(edx26 + 8);
        ecx28 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi20) + reinterpret_cast<unsigned char>(eax27));
        if (reinterpret_cast<unsigned char>(eax27) < reinterpret_cast<unsigned char>(ecx28)) {
            do {
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax27) == 10)) {
                    ++esi20;
                }
                ++eax27;
            } while (reinterpret_cast<unsigned char>(eax27) < reinterpret_cast<unsigned char>(ecx28));
        }
        eax29 = *reinterpret_cast<void***>(edx26 + 12);
        if (*reinterpret_cast<unsigned char*>(&eax29 + 1) & 32) 
            goto addr_0x419270_34;
    }
    addr_0x4192af_35:
    edx13 = v14;
    goto addr_0x4192b3_23;
    addr_0x4192ae_28:
    ++esi20;
    goto addr_0x4192af_35;
    addr_0x419270_34:
    goto addr_0x4192ae_28;
}

void fun_415940(int32_t* a1, int32_t* a2) {
    int32_t* esi3;
    int32_t* edi4;
    int32_t eax5;

    esi3 = a1;
    edi4 = a2;
    if (reinterpret_cast<uint32_t>(esi3) < reinterpret_cast<uint32_t>(edi4)) {
        do {
            eax5 = *esi3;
            if (eax5) {
                eax5();
            }
            ++esi3;
        } while (reinterpret_cast<uint32_t>(esi3) < reinterpret_cast<uint32_t>(edi4));
    }
    return;
}

struct s35 {
    void** f0;
    signed char f1;
};

void** fun_415860(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_415820(void** ecx, void** a2, void** a3, void** a4, void** a5, struct s35* a6, uint32_t a7, void* a8, void** a9, void** a10, void** a11) {
    void** eax12;

    eax12 = fun_415860(ecx, a2, 0, 0, __return_address(), a2, a3);
    return eax12;
}

void** fun_415930() {
    void** eax1;

    eax1 = fun_4171a0(13);
    return eax1;
}

void fun_4192f0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    void** eax16;
    void** v17;
    void** esi18;

    eax16 = *reinterpret_cast<void***>(a2 + 12);
    if (*reinterpret_cast<unsigned char*>(&eax16) & 0x83 && *reinterpret_cast<unsigned char*>(&eax16) & 8) {
        v17 = *reinterpret_cast<void***>(a2 + 8);
        fun_414d40(ecx, v17, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) & 0xfffffbf7);
        *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
    }
    return;
}

void** g4313a0;

void** g430384;

void fun_417200(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

void** fun_415ac0(void** a1);

void** fun_417270(void** a1, void** a2);

void** fun_415b80(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** v8;
    void** ebx9;
    void** v10;
    void** ebp11;
    void** v12;
    void** esi13;
    void** v14;
    void** edi15;
    void** esi16;
    void** v17;
    void** ebp18;
    void** eax19;
    void** edi20;
    void** eax21;
    void** v22;
    void** ecx23;
    void** v24;
    void** eax25;
    void** v26;
    void** eax27;
    void** edx28;
    void** v29;
    void** eax30;
    void** eax31;

    v7 = reinterpret_cast<void**>(__return_address());
    v8 = ebx9;
    v10 = ebp11;
    v12 = esi13;
    v14 = edi15;
    esi16 = reinterpret_cast<void**>(0);
    v17 = reinterpret_cast<void**>(0);
    ebp18 = reinterpret_cast<void**>(0);
    fun_417120(ecx, 2, v14, v12, v10, v8, 0, v7, a2, a3, a4, a5, a6);
    eax19 = g4313a0;
    edi20 = a2;
    if (reinterpret_cast<signed char>(eax19) > reinterpret_cast<signed char>(0)) {
        do {
            eax21 = g430384;
            if (*reinterpret_cast<void***>(eax21 + reinterpret_cast<unsigned char>(esi16) * 4) && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(eax21 + reinterpret_cast<unsigned char>(esi16) * 4) + 12)) & 0x83) {
                v22 = *reinterpret_cast<void***>(eax21 + reinterpret_cast<unsigned char>(esi16) * 4);
                fun_417200(ecx, esi16, v22, v14, v12, v10, v8, v17, v7, a2);
                ecx23 = g430384;
                ecx = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx23 + reinterpret_cast<unsigned char>(esi16) * 4) + 12);
                if (0x83 & *reinterpret_cast<unsigned char*>(&ecx)) {
                    if (!reinterpret_cast<int1_t>(edi20 == 1)) {
                        if (!edi20 && (*reinterpret_cast<unsigned char*>(&ecx) & 2 && (v24 = *reinterpret_cast<void***>(ecx23 + reinterpret_cast<unsigned char>(esi16) * 4), eax25 = fun_415ac0(v24), reinterpret_cast<int1_t>(eax25 == 0xffffffff)))) {
                            ebp18 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp18) | reinterpret_cast<unsigned char>(eax25));
                        }
                    } else {
                        v26 = *reinterpret_cast<void***>(ecx23 + reinterpret_cast<unsigned char>(esi16) * 4);
                        eax27 = fun_415ac0(v26);
                        if (eax27 != 0xffffffff) {
                            ++v17;
                        }
                    }
                }
                edx28 = g430384;
                v29 = *reinterpret_cast<void***>(edx28 + reinterpret_cast<unsigned char>(esi16) * 4);
                fun_417270(esi16, v29);
            }
            eax30 = g4313a0;
            ++esi16;
        } while (reinterpret_cast<signed char>(esi16) < reinterpret_cast<signed char>(eax30));
    }
    fun_4171a0(2);
    eax31 = v17;
    if (edi20 != 1) {
        eax31 = ebp18;
    }
    return eax31;
}

void** fun_41ab00(void** a1, void** a2);

int32_t FlushFileBuffers = 0x32588;

void** fun_419330(void** a1, void** a2) {
    void** eax3;
    void** ebp4;
    uint32_t eax5;
    void** esi6;
    void** edi7;
    void** esi8;
    void** ebp9;
    void** eax10;
    void** eax11;
    void** eax12;
    int32_t eax13;
    void** eax14;
    void*** eax15;

    eax3 = g430380;
    if (reinterpret_cast<unsigned char>(a1) >= reinterpret_cast<unsigned char>(eax3) || (ebp4 = reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280), eax5 = reinterpret_cast<unsigned char>(a1) & 31, esi6 = reinterpret_cast<void**>(eax5 + eax5 * 8 << 2), (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebp4) + reinterpret_cast<unsigned char>(esi6) + 4) & 1) == 0)) {
        eax10 = fun_419020(edi7, esi8, ebp9);
        *reinterpret_cast<void***>(eax10) = reinterpret_cast<void**>(9);
        return 0xffffffff;
    }
    fun_41ab50(a1, edi7, esi8, ebp9, __return_address(), a1, a2);
    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebp4) + reinterpret_cast<unsigned char>(esi6) + 4) & 1)) {
        addr_0x41939f_4:
        eax11 = fun_419020(edi7, esi8, ebp9);
        *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(9);
        esi6 = reinterpret_cast<void**>(0xffffffff);
    } else {
        eax12 = fun_41ab00(a1, edi7);
        eax13 = reinterpret_cast<int32_t>(FlushFileBuffers(eax12));
        if (eax13) {
            esi6 = reinterpret_cast<void**>(0);
        } else {
            eax14 = reinterpret_cast<void**>(GetLastError(eax12));
            esi6 = eax14;
        }
        if (esi6) 
            goto addr_0x419398_9;
    }
    fun_41abc0(a1);
    return esi6;
    addr_0x419398_9:
    eax15 = fun_419030(eax12, edi7);
    *eax15 = esi6;
    goto addr_0x41939f_4;
}

void** fun_418b70(void** a1, void** a2, void** a3);

void** fun_418af0(void** a1, void** a2, void** a3) {
    void** eax4;
    uint32_t eax5;
    void** edi6;
    void** esi7;
    void** eax8;
    void*** eax9;
    void** eax10;

    eax4 = g430380;
    if (reinterpret_cast<unsigned char>(a1) >= reinterpret_cast<unsigned char>(eax4) || (eax5 = reinterpret_cast<unsigned char>(a1) & 31, (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + (eax5 + eax5 * 8) * 4 + 4) & 1) == 0)) {
        eax8 = fun_419020(edi6, esi7, __return_address());
        *reinterpret_cast<void***>(eax8) = reinterpret_cast<void**>(9);
        eax9 = fun_419030(edi6, esi7);
        *eax9 = reinterpret_cast<void**>(0);
        return 0xffffffff;
    } else {
        fun_41ab50(a1, edi6, esi7, __return_address(), a1, a2, a3);
        eax10 = fun_418b70(a1, a2, a3);
        fun_41abc0(a1);
        return eax10;
    }
}

void fun_417200(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** ebp11;

    if (reinterpret_cast<signed char>(a2) >= reinterpret_cast<signed char>(20)) {
        EnterCriticalSection();
        goto ebp11;
    } else {
        fun_417120(ecx, a2 + 28, ebp11, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10);
        return;
    }
}

void** fun_415ac0(void** a1) {
    void** eax2;
    void** eax3;
    void** v4;
    void** esi5;
    void** eax6;
    void* eax7;

    eax2 = fun_415b00(a1);
    if (!eax2) {
        eax3 = *reinterpret_cast<void***>(a1 + 12);
        if (!(*reinterpret_cast<unsigned char*>(&eax3 + 1) & 64)) {
            return 0;
        } else {
            v4 = *reinterpret_cast<void***>(a1 + 16);
            eax6 = fun_419330(v4, esi5);
            eax7 = reinterpret_cast<void*>(-reinterpret_cast<unsigned char>(eax6));
            return reinterpret_cast<uint32_t>(eax7) - (reinterpret_cast<uint32_t>(eax7) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax7) < reinterpret_cast<uint32_t>(eax7) + reinterpret_cast<uint1_t>(!!eax6)));
        }
    } else {
        return 0xffffffff;
    }
}

struct s36 {
    signed char[48] pad48;
    void** f48;
};

struct s37 {
    signed char[48] pad48;
    void** f48;
};

void** fun_415d30(void** a1, void** a2) {
    uint32_t edx3;
    uint32_t edx4;
    void** ecx5;
    int32_t edx6;

    edx3 = reinterpret_cast<uint32_t>(__intrinsic() >> 2);
    edx4 = edx3 + (edx3 >> 31);
    *reinterpret_cast<void***>(a1) = reinterpret_cast<void**>(&(*reinterpret_cast<struct s36**>(&edx4))->f48);
    ecx5 = a1 + 1;
    __asm__("cdq ");
    edx6 = reinterpret_cast<signed char>(a2) % 10;
    *reinterpret_cast<void***>(ecx5) = reinterpret_cast<void**>(&(*reinterpret_cast<struct s37**>(&edx6))->f48);
    return ecx5 + 1;
}

struct s39 {
    int32_t f0;
    int32_t f4;
    struct s39* f8;
};

struct s38 {
    signed char[8] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[43] pad56;
    void** f56;
    signed char[7] pad64;
    void** f64;
    signed char[15] pad80;
    struct s39* f80;
    int32_t** f84;
    int32_t f88;
};

struct s38* fun_419530(void** a1, void** a2, void** a3);

struct s40 {
    uint32_t f0;
    void** f4;
};

void** fun_419d10(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** ebp7;
    int32_t ebx8;
    void** esi9;
    void** edi10;
    void** esi11;
    void** ebp12;
    struct s38* eax13;
    void** ebx14;
    void** eax15;
    void** ecx16;
    uint32_t edx17;
    uint32_t edx18;
    void*** esi19;
    void** eax20;
    void* edx21;
    void** edx22;
    int32_t eax23;
    int32_t eax24;
    void*** esi25;
    struct s40* ebx26;
    void** edi27;
    void*** edx28;
    void* eax29;
    void** edx30;
    void** eax31;
    uint32_t edx32;
    void* edx33;
    void** edx34;
    void*** esi35;
    void* edx36;
    void** edx37;
    void*** eax38;

    ebp7 = a1;
    ebx8 = 0;
    esi9 = *reinterpret_cast<void***>(ebp7);
    eax13 = fun_419530(edi10, esi11, ebp12);
    if (reinterpret_cast<signed char>(esi9) >= reinterpret_cast<signed char>(0)) {
        if (eax13->f64 || (eax15 = fun_414db0(36, edi10, esi11, ebp12, ebx14, __return_address(), a1, a2, a3, a4, a5, a6), eax13->f64 = eax15, ecx16 = reinterpret_cast<void**>(0x42ee30), !!eax15)) {
            ecx16 = eax13->f64;
        }
        edx17 = reinterpret_cast<uint32_t>(__intrinsic() >> 23);
        edx18 = edx17 + (edx17 >> 31);
        esi19 = reinterpret_cast<void***>(esi9 + edx18 * 0xf879e080);
        eax20 = reinterpret_cast<void**>(edx18 * 4 + 70);
        if (reinterpret_cast<int32_t>(esi19) >= reinterpret_cast<int32_t>(0x1e13380) && (esi19 = esi19 - 0x1e13380, ++eax20, reinterpret_cast<int32_t>(esi19) >= reinterpret_cast<int32_t>(0x1e13380))) {
            esi19 = esi19 - 0x1e13380;
            ++eax20;
            if (reinterpret_cast<int32_t>(esi19) < reinterpret_cast<int32_t>(0x1e28500)) {
                ebx8 = 1;
            } else {
                ++eax20;
                esi19 = esi19 - 0x1e28500;
            }
        }
        *reinterpret_cast<void***>(ecx16 + 20) = eax20;
        edx21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint32_t>(esi19)) >> 16);
        edx22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx21) + (reinterpret_cast<uint32_t>(edx21) >> 31));
        *reinterpret_cast<void***>(ecx16 + 28) = edx22;
        eax23 = reinterpret_cast<int32_t>(-((reinterpret_cast<unsigned char>(edx22) << 4) - reinterpret_cast<unsigned char>(edx22)));
        eax24 = eax23 + eax23 * 4;
        esi25 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi19) + (eax24 + eax24 * 8 << 7));
        ebx26 = reinterpret_cast<struct s40*>(0x42df50);
        if (!ebx8) {
            ebx26 = reinterpret_cast<struct s40*>(0x42df88);
        }
        edi27 = *reinterpret_cast<void***>(ecx16 + 28);
        edx28 = &ebx26->f4;
        eax29 = reinterpret_cast<void*>(1);
        if (reinterpret_cast<signed char>(*edx28) < reinterpret_cast<signed char>(edi27)) {
            do {
                edx28 = edx28 + 4;
                eax29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax29) + 1);
            } while (reinterpret_cast<signed char>(*edx28) < reinterpret_cast<signed char>(edi27));
        }
        edx30 = *reinterpret_cast<void***>(ecx16 + 28);
        eax31 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax29) - 1);
        *reinterpret_cast<void***>(ecx16 + 16) = eax31;
        *reinterpret_cast<void***>(ecx16 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx30) - *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx26) + reinterpret_cast<unsigned char>(eax31) * 4));
        edx32 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp7))) >> 16);
        *reinterpret_cast<void***>(ecx16 + 32) = reinterpret_cast<void**>(0);
        __asm__("cdq ");
        *reinterpret_cast<void***>(ecx16 + 24) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edx32 + (edx32 >> 31) + 4) % 7);
        edx33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint32_t>(esi25)) >> 11);
        edx34 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx33) + (reinterpret_cast<uint32_t>(edx33) >> 31));
        *reinterpret_cast<void***>(ecx16 + 8) = edx34;
        esi35 = esi25 + reinterpret_cast<unsigned char>(edx34) * 0xfffff1f0;
        edx36 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint32_t>(esi35)) >> 5);
        edx37 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx36) + (reinterpret_cast<uint32_t>(edx36) >> 31));
        *reinterpret_cast<void***>(ecx16 + 4) = edx37;
        eax38 = reinterpret_cast<void***>(edx37 + reinterpret_cast<unsigned char>(edx37) * 2);
        *reinterpret_cast<void***>(ecx16) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi35) - (reinterpret_cast<uint32_t>(eax38 + reinterpret_cast<uint32_t>(eax38) * 4) << 2));
        return ecx16;
    } else {
        return 0;
    }
}

int32_t fun_419900(void** a1);

int32_t fun_4198d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** esi13;
    int32_t eax14;

    fun_417120(ecx, 11, esi13, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10);
    eax14 = fun_419900(a2);
    fun_4171a0(11);
    return eax14;
}

void** fun_418fa0(void** a1) {
    void** v2;
    void** v3;
    void** esi4;
    void*** eax5;
    void** ecx6;
    int32_t esi7;
    void*** eax8;
    void** eax9;
    void** eax10;
    void** eax11;
    void** eax12;

    v2 = reinterpret_cast<void**>(__return_address());
    v3 = esi4;
    eax5 = fun_419030(v3, v2);
    ecx6 = a1;
    esi7 = 0;
    *eax5 = ecx6;
    eax8 = reinterpret_cast<void***>(0x42d058);
    do {
        if (ecx6 == *eax8) 
            break;
        eax8 = eax8 + 8;
        ++esi7;
    } while (reinterpret_cast<uint32_t>(eax8) < 0x42d1c0);
    goto addr_0x418fc2_4;
    eax9 = fun_419020(v3, v2, a1);
    *reinterpret_cast<void***>(eax9) = *reinterpret_cast<void***>(esi7 * 8 + 0x42d05c);
    return eax9;
    addr_0x418fc2_4:
    if (reinterpret_cast<unsigned char>(ecx6) < reinterpret_cast<unsigned char>(19) || reinterpret_cast<unsigned char>(ecx6) > reinterpret_cast<unsigned char>(36)) {
        if (reinterpret_cast<unsigned char>(ecx6) < reinterpret_cast<unsigned char>(0xbc) || reinterpret_cast<unsigned char>(ecx6) > reinterpret_cast<unsigned char>(0xca)) {
            eax10 = fun_419020(v3, v2, a1);
            *reinterpret_cast<void***>(eax10) = reinterpret_cast<void**>(22);
            return eax10;
        } else {
            eax11 = fun_419020(v3, v2, a1);
            *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(8);
            return eax11;
        }
    } else {
        eax12 = fun_419020(v3, v2, a1);
        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(13);
        return eax12;
    }
}

void** g42ef64;

void** fun_41a700(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void** eax9;
    void** edi10;
    void** esi11;
    void** eax12;
    void** ebp13;
    void** edi14;
    void** esi15;
    void** edx16;
    void** ecx17;
    void** edx18;
    uint32_t ecx19;
    uint32_t ecx20;
    void** eax21;
    int1_t zf22;
    void** eax23;
    void** cl24;

    eax9 = g42ef64;
    edi10 = a2;
    esi11 = edi10;
    if (!eax9) {
        eax12 = fun_414c40(edi10, a3, a4);
        return eax12;
    }
    fun_417120(ecx, 25, ebp13, edi14, esi15, __return_address(), a2, a3, a4, a5, a6, a7, a8);
    edx16 = a4;
    if (!edx16) {
        addr_0x41a77d_4:
        if (edx16) {
            ecx17 = edx16 - 1 + 1;
            edx18 = ecx17;
            ecx19 = reinterpret_cast<unsigned char>(ecx17) >> 2;
            while (ecx19) {
                --ecx19;
                *reinterpret_cast<void***>(edi10) = reinterpret_cast<void**>(0);
                edi10 = edi10 + 4;
                esi11 = esi11 + 4;
            }
            ecx20 = reinterpret_cast<unsigned char>(edx18) & 3;
            while (ecx20) {
                --ecx20;
                *reinterpret_cast<void***>(edi10) = reinterpret_cast<void**>(0);
                ++edi10;
                ++esi11;
            }
        }
    } else {
        eax21 = a3;
        do {
            ecx = *reinterpret_cast<void***>(eax21);
            --edx16;
            zf22 = (*reinterpret_cast<unsigned char*>((reinterpret_cast<unsigned char>(ecx) & 0xff) + 0x42ee61) & 4) == 0;
            *reinterpret_cast<void***>(edi10) = ecx;
            if (zf22) {
                ++edi10;
                ++eax21;
                if (!ecx) 
                    goto addr_0x41a77d_4;
            } else {
                ++edi10;
                eax23 = eax21 + 1;
                if (!edx16) 
                    goto addr_0x41a773_15;
                cl24 = *reinterpret_cast<void***>(eax23);
                --edx16;
                *reinterpret_cast<void***>(edi10) = cl24;
                ++edi10;
                eax21 = eax23 + 1;
                if (!cl24) 
                    goto addr_0x41a779_17;
            }
        } while (edx16);
        goto addr_0x41a771_20;
    }
    fun_4171a0(25);
    return esi11;
    addr_0x41a771_20:
    goto addr_0x41a77d_4;
    addr_0x41a773_15:
    *reinterpret_cast<void***>(edi10 + 0xffffffff) = reinterpret_cast<void**>(0);
    goto addr_0x41a77d_4;
    addr_0x41a779_17:
    *reinterpret_cast<signed char*>(edi10 + 0xfffffffe) = 0;
    goto addr_0x41a77d_4;
}

void** fun_41a7b0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void** ebx9;
    void** edi10;
    void** eax11;
    void** edi12;
    void** esi13;
    void** ebx14;
    void** esi15;
    int32_t eax16;
    void** esi17;
    int32_t edx18;

    ebx9 = a3;
    edi10 = a2;
    if (reinterpret_cast<unsigned char>(edi10) < reinterpret_cast<unsigned char>(ebx9)) {
        eax11 = g42ef64;
        if (eax11) {
            fun_417120(ecx, 25, edi12, esi13, ebx14, __return_address(), a2, a3, a4, a5, a6, a7, a8);
            esi15 = ebx9 + 0xffffffff;
            eax16 = 0;
            *reinterpret_cast<void***>(&eax16) = *reinterpret_cast<void***>(esi15);
            if (!(*reinterpret_cast<unsigned char*>(eax16 + 0x42ee61) & 4)) {
                esi17 = esi15 - 1;
                if (reinterpret_cast<unsigned char>(edi10) <= reinterpret_cast<unsigned char>(esi17)) {
                    do {
                        edx18 = 0;
                        *reinterpret_cast<void***>(&edx18) = *reinterpret_cast<void***>(esi17);
                        if (!(*reinterpret_cast<unsigned char*>(edx18 + 0x42ee61) & 4)) 
                            break;
                        --esi17;
                    } while (reinterpret_cast<unsigned char>(edi10) <= reinterpret_cast<unsigned char>(esi17));
                }
                fun_4171a0(25);
                return reinterpret_cast<unsigned char>(ebx9) - (reinterpret_cast<unsigned char>(ebx9) - reinterpret_cast<unsigned char>(esi17) & 1) - 1;
            } else {
                fun_4171a0(25);
                return esi15 + 0xffffffff;
            }
        } else {
            return ebx9 + 0xffffffff;
        }
    } else {
        return 0;
    }
}

struct s41 {
    signed char[8] pad8;
    int32_t f8;
};

void fun_41ab50(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    uint32_t eax8;
    void** ecx9;
    struct s41* esi10;
    void** edi11;
    void** esi12;
    void** ebx13;

    eax8 = reinterpret_cast<unsigned char>(a1) & 31;
    ecx9 = reinterpret_cast<void**>(reinterpret_cast<signed char>(a1) >> 5);
    esi10 = reinterpret_cast<struct s41*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx9) * 4 + 0x430280)) + (eax8 + eax8 * 8 << 2));
    if (!esi10->f8) {
        fun_417120(ecx9, 17, edi11, esi12, ebx13, __return_address(), a1, a2, a3, a4, a5, a6, a7);
        if (!esi10->f8) {
            InitializeCriticalSection(esi10 + 1);
            esi10->f8 = esi10->f8 + 1;
        }
        fun_4171a0(17);
    }
    EnterCriticalSection();
    goto ebx13;
}

int32_t fun_41aa60(void** a1);

int32_t fun_416410(void** a1) {
    void** edi2;
    void** eax3;
    void** eax4;
    void** eax5;
    void** eax6;
    int32_t eax7;
    void** edi8;
    void** eax9;
    uint32_t esi10;

    eax3 = fun_41ab00(a1, edi2);
    if (eax3 == 0xffffffff || ((a1 == 1 || reinterpret_cast<int1_t>(a1 == 2)) && (eax4 = fun_41ab00(1, edi2), eax5 = fun_41ab00(2, edi2), eax4 == eax5) || (eax6 = fun_41ab00(a1, edi2), eax7 = reinterpret_cast<int32_t>(CloseHandle(eax6)), !!eax7))) {
        edi8 = reinterpret_cast<void**>(0);
    } else {
        eax9 = reinterpret_cast<void**>(GetLastError(eax6));
        edi8 = eax9;
    }
    fun_41aa60(a1);
    esi10 = reinterpret_cast<unsigned char>(a1) & 31;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + (esi10 + esi10 * 8) * 4 + 4) = 0;
    if (!edi8) {
        return 0;
    } else {
        fun_418fa0(edi8);
        return -1;
    }
}

int32_t fun_41abc0(void** a1) {
    uint32_t eax2;
    uint32_t v3;

    eax2 = reinterpret_cast<unsigned char>(a1) & 31;
    v3 = *reinterpret_cast<int32_t*>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280) + (eax2 + eax2 * 8) * 4 + 12;
    LeaveCriticalSection();
    goto v3;
}

void** fun_41ab00(void** a1, void** a2) {
    void** ecx3;
    uint32_t eax4;
    uint32_t edx5;
    void** eax6;
    void*** eax7;

    ecx3 = g430380;
    if (reinterpret_cast<unsigned char>(a1) >= reinterpret_cast<unsigned char>(ecx3) || (eax4 = reinterpret_cast<unsigned char>(a1) & 31, edx5 = eax4 + eax4 * 8, (*reinterpret_cast<unsigned char*>(*reinterpret_cast<void****>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280) + edx5 * 4 + 4) & 1) == 0)) {
        eax6 = fun_419020(__return_address(), a1, a2);
        *reinterpret_cast<void***>(eax6) = reinterpret_cast<void**>(9);
        eax7 = fun_419030(__return_address(), a1);
        *eax7 = reinterpret_cast<void**>(0);
        return 0xffffffff;
    } else {
        return (*reinterpret_cast<void****>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280))[edx5 * 4];
    }
}

void** fun_419020(void** a1, void** a2, void** a3) {
    struct s38* eax4;

    eax4 = fun_419530(__return_address(), a1, a2);
    return &eax4->f8;
}

void*** fun_419030(void** a1, void** a2) {
    struct s38* eax3;

    eax3 = fun_419530(__return_address(), a1, a2);
    return &eax3->f12;
}

void** fun_4190c0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** edi12;
    void** eax13;
    int32_t eax14;
    void** eax15;
    uint32_t esi16;
    uint32_t ecx17;
    void** esi18;
    void** eax19;

    eax13 = fun_41ab00(a1, edi12);
    if (!reinterpret_cast<int1_t>(eax13 == 0xffffffff)) {
        eax14 = reinterpret_cast<int32_t>(SetFilePointer());
        if (eax14 != -1) {
            eax15 = reinterpret_cast<void**>(0);
        } else {
            eax15 = reinterpret_cast<void**>(GetLastError());
        }
        if (!eax15) {
            esi16 = reinterpret_cast<unsigned char>(a1) & 31;
            ecx17 = esi16 + esi16 * 8;
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + ecx17 * 4 + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + ecx17 * 4 + 4) & 0xfd);
            goto 0;
        } else {
            fun_418fa0(eax15);
            goto 0;
        }
    } else {
        eax19 = fun_419020(edi12, esi18, __return_address());
        *reinterpret_cast<void***>(eax19) = reinterpret_cast<void**>(9);
        return 0xffffffff;
    }
}

int32_t SetEndOfFile = 0x32bb4;

uint32_t fun_41d8c0(void** a1, uint32_t a2);

int32_t fun_41ae00(void** ecx, void** a2, void** a3, void** a4) {
    void** v5;
    void** ebx6;
    void** ebx7;
    void** v8;
    void** v9;
    void** ebp10;
    void** v11;
    void** esi12;
    void** v13;
    void** edi14;
    void** eax15;
    void** edi16;
    void** v17;
    int32_t v18;
    void** esi19;
    void** v20;
    uint1_t less21;
    void** eax22;
    int32_t eax23;
    uint32_t ebp24;
    void** eax25;
    void** eax26;
    void*** eax27;
    int32_t v28;
    int32_t ecx29;
    void* esp30;
    uint32_t eax31;
    void* esp32;
    uint32_t edi33;
    void** eax34;
    void*** esp35;
    void** eax36;
    void*** eax37;
    void** eax38;
    int32_t v39;

    fun_4159a0(ecx, __return_address(), a2);
    v5 = ebx6;
    ebx7 = v8;
    v9 = ebp10;
    v11 = esi12;
    v13 = edi14;
    eax15 = fun_4190c0(ebx7, 0, 1, v13, v11, v9, v5, __return_address(), a2, a3, a4);
    edi16 = eax15;
    v17 = edi16;
    if (edi16 == 0xffffffff || (eax15 = fun_4190c0(ebx7, 0, 2, v13, v11, v9, v5, v17, a2, a3, a4), eax15 == 0xffffffff)) {
        goto v18;
    }
    esi19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v20) - reinterpret_cast<unsigned char>(eax15));
    less21 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi19) < reinterpret_cast<signed char>(0));
    if (less21 | reinterpret_cast<uint1_t>(esi19 == 0)) {
        if (less21 && (fun_4190c0(ebx7, v20, 0, v13, v11, v9, v5, v17, a2, a3, a4), eax22 = fun_41ab00(ebx7, v13), eax23 = reinterpret_cast<int32_t>(SetEndOfFile(eax22)), ebp24 = reinterpret_cast<uint32_t>(-eax23), reinterpret_cast<int32_t>(-(ebp24 - (ebp24 + reinterpret_cast<uint1_t>(ebp24 < ebp24 + reinterpret_cast<uint1_t>(!!eax23))))) - 1 == -1)) {
            eax25 = fun_419020(eax22, v13, v11);
            *reinterpret_cast<void***>(eax25) = reinterpret_cast<void**>(13);
            eax26 = reinterpret_cast<void**>(GetLastError(eax22));
            eax27 = fun_419030(eax22, v13);
            *eax27 = eax26;
        }
        fun_4190c0(ebx7, edi16, 0, v13, v11, v9, v5, v17, a2, a3, a4);
        goto v28;
    }
    ecx29 = 0x400;
    esp30 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12 - 4 - 4 - 4 - 4 + 4 + 12 - 4);
    while (ecx29) {
        --ecx29;
        esi19 = esi19 + 4;
    }
    eax31 = fun_41d8c0(ebx7, 0x8000);
    esp32 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp30) - 4 - 4 + 4 + 8);
    edi33 = eax31;
    while (1) {
        eax34 = reinterpret_cast<void**>(0x1000);
        if (reinterpret_cast<signed char>(esi19) < reinterpret_cast<signed char>(0x1000)) {
            eax34 = esi19;
        }
        esp35 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp32) - 4);
        eax36 = fun_418b70(ebx7, esp35 + 24, eax34);
        esp32 = reinterpret_cast<void*>(esp35 - 4 - 4 - 4 + 4 + 12);
        if (eax36 == 0xffffffff) 
            break;
        esi19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi19) - reinterpret_cast<unsigned char>(eax36));
        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi19) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi19 == 0)) 
            goto addr_0x41aeba_15;
    }
    eax37 = fun_419030(v13, v11);
    if (reinterpret_cast<int1_t>(*eax37 == 5)) {
        eax38 = fun_419020(v13, v11, v9);
        *reinterpret_cast<void***>(eax38) = reinterpret_cast<void**>(13);
    }
    addr_0x41aeba_15:
    fun_41d8c0(ebx7, edi33);
    fun_4190c0(ebx7, v17, 0, v13, v11, v9, v5, v17, a2, a3, a4);
    goto v39;
}

int32_t HeapCreate = 0x32a30;

int32_t HeapDestroy = 0x32a22;

int32_t fun_4170b0(void** a1, void** a2, void** a3) {
    void** eax4;
    struct s28* eax5;
    void** eax6;

    eax4 = reinterpret_cast<void**>(HeapCreate());
    g4313ac = eax4;
    if (eax4) {
        eax5 = fun_4172a0();
        if (eax5) {
            goto 0;
        } else {
            eax6 = g4313ac;
            HeapDestroy();
            goto eax6;
        }
    } else {
        goto 0;
    }
}

int32_t g42eccc;

void fun_41b930();

void fun_41b970(uint32_t a1);

int32_t __image_base = 0x415840;

void fun_416a10(uint32_t a1, void** a2, void** a3, void** a4, void** a5) {
    int1_t zf6;

    zf6 = g42eccc == 1;
    if (zf6) {
        fun_41b930();
    }
    fun_41b970(a1);
    __image_base(0xff);
    return;
}

void** g430280;

int32_t GetStartupInfoA = 0x329f6;

int32_t GetStdHandle = 0x32ba4;

struct s42 {
    void** f0;
    signed char[3] pad4;
    unsigned char f4;
};

int32_t GetFileType = 0x329e8;

int32_t SetHandleCount = 0x32b92;

struct s43 {
    int32_t f0;
    void** f4;
};

void fun_41abf0(void** a1, void** a2, void** a3) {
    void** v4;
    void** ebp5;
    void** v6;
    void** esi7;
    void** v8;
    void** edi9;
    void** ebx10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** eax18;
    void** esi19;
    void* esp20;
    void** ecx21;
    void** v22;
    int16_t v23;
    void** v24;
    int32_t ebx25;
    int32_t ebp26;
    void** ecx27;
    void** edi28;
    void** v29;
    int32_t* ebp30;
    void** ecx31;
    void** ecx32;
    int32_t eax33;
    struct s42* esi34;
    unsigned char al35;
    int32_t eax36;
    uint32_t eax37;
    uint32_t eax38;
    void** eax39;
    uint32_t eax40;
    uint32_t eax41;
    int32_t v42;
    void** esi43;
    int32_t v44;
    int32_t eax45;
    uint32_t eax46;
    struct s43* eax47;
    void*** esi48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** eax55;
    void** edx56;
    void** eax57;
    void** edx58;

    v4 = ebp5;
    v6 = esi7;
    v8 = edi9;
    eax18 = fun_414db0(0x480, v8, v6, v4, ebx10, v11, v12, v13, v14, v15, v16, v17);
    esi19 = eax18;
    esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 72 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 4);
    if (!esi19) {
        fun_416a10(27, v8, v6, v4, ebx10);
        esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 + 4 + 4);
    }
    g430280 = esi19;
    g430380 = reinterpret_cast<void**>(32);
    if (reinterpret_cast<unsigned char>(esi19) < reinterpret_cast<unsigned char>(esi19 + 0x480)) {
        do {
            *reinterpret_cast<void***>(esi19 + 4) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi19) = reinterpret_cast<void**>(0xffffffff);
            *reinterpret_cast<signed char*>(esi19 + 5) = 10;
            *reinterpret_cast<void***>(esi19 + 8) = reinterpret_cast<void**>(0);
            ecx21 = g430280;
            esi19 = esi19 + 36;
        } while (reinterpret_cast<unsigned char>(esi19) < reinterpret_cast<unsigned char>(ecx21 + 0x480));
    }
    v22 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp20) + 20);
    GetStartupInfoA();
    if (!v23 || !v24) {
        addr_0x41ad68_6:
        ebx25 = GetStdHandle;
        ebp26 = 0;
    } else {
        ecx27 = *reinterpret_cast<void***>(v24);
        edi28 = v24 + 4;
        v29 = ecx27;
        ebp30 = reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(edi28) + reinterpret_cast<unsigned char>(ecx27));
        if (reinterpret_cast<signed char>(ecx27) >= reinterpret_cast<signed char>(0x800)) {
            v29 = reinterpret_cast<void**>(0x800);
        }
        ecx31 = g430380;
        if (reinterpret_cast<signed char>(ecx31) >= reinterpret_cast<signed char>(v29)) 
            goto addr_0x41ad11_10; else 
            goto addr_0x41aca1_11;
    }
    while (1) {
        ecx32 = g430280;
        eax33 = ebp26 + ebp26 * 8;
        esi34 = reinterpret_cast<struct s42*>(ecx32 + eax33 * 4);
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx32 + eax33 * 4) == 0xffffffff)) {
            al35 = reinterpret_cast<unsigned char>(esi34->f4 | 0x80);
        } else {
            esi34->f4 = 0x81;
            if (ebp26) {
                eax36 = ebp26 - 1;
                eax37 = reinterpret_cast<uint32_t>(-eax36);
                eax38 = eax37 - (eax37 + reinterpret_cast<uint1_t>(eax37 < eax37 + reinterpret_cast<uint1_t>(!!eax36))) - 11;
            } else {
                eax38 = 0xfffffff6;
            }
            eax39 = reinterpret_cast<void**>(ebx25(eax38));
            if (eax39 == 0xffffffff) 
                goto addr_0x41add2_18;
            eax40 = reinterpret_cast<uint32_t>(GetFileType(eax39, eax38));
            if (!eax40) 
                goto addr_0x41add2_18; else 
                goto addr_0x41adb3_20;
        }
        addr_0x41adde_21:
        esi34->f4 = al35;
        goto addr_0x41ade1_22;
        addr_0x41add2_18:
        al35 = reinterpret_cast<unsigned char>(esi34->f4 | 64);
        goto addr_0x41adde_21;
        addr_0x41adb3_20:
        eax41 = eax40 & 0xff;
        esi34->f0 = eax39;
        if (eax41 != 2) {
            if (eax41 != 3) {
                addr_0x41ade1_22:
                ++ebp26;
                if (ebp26 >= 3) 
                    break;
            } else {
                al35 = reinterpret_cast<unsigned char>(esi34->f4 | 8);
                goto addr_0x41adde_21;
            }
        } else {
            al35 = reinterpret_cast<unsigned char>(esi34->f4 | 64);
            goto addr_0x41adde_21;
        }
    }
    SetHandleCount();
    goto v42;
    addr_0x41ad11_10:
    addr_0x41ad13_27:
    esi43 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<signed char>(v29) > reinterpret_cast<signed char>(0)) {
        do {
            if (*ebp30 != -1 && (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi28)) & 1 && (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi28)) & 8 || (v44 = *ebp30, eax45 = reinterpret_cast<int32_t>(GetFileType(v44)), !!eax45)))) {
                eax46 = reinterpret_cast<unsigned char>(esi43) & 31;
                eax47 = reinterpret_cast<struct s43*>(*reinterpret_cast<int32_t**>((reinterpret_cast<signed char>(esi43) >> 5) * 4 + 0x430280) + (eax46 + eax46 * 8));
                eax47->f0 = *ebp30;
                eax47->f4 = *reinterpret_cast<void***>(edi28);
            }
            ++esi43;
            ++edi28;
            ++ebp30;
        } while (reinterpret_cast<signed char>(esi43) < reinterpret_cast<signed char>(v29));
        goto addr_0x41ad68_6;
    }
    addr_0x41aca1_11:
    esi48 = reinterpret_cast<void***>(0x430284);
    do {
        eax55 = fun_414db0(0x480, v22, v8, v6, v4, v29, v49, v50, v51, v52, v53, v54);
        if (!eax55) 
            break;
        edx56 = g430380;
        *esi48 = eax55;
        g430380 = edx56 + 32;
        if (reinterpret_cast<unsigned char>(eax55) < reinterpret_cast<unsigned char>(eax55 + 0x480)) {
            do {
                *reinterpret_cast<void***>(eax55 + 4) = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(eax55) = reinterpret_cast<void**>(0xffffffff);
                *reinterpret_cast<signed char*>(eax55 + 5) = 10;
                *reinterpret_cast<void***>(eax55 + 8) = reinterpret_cast<void**>(0);
                eax55 = eax55 + 36;
            } while (reinterpret_cast<unsigned char>(eax55) < reinterpret_cast<unsigned char>(*esi48 + 0x480));
        }
        eax57 = g430380;
        esi48 = esi48 + 4;
    } while (reinterpret_cast<signed char>(eax57) < reinterpret_cast<signed char>(v29));
    goto addr_0x41ad03_35;
    edx58 = g430380;
    v29 = edx58;
    goto addr_0x41ad13_27;
    addr_0x41ad03_35:
    goto addr_0x41ad13_27;
}

int32_t fun_41a3f0(void** ecx, void** a2);

int32_t fun_41a6f0(void** ecx, void** a2, void** a3, void** a4) {
    int32_t eax5;

    eax5 = fun_41a3f0(ecx, 0xfd);
    return eax5;
}

int32_t g42f090;

int32_t GetEnvironmentStrings = 0x32c14;

struct s44 {
    void** f0;
    signed char f1;
};

int32_t GetEnvironmentStringsW = 0x32c2c;

int32_t FreeEnvironmentStringsA = 0x32be0;

int32_t WideCharToMultiByte = 0x32ab8;

int32_t FreeEnvironmentStringsW = 0x32bfa;

void** fun_41b7d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    int32_t eax9;
    void** v10;
    void** ebx11;
    void** v12;
    void** ebp13;
    int32_t ebp14;
    void** v15;
    void** esi16;
    void** esi17;
    struct s44* ebx18;
    void** v19;
    void** edi20;
    int32_t edi21;
    void** eax22;
    struct s44* eax23;
    struct s44* eax24;
    struct s44* eax25;
    void** eax26;
    struct s44* esi27;
    void** eax28;
    void** edi29;
    uint32_t ecx30;
    uint32_t ecx31;
    void** eax32;
    void** eax33;
    void** eax34;
    void** eax35;
    int32_t eax36;

    v8 = reinterpret_cast<void**>(__return_address());
    eax9 = g42f090;
    v10 = ebx11;
    v12 = ebp13;
    ebp14 = GetEnvironmentStrings;
    v15 = esi16;
    esi17 = reinterpret_cast<void**>(0);
    ebx18 = reinterpret_cast<struct s44*>(0);
    v19 = edi20;
    edi21 = GetEnvironmentStringsW;
    if (!eax9) {
        eax22 = reinterpret_cast<void**>(edi21());
        esi17 = eax22;
        if (!esi17) {
            eax23 = reinterpret_cast<struct s44*>(ebp14());
            ebx18 = eax23;
            if (!ebx18) {
                return 0;
            } else {
                eax9 = 2;
            }
        } else {
            eax9 = 1;
        }
        g42f090 = eax9;
    }
    if (eax9 != 1) {
        if (eax9 == 2 && (ebx18 || (eax24 = reinterpret_cast<struct s44*>(ebp14()), ebx18 = eax24, !!ebx18))) {
            eax25 = ebx18;
            if (ebx18->f0) {
                addr_0x41b8cb_11:
                eax25 = reinterpret_cast<struct s44*>(&eax25->f1);
                if (eax25->f1) 
                    goto addr_0x41b8cb_11;
                eax25 = reinterpret_cast<struct s44*>(&eax25->f1);
                if (eax25->f1) 
                    goto addr_0x41b8cb_11;
            }
            eax26 = fun_414db0(reinterpret_cast<uint32_t>(eax25) - reinterpret_cast<uint32_t>(ebx18) + 1, v19, v15, v12, v10, v8, a2, a3, a4, a5, a6, a7);
            if (eax26) {
                esi27 = ebx18;
                eax28 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax25) - reinterpret_cast<uint32_t>(ebx18) + 1);
                edi29 = eax26;
                ecx30 = reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax25) - reinterpret_cast<uint32_t>(ebx18) + 1) >> 2;
                while (ecx30) {
                    --ecx30;
                    *reinterpret_cast<void***>(edi29) = esi27->f0;
                    edi29 = edi29 + 4;
                    esi27 = esi27 + 2;
                }
                ecx31 = reinterpret_cast<unsigned char>(eax28) & 3;
                while (ecx31) {
                    --ecx31;
                    *reinterpret_cast<void***>(edi29) = esi27->f0;
                    ++edi29;
                    esi27 = reinterpret_cast<struct s44*>(&esi27->f1);
                }
                FreeEnvironmentStringsA();
                goto v10;
            } else {
                FreeEnvironmentStringsA();
                goto v10;
            }
        }
    } else {
        if (esi17 || (eax32 = reinterpret_cast<void**>(edi21()), esi17 = eax32, !!esi17)) {
            eax33 = esi17;
            if (*reinterpret_cast<void***>(esi17)) {
                addr_0x41b833_24:
                eax33 = eax33 + 2;
                if (*reinterpret_cast<void***>(eax33)) 
                    goto addr_0x41b833_24;
                eax33 = eax33 + 2;
                if (*reinterpret_cast<void***>(eax33)) 
                    goto addr_0x41b833_24;
            }
            eax34 = reinterpret_cast<void**>(WideCharToMultiByte());
            if (!eax34 || (eax35 = fun_414db0(eax34, 0, 0, esi17, (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax33) - reinterpret_cast<unsigned char>(esi17)) >> 1) + 1, 0, 0, 0, 0, v19, v15, v12), eax35 == 0)) {
                FreeEnvironmentStringsW();
                goto (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax33) - reinterpret_cast<unsigned char>(esi17)) >> 1) + 1;
            } else {
                eax36 = reinterpret_cast<int32_t>(WideCharToMultiByte());
                if (!eax36) {
                    fun_414d40(ecx, eax35, 0, 0, esi17, (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax33) - reinterpret_cast<unsigned char>(esi17)) >> 1) + 1, eax35, eax34, 0, 0, 0, 0, esi17, (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax33) - reinterpret_cast<unsigned char>(esi17)) >> 1) + 1, 0, 0, 0, 0);
                }
                FreeEnvironmentStringsW();
                goto (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax33) - reinterpret_cast<unsigned char>(esi17)) >> 1) + 1;
            }
        }
    }
}

void** fun_41b3f0(uint32_t a1, uint32_t a2, unsigned char a3);

void** fun_41b3d0(uint32_t a1, void** a2, void** a3, void** a4) {
    void** eax5;

    eax5 = fun_41b3f0(a1, 0, 4);
    return eax5;
}

int32_t g42ade4 = 2;

int32_t g42f094;

void fun_41b930() {
    int32_t eax1;
    int1_t zf2;
    int32_t eax3;

    eax1 = g42eccc;
    if (eax1 == 1 || !eax1 && (zf2 = g42ade4 == 1, zf2)) {
        fun_41b970(0xfc);
        eax3 = g42f094;
        if (eax3) {
            eax3();
        }
        fun_41b970(0xff);
    }
    return;
}

int32_t WriteFile = 0x32754;

void fun_41d930(void* a1, int32_t a2, int32_t a3);

void fun_41b970(uint32_t a1) {
    uint32_t ecx2;
    uint32_t* eax3;
    void* esp4;
    int32_t ebp5;
    int32_t eax6;
    int1_t zf7;
    void** eax8;
    void** esi9;
    int32_t v10;
    void** eax11;
    signed char* edx12;
    void* v13;
    signed char* edi14;
    uint32_t ecx15;
    int32_t eax16;
    void* esp17;
    uint32_t ecx18;
    void** ebx19;
    signed char v20;
    uint32_t ecx21;
    signed char v22;
    void* esp23;
    uint32_t ecx24;
    uint32_t ecx25;
    void** edi26;
    uint32_t ebx27;
    uint32_t ecx28;
    void** v29;
    uint32_t ecx30;
    uint32_t ecx31;
    void* esp32;
    void*** edi33;
    uint32_t ecx34;
    void* esp35;
    uint32_t ebx36;
    uint32_t ecx37;
    void** v38;
    uint32_t ecx39;
    uint32_t ecx40;
    void*** edi41;
    uint32_t ecx42;
    uint32_t ebx43;
    uint32_t ecx44;
    void** v45;
    uint32_t ecx46;
    uint32_t ecx47;
    void* v48;
    int32_t v49;

    ecx2 = a1;
    eax3 = reinterpret_cast<uint32_t*>(0x42d6a8);
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x1a8 - 4 - 4 - 4 - 4);
    ebp5 = 0;
    do {
        if (ecx2 == *eax3) 
            break;
        eax3 = eax3 + 2;
        ++ebp5;
    } while (reinterpret_cast<uint32_t>(eax3) < 0x42d738);
    if (ecx2 == *reinterpret_cast<uint32_t*>(ebp5 * 8 + 0x42d6a8)) {
        eax6 = g42eccc;
        if (eax6 == 1 || !eax6 && (zf7 = g42ade4 == 1, zf7)) {
            eax8 = g430280;
            if (!eax8 || (esi9 = *reinterpret_cast<void***>(eax8 + 72), reinterpret_cast<int1_t>(esi9 == 0xffffffff))) {
                v10 = 0xf4;
                eax11 = reinterpret_cast<void**>(GetStdHandle(0xf4));
                esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 + 4);
                esi9 = eax11;
            }
            edx12 = *reinterpret_cast<signed char**>(ebp5 * 8 + 0x42d6ac);
            v10 = 0;
            v13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) + 16);
            edi14 = edx12;
            ecx15 = 0xffffffff;
            do {
                if (!ecx15) 
                    break;
                --ecx15;
                ++edi14;
                ++esi9;
            } while (*edi14);
            WriteFile(esi9, edx12, reinterpret_cast<int32_t>(~ecx15) - 1, v13, v10);
        } else {
            if (ecx2 != 0xfc) {
                eax16 = reinterpret_cast<int32_t>(GetModuleFileNameA());
                esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4 + 4);
                if (!eax16) {
                    ecx2 = 5;
                    while (ecx2) {
                        --ecx2;
                    }
                }
                ecx18 = 0xffffffff;
                ebx19 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp17) + 0xb4);
                do {
                    if (!ecx18) 
                        break;
                    --ecx18;
                } while (v20);
                if (~ecx18 > 60) {
                    ecx21 = 0xffffffff;
                    do {
                        if (!ecx21) 
                            break;
                        --ecx21;
                    } while (v22);
                    esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4);
                    ebx19 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(~ecx21) - 1 + (reinterpret_cast<int32_t>(esp23) + 0xb8 - 59));
                    fun_414c40(ebx19, 0x428410, 3);
                    esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4 - 4 + 4 + 12);
                }
                ecx24 = 6;
                while (ecx24) {
                    --ecx24;
                }
                ecx25 = 0xffffffff;
                edi26 = ebx19;
                do {
                    if (!ecx25) 
                        break;
                    --ecx25;
                    ++edi26;
                } while (*reinterpret_cast<void***>(edi26));
                ebx27 = ~ecx25;
                ecx28 = 0xffffffff;
                do {
                    if (!ecx28) 
                        break;
                    --ecx28;
                } while (v29);
                ecx30 = ebx27 >> 2;
                while (ecx30) {
                    --ecx30;
                }
                ecx31 = ebx27 & 3;
                esp32 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4);
                while (ecx31) {
                    --ecx31;
                }
                edi33 = reinterpret_cast<void***>(0x4283f0);
                ecx34 = 0xffffffff;
                do {
                    if (!ecx34) 
                        break;
                    --ecx34;
                    ++edi33;
                } while (*edi33);
                esp35 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp32) - 4);
                ebx36 = ~ecx34;
                ecx37 = 0xffffffff;
                do {
                    if (!ecx37) 
                        break;
                    --ecx37;
                } while (v38);
                ecx39 = ebx36 >> 2;
                while (ecx39) {
                    --ecx39;
                }
                ecx40 = ebx36 & 3;
                while (ecx40) {
                    --ecx40;
                }
                edi41 = *reinterpret_cast<void****>(ebp5 * 8 + 0x42d6ac);
                ecx42 = 0xffffffff;
                do {
                    if (!ecx42) 
                        break;
                    --ecx42;
                    ++edi41;
                } while (*edi41);
                ebx43 = ~ecx42;
                ecx44 = 0xffffffff;
                do {
                    if (!ecx44) 
                        break;
                    --ecx44;
                } while (v45);
                ecx46 = ebx43 >> 2;
                while (ecx46) {
                    --ecx46;
                }
                ecx47 = ebx43 & 3;
                v48 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp35) + 28);
                while (ecx47) {
                    --ecx47;
                }
                fun_41d930(v48, "Microsoft Visual C++ Runtime Library", 0x12010);
                goto v49;
            }
        }
    }
    return;
}

struct s45 {
    signed char[4] pad4;
    int32_t f4;
    int32_t* f8;
    int32_t f12;
};

struct s47 {
    signed char[12] pad12;
    int32_t f12;
};

struct s46 {
    struct s46* f0;
    int32_t f4;
    int32_t f8;
    struct s47* f12;
};

struct s46* g0;

void fun_416fae(int32_t ecx, int32_t a2);

void fun_416f1a(struct s45* a1, int32_t a2) {
    struct s46* v3;
    int32_t* ebx4;
    int32_t esi5;
    int32_t ecx6;

    v3 = g0;
    g0 = reinterpret_cast<struct s46*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4);
    while ((ebx4 = a1->f8, a1->f12 != -1) && a1->f12 != a2) {
        esi5 = a1->f12 + a1->f12 * 2;
        ecx6 = ebx4[esi5];
        a1->f12 = ecx6;
        if (!(ebx4 + esi5)[1]) {
            fun_416fae(ecx6, 0x101);
            (ebx4 + esi5)[2]();
        }
    }
    g0 = v3;
    return;
}

int32_t g42adf8 = 0;

struct s48 {
    signed char[8] pad8;
    int32_t f8;
};

int32_t g42adf4 = 0;

int32_t g42adfc = 0;

void fun_416fae(int32_t ecx, int32_t a2) {
    struct s48* ebp3;
    int32_t eax4;
    int32_t ebp5;

    g42adf8 = ebp3->f8;
    g42adf4 = eax4;
    g42adfc = ebp5;
    return;
}

void fun_41e820();

void fun_416ed8(struct s45* a1) {
    fun_41e820();
    goto a1->f4;
}

int32_t VirtualFree = 0x32442;

int32_t g42aed8 = -1;

void fun_417410(struct s28* a1) {
    int1_t zf2;
    struct s28* edx3;
    struct s28* eax4;

    VirtualFree();
    zf2 = __image_base == a1;
    if (zf2) {
        __image_base = a1->f4;
    }
    if (a1 == 0x42aec8) {
        g42aed8 = -1;
        goto 0;
    } else {
        edx3 = a1->f4;
        eax4 = a1->f0;
        edx3->f0 = eax4;
        a1->f0->f4 = a1->f4;
        HeapFree();
        goto 0;
    }
}

struct s28* __image_base = reinterpret_cast<struct s28*>(0x42aec8);

void fun_417470(int32_t a1) {
    int32_t v2;
    int32_t ebp3;
    struct s28* edi4;
    int1_t zf5;
    int32_t ebp6;
    struct s30* esi7;
    uint32_t ebx8;
    struct s31* eax9;
    int32_t eax10;
    int32_t edx11;
    int32_t eax12;
    struct s28* edx13;
    int32_t eax14;
    int32_t* ecx15;

    v2 = ebp3;
    edi4 = __image_base;
    while (1) {
        if (edi4->f16 == 0xffffffff) {
            addr_0x417524_3:
            zf5 = edi4 == __image_base;
            if (zf5) 
                break;
            if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(a1 < 0) | reinterpret_cast<uint1_t>(a1 == 0))) 
                continue; else 
                break;
        } else {
            ebp6 = 0;
            esi7 = reinterpret_cast<struct s30*>(&edi4->f8208);
            ebx8 = 0x3ff000;
            do {
                if (reinterpret_cast<int1_t>(esi7->f0 == 0xf0) && (eax9 = edi4->f16, eax10 = reinterpret_cast<int32_t>(VirtualFree(reinterpret_cast<uint32_t>(eax9) + ebx8, 0x1000, 0x4000)), !!eax10)) {
                    esi7->f0 = reinterpret_cast<struct s31*>(0xffffffff);
                    edx11 = g42ed30;
                    g42ed30 = edx11 - 1;
                    if (!edi4->f12 || reinterpret_cast<uint32_t>(edi4->f12) > reinterpret_cast<uint32_t>(esi7)) {
                        edi4->f12 = esi7;
                    }
                    ++ebp6;
                    eax12 = v2 - 1;
                    v2 = eax12;
                    if (!eax12) 
                        break;
                }
                ebx8 = ebx8 - 0x1000;
                esi7 = reinterpret_cast<struct s30*>(reinterpret_cast<uint32_t>(esi7) - 8);
            } while (reinterpret_cast<int32_t>(ebx8) >= reinterpret_cast<int32_t>(0));
            edx13 = edi4;
            edi4 = edi4->f4;
            if (!ebp6) 
                goto addr_0x417524_3;
            if (!reinterpret_cast<int1_t>(edx13->f24 == 0xffffffff)) 
                goto addr_0x417524_3;
        }
        eax14 = 1;
        ecx15 = &edx13->f32;
        do {
            if (*ecx15 != -1) 
                break;
            ++eax14;
            ecx15 = ecx15 + 2;
        } while (eax14 < 0x400);
        if (eax14 != 0x400) 
            goto addr_0x417524_3;
        fun_417410(edx13);
        goto addr_0x417524_3;
    }
    return;
}

void** fun_417840(struct s31* a1, void** a2, void** a3) {
    void** edx4;
    struct s31* edi5;
    void** eax6;
    struct s32* ecx7;
    struct s32* v8;
    struct s32* esi9;
    struct s32* ebx10;
    void** eax11;
    struct s32** eax12;
    struct s32* eax13;
    struct s32* eax14;
    void** ebx15;
    struct s32* ebp16;
    struct s32* eax17;
    struct s32* eax18;
    void** ecx19;
    struct s32* eax20;
    struct s32** eax21;
    struct s32* eax22;
    void** ecx23;
    struct s32* eax24;

    edx4 = a3;
    edi5 = a1;
    eax6 = edi5->f4;
    ecx7 = edi5->f0;
    v8 = ecx7;
    esi9 = ecx7;
    ebx10 = reinterpret_cast<struct s32*>(&edi5->f248);
    if (reinterpret_cast<unsigned char>(eax6) >= reinterpret_cast<unsigned char>(edx4)) {
        ecx7->f0 = *reinterpret_cast<signed char*>(&edx4);
        if (reinterpret_cast<uint32_t>(ecx7) + reinterpret_cast<unsigned char>(edx4) >= reinterpret_cast<uint32_t>(ebx10)) {
            edi5->f4 = reinterpret_cast<void**>(0);
            edi5->f0 = reinterpret_cast<struct s32*>(&edi5->f8);
        } else {
            eax11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi5->f4) - reinterpret_cast<unsigned char>(edx4));
            edi5->f0 = reinterpret_cast<struct s32*>(reinterpret_cast<uint32_t>(edi5->f0) + reinterpret_cast<unsigned char>(edx4));
            edi5->f4 = eax11;
        }
        eax12 = reinterpret_cast<struct s32**>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(edi5) * 2);
        return (reinterpret_cast<uint32_t>(ecx7 + 4) << 4) - reinterpret_cast<uint32_t>(eax12 + static_cast<uint32_t>(eax12));
    }
    eax13 = reinterpret_cast<struct s32*>(reinterpret_cast<unsigned char>(eax6) + reinterpret_cast<uint32_t>(ecx7));
    if (eax13->f0) {
        esi9 = eax13;
    }
    eax14 = reinterpret_cast<struct s32*>(reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<unsigned char>(edx4));
    ebx15 = a2;
    if (reinterpret_cast<uint32_t>(eax14) < reinterpret_cast<uint32_t>(ebx10)) 
        goto addr_0x4178af_9;
    addr_0x417924_10:
    ebp16 = reinterpret_cast<struct s32*>(&edi5->f8);
    esi9 = ebp16;
    if (reinterpret_cast<uint32_t>(esi9) >= reinterpret_cast<uint32_t>(ecx7)) {
        addr_0x4179ab_11:
        return 0;
    } else {
        do {
            eax17 = reinterpret_cast<struct s32*>(&edi5->f248);
            if (reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<unsigned char>(edx4) >= reinterpret_cast<uint32_t>(eax17)) 
                goto addr_0x4179ab_11;
            *reinterpret_cast<signed char*>(&eax17) = esi9->f0;
            if (*reinterpret_cast<signed char*>(&eax17)) {
                esi9 = reinterpret_cast<struct s32*>(reinterpret_cast<uint32_t>(esi9) + (reinterpret_cast<uint32_t>(eax17) & 0xff));
            } else {
                eax18 = reinterpret_cast<struct s32*>(&esi9->f1);
                ecx19 = reinterpret_cast<void**>(1);
                if (!esi9->f1) {
                    do {
                        eax18 = reinterpret_cast<struct s32*>(&eax18->f1);
                        ++ecx19;
                    } while (!eax18->f0);
                }
                if (reinterpret_cast<unsigned char>(ecx19) >= reinterpret_cast<unsigned char>(edx4)) 
                    goto addr_0x417977_18;
                ebx15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx15) - reinterpret_cast<unsigned char>(ecx19));
                if (reinterpret_cast<unsigned char>(ebx15) < reinterpret_cast<unsigned char>(edx4)) 
                    goto addr_0x4179ab_11;
                esi9 = eax18;
            }
        } while (reinterpret_cast<uint32_t>(esi9) < reinterpret_cast<uint32_t>(v8));
    }
    return 0;
    addr_0x417977_18:
    eax20 = reinterpret_cast<struct s32*>(reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<unsigned char>(edx4));
    if (reinterpret_cast<uint32_t>(eax20) >= reinterpret_cast<uint32_t>(&edi5->f248)) {
        edi5->f0 = ebp16;
    } else {
        edi5->f0 = eax20;
        edi5->f4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx19) - reinterpret_cast<unsigned char>(edx4));
        goto addr_0x417996_25;
    }
    addr_0x41798f_26:
    edi5->f4 = reinterpret_cast<void**>(0);
    addr_0x417996_25:
    eax21 = reinterpret_cast<struct s32**>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(edi5) * 2);
    esi9->f0 = *reinterpret_cast<signed char*>(&edx4);
    return (reinterpret_cast<uint32_t>(esi9 + 4) << 4) - reinterpret_cast<uint32_t>(eax21 + static_cast<uint32_t>(eax21));
    do {
        addr_0x4178af_9:
        *reinterpret_cast<signed char*>(&eax14) = esi9->f0;
        if (*reinterpret_cast<signed char*>(&eax14)) {
            esi9 = reinterpret_cast<struct s32*>(reinterpret_cast<uint32_t>(esi9) + (reinterpret_cast<uint32_t>(eax14) & 0xff));
        } else {
            eax22 = reinterpret_cast<struct s32*>(&esi9->f1);
            ecx23 = reinterpret_cast<void**>(1);
            if (!esi9->f1) {
                do {
                    eax22 = reinterpret_cast<struct s32*>(&eax22->f1);
                    ++ecx23;
                } while (!eax22->f0);
            }
            if (reinterpret_cast<unsigned char>(ecx23) >= reinterpret_cast<unsigned char>(edx4)) 
                goto addr_0x417907_31;
            if (esi9 != v8) {
                ebx15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx15) - reinterpret_cast<unsigned char>(ecx23));
                if (reinterpret_cast<unsigned char>(ebx15) < reinterpret_cast<unsigned char>(edx4)) 
                    goto addr_0x4179ab_11;
                ecx7 = v8;
                esi9 = eax22;
            } else {
                edi5->f4 = ecx23;
                esi9 = eax22;
                ecx7 = v8;
            }
        }
        eax14 = reinterpret_cast<struct s32*>(&edi5->f248);
    } while (reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<unsigned char>(edx4) < reinterpret_cast<uint32_t>(eax14));
    goto addr_0x417924_10;
    addr_0x417907_31:
    eax24 = reinterpret_cast<struct s32*>(reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<unsigned char>(edx4));
    if (reinterpret_cast<uint32_t>(eax24) >= reinterpret_cast<uint32_t>(&edi5->f248)) {
        edi5->f0 = reinterpret_cast<struct s32*>(&edi5->f8);
        goto addr_0x41798f_26;
    } else {
        edi5->f0 = eax24;
        edi5->f4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx23) - reinterpret_cast<unsigned char>(edx4));
        goto addr_0x417996_25;
    }
}

void** fun_417d20(void** a1, void** a2) {
    void** edx3;
    void** esi4;
    void** eax5;
    void** ecx6;
    void** edi7;

    edx3 = a2;
    esi4 = a1;
    eax5 = esi4;
    ecx6 = edx3 + 0xffffffff;
    if (edx3) {
        do {
            if (!*reinterpret_cast<void***>(eax5)) 
                break;
            ++eax5;
            edi7 = ecx6;
            --ecx6;
        } while (edi7);
    }
    if (*reinterpret_cast<void***>(eax5)) {
        return edx3;
    } else {
        return reinterpret_cast<unsigned char>(eax5) - reinterpret_cast<unsigned char>(esi4);
    }
}

uint32_t fun_41cb50(void** a1) {
    void** ecx2;
    uint32_t eax3;
    void* eax4;

    ecx2 = g430380;
    if (reinterpret_cast<unsigned char>(a1) < reinterpret_cast<unsigned char>(ecx2)) {
        eax3 = reinterpret_cast<unsigned char>(a1) & 31;
        eax4 = *reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280);
        *reinterpret_cast<signed char*>(&eax4) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax4) + (eax3 + eax3 * 8) * 4 + 4);
        return reinterpret_cast<uint32_t>(eax4) & 64;
    } else {
        return 0;
    }
}

int32_t g42ed6c;

void fun_41caf0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    int32_t eax11;
    void** eax12;
    void** eax13;
    void** eax14;
    void** edx15;

    eax11 = g42ed6c;
    g42ed6c = eax11 + 1;
    eax12 = fun_414db0(0x1000, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    *reinterpret_cast<void***>(a1 + 8) = eax12;
    eax13 = *reinterpret_cast<void***>(a1 + 12);
    if (!eax12) {
        *reinterpret_cast<unsigned char*>(&eax13) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax13) | 4);
        *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(2);
        *reinterpret_cast<void***>(a1 + 12) = eax13;
        eax14 = a1 + 20;
        *reinterpret_cast<void***>(a1 + 8) = eax14;
        *reinterpret_cast<void***>(a1) = eax14;
        *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0);
        return;
    } else {
        edx15 = *reinterpret_cast<void***>(a1 + 8);
        *reinterpret_cast<unsigned char*>(&eax13) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax13) | 8);
        *reinterpret_cast<void***>(a1 + 12) = eax13;
        *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(0x1000);
        *reinterpret_cast<void***>(a1) = edx15;
        *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0);
        return;
    }
}

void** fun_419040(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** eax6;
    uint32_t eax7;
    void** edi8;
    void** esi9;
    void** eax10;
    void*** eax11;
    void** eax12;

    eax6 = g430380;
    if (reinterpret_cast<unsigned char>(a1) >= reinterpret_cast<unsigned char>(eax6) || (eax7 = reinterpret_cast<unsigned char>(a1) & 31, (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + (eax7 + eax7 * 8) * 4 + 4) & 1) == 0)) {
        eax10 = fun_419020(edi8, esi9, __return_address());
        *reinterpret_cast<void***>(eax10) = reinterpret_cast<void**>(9);
        eax11 = fun_419030(edi8, esi9);
        *eax11 = reinterpret_cast<void**>(0);
        return 0xffffffff;
    } else {
        fun_41ab50(a1, edi8, esi9, __return_address(), a1, a2, a3);
        eax12 = fun_4190c0(a1, a2, a3, edi8, esi9, __return_address(), a1, a2, a3, a4, a5);
        fun_41abc0(a1);
        return eax12;
    }
}

void** fun_4188e0(void** a1) {
    void** ecx2;

    ecx2 = *reinterpret_cast<void***>(a1) + 4;
    *reinterpret_cast<void***>(a1) = ecx2;
    return *reinterpret_cast<void***>(ecx2 + 0xfffffffc);
}

void fun_418810(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;
    void** eax6;
    void** eax7;

    eax5 = *reinterpret_cast<void***>(a2 + 4) - 1;
    *reinterpret_cast<void***>(a2 + 4) = eax5;
    if (reinterpret_cast<signed char>(eax5) < reinterpret_cast<signed char>(0)) {
        eax6 = fun_417d50(a1, a2, __return_address(), a1, a2, a3, a4);
    } else {
        eax7 = a1;
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2)) = eax7;
        eax6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax7) & 0xff);
        *reinterpret_cast<void***>(a2) = *reinterpret_cast<void***>(a2) + 1;
    }
    if (!reinterpret_cast<int1_t>(eax6 == 0xffffffff)) {
        *reinterpret_cast<void***>(a3) = *reinterpret_cast<void***>(a3) + 1;
        return;
    } else {
        *reinterpret_cast<void***>(a3) = eax6;
        return;
    }
}

void** fun_418920(void*** a1) {
    void** ecx2;
    void** eax3;

    ecx2 = *a1 + 4;
    *a1 = ecx2;
    eax3 = ecx2;
    eax3 = *reinterpret_cast<void***>(eax3 + 0xfffffffc);
    return eax3;
}

void** fun_41cbf0(void** a1, void** a2);

void** fun_41cb80(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    int32_t eax7;
    int32_t edi8;
    int32_t esi9;
    void** edi10;
    void** esi11;
    void** ebx12;

    InterlockedIncrement();
    eax7 = g4313a4;
    edi8 = InterlockedDecrement;
    if (!eax7) {
        esi9 = 0;
    } else {
        edi8(0x4313a8);
        fun_417120(ecx, 19, 0x4313a8, 0x4313a8, edi10, esi11, ebx12, __return_address(), a2, a3, a4, a5, a6);
        esi9 = 1;
    }
    fun_41cbf0(__return_address(), a2);
    if (!esi9) {
        edi8();
        goto esi11;
    } else {
        fun_4171a0(19);
        goto ebx12;
    }
}

void** fun_418900(void** a1) {
    void** ecx2;

    ecx2 = *reinterpret_cast<void***>(a1) + 8;
    *reinterpret_cast<void***>(a1) = ecx2;
    return *reinterpret_cast<void***>(ecx2 + 0xfffffff8);
}

int16_t fun_41cce0(void** a1, void** a2, void** a3, void** a4) {
    void** ecx5;
    void** ebx6;
    void** eax7;
    uint32_t eax8;
    void** eax9;
    void** edx10;
    uint32_t eax11;

    if (a4) {
        ecx5 = a4;
        ebx6 = a3;
        eax7 = a1;
        do {
            __asm__("rcr ebx, 1");
            __asm__("rcr eax, 1");
            ecx5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx5) >> 1);
        } while (ecx5);
        eax8 = reinterpret_cast<unsigned char>(eax7) / reinterpret_cast<unsigned char>(ebx6);
        eax9 = reinterpret_cast<void**>(eax8 * reinterpret_cast<unsigned char>(a3));
        edx10 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + eax8 * reinterpret_cast<unsigned char>(a4));
        if (__intrinsic()) 
            goto addr_0x41cd3a_5;
        if (reinterpret_cast<unsigned char>(edx10) > reinterpret_cast<unsigned char>(a2)) 
            goto addr_0x41cd3a_5;
        if (reinterpret_cast<unsigned char>(edx10) < reinterpret_cast<unsigned char>(a2)) 
            goto addr_0x41cd42_8;
        if (reinterpret_cast<unsigned char>(eax9) <= reinterpret_cast<unsigned char>(a1)) 
            goto addr_0x41cd42_8;
    } else {
        eax11 = reinterpret_cast<unsigned char>(a1) % reinterpret_cast<unsigned char>(a3);
        goto addr_0x41cd51_11;
    }
    addr_0x41cd3a_5:
    eax9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax9) - reinterpret_cast<unsigned char>(a3));
    addr_0x41cd42_8:
    eax11 = -(reinterpret_cast<unsigned char>(eax9) - reinterpret_cast<unsigned char>(a1));
    addr_0x41cd51_11:
    return *reinterpret_cast<int16_t*>(&eax11);
}

int16_t fun_41cc70(void** a1, void** a2, void** a3, void** a4) {
    void** ecx5;
    void** ebx6;
    void** eax7;
    uint32_t eax8;
    uint32_t esi9;
    void** edx10;
    uint32_t eax11;

    if (a4) {
        ecx5 = a4;
        ebx6 = a3;
        eax7 = a1;
        do {
            __asm__("rcr ebx, 1");
            __asm__("rcr eax, 1");
            ecx5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx5) >> 1);
        } while (ecx5);
        eax8 = reinterpret_cast<unsigned char>(eax7) / reinterpret_cast<unsigned char>(ebx6);
        esi9 = eax8;
        edx10 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + eax8 * reinterpret_cast<unsigned char>(a4));
        if (__intrinsic()) 
            goto addr_0x41ccce_5;
        if (reinterpret_cast<unsigned char>(edx10) > reinterpret_cast<unsigned char>(a2)) 
            goto addr_0x41ccce_5;
        if (reinterpret_cast<unsigned char>(edx10) < reinterpret_cast<unsigned char>(a2)) 
            goto addr_0x41cccf_8;
        if (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(a3) * esi9) <= reinterpret_cast<unsigned char>(a1)) 
            goto addr_0x41cccf_8;
    } else {
        eax11 = reinterpret_cast<unsigned char>(a1) / reinterpret_cast<unsigned char>(a3);
        goto addr_0x41ccd3_11;
    }
    addr_0x41ccce_5:
    --esi9;
    addr_0x41cccf_8:
    eax11 = esi9;
    addr_0x41ccd3_11:
    return *reinterpret_cast<int16_t*>(&eax11);
}

void fun_418860(void** a1, void* a2, void** a3, void** a4) {
    uint32_t ebp5;
    void** v6;
    void** edi7;
    void** esi8;
    void** edi9;
    void** ebx10;
    uint32_t ecx11;

    ebp5 = reinterpret_cast<uint32_t>(a2) - 1;
    v6 = edi7;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(a2) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(a2 == 0))) {
        esi8 = a4;
        edi9 = a3;
        ebx10 = a1;
        do {
            fun_418810(ebx10, edi9, esi8, v6);
            if (*reinterpret_cast<void***>(esi8) == 0xffffffff) 
                break;
            ecx11 = ebp5;
            --ebp5;
        } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx11) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ecx11 == 0)));
    }
    return;
}

void fun_4188a0(void** a1, void** a2, void** a3, void** a4) {
    void** ebp5;
    void** v6;
    void** edi7;
    void** edi8;
    void** ebx9;
    void** esi10;
    void** eax11;
    void** ecx12;

    ebp5 = a2 - 1;
    v6 = edi7;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(a2) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(a2 == 0))) {
        edi8 = a4;
        ebx9 = a3;
        esi10 = a1;
        do {
            eax11 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi10))));
            ++esi10;
            fun_418810(eax11, ebx9, edi8, v6);
            if (*reinterpret_cast<void***>(edi8) == 0xffffffff) 
                break;
            ecx12 = ebp5;
            --ebp5;
        } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx12) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ecx12 == 0)));
    }
    return;
}

struct s49 {
    int32_t f0;
    unsigned char f4;
};

void** fun_418b70(void** a1, void** a2, void** a3) {
    void** ebx4;
    void** v5;
    void** ebp6;
    void** v7;
    void** esi8;
    void*** esp9;
    void** v10;
    void** edi11;
    void** v12;
    int32_t** edi13;
    uint32_t eax14;
    int32_t** v15;
    int32_t* edx16;
    void** esi17;
    void** v18;
    void** ebx19;
    void** v20;
    void** v21;
    struct s49* eax22;
    int32_t edx23;
    void** ebp24;
    void* v25;
    int32_t eax26;
    void** eax27;
    void** edi28;
    void** eax29;
    void*** eax30;
    void** eax31;
    void*** eax32;
    void* eax33;
    void** esi34;
    void** esp35;
    void* v36;
    int32_t* eax37;
    int32_t v38;
    int32_t eax39;
    void** eax40;

    ebx4 = a3;
    v5 = ebp6;
    v7 = esi8;
    esp9 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x41c - 4 - 4 - 4 - 4);
    v10 = edi11;
    v12 = reinterpret_cast<void**>(0);
    if (!ebx4) {
        return 0;
    }
    edi13 = reinterpret_cast<int32_t**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280);
    eax14 = reinterpret_cast<unsigned char>(a1) & 31;
    v15 = edi13;
    edx16 = *edi13;
    esi17 = reinterpret_cast<void**>(eax14 + eax14 * 8 << 2);
    v18 = esi17;
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(esi17) + reinterpret_cast<uint32_t>(edx16) + 4) & 32) {
        fun_4190c0(a1, 0, 2, v10, v7, v5, ebx19, 0, v18, v20, v21);
        esp9 = esp9 - 4 - 4 - 4 - 4 + 4 + 12;
    }
    eax22 = reinterpret_cast<struct s49*>(reinterpret_cast<uint32_t>(*edi13) + reinterpret_cast<unsigned char>(esi17));
    if (eax22->f4 & 0x80) 
        goto addr_0x418be5_6;
    edx23 = eax22->f0;
    ebp24 = a2;
    v25 = reinterpret_cast<void*>(esp9 + 28);
    eax26 = reinterpret_cast<int32_t>(WriteFile(edx23, ebp24, ebx4, v25, 0));
    if (!eax26) {
        eax27 = reinterpret_cast<void**>(GetLastError(edx23, ebp24, ebx4, v25, 0));
        v7 = eax27;
        goto addr_0x418c81_9;
    } else {
        v7 = reinterpret_cast<void**>(0);
        goto addr_0x418c81_9;
    }
    addr_0x418be5_6:
    ebp24 = a2;
    edi28 = ebp24;
    if (!ebx4) {
        addr_0x418c81_9:
        if (0) {
            return -static_cast<uint32_t>(reinterpret_cast<unsigned char>(v12));
        } else {
            if (1) {
                if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(esi17) + reinterpret_cast<uint32_t>(*v15) + 4) & 64) || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp24) == 26)) {
                    eax29 = fun_419020(v10, v7, v5);
                    *reinterpret_cast<void***>(eax29) = reinterpret_cast<void**>(28);
                    eax30 = fun_419030(v10, v7);
                    *eax30 = reinterpret_cast<void**>(0);
                    return 0xffffffff;
                } else {
                    return 0;
                }
            } else {
                if (1) {
                    fun_418fa0(0);
                    return 0xffffffff;
                } else {
                    eax31 = fun_419020(v10, v7, v5);
                    *reinterpret_cast<void***>(eax31) = reinterpret_cast<void**>(9);
                    eax32 = fun_419030(v10, v7);
                    *eax32 = reinterpret_cast<void**>(5);
                    return 0xffffffff;
                }
            }
        }
    } else {
        do {
            eax33 = reinterpret_cast<void*>(esp9 + 40);
            do {
                if (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edi28) - reinterpret_cast<unsigned char>(ebp24)) >= reinterpret_cast<unsigned char>(ebx4)) 
                    break;
                ++edi28;
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi28) == 10)) {
                    eax33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax33) + 1);
                    ++v12;
                }
                eax33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax33) + 1);
            } while (reinterpret_cast<int32_t>(eax33) - reinterpret_cast<int32_t>(esp9 + 40) < 0x400);
            esi34 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax33) - reinterpret_cast<uint32_t>(esp9 + 40));
            esp35 = reinterpret_cast<void**>(esp9 - 4 - 4);
            v36 = reinterpret_cast<void*>(esp9 + 28);
            eax37 = *v15;
            v38 = *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(v18) + reinterpret_cast<uint32_t>(eax37));
            eax39 = reinterpret_cast<int32_t>(WriteFile(v38, esp35 + 12, esi34, v36));
            esp9 = reinterpret_cast<void***>(esp35 - 1 - 1 - 1 - 1 + 1);
            if (!eax39) 
                break;
        } while (reinterpret_cast<signed char>(v5) >= reinterpret_cast<signed char>(esi34) && reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edi28) - reinterpret_cast<unsigned char>(ebp24)) < reinterpret_cast<unsigned char>(ebx4));
        goto addr_0x418c7d_26;
    }
    eax40 = reinterpret_cast<void**>(GetLastError(v38, esp35 + 12, esi34, v36));
    v7 = eax40;
    addr_0x418c7d_26:
    esi17 = v10;
    goto addr_0x418c81_9;
}

void** fun_41d040(void** a1, void** a2, void** a3, int32_t a4);

void** fun_41cfb0(void** a1, void** a2, void** a3, int32_t a4) {
    void** eax5;
    uint32_t eax6;
    void** edi7;
    void** esi8;
    void** ebx9;
    void** eax10;
    void*** eax11;
    void** eax12;

    eax5 = g430380;
    if (reinterpret_cast<unsigned char>(a1) >= reinterpret_cast<unsigned char>(eax5) || (eax6 = reinterpret_cast<unsigned char>(a1) & 31, (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + (eax6 + eax6 * 8) * 4 + 4) & 1) == 0)) {
        eax10 = fun_419020(edi7, esi8, ebx9);
        *reinterpret_cast<void***>(eax10) = reinterpret_cast<void**>(9);
        eax11 = fun_419030(edi7, esi8);
        *eax11 = reinterpret_cast<void**>(0);
        return 0xffffffff;
    } else {
        fun_41ab50(a1, edi7, esi8, ebx9, __return_address(), a1, a2);
        eax12 = fun_41d040(a1, a2, a3, a4);
        fun_41abc0(a1);
        return eax12;
    }
}

void** fun_41d0f0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void** v10;
    void** v11;
    void** ebx12;
    void** ebx13;
    void** v14;
    void** ebp15;
    void** v16;
    void** esi17;
    void** v18;
    void** edi19;
    int32_t ebp20;
    void** esi21;
    int1_t below_or_equal22;
    void** ecx23;
    void** eax24;
    void** eax25;
    void** eax26;
    void** edx27;
    void** edi28;
    uint32_t ecx29;
    void** eax30;
    void** eax31;

    v10 = reinterpret_cast<void**>(__return_address());
    v11 = ebx12;
    ebx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a2) * reinterpret_cast<unsigned char>(a1));
    v14 = ebp15;
    v16 = esi17;
    v18 = edi19;
    if (reinterpret_cast<unsigned char>(ebx13) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
        if (!ebx13) {
            ebx13 = reinterpret_cast<void**>(16);
        } else {
            ebx13 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx13 + 15) & 0xfffffff0);
        }
    }
    ebp20 = HeapAlloc;
    do {
        esi21 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<unsigned char>(ebx13) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
            below_or_equal22 = reinterpret_cast<unsigned char>(ebx13) <= reinterpret_cast<unsigned char>(g42ceec);
            if (!below_or_equal22) {
                addr_0x41d164_8:
                if (esi21) 
                    break; else 
                    goto addr_0x41d168_9;
            } else {
                fun_417120(ecx23, 9, v18, v16, v14, v11, v10, a1, a2, a3, a4, a5, a6);
                eax24 = fun_417600(ecx23, reinterpret_cast<unsigned char>(ebx13) >> 4);
                esi21 = eax24;
                fun_4171a0(9);
                if (!esi21) {
                    addr_0x41d168_9:
                    eax25 = g4313ac;
                    eax26 = reinterpret_cast<void**>(ebp20(eax25, 8, ebx13));
                    esi21 = eax26;
                } else {
                    edx27 = ebx13;
                    edi28 = esi21;
                    ecx29 = reinterpret_cast<unsigned char>(ebx13) >> 2;
                    while (ecx29) {
                        --ecx29;
                        *reinterpret_cast<void***>(edi28) = reinterpret_cast<void**>(0);
                        edi28 = edi28 + 4;
                        esi21 = esi21 + 4;
                    }
                    ecx23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx27) & 3);
                    while (ecx23) {
                        --ecx23;
                        *reinterpret_cast<void***>(edi28) = reinterpret_cast<void**>(0);
                        ++edi28;
                        ++esi21;
                    }
                    goto addr_0x41d164_8;
                }
            }
        }
        if (esi21) 
            break;
        eax30 = g42ed34;
        if (!eax30) 
            break;
        eax31 = fun_417a90(ebx13);
    } while (eax31);
    goto addr_0x41d18f_20;
    return esi21;
    addr_0x41d18f_20:
    return eax31;
}

void fun_419510(void** a1) {
    *reinterpret_cast<void***>(a1 + 80) = reinterpret_cast<void**>(0x42d620);
    *reinterpret_cast<void***>(a1 + 20) = reinterpret_cast<void**>(1);
    return;
}

void** g42ed70;

void** g42d4f0 = reinterpret_cast<void**>(0xff);

void** g42d4e0 = reinterpret_cast<void**>(0xff);

void** fun_41d4f0(void** ecx, void** a2);

void** g42ee24;

int32_t GetTimeZoneInformation = 0x3298c;

int32_t g42ed78;

void** g42edcc;

int16_t g42edbe;

void* g42d440 = reinterpret_cast<void*>(0x7080);

int16_t g42ee12;

void** g42ee20;

void** g42d444 = reinterpret_cast<void**>(1);

void** g42d448 = reinterpret_cast<void**>(0xf0);

void** __image_base = reinterpret_cast<void**>(80);

void fun_41d240(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

void** __image_base = reinterpret_cast<void**>(0x90);

void*** fun_414e80(void** a1);

void** fun_4195f0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** v13;
    void** v14;
    void** ebp15;
    void** v16;
    void** esi17;
    void** v18;
    void** edi19;
    void** eax20;
    void** ebp21;
    void** edi22;
    void** eax23;
    int32_t eax24;
    void** ecx25;
    int32_t eax26;
    void* eax27;
    int1_t zf28;
    void*** edx29;
    int1_t zf30;
    void** eax31;
    void* eax32;
    void* eax33;
    void** edx34;
    void** eax35;
    void** ecx36;
    void** edx37;
    void** edi38;
    uint32_t ecx39;
    void** eax40;
    void** edx41;
    void** edi42;
    uint32_t ecx43;
    uint32_t ecx44;
    uint32_t eax45;
    void*** esi46;
    void** edi47;
    uint32_t ecx48;
    uint32_t ecx49;
    void** ecx50;
    void** edx51;
    void** ebp52;
    void** esi53;
    void*** eax54;
    void*** eax55;
    void*** eax56;
    void* ecx57;
    void*** eax58;
    void* ecx59;
    void*** eax60;
    void** al61;
    void*** eax62;
    void* ecx63;
    void** al64;
    void** eax65;
    void** ecx66;
    void** edx67;
    void** eax68;
    void** esi69;
    void** eax70;
    uint1_t cf71;
    uint1_t cf72;
    uint32_t eax73;
    uint32_t eax74;

    v13 = reinterpret_cast<void**>(__return_address());
    v14 = ebp15;
    v16 = esi17;
    v18 = edi19;
    fun_417120(ecx, 12, v18, v16, v14, 0, v13, a2, a3, a4, a5, a6, a7);
    g42ed70 = reinterpret_cast<void**>(0);
    g42d4f0 = reinterpret_cast<void**>(0xffffffff);
    g42d4e0 = reinterpret_cast<void**>(0xffffffff);
    eax20 = fun_41d4f0(ecx, 0x428138);
    ebp21 = eax20;
    if (ebp21) {
        if (!*reinterpret_cast<void***>(ebp21)) 
            goto addr_0x4198b9_3;
        edi22 = g42ee24;
        if (edi22) 
            goto addr_0x41971f_5;
    } else {
        fun_4171a0(12);
        eax23 = reinterpret_cast<void**>(GetTimeZoneInformation());
        if (eax23 != 0xffffffff) {
            eax24 = g42ed78;
            ecx25 = g42edcc;
            eax26 = eax24 + eax24 * 2;
            g42ed70 = reinterpret_cast<void**>(1);
            eax27 = reinterpret_cast<void*>(eax26 + eax26 * 4 << 2);
            zf28 = g42edbe == 0;
            g42d440 = eax27;
            if (!zf28) {
                edx29 = reinterpret_cast<void***>(ecx25 + reinterpret_cast<unsigned char>(ecx25) * 2);
                g42d440 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax27) + reinterpret_cast<uint32_t>(edx29 + reinterpret_cast<uint32_t>(edx29) * 4) * 4);
            }
            zf30 = g42ee12 == 0;
            if (zf30 || (eax31 = g42ee20, eax31 == 0)) {
                g42d444 = reinterpret_cast<void**>(0);
                g42d448 = reinterpret_cast<void**>(0);
            } else {
                eax32 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax31) - reinterpret_cast<unsigned char>(ecx25));
                g42d444 = reinterpret_cast<void**>(1);
                eax33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax32) + reinterpret_cast<uint32_t>(eax32) * 2);
                ecx25 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax33) + reinterpret_cast<uint32_t>(eax33) * 4 << 2);
                g42d448 = ecx25;
            }
            edx34 = __image_base;
            fun_41d240(ecx25, edx34, 0x42ed7c, 64, 0x42ed78, v18);
            eax35 = __image_base;
            fun_41d240(ecx25, eax35, 0x42edd0, 64, 0x42ed78, v18);
            ecx36 = __image_base;
            *reinterpret_cast<signed char*>(ecx36 + 63) = 0;
            edx37 = __image_base;
            *reinterpret_cast<signed char*>(edx37 + 63) = 0;
            goto 0;
        }
    }
    addr_0x419754_13:
    fun_414d40(ecx, edi22, v18, v16, v14, 0, v13, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    edi38 = ebp21;
    ecx39 = 0xffffffff;
    do {
        if (!ecx39) 
            break;
        --ecx39;
        ++edi38;
    } while (*reinterpret_cast<void***>(edi38));
    eax40 = fun_414db0(~ecx39, v18, v16, v14, 0, v13, a2, a3, a4, a5, a6, a7);
    edx41 = eax40;
    g42ee24 = edx41;
    if (!edx41) {
        addr_0x4198b9_3:
        eax23 = fun_4171a0(12);
    } else {
        edi42 = ebp21;
        ecx43 = 0xffffffff;
        do {
            if (!ecx43) 
                break;
            --ecx43;
            ++edi42;
        } while (*reinterpret_cast<void***>(edi42));
        ecx44 = ~ecx43;
        eax45 = ecx44;
        esi46 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi42) - ecx44);
        edi47 = edx41;
        ecx48 = ecx44 >> 2;
        while (ecx48) {
            --ecx48;
            *reinterpret_cast<void***>(edi47) = *esi46;
            edi47 = edi47 + 4;
            esi46 = esi46 + 4;
        }
        ecx49 = eax45 & 3;
        while (ecx49) {
            --ecx49;
            *reinterpret_cast<void***>(edi47) = *esi46;
            ++edi47;
            ++esi46;
        }
        fun_4171a0(12);
        ecx50 = __image_base;
        fun_414c40(ecx50, ebp21, 3);
        edx51 = __image_base;
        ebp52 = ebp21 + 3;
        *reinterpret_cast<void***>(edx51 + 3) = reinterpret_cast<void**>(0);
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp52) == 45)) 
            goto addr_0x4197d8_27; else 
            goto addr_0x4197d0_28;
    }
    return eax23;
    addr_0x4197d8_27:
    esi53 = reinterpret_cast<void**>(0);
    addr_0x4197dc_30:
    eax54 = fun_414e80(ebp52);
    eax55 = eax54 + reinterpret_cast<uint32_t>(eax54) * 4;
    eax56 = eax55 + reinterpret_cast<uint32_t>(eax55) * 4;
    ecx57 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax56 + reinterpret_cast<uint32_t>(eax56) * 8) << 4);
    g42d440 = ecx57;
    while (*reinterpret_cast<void***>(ebp52) == 43 || reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebp52)) >= reinterpret_cast<signed char>(48) && reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebp52)) <= reinterpret_cast<signed char>(57)) {
        ++ebp52;
    }
    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp52) == 58)) {
        ++ebp52;
        eax58 = fun_414e80(ebp52);
        ecx59 = g42d440;
        eax60 = eax58 + reinterpret_cast<uint32_t>(eax58) * 2;
        ecx57 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx59) + reinterpret_cast<uint32_t>(eax60 + reinterpret_cast<uint32_t>(eax60) * 4) * 4);
        g42d440 = ecx57;
        al61 = *reinterpret_cast<void***>(ebp52);
        if (reinterpret_cast<signed char>(al61) >= reinterpret_cast<signed char>(48)) {
            do {
                if (reinterpret_cast<signed char>(al61) > reinterpret_cast<signed char>(57)) 
                    break;
                al61 = *reinterpret_cast<void***>(ebp52 + 1);
                ++ebp52;
            } while (reinterpret_cast<signed char>(al61) >= reinterpret_cast<signed char>(48));
        }
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp52) == 58) && (++ebp52, eax62 = fun_414e80(ebp52), ecx63 = g42d440, ecx57 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx63) + reinterpret_cast<uint32_t>(eax62)), g42d440 = ecx57, al64 = *reinterpret_cast<void***>(ebp52), reinterpret_cast<signed char>(al64) >= reinterpret_cast<signed char>(48))) {
            do {
                if (reinterpret_cast<signed char>(al64) > reinterpret_cast<signed char>(57)) 
                    break;
                al64 = *reinterpret_cast<void***>(ebp52 + 1);
                ++ebp52;
            } while (reinterpret_cast<signed char>(al64) >= reinterpret_cast<signed char>(48));
        }
    }
    if (esi53) {
        g42d440 = reinterpret_cast<void*>(-reinterpret_cast<uint32_t>(ecx57));
    }
    eax65 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebp52))));
    g42d444 = eax65;
    if (!eax65) {
        ecx66 = __image_base;
        *reinterpret_cast<void***>(ecx66) = reinterpret_cast<void**>(0);
        return eax65;
    } else {
        edx67 = __image_base;
        fun_414c40(edx67, ebp52, 3);
        eax68 = __image_base;
        *reinterpret_cast<void***>(eax68 + 3) = reinterpret_cast<void**>(0);
        return eax68;
    }
    addr_0x4197d0_28:
    esi53 = reinterpret_cast<void**>(1);
    ++ebp52;
    goto addr_0x4197dc_30;
    addr_0x41971f_5:
    esi69 = edi22;
    eax70 = ebp21;
    do {
        ecx = *reinterpret_cast<void***>(eax70);
        cf71 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax70)) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi69)));
        if (*reinterpret_cast<void***>(eax70) != *reinterpret_cast<void***>(esi69)) 
            break;
        if (!ecx) 
            goto addr_0x419743_47;
        ecx = *reinterpret_cast<void***>(eax70 + 1);
        cf71 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax70 + 1)) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi69 + 1)));
        if (*reinterpret_cast<void***>(eax70 + 1) != *reinterpret_cast<void***>(esi69 + 1)) 
            break;
        eax70 = eax70 + 2;
        esi69 = esi69 + 2;
    } while (ecx);
    goto addr_0x419743_47;
    cf72 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax70) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax70) + cf71));
    eax73 = reinterpret_cast<unsigned char>(eax70) - (reinterpret_cast<unsigned char>(eax70) + cf72);
    eax74 = eax73 - (1 - reinterpret_cast<uint1_t>(eax73 < 1 - cf72));
    addr_0x41974c_51:
    if (!eax74) 
        goto addr_0x4198b9_3; else 
        goto addr_0x419754_13;
    addr_0x419743_47:
    eax74 = 0;
    goto addr_0x41974c_51;
}

void** g42adcc = reinterpret_cast<void**>(1);

void*** fun_414e80(void** a1) {
    void** edi2;
    int1_t less_or_equal3;
    void** edx4;
    void** ecx5;
    void** eax6;
    void** eax7;
    void** eax8;
    void** edi9;
    void** esi10;
    void** ebp11;
    void*** ebx12;
    int1_t less_or_equal13;
    void** edx14;
    void** eax15;
    void*** eax16;

    edi2 = a1;
    while (1) {
        less_or_equal3 = reinterpret_cast<signed char>(g42adcc) <= reinterpret_cast<signed char>(1);
        if (less_or_equal3) {
            edx4 = __image_base;
            ecx5 = reinterpret_cast<void**>(0);
            ecx5 = *reinterpret_cast<void***>(edi2);
            eax6 = *reinterpret_cast<void***>(edx4 + reinterpret_cast<unsigned char>(ecx5) * 2);
            eax6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax6) & 8);
        } else {
            eax7 = reinterpret_cast<void**>(0);
            eax7 = *reinterpret_cast<void***>(edi2);
            eax6 = fun_415fc0(ecx5, eax7, 8);
        }
        if (!eax6) 
            break;
        ++edi2;
    }
    eax8 = reinterpret_cast<void**>(0);
    eax8 = *reinterpret_cast<void***>(edi2);
    edi9 = edi2 + 1;
    esi10 = eax8;
    ebp11 = esi10;
    if (esi10 == 45 || reinterpret_cast<int1_t>(esi10 == 43)) {
        ecx5 = reinterpret_cast<void**>(0);
        ecx5 = *reinterpret_cast<void***>(edi9);
        ++edi9;
        esi10 = ecx5;
    }
    ebx12 = reinterpret_cast<void***>(0);
    while (1) {
        less_or_equal13 = reinterpret_cast<signed char>(g42adcc) <= reinterpret_cast<signed char>(1);
        if (less_or_equal13) {
            edx14 = __image_base;
            eax8 = *reinterpret_cast<void***>(edx14 + reinterpret_cast<unsigned char>(esi10) * 2);
            eax15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax8) & 4);
        } else {
            eax15 = fun_415fc0(ecx5, esi10, 4);
        }
        if (!eax15) 
            break;
        eax8 = reinterpret_cast<void**>(ebx12 + reinterpret_cast<uint32_t>(ebx12) * 4);
        ecx5 = reinterpret_cast<void**>(0);
        ecx5 = *reinterpret_cast<void***>(edi9);
        ++edi9;
        ebx12 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi10 + reinterpret_cast<unsigned char>(eax8) * 2) + 0xffffffd0);
        esi10 = ecx5;
    }
    eax16 = ebx12;
    if (reinterpret_cast<int1_t>(ebp11 == 45)) {
        eax16 = reinterpret_cast<void***>(-reinterpret_cast<uint32_t>(eax16));
    }
    return eax16;
}

int32_t g42ef80;

struct s50 {
    signed char[4286504] pad4286504;
    signed char f4286504;
};

void** fun_416828();

int32_t g42ec60;

void** fun_41a840(void** ecx, void** a2, void** a3, void** a4, void** a5);

int32_t fun_41a9b0(void** a1, void** a2);

int32_t fun_41af50(void** a1, void** a2, void** a3);

void** fun_4164c0(void** a1, void** a2, void** a3, void** a4) {
    void** ecx5;
    void** v6;
    void** ebx7;
    int1_t zf8;
    uint32_t eax9;
    void** v10;
    uint32_t eax11;
    struct s50* eax12;
    int32_t ebx13;
    void** ebx14;
    void** eax15;
    void** ebp16;
    void** edi17;
    void** esi18;
    void** ebp19;
    void** eax20;
    void*** eax21;
    void** edi22;
    int32_t esi23;
    uint32_t eax24;
    void** eax25;
    void** eax26;
    void*** eax27;
    void*** esp28;
    void** v29;
    void** eax30;
    void** eax31;
    int32_t eax32;
    uint32_t eax33;
    void** ecx34;
    void** ebx35;
    uint32_t edi36;
    void* al37;
    void** eax38;
    int32_t eax39;
    int32_t eax40;
    void** eax41;
    void*** eax42;

    ecx5 = a2;
    v6 = ebx7;
    if (!(0x80 & *reinterpret_cast<unsigned char*>(&ecx5))) {
    }
    if (!(*reinterpret_cast<unsigned char*>(&ecx5 + 1) & 0x80) && (*reinterpret_cast<unsigned char*>(&ecx5 + 1) & 64 || (zf8 = g42ef80 == 0x8000, !zf8))) {
    }
    eax9 = reinterpret_cast<unsigned char>(ecx5) & 3;
    if (!eax9) {
        v10 = reinterpret_cast<void**>(0x80000000);
    } else {
        eax11 = eax9 - 1;
        if (!eax11) {
            v10 = reinterpret_cast<void**>(0x40000000);
        } else {
            if (eax11 - 1) 
                goto addr_0x4167f4_11;
            v10 = reinterpret_cast<void**>(0xc0000000);
        }
    }
    eax12 = reinterpret_cast<struct s50*>(a3 + 0xfffffff0);
    if (reinterpret_cast<uint32_t>(eax12) > 48) 
        goto addr_0x4167f4_11;
    ebx13 = 0;
    *reinterpret_cast<signed char*>(&ebx13) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax12) + reinterpret_cast<int32_t>(fun_416828));
    switch (ebx13) {
    case 0:
        ebx14 = reinterpret_cast<void**>(0);
        break;
    case 1:
        ebx14 = reinterpret_cast<void**>(1);
        break;
    case 2:
        ebx14 = reinterpret_cast<void**>(2);
        break;
    case 3:
        ebx14 = reinterpret_cast<void**>(3);
    case 4:
        goto 0x4167f4;
    }
    eax15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx5) & 0x700);
    if (reinterpret_cast<signed char>(eax15) > reinterpret_cast<signed char>(0x100)) {
        if (reinterpret_cast<signed char>(eax15) > reinterpret_cast<signed char>(0x300)) {
            if (reinterpret_cast<signed char>(eax15) > reinterpret_cast<signed char>(0x500)) {
                if (eax15 == 0x600) {
                    ebp16 = reinterpret_cast<void**>(5);
                } else {
                    if (!reinterpret_cast<int1_t>(eax15 == 0x700)) {
                        addr_0x4167f4_11:
                        eax20 = fun_419020(edi17, esi18, ebp19);
                        *reinterpret_cast<void***>(eax20) = reinterpret_cast<void**>(22);
                        eax21 = fun_419030(edi17, esi18);
                        *eax21 = reinterpret_cast<void**>(0);
                        return 0xffffffff;
                    } else {
                        addr_0x4165df_25:
                        ebp16 = reinterpret_cast<void**>(1);
                    }
                }
            } else {
                if (eax15 == 0x500) 
                    goto addr_0x4165df_25;
                if (!reinterpret_cast<int1_t>(eax15 == 0x400)) 
                    goto addr_0x4167f4_11; else 
                    goto addr_0x4165c6_28;
            }
        } else {
            if (eax15 == 0x300) {
                ebp16 = reinterpret_cast<void**>(2);
            } else {
                if (eax15 != 0x200) {
                    goto addr_0x4167f4_11;
                }
            }
        }
    } else {
        if (eax15 == 0x100) {
            ebp16 = reinterpret_cast<void**>(4);
        } else {
            if (eax15) {
                goto addr_0x4167f4_11;
            }
        }
    }
    addr_0x4165eb_37:
    edi22 = reinterpret_cast<void**>(0x80);
    if (*reinterpret_cast<unsigned char*>(&ecx5 + 1) & 1 && (esi23 = g42ec60, eax24 = reinterpret_cast<unsigned char>(a4) & reinterpret_cast<uint32_t>(~esi23), !(0x80 & *reinterpret_cast<unsigned char*>(&eax24)))) {
        edi22 = reinterpret_cast<void**>(1);
    }
    if (*reinterpret_cast<unsigned char*>(&ecx5) & 64) {
        edi22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi22) | 0x4000000);
        v10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v10) | 0x10000);
    }
    if (*reinterpret_cast<unsigned char*>(&ecx5 + 1) & 16) {
        edi22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi22) | 0x100);
    }
    if (!(*reinterpret_cast<unsigned char*>(&ecx5) & 32)) {
        if (*reinterpret_cast<unsigned char*>(&ecx5) & 16) {
            edi22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi22) | 0x10000000);
        }
    } else {
        edi22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi22) | 0x8000000);
    }
    eax25 = fun_41a840(ecx5, edi17, esi18, ebp19, v6);
    if (reinterpret_cast<int1_t>(eax25 == 0xffffffff)) {
        eax26 = fun_419020(edi17, esi18, ebp19);
        *reinterpret_cast<void***>(eax26) = reinterpret_cast<void**>(24);
        eax27 = fun_419030(edi17, esi18);
        *eax27 = reinterpret_cast<void**>(0);
        return reinterpret_cast<uint32_t>(eax27) | reinterpret_cast<unsigned char>(eax25);
    }
    esp28 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 20 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4);
    v29 = reinterpret_cast<void**>(esp28 + 32);
    eax30 = reinterpret_cast<void**>(CreateFileA());
    if (eax30 == 0xffffffff) {
        addr_0x4166a6_50:
        eax31 = reinterpret_cast<void**>(GetLastError());
        fun_418fa0(eax31);
        fun_41abc0(eax25);
        goto ebp19;
    } else {
        eax32 = reinterpret_cast<int32_t>(GetFileType());
        if (eax32) {
            if (eax32 != 2) {
                if (eax32 != 3) {
                    addr_0x4166e5_54:
                    fun_41a9b0(eax25, eax30);
                    eax33 = reinterpret_cast<unsigned char>(eax25) & 31;
                    *reinterpret_cast<void**>(&v29 + 3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&v29 + 3)) | 1);
                    ecx34 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax25) >> 5);
                    ebx35 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx34) * 4 + 0x430280);
                    edi36 = eax33 + eax33 * 8 << 2;
                    *reinterpret_cast<unsigned char*>(&ecx34) = 72;
                    *reinterpret_cast<void**>(edi36 + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx34) * 4 + 0x430280)) + 4) = *reinterpret_cast<void**>(&v29 + 3);
                    if (1) 
                        goto addr_0x4167c3_55;
                    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&v29 + 3)) & 0x80)) 
                        goto addr_0x4167c3_55;
                    if (!(*reinterpret_cast<unsigned char*>(&v6) & 2)) 
                        goto addr_0x4167c3_55;
                } else {
                    al37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&v29 + 3)) | 8);
                    goto addr_0x4166e1_59;
                }
            } else {
                al37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&v29 + 3)) | 64);
                goto addr_0x4166e1_59;
            }
        } else {
            CloseHandle(eax30);
            goto addr_0x4166a6_50;
        }
    }
    eax38 = fun_4190c0(eax25, 0xff, 2, eax30, a1, v10, ebx14, v29, ebp16, edi22, 0);
    if (!reinterpret_cast<int1_t>(eax38 == 0xffffffff)) {
        eax39 = fun_41af50(eax25, esp28 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 - 4 + 4 + 12 + 48, 1);
        if (!eax39 && (!1 && (eax40 = fun_41ae00(ecx34, eax25, eax38, eax30), eax40 == -1)) || (eax41 = fun_4190c0(eax25, 0, 0, eax30, a1, v10, ebx14, v29, ebp16, edi22, 0), reinterpret_cast<int1_t>(eax41 == 0xffffffff))) {
            addr_0x4167a6_64:
            fun_4163a0(eax25, eax30, a1);
            fun_41abc0(eax25);
            goto esi18;
        } else {
            addr_0x4167c3_55:
            if (!1 && *reinterpret_cast<unsigned char*>(&v6) & 8) {
                *reinterpret_cast<unsigned char*>(edi36 + reinterpret_cast<int32_t>(*ebx35) + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi36 + reinterpret_cast<int32_t>(*ebx35) + 4) | 32);
            }
        }
        fun_41abc0(eax25);
        goto esi18;
    } else {
        eax42 = fun_419030(eax30, a1);
        if (*eax42 == 0x83) 
            goto addr_0x4167c3_55;
        goto addr_0x4167a6_64;
    }
    addr_0x4166e1_59:
    *reinterpret_cast<void**>(&v29 + 3) = al37;
    goto addr_0x4166e5_54;
    addr_0x4165c6_28:
    ebp16 = reinterpret_cast<void**>(3);
    goto addr_0x4165eb_37;
}

void** fun_417270(void** a1, void** a2) {
    int32_t ebp3;
    void** eax4;

    if (reinterpret_cast<signed char>(a1) >= reinterpret_cast<signed char>(20)) {
        LeaveCriticalSection();
        goto ebp3;
    } else {
        eax4 = fun_4171a0(a1 + 28);
        return eax4;
    }
}

struct s51 {
    int32_t f0;
    signed char f1;
    signed char f2;
    signed char f3;
};

struct s52 {
    int32_t f0;
    signed char f1;
    signed char f2;
    signed char f3;
};

void** fun_41d580(void** a1, void** a2, void* a3, void** a4, int32_t a5, void** a6, void** a7, int32_t a8, void** a9, void** a10, void** a11, void** a12) {
    void** esi13;
    void** edi14;
    uint32_t ecx15;
    uint32_t edx16;
    struct s51* esi17;
    struct s52* edi18;
    uint32_t ecx19;
    uint32_t edx20;
    void* eax21;

    esi13 = a2;
    edi14 = a1;
    if (reinterpret_cast<unsigned char>(edi14) <= reinterpret_cast<unsigned char>(esi13) || reinterpret_cast<unsigned char>(edi14) >= reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(a3) + reinterpret_cast<unsigned char>(esi13))) {
        if (reinterpret_cast<unsigned char>(edi14) & 3) {
            if (reinterpret_cast<uint32_t>(a3) < 4) {
                goto *reinterpret_cast<int32_t*>((reinterpret_cast<uint32_t>(a3) - 4) * 4 + 0x41d6d8);
            } else {
                goto *reinterpret_cast<int32_t*>((reinterpret_cast<unsigned char>(edi14) & 3) * 4 + 0x41d5e0);
            }
        }
        ecx15 = reinterpret_cast<uint32_t>(a3) >> 2;
        edx16 = reinterpret_cast<uint32_t>(a3) & 3;
        if (ecx15 >= 8) 
            goto addr_0x41d5b3_7;
    } else {
        esi17 = reinterpret_cast<struct s51*>(reinterpret_cast<uint32_t>(a3) + reinterpret_cast<unsigned char>(esi13) + 0xfffffffc);
        edi18 = reinterpret_cast<struct s52*>(reinterpret_cast<uint32_t>(a3) + reinterpret_cast<unsigned char>(edi14) + 0xfffffffc);
        if (reinterpret_cast<uint32_t>(edi18) & 3) {
            if (reinterpret_cast<uint32_t>(a3) >= 4) {
                goto *reinterpret_cast<int32_t*>((reinterpret_cast<uint32_t>(edi18) & 3) * 4 + 0x41d768);
            }
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(a3) * 4 + 0x41d860);
        } else {
            ecx19 = reinterpret_cast<uint32_t>(a3) >> 2;
            edx20 = reinterpret_cast<uint32_t>(a3) & 3;
            if (ecx19 < 8) {
                goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(-ecx19) * 4 + 0x41d810);
                goto *reinterpret_cast<int32_t*>(edx20 * 4 + 0x41d860);
            } else {
                while (ecx19) {
                    --ecx19;
                    edi18->f0 = esi17->f0;
                    edi18 = reinterpret_cast<struct s52*>(reinterpret_cast<uint32_t>(edi18) - 4);
                    esi17 = reinterpret_cast<struct s51*>(reinterpret_cast<uint32_t>(esi17) - 4);
                }
                goto *reinterpret_cast<int32_t*>(edx20 * 4 + 0x41d860);
            }
        }
    }
    switch (ecx15) {
        addr_0x41d6bf_20:
    case 0:
        switch (edx16) {
        case 0:
            return a1;
        case 1:
            *reinterpret_cast<void***>(edi14) = *reinterpret_cast<void***>(esi13);
            return a1;
        case 2:
            *reinterpret_cast<void***>(edi14) = *reinterpret_cast<void***>(esi13);
            *reinterpret_cast<void***>(edi14 + 1) = *reinterpret_cast<void***>(esi13 + 1);
            return a1;
        case 3:
            *reinterpret_cast<void***>(edi14) = *reinterpret_cast<void***>(esi13);
            *reinterpret_cast<void***>(edi14 + 1) = *reinterpret_cast<void***>(esi13 + 1);
            *reinterpret_cast<void***>(edi14 + 2) = *reinterpret_cast<void***>(esi13 + 2);
            return a1;
        }
        addr_0x41d6ac_25:
    case 1:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi14 + ecx15 * 4) - 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi13 + ecx15 * 4) - 4);
        eax21 = reinterpret_cast<void*>(ecx15 * 4);
        esi13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi13) + reinterpret_cast<uint32_t>(eax21));
        edi14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi14) + reinterpret_cast<uint32_t>(eax21));
        goto addr_0x41d6bf_20;
        addr_0x41d6a4_26:
    case 2:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi14 + ecx15 * 4) - 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi13 + ecx15 * 4) - 8);
        goto addr_0x41d6ac_25;
        addr_0x41d69c_27:
    case 3:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi14 + ecx15 * 4) - 12) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi13 + ecx15 * 4) - 12);
        goto addr_0x41d6a4_26;
        addr_0x41d694_28:
    case 4:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi14 + ecx15 * 4) - 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi13 + ecx15 * 4) - 16);
        goto addr_0x41d69c_27;
        addr_0x41d68c_29:
    case 5:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi14 + ecx15 * 4) - 20) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi13 + ecx15 * 4) - 20);
        goto addr_0x41d694_28;
        addr_0x41d684_30:
    case 6:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi14 + ecx15 * 4) - 24) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi13 + ecx15 * 4) - 24);
        goto addr_0x41d68c_29;
    case 7:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi14 + ecx15 * 4) - 28) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi13 + ecx15 * 4) - 28);
        goto addr_0x41d684_30;
    }
    addr_0x41d5b3_7:
    while (ecx15) {
        --ecx15;
        *reinterpret_cast<void***>(edi14) = *reinterpret_cast<void***>(esi13);
        edi14 = edi14 + 4;
        esi13 = esi13 + 4;
    }
    goto *reinterpret_cast<int32_t*>(edx16 * 4 + 0x41d6c8);
    return a1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi18) + 3) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi17) + 3);
    return a1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi18) + 3) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi17) + 3);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi18) + 2) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi17) + 2);
    return a1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi18) + 3) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi17) + 3);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi18) + 2) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi17) + 2);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi18) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi17) + 1);
    return a1;
}

struct s53 {
    signed char[4302508] pad4302508;
    signed char f4302508;
};

void fun_41a6ac();

void** fun_41a660(void** a1) {
    struct s53* eax2;
    int32_t ecx3;

    eax2 = reinterpret_cast<struct s53*>(a1 + 0xfffffc5c);
    if (reinterpret_cast<uint32_t>(eax2) > 18) 
        goto addr_0x41a695_2;
    ecx3 = 0;
    *reinterpret_cast<signed char*>(&ecx3) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax2) + reinterpret_cast<int32_t>(fun_41a6ac));
    switch (ecx3) {
    case 0:
        return 0x411;
    case 1:
        return 0x804;
    case 2:
        return 0x412;
    case 3:
        return 0x404;
        addr_0x41a695_2:
    case 4:
        return 0;
    }
}

void** g42ef68;

void** g42ef70;

void** g42ef74;

void** g42ef78;

void fun_41a6c0() {
    int32_t ecx1;
    signed char* edi2;

    ecx1 = 64;
    edi2 = reinterpret_cast<signed char*>(0x42ee60);
    while (ecx1) {
        --ecx1;
        *edi2 = reinterpret_cast<signed char>(0);
        edi2 = edi2 + 4;
    }
    *edi2 = 0;
    g42ef64 = reinterpret_cast<void**>(0);
    g42ef68 = reinterpret_cast<void**>(0);
    g42ef70 = reinterpret_cast<void**>(0);
    g42ef74 = reinterpret_cast<void**>(0);
    g42ef78 = reinterpret_cast<void**>(0);
    return;
}

uint32_t fun_41d8c0(void** a1, uint32_t a2) {
    uint32_t eax3;
    uint32_t edx4;
    void* eax5;
    unsigned char* edx6;
    uint32_t eax7;
    void** esi8;
    void** eax9;
    unsigned char cl10;
    uint32_t eax11;

    eax3 = reinterpret_cast<unsigned char>(a1) & 31;
    edx4 = eax3 + eax3 * 8;
    eax5 = *reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280);
    edx6 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax5) + edx4 * 4 + 4);
    *reinterpret_cast<unsigned char*>(&eax5) = *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax5) + edx4 * 4 + 4);
    eax7 = reinterpret_cast<uint32_t>(eax5) & 0x80;
    if (a2 != 0x8000) {
        if (a2 != 0x4000) {
            eax9 = fun_419020(esi8, __return_address(), a1);
            *reinterpret_cast<void***>(eax9) = reinterpret_cast<void**>(22);
            return 0xffffffff;
        } else {
            cl10 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax5) + edx4 * 4 + 4) | 0x80);
        }
    } else {
        cl10 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax5) + edx4 * 4 + 4) & 0x7f);
    }
    eax11 = -eax7;
    *edx6 = cl10;
    return (eax11 - (eax11 + reinterpret_cast<uint1_t>(eax11 < eax11 + reinterpret_cast<uint1_t>(!!eax7))) & 0xffffc000) + 0x8000;
}

void fun_41b5c0(struct s35* a1, void** a2, void** a3, int32_t* a4, int32_t* a5) {
    void** ebp6;
    void** esi7;
    int32_t* edi8;
    struct s35* eax9;
    void** cl10;
    uint32_t ecx11;
    int32_t edx12;
    int32_t v13;
    uint32_t ecx14;
    int32_t ebp15;
    uint32_t ecx16;

    ebp6 = a2;
    esi7 = a3;
    edi8 = a5;
    *edi8 = 0;
    *a4 = 1;
    eax9 = a1;
    if (ebp6) {
        *reinterpret_cast<void***>(ebp6) = esi7;
        ebp6 = ebp6 + 4;
        a2 = ebp6;
    }
    if (!reinterpret_cast<int1_t>(eax9->f0 == 34)) {
        do {
            *edi8 = *edi8 + 1;
            if (esi7) {
                *reinterpret_cast<void***>(esi7) = eax9->f0;
                ++esi7;
            }
            cl10 = eax9->f0;
            eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
            *reinterpret_cast<void***>(&a5) = cl10;
            if (*reinterpret_cast<unsigned char*>((reinterpret_cast<uint32_t>(a5) & 0xff) + 0x42ee61) & 4) {
                *edi8 = *edi8 + 1;
                if (esi7) {
                    *reinterpret_cast<void***>(esi7) = eax9->f0;
                    ++esi7;
                }
                eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
            }
            if (cl10 == 32) 
                break;
            if (!cl10) 
                goto addr_0x41b699_12;
        } while (!reinterpret_cast<int1_t>(cl10 == 9));
        if (cl10) {
            if (esi7) {
                *reinterpret_cast<void***>(esi7 + 0xffffffff) = reinterpret_cast<void**>(0);
            }
        } else {
            addr_0x41b699_12:
            eax9 = reinterpret_cast<struct s35*>(reinterpret_cast<int32_t>(eax9) - 1);
        }
    } else {
        *reinterpret_cast<signed char*>(&ecx11) = eax9->f1;
        eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
        if (*reinterpret_cast<signed char*>(&ecx11) != 34) {
            do {
                if (!*reinterpret_cast<signed char*>(&ecx11)) 
                    break;
                ecx11 = ecx11 & 0xff;
                if (*reinterpret_cast<unsigned char*>(ecx11 + 0x42ee61) & 4 && (*edi8 = *edi8 + 1, !!esi7)) {
                    *reinterpret_cast<void***>(esi7) = eax9->f0;
                    ++esi7;
                    eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
                }
                *edi8 = *edi8 + 1;
                if (esi7) {
                    *reinterpret_cast<void***>(esi7) = eax9->f0;
                    ++esi7;
                }
                *reinterpret_cast<signed char*>(&ecx11) = eax9->f1;
                eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
            } while (*reinterpret_cast<signed char*>(&ecx11) != 34);
        }
        *edi8 = *edi8 + 1;
        if (esi7) {
            *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(0);
            ++esi7;
        }
        if (reinterpret_cast<int1_t>(eax9->f0 == 34)) {
            eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
        }
    }
    edx12 = 0;
    v13 = 0;
    while (eax9->f0) {
        while (eax9->f0 == 32 || reinterpret_cast<int1_t>(eax9->f0 == 9)) {
            eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
        }
        if (!eax9->f0) 
            break;
        if (ebp6) {
            *reinterpret_cast<void***>(ebp6) = esi7;
            a2 = ebp6 + 4;
        }
        *a4 = *a4 + 1;
        while (1) {
            ecx14 = 0;
            ebp15 = 1;
            if (reinterpret_cast<int1_t>(eax9->f0 == 92)) {
                do {
                    eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
                    ++ecx14;
                } while (eax9->f1 == 92);
            }
            if (reinterpret_cast<int1_t>(eax9->f0 == 34)) {
                if (!(*reinterpret_cast<unsigned char*>(&ecx14) & 1)) {
                    if (!edx12 || eax9->f1 != 34) {
                        ebp15 = 0;
                    } else {
                        eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
                    }
                    edx12 = 0;
                    *reinterpret_cast<unsigned char*>(&edx12) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(v13 == 0));
                    v13 = edx12;
                }
                ecx14 = ecx14 >> 1;
            }
            ecx16 = ecx14 - 1;
            if (ecx14) {
                ++ecx16;
                do {
                    if (esi7) {
                        *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(92);
                        ++esi7;
                    }
                    --ecx16;
                    *edi8 = *edi8 + 1;
                } while (ecx16);
            }
            *reinterpret_cast<void***>(&ecx16) = eax9->f0;
            if (!*reinterpret_cast<void***>(&ecx16)) 
                break;
            if (edx12) 
                goto addr_0x41b74c_52;
            if (*reinterpret_cast<void***>(&ecx16) == 32) 
                break;
            if (*reinterpret_cast<void***>(&ecx16) == 9) 
                break;
            addr_0x41b74c_52:
            if (ebp15) {
                if (!esi7) {
                    if (*reinterpret_cast<unsigned char*>((ecx16 & 0xff) + 0x42ee61) & 4) {
                        eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
                        *edi8 = *edi8 + 1;
                    }
                    *edi8 = *edi8 + 1;
                } else {
                    if (*reinterpret_cast<unsigned char*>((ecx16 & 0xff) + 0x42ee61) & 4) {
                        *reinterpret_cast<void***>(esi7) = *reinterpret_cast<void***>(&ecx16);
                        ++esi7;
                        eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
                        *edi8 = *edi8 + 1;
                    }
                    *reinterpret_cast<void***>(esi7) = eax9->f0;
                    ++esi7;
                    *edi8 = *edi8 + 1;
                    eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
                    continue;
                }
            }
            eax9 = reinterpret_cast<struct s35*>(&eax9->f1);
        }
        if (esi7) {
            *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(0);
            ++esi7;
        }
        ebp6 = a2;
        *edi8 = *edi8 + 1;
    }
    if (ebp6) {
        *reinterpret_cast<void***>(ebp6) = reinterpret_cast<void**>(0);
    }
    *a4 = *a4 + 1;
    return;
}

int32_t g42f0e0;

int32_t LoadLibraryA = 0x325f4;

int32_t g42f0e4;

int32_t g42f0e8;

void fun_41d930(void* a1, int32_t a2, int32_t a3) {
    int32_t eax4;
    int32_t ebx5;
    int32_t eax6;
    int32_t edi7;
    int32_t eax8;
    int32_t ebx9;
    int32_t eax10;
    int32_t eax11;
    int32_t eax12;
    int32_t eax13;
    int32_t eax14;

    eax4 = g42f0e0;
    ebx5 = 0;
    if (!eax4) {
        eax6 = reinterpret_cast<int32_t>(LoadLibraryA());
        if (!eax6 || (edi7 = GetProcAddress, eax8 = reinterpret_cast<int32_t>(edi7(eax6, "MessageBoxA")), g42f0e0 = eax8, eax8 == 0)) {
            goto ebx9;
        } else {
            eax10 = reinterpret_cast<int32_t>(edi7(eax6, "GetActiveWindow", eax6, "MessageBoxA"));
            g42f0e4 = eax10;
            eax11 = reinterpret_cast<int32_t>(edi7(eax6, "GetLastActivePopup", eax6, "GetActiveWindow", eax6, "MessageBoxA"));
            g42f0e8 = eax11;
        }
    }
    eax12 = g42f0e4;
    if (eax12) {
        eax13 = reinterpret_cast<int32_t>(eax12());
        ebx5 = eax13;
    }
    if (ebx5 && (eax14 = g42f0e8, !!eax14)) {
        eax14(ebx5);
    }
    g42f0e0();
    goto a3;
}

void** fun_41bf80(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    void** v16;
    void** esi17;
    void** ecx18;
    void** v19;
    void** v20;
    void** ecx21;
    void** v22;
    void** v23;
    void** ecx24;
    void** v25;
    void** v26;
    void** ecx27;
    void** v28;
    void** v29;
    void** ecx30;
    void** v31;
    void** v32;
    void** ecx33;
    void** v34;
    void** v35;
    void** ecx36;
    void** v37;
    void** v38;
    void** ecx39;
    void** v40;
    void** v41;
    void** ecx42;
    void** v43;
    void** v44;
    void** ecx45;
    void** v46;
    void** v47;
    void** ecx48;
    void** v49;
    void** v50;
    void** ecx51;
    void** v52;
    void** v53;
    void** ecx54;
    void** v55;
    void** v56;
    void** ecx57;
    void** v58;
    void** v59;
    void** eax60;

    if (a2) {
        v16 = *reinterpret_cast<void***>(a2 + 4);
        fun_414d40(ecx, v16, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx18 = *reinterpret_cast<void***>(a2 + 8);
        fun_414d40(ecx18, ecx18, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v19 = *reinterpret_cast<void***>(a2 + 12);
        fun_414d40(ecx18, v19, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v20 = *reinterpret_cast<void***>(a2 + 16);
        fun_414d40(ecx18, v20, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx21 = *reinterpret_cast<void***>(a2 + 20);
        fun_414d40(ecx21, ecx21, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v22 = *reinterpret_cast<void***>(a2 + 24);
        fun_414d40(ecx21, v22, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v23 = *reinterpret_cast<void***>(a2);
        fun_414d40(ecx21, v23, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx24 = *reinterpret_cast<void***>(a2 + 32);
        fun_414d40(ecx24, ecx24, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v25 = *reinterpret_cast<void***>(a2 + 36);
        fun_414d40(ecx24, v25, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v26 = *reinterpret_cast<void***>(a2 + 40);
        fun_414d40(ecx24, v26, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx27 = *reinterpret_cast<void***>(a2 + 44);
        fun_414d40(ecx27, ecx27, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v28 = *reinterpret_cast<void***>(a2 + 48);
        fun_414d40(ecx27, v28, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v29 = *reinterpret_cast<void***>(a2 + 52);
        fun_414d40(ecx27, v29, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx30 = *reinterpret_cast<void***>(a2 + 28);
        fun_414d40(ecx30, ecx30, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v31 = *reinterpret_cast<void***>(a2 + 56);
        fun_414d40(ecx30, v31, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v32 = *reinterpret_cast<void***>(a2 + 60);
        fun_414d40(ecx30, v32, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx33 = *reinterpret_cast<void***>(a2 + 64);
        fun_414d40(ecx33, ecx33, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v34 = *reinterpret_cast<void***>(a2 + 68);
        fun_414d40(ecx33, v34, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v35 = *reinterpret_cast<void***>(a2 + 72);
        fun_414d40(ecx33, v35, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx36 = *reinterpret_cast<void***>(a2 + 76);
        fun_414d40(ecx36, ecx36, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v37 = *reinterpret_cast<void***>(a2 + 80);
        fun_414d40(ecx36, v37, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v38 = *reinterpret_cast<void***>(a2 + 84);
        fun_414d40(ecx36, v38, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx39 = *reinterpret_cast<void***>(a2 + 88);
        fun_414d40(ecx39, ecx39, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v40 = *reinterpret_cast<void***>(a2 + 92);
        fun_414d40(ecx39, v40, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v41 = *reinterpret_cast<void***>(a2 + 96);
        fun_414d40(ecx39, v41, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx42 = *reinterpret_cast<void***>(a2 + 100);
        fun_414d40(ecx42, ecx42, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v43 = *reinterpret_cast<void***>(a2 + 0x68);
        fun_414d40(ecx42, v43, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v44 = *reinterpret_cast<void***>(a2 + 0x6c);
        fun_414d40(ecx42, v44, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx45 = *reinterpret_cast<void***>(a2 + 0x70);
        fun_414d40(ecx45, ecx45, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v46 = *reinterpret_cast<void***>(a2 + 0x74);
        fun_414d40(ecx45, v46, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v47 = *reinterpret_cast<void***>(a2 + 0x78);
        fun_414d40(ecx45, v47, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx48 = *reinterpret_cast<void***>(a2 + 0x7c);
        fun_414d40(ecx48, ecx48, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v49 = *reinterpret_cast<void***>(a2 + 0x80);
        fun_414d40(ecx48, v49, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v50 = *reinterpret_cast<void***>(a2 + 0x84);
        fun_414d40(ecx48, v50, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx51 = *reinterpret_cast<void***>(a2 + 0x88);
        fun_414d40(ecx51, ecx51, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v52 = *reinterpret_cast<void***>(a2 + 0x8c);
        fun_414d40(ecx51, v52, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v53 = *reinterpret_cast<void***>(a2 + 0x90);
        fun_414d40(ecx51, v53, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx54 = *reinterpret_cast<void***>(a2 + 0x94);
        fun_414d40(ecx54, ecx54, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v55 = *reinterpret_cast<void***>(a2 + 0x98);
        fun_414d40(ecx54, v55, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v56 = *reinterpret_cast<void***>(a2 + 0x9c);
        fun_414d40(ecx54, v56, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx57 = *reinterpret_cast<void***>(a2 + 0xa0);
        fun_414d40(ecx57, ecx57, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v58 = *reinterpret_cast<void***>(a2 + 0xa4);
        fun_414d40(ecx57, v58, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v59 = *reinterpret_cast<void***>(a2 + 0xa8);
        eax60 = fun_414d40(ecx57, v59, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    }
    return eax60;
}

void** fun_41db70(void** a1, void** a2, void** a3, int32_t a4, void** a5);

void** fun_41dca0(void** a1, void** a2, void** a3, void** a4, void** a5);

uint32_t fun_41d9c0(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;
    void** edi6;
    void** esi7;
    void** eax8;
    void* bl9;
    uint32_t v10;
    void** eax11;
    void** eax12;
    void** ecx13;
    int16_t ax14;
    void* esp15;
    void** edi16;
    void** v17;
    void** eax18;
    void** esi19;
    int32_t eax20;
    void** eax21;
    void** edi22;
    void** esi23;
    void** ebp24;
    void** ebx25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** eax32;
    void** eax33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** eax40;
    void** ecx41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;

    if (!reinterpret_cast<int1_t>(a1 == 1)) {
        if (a1 || (eax5 = fun_41db70(a2, a3, 0x42f0f8, 4, a1), eax5 == 0)) {
            return 0xffffffff;
        } else {
            edi6 = a4;
            esi7 = reinterpret_cast<void**>(0x42f0f8);
            *reinterpret_cast<void***>(edi6) = reinterpret_cast<void**>(0);
            do {
                eax8 = g42adcc;
                bl9 = *esi7;
                *reinterpret_cast<void**>(&v10) = bl9;
                if (reinterpret_cast<signed char>(eax8) <= reinterpret_cast<signed char>(1)) {
                    eax11 = __image_base;
                    eax11 = *reinterpret_cast<void***>(eax11 + (v10 & 0xff) * 2);
                    eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax11) & 4);
                } else {
                    ecx13 = reinterpret_cast<void**>(v10 & 0xff);
                    eax12 = fun_415fc0(ecx13, ecx13, 4);
                }
            } while (eax12 && (ax14 = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi6)) * 10), esi7 = esi7 + 2, *reinterpret_cast<void***>(edi6) = reinterpret_cast<void**>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ax14) + reinterpret_cast<signed char>(bl9)) - 48), reinterpret_cast<int32_t>(esi7) < 0x42f100));
        }
    } else {
        esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x84 - 4 - 4 - 4 - 4 - 4);
        edi16 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp15) - 4 - 4 - 4 - 4 + 40);
        v17 = reinterpret_cast<void**>(0);
        eax18 = fun_41dca0(a2, a3, reinterpret_cast<int32_t>(esp15) + 24, 0x80, 0);
        esi19 = eax18;
        if (!esi19 && ((eax20 = reinterpret_cast<int32_t>(GetLastError()), eax20 != 0x7a) || ((eax21 = fun_41dca0(a2, a3, esi19, esi19, esi19), eax21 == 0) || ((eax32 = fun_414db0(eax21, edi22, esi23, ebp24, ebx25, 0, v26, v27, v28, v29, v30, v31), edi16 = eax32, edi16 == 0) || (v17 = reinterpret_cast<void**>(1), eax33 = fun_41dca0(a2, a3, edi16, eax21, 0), esi19 = eax33, esi19 == 0)))) || (eax40 = fun_414db0(esi19, edi22, esi23, ebp24, ebx25, v17, v34, v35, v36, v37, v38, v39), ecx41 = a4, *reinterpret_cast<void***>(ecx41) = eax40, !eax40)) {
            if (v17) {
                fun_414d40(ecx41, edi16, edi22, esi23, ebp24, ebx25, v17, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52);
                return 0xffffffff;
            }
        } else {
            fun_414c40(eax40, edi16, esi19);
            if (v17) {
                fun_414d40(ecx41, edi16, edi22, esi23, ebp24, ebx25, v17, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63);
                return 0;
            }
        }
    }
    return 0;
}

void fun_41c4c0(void** a1) {
    void** ecx2;
    void** al3;
    void** eax4;

    ecx2 = a1;
    al3 = *reinterpret_cast<void***>(ecx2);
    if (al3) {
        while (1) {
            if (reinterpret_cast<signed char>(al3) < reinterpret_cast<signed char>(48) || reinterpret_cast<signed char>(al3) > reinterpret_cast<signed char>(57)) {
                if (!reinterpret_cast<int1_t>(al3 == 59)) {
                    addr_0x41c4d6_4:
                    ++ecx2;
                } else {
                    eax4 = ecx2;
                    do {
                        *reinterpret_cast<void***>(eax4) = *reinterpret_cast<void***>(eax4 + 1);
                        ++eax4;
                    } while (*reinterpret_cast<void***>(eax4 + 1));
                }
                al3 = *reinterpret_cast<void***>(ecx2);
                if (!al3) 
                    break;
            } else {
                *reinterpret_cast<void***>(ecx2) = al3 - 48;
                goto addr_0x41c4d6_4;
            }
        }
    }
    return;
}

void** fun_41c740(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    void** eax16;
    void** esi17;
    void** v18;
    void** ecx19;
    void** v20;
    void** v21;
    void** ecx22;
    void** v23;

    if (a2 && (eax16 = *reinterpret_cast<void***>(a2 + 12), eax16 != 0x42f100)) {
        fun_414d40(ecx, eax16, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v18 = *reinterpret_cast<void***>(a2 + 16);
        fun_414d40(ecx, v18, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx19 = *reinterpret_cast<void***>(a2 + 20);
        fun_414d40(ecx19, ecx19, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v20 = *reinterpret_cast<void***>(a2 + 24);
        fun_414d40(ecx19, v20, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v21 = *reinterpret_cast<void***>(a2 + 28);
        fun_414d40(ecx19, v21, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        ecx22 = *reinterpret_cast<void***>(a2 + 32);
        fun_414d40(ecx22, ecx22, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        v23 = *reinterpret_cast<void***>(a2 + 36);
        eax16 = fun_414d40(ecx22, v23, esi17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    }
    return eax16;
}

void** g42ee58;

int32_t GetStringTypeA = 0x32b3c;

int32_t GetStringTypeW = 0x32b4e;

void** g42ed60;

int32_t MultiByteToWideChar = 0x32aa2;

void** fun_41a2c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    void** eax9;
    int32_t esi10;
    void** edi11;
    int32_t eax12;
    int32_t eax13;
    void** ebx14;
    void** eax15;
    void** edi16;
    void** eax17;
    void** eax18;
    void** esi19;
    void** ebp20;
    void** ebx21;

    v8 = ecx;
    eax9 = g42ee58;
    esi10 = GetStringTypeA;
    edi11 = reinterpret_cast<void**>(0);
    if (!eax9) {
        eax12 = reinterpret_cast<int32_t>(esi10());
        if (!eax12) {
            ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 18);
            eax13 = reinterpret_cast<int32_t>(GetStringTypeW());
            if (!eax13) {
                goto 1;
            } else {
                eax9 = reinterpret_cast<void**>(1);
                g42ee58 = reinterpret_cast<void**>(1);
            }
        } else {
            eax9 = reinterpret_cast<void**>(2);
            g42ee58 = reinterpret_cast<void**>(2);
        }
    }
    if (!reinterpret_cast<int1_t>(eax9 == 2)) {
        if (reinterpret_cast<int1_t>(eax9 == 1)) {
            ebx14 = a6;
            if (!ebx14) {
                ebx14 = g42ed60;
            }
            eax15 = reinterpret_cast<void**>(MultiByteToWideChar());
            if (!eax15 || ((eax17 = fun_41d0f0(2, eax15, ebx14, 9, a3, a4, 0, 0, edi16), edi11 = eax17, edi11 == 0) || (eax18 = reinterpret_cast<void**>(MultiByteToWideChar()), eax18 == 0))) {
                fun_414d40(ecx, edi11, ebx14, 9, a3, a4, 0, 0, edi16, esi19, ebp20, ebx21, v8, __return_address(), a2, a3, a4, a5);
                eax9 = reinterpret_cast<void**>(__return_address());
            } else {
                GetStringTypeW();
                fun_414d40(a4, edi11, ebx14, edi11, eax18, a4, ebx14, 1, esi19, a4, edi11, eax15, ebx14, 9, a3, a4, 0, 0);
                goto 1;
            }
        }
        return eax9;
    } else {
        if (!a7) {
        }
        esi10();
        goto edi16;
    }
}

void** g42ee54;

void** fun_41a130(void** ecx, int32_t a2, void** a3, void** a4, void** a5, void** a6, int32_t a7) {
    void** eax8;
    void** ebx9;
    int32_t esi10;
    void** v11;
    int32_t eax12;
    int32_t eax13;
    int32_t esi14;
    void** eax15;
    void** eax16;
    void** eax17;
    void** ecx18;
    void** ebp19;
    void** v20;
    int32_t eax21;
    void** eax22;
    void** eax23;
    void* edi24;
    int32_t eax25;
    int1_t zf26;

    eax8 = g42ee54;
    ebx9 = reinterpret_cast<void**>(0);
    esi10 = GetStringTypeW;
    if (!eax8) {
        v11 = reinterpret_cast<void**>(0x428078);
        eax12 = reinterpret_cast<int32_t>(esi10());
        if (!eax12) {
            eax13 = reinterpret_cast<int32_t>(GetStringTypeA(0));
            if (!eax13) {
                addr_0x41a204_4:
                goto v11;
            } else {
                eax8 = reinterpret_cast<void**>(2);
            }
        } else {
            eax8 = reinterpret_cast<void**>(1);
        }
        g42ee54 = eax8;
    }
    if (reinterpret_cast<int1_t>(eax8 == 1)) {
        esi10();
        goto esi14;
    }
    if (!reinterpret_cast<int1_t>(eax8 == 2)) {
        addr_0x41a2ae_11:
        return eax8;
    } else {
        if (!a6) {
            eax15 = g42ed60;
            a6 = eax15;
        }
        v11 = reinterpret_cast<void**>(0);
        eax16 = reinterpret_cast<void**>(WideCharToMultiByte());
        if (!eax16) {
            goto 0;
        }
        eax17 = fun_41d0f0(1, eax16, a6, 0x220, a3, a4, 0, 0, 0);
        if (!eax17) 
            goto addr_0x41a204_4;
    }
    ecx18 = ebp19;
    v20 = ecx18;
    eax21 = reinterpret_cast<int32_t>(WideCharToMultiByte(v20, 0x220, 0, a4));
    if (eax21 && (eax22 = fun_414db0(reinterpret_cast<unsigned char>(eax16) + reinterpret_cast<unsigned char>(eax16) + 2, v20, 0x220, 0, a4, eax17, eax16, 0, 0, a6, 0x220, a3), ebx9 = eax22, !!ebx9)) {
        eax23 = a4;
        if (!eax23) {
            eax23 = g42ed50;
        }
        ecx18 = reinterpret_cast<void**>(0);
        edi24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(a4) + reinterpret_cast<unsigned char>(a4));
        *reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(ebx9) + reinterpret_cast<uint32_t>(edi24)) = -1;
        *reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(ebx9) + reinterpret_cast<uint32_t>(edi24) + 0xfffffffe) = -1;
        eax25 = reinterpret_cast<int32_t>(GetStringTypeA(eax23, 0, eax17, eax16, ebx9, v20, 0x220, 0, a4));
        zf26 = *reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(ebx9) + reinterpret_cast<uint32_t>(edi24) + 0xfffffffe) == -1;
        if (!(zf26 || *reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(ebx9) + reinterpret_cast<uint32_t>(edi24)) != -1)) {
            fun_41d580(eax17, ebx9, edi24, eax23, 0, eax17, eax16, eax25, v20, 0x220, 0, a4);
        }
    }
    fun_414d40(ecx18, eax17, v20, 0x220, 0, a4, eax17, eax16, 0, 0, a6, 0x220, a3, a4, 0, 0, 0, 0);
    fun_414d40(ecx18, ebx9, v20, 0x220, 0, a4, eax17, eax16, 0, 0, a6, 0x220, a3, a4, 0, 0, 0, 0);
    eax8 = eax17;
    goto addr_0x41a2ae_11;
}

void** g42ee28;

void** fun_4195b0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** eax12;
    void** eax13;

    eax12 = g42ee28;
    if (!eax12) {
        fun_417120(ecx, 11, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
        eax13 = g42ee28;
        if (!eax13) {
            fun_4195f0(ecx, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
            ++g42ee28;
        }
        eax12 = fun_4171a0(11);
    }
    return eax12;
}

void** fun_415d70(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void** esi10;
    void* esp11;
    void** eax12;
    void** esi13;
    int32_t eax14;
    void** eax15;
    void* ecx16;
    void* eax17;
    void* v18;
    void** edx19;
    void* edx20;
    void* eax21;
    void* v22;
    void** edx23;
    void* edx24;
    void* eax25;
    void** edx26;
    void* edx27;
    uint1_t less28;
    void** eax29;
    void** eax30;
    void** eax31;
    void** eax32;
    void** ecx33;
    void** eax34;
    void** eax35;
    void** eax36;
    int32_t eax37;
    void** ecx38;
    void** eax39;

    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a2)) >= reinterpret_cast<signed char>(0)) {
        fun_4195b0(ecx, esi10, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
        esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 + 4);
        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a2)) <= reinterpret_cast<signed char>(0x3f480) || reinterpret_cast<signed char>(*reinterpret_cast<void***>(a2)) >= reinterpret_cast<signed char>(0x7ffc0b7f)) {
            eax12 = fun_419d10(a2, esi10, __return_address(), a2, a3, a4);
            esi13 = eax12;
            eax14 = fun_4198d0(ecx, esi13, esi10, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
            eax15 = *reinterpret_cast<void***>(esi13);
            if (eax14) {
                eax15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax15) - reinterpret_cast<unsigned char>(g42d448));
            }
            ecx16 = g42d440;
            eax17 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax15) - reinterpret_cast<uint32_t>(ecx16));
            v18 = eax17;
            __asm__("cdq ");
            edx19 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax17) % reinterpret_cast<int32_t>(60));
            *reinterpret_cast<void***>(esi13) = edx19;
            if (reinterpret_cast<signed char>(edx19) < reinterpret_cast<signed char>(0)) {
                *reinterpret_cast<void***>(esi13) = edx19 + 60;
                v18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v18) - 60);
            }
            edx20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint32_t>(v18)) >> 5);
            eax21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx20) + (reinterpret_cast<uint32_t>(edx20) >> 31) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi13 + 4)));
            v22 = eax21;
            __asm__("cdq ");
            edx23 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax21) % reinterpret_cast<int32_t>(60));
            *reinterpret_cast<void***>(esi13 + 4) = edx23;
            if (reinterpret_cast<signed char>(edx23) < reinterpret_cast<signed char>(0)) {
                *reinterpret_cast<void***>(esi13 + 4) = edx23 + 60;
                v22 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v22) - 60);
            }
            edx24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint32_t>(v22)) >> 5);
            eax25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx24) + (reinterpret_cast<uint32_t>(edx24) >> 31) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi13 + 8)));
            __asm__("cdq ");
            edx26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax25) % reinterpret_cast<int32_t>(24));
            *reinterpret_cast<void***>(esi13 + 8) = edx26;
            if (reinterpret_cast<signed char>(edx26) < reinterpret_cast<signed char>(0)) {
                *reinterpret_cast<void***>(esi13 + 8) = edx26 + 24;
            }
            edx27 = reinterpret_cast<void*>(__intrinsic() >> 2);
            less28 = reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(edx27) + (reinterpret_cast<uint32_t>(edx27) >> 31)) < reinterpret_cast<int32_t>(0));
            if (less28 | reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edx27) + (reinterpret_cast<uint32_t>(edx27) >> 31) == 0)) {
                if (less28) {
                    __asm__("cdq ");
                    eax29 = *reinterpret_cast<void***>(esi13 + 12);
                    *reinterpret_cast<void***>(esi13 + 24) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(edx27) + (reinterpret_cast<uint32_t>(edx27) >> 31) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi13 + 24)) + 7) % 7);
                    eax30 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax29) + (reinterpret_cast<uint32_t>(edx27) + (reinterpret_cast<uint32_t>(edx27) >> 31)));
                    *reinterpret_cast<void***>(esi13 + 12) = eax30;
                    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax30) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax30 == 0))) {
                        *reinterpret_cast<void***>(esi13 + 28) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi13 + 28)) + (reinterpret_cast<uint32_t>(edx27) + (reinterpret_cast<uint32_t>(edx27) >> 31)));
                    } else {
                        *reinterpret_cast<void***>(esi13 + 28) = reinterpret_cast<void**>(0x16c);
                        *reinterpret_cast<void***>(esi13 + 12) = eax30 + 31;
                        eax31 = *reinterpret_cast<void***>(esi13 + 20) - 1;
                        *reinterpret_cast<void***>(esi13 + 16) = reinterpret_cast<void**>(11);
                        *reinterpret_cast<void***>(esi13 + 20) = eax31;
                        return esi13;
                    }
                }
            } else {
                __asm__("cdq ");
                eax32 = *reinterpret_cast<void***>(esi13 + 12);
                ecx33 = *reinterpret_cast<void***>(esi13 + 28);
                *reinterpret_cast<void***>(esi13 + 24) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(edx27) + (reinterpret_cast<uint32_t>(edx27) >> 31) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi13 + 24))) % 7);
                *reinterpret_cast<void***>(esi13 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax32) + (reinterpret_cast<uint32_t>(edx27) + (reinterpret_cast<uint32_t>(edx27) >> 31)));
                *reinterpret_cast<void***>(esi13 + 28) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx33) + (reinterpret_cast<uint32_t>(edx27) + (reinterpret_cast<uint32_t>(edx27) >> 31)));
                return esi13;
            }
        } else {
            eax34 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) - reinterpret_cast<uint32_t>(g42d440));
            eax35 = fun_419d10(reinterpret_cast<int32_t>(esp11) + 8, esi10, __return_address(), eax34, a3, a4);
            esi13 = eax35;
            eax36 = g42d444;
            if (eax36 && (eax37 = fun_4198d0(ecx, esi13, esi10, __return_address(), eax34, a3, a4, a5, a6, a7, a8, a9), !!eax37)) {
                ecx38 = g42d448;
                eax39 = fun_419d10(reinterpret_cast<int32_t>(esp11) - 4 - 4 + 4 + 4 - 4 - 4 + 4 + 4 + 8, esi10, __return_address(), reinterpret_cast<unsigned char>(eax34) - reinterpret_cast<unsigned char>(ecx38), a3, a4);
                *reinterpret_cast<void***>(eax39 + 32) = reinterpret_cast<void**>(1);
                return eax39;
            }
        }
        return esi13;
    } else {
        return 0;
    }
}

void** fun_41d040(void** a1, void** a2, void** a3, int32_t a4) {
    void** esi5;
    void** eax6;
    int32_t eax7;
    void** eax8;
    uint32_t esi9;
    uint32_t ecx10;
    void** eax11;

    eax6 = fun_41ab00(a1, esi5);
    if (!reinterpret_cast<int1_t>(eax6 == 0xffffffff)) {
        eax7 = reinterpret_cast<int32_t>(SetFilePointer());
        if (eax7 != -1 || (eax8 = reinterpret_cast<void**>(GetLastError()), eax8 == 0)) {
            esi9 = reinterpret_cast<unsigned char>(a1) & 31;
            ecx10 = esi9 + esi9 * 8;
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + ecx10 * 4 + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280)) + ecx10 * 4 + 4) & 0xfd);
            goto a4;
        } else {
            fun_418fa0(eax8);
            goto a4;
        }
    } else {
        eax11 = fun_419020(esi5, a2, a3);
        *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(9);
        return 0xffffffff;
    }
}

void fun_4171c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

void** fun_415a10(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14);

void** fun_417230(void** a1);

void** fun_4159d0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** edi11;
    void** esi12;
    void** eax13;

    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) & 64)) {
        fun_4171c0(ecx, a2, edi11, esi12, __return_address(), a2, a3, a4, a5, a6);
        eax13 = fun_415a10(ecx, a2, edi11, esi12, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10);
        fun_417230(a2);
        return eax13;
    } else {
        *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(0);
        return 0xffffffff;
    }
}

void** fun_41d4b0(void** a1, void** a2) {
    void** edx3;
    void** esi4;
    void** eax5;
    void** ecx6;

    edx3 = a1;
    esi4 = a2;
    eax5 = edx3;
    ecx6 = esi4;
    if (!ecx6) {
        addr_0x41d4de_2:
        return esi4;
    } else {
        do {
            if (!*reinterpret_cast<void***>(eax5)) 
                break;
            eax5 = eax5 + 2;
            --ecx6;
        } while (ecx6);
        if (!ecx6) 
            goto addr_0x41d4de_2;
        if (*reinterpret_cast<void***>(eax5)) 
            goto addr_0x41d4de_2;
    }
    return (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax5) - reinterpret_cast<unsigned char>(edx3)) >> 1) + 1;
}

void** fun_4162e0(void** a1) {
    void** ecx2;
    void*** eax3;

    ecx2 = a1;
    eax3 = reinterpret_cast<void***>(ecx2 + 2);
    if (*reinterpret_cast<void***>(ecx2)) {
        do {
            eax3 = eax3 + 2;
        } while (*eax3);
    }
    return (reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(eax3) - reinterpret_cast<unsigned char>(ecx2)) >> 1) - 1;
}

void** g42ec88;

int32_t fun_41e250(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11);

int32_t fun_41df00(void** ecx) {
    void** ebx2;
    void** v3;
    void** ebp4;
    void** v5;
    void** esi6;
    void** eax7;
    void** v8;
    void** edi9;
    int32_t ebp10;
    void** eax11;
    void** esi12;
    void** edi13;
    void** eax14;

    ebx2 = g42ec88;
    v3 = ebp4;
    v5 = esi6;
    eax7 = *reinterpret_cast<void***>(ebx2);
    v8 = edi9;
    if (!eax7) {
        return 0;
    }
    ebp10 = WideCharToMultiByte;
    do {
        eax11 = reinterpret_cast<void**>(ebp10());
        esi12 = eax11;
        if (!esi12) 
            break;
        eax11 = fun_414db0(esi12, 1, 0, eax7, 0xff, 0, 0, 0, 0, v8, v5, v3);
        edi13 = eax11;
        if (!edi13) 
            break;
        eax14 = *reinterpret_cast<void***>(ebx2);
        eax11 = reinterpret_cast<void**>(ebp10());
        if (!eax11) 
            break;
        fun_41e250(ecx, edi13, 0, 1, 0, eax14, 0xff, edi13, esi12, 0, 0);
        eax7 = *reinterpret_cast<void***>(ebx2 + 4);
        ebx2 = ebx2 + 4;
    } while (eax7);
    goto addr_0x41df66_8;
    goto 0;
    addr_0x41df66_8:
    goto edi13;
}

void** fun_41df80(void** a1, int32_t a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_41dec0(void** a1, void** a2, void** a3) {
    void** ecx4;
    void** ecx5;
    void** eax6;

    if (a3) {
        ecx4 = g42ef64;
        ecx5 = g42ef68;
        eax6 = fun_41df80(ecx5, 1, a1, a3, a2, a3, ecx4);
        if (eax6) {
            return eax6 + 0xfffffffe;
        } else {
            return 0x7fffffff;
        }
    } else {
        return a3;
    }
}

void** g42f108;

int32_t GetLocaleInfoA = 0x32c46;

int32_t GetLocaleInfoW = 0x32c58;

void** fun_41dca0(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** eax6;
    int32_t esi7;
    void** v8;
    int32_t eax9;
    int32_t eax10;
    void** edi11;
    void** ecx12;
    void** eax13;
    void** esi14;
    void** ebp15;
    void** ebx16;
    void** eax17;
    int32_t eax18;
    void** eax19;
    int32_t eax20;

    eax6 = g42f108;
    esi7 = GetLocaleInfoA;
    if (!eax6) {
        v8 = reinterpret_cast<void**>(0);
        eax9 = reinterpret_cast<int32_t>(esi7());
        if (!eax9) {
            eax10 = reinterpret_cast<int32_t>(GetLocaleInfoW());
            if (!eax10) {
                addr_0x41ddc8_4:
                goto v8;
            } else {
                eax6 = reinterpret_cast<void**>(1);
            }
        } else {
            eax6 = reinterpret_cast<void**>(2);
        }
        g42f108 = eax6;
    }
    if (reinterpret_cast<int1_t>(eax6 == 2)) {
        esi7();
        goto edi11;
    }
    if (!reinterpret_cast<int1_t>(eax6 == 1)) {
        addr_0x41ddda_11:
        return eax6;
    } else {
        if (!a5) {
            ecx12 = g42ed60;
        }
        v8 = a1;
        eax13 = reinterpret_cast<void**>(GetLocaleInfoW());
        if (!eax13) {
            goto edi11;
        }
        eax17 = fun_414db0(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13), v8, a2, 0, 0, edi11, esi14, ebp15, ebx16, __return_address(), a1, a2);
        if (!eax17) {
            goto edi11;
        }
        eax18 = reinterpret_cast<int32_t>(GetLocaleInfoW());
        if (!eax18) 
            goto addr_0x41ddbf_19;
        if (!edi11) 
            goto addr_0x41dd73_21;
    }
    ecx12 = reinterpret_cast<void**>(0);
    eax19 = reinterpret_cast<void**>(WideCharToMultiByte(esi14, 0x220, eax17, 0xff, 0, edi11, 0, 0));
    if (eax19) {
        fun_414d40(0, eax17, esi14, 0x220, eax17, 0xff, 0, edi11, 0, 0, a1, a2, eax17, eax13, v8, a2, 0, 0);
        eax6 = eax19;
        goto addr_0x41ddda_11;
    } else {
        addr_0x41ddbf_19:
        fun_414d40(ecx12, eax17, a1, a2, eax17, eax13, v8, a2, 0, 0, edi11, esi14, ebp15, ebx16, __return_address(), a1, a2, a3);
        goto addr_0x41ddc8_4;
    }
    addr_0x41dd73_21:
    eax20 = reinterpret_cast<int32_t>(WideCharToMultiByte());
    if (eax20) {
        fun_414d40(ecx12, eax17, esi14, 0x220, eax17, 0xff, 0, 0, 0, 0, a1, a2, eax17, eax13, v8, a2, 0, 0);
        goto 0;
    }
}

void** g42f104;

void** fun_41db70(void** a1, void** a2, void** a3, int32_t a4, void** a5) {
    void** eax6;
    int32_t esi7;
    void** v8;
    int32_t eax9;
    int32_t eax10;
    void** edi11;
    void** ecx12;
    void** eax13;
    void** esi14;
    void** ebp15;
    void** ebx16;
    void** eax17;
    int32_t eax18;
    void** eax19;
    int32_t eax20;

    eax6 = g42f104;
    esi7 = GetLocaleInfoW;
    if (!eax6) {
        v8 = reinterpret_cast<void**>(0);
        eax9 = reinterpret_cast<int32_t>(esi7());
        if (!eax9) {
            eax10 = reinterpret_cast<int32_t>(GetLocaleInfoA());
            if (!eax10) {
                addr_0x41dc89_4:
                goto v8;
            } else {
                eax6 = reinterpret_cast<void**>(2);
            }
        } else {
            eax6 = reinterpret_cast<void**>(1);
        }
        g42f104 = eax6;
    }
    if (reinterpret_cast<int1_t>(eax6 == 1)) {
        esi7();
        goto edi11;
    }
    if (!reinterpret_cast<int1_t>(eax6 == 2)) {
        addr_0x41dc9b_11:
        return eax6;
    } else {
        if (!a5) {
            ecx12 = g42ed60;
        }
        v8 = a1;
        eax13 = reinterpret_cast<void**>(GetLocaleInfoA());
        if (!eax13) {
            goto edi11;
        }
        eax17 = fun_414db0(eax13, v8, a2, 0, 0, edi11, esi14, ebp15, ebx16, __return_address(), a1, a2);
        if (!eax17) {
            goto edi11;
        }
        eax18 = reinterpret_cast<int32_t>(GetLocaleInfoA());
        if (!eax18) 
            goto addr_0x41dc80_19;
        if (!edi11) 
            goto addr_0x41dc3c_21;
    }
    ecx12 = esi14;
    eax19 = reinterpret_cast<void**>(MultiByteToWideChar(ecx12, 1, eax17, 0xff, 0, edi11));
    if (eax19) {
        fun_414d40(ecx12, eax17, ecx12, 1, eax17, 0xff, 0, edi11, a1, a2, eax17, eax13, v8, a2, 0, 0, edi11, esi14);
        eax6 = eax19;
        goto addr_0x41dc9b_11;
    } else {
        addr_0x41dc80_19:
        fun_414d40(ecx12, eax17, a1, a2, eax17, eax13, v8, a2, 0, 0, edi11, esi14, ebp15, ebx16, __return_address(), a1, a2, a3);
        goto addr_0x41dc89_4;
    }
    addr_0x41dc3c_21:
    eax20 = reinterpret_cast<int32_t>(MultiByteToWideChar());
    if (eax20) {
        fun_414d40(ecx12, eax17, esi14, 1, eax17, 0xff, edi11, edi11, a1, a2, eax17, eax13, v8, a2, 0, 0, edi11, esi14);
        goto edi11;
    }
}

void** fun_414fc0(void** ecx, void** a2, void** a3) {
    void** eax4;
    void* esp5;
    int1_t less_or_equal6;
    void** eax7;
    void** eax8;
    void** edx9;
    void** eax10;
    void* esp11;
    void** eax12;
    void** eax13;
    void** eax14;
    uint32_t v15;
    uint32_t v16;
    uint32_t v17;

    eax4 = g42ed50;
    esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4);
    if (eax4) {
        if (reinterpret_cast<signed char>(a2) < reinterpret_cast<signed char>(0x100)) {
            less_or_equal6 = reinterpret_cast<signed char>(g42adcc) <= reinterpret_cast<signed char>(1);
            if (less_or_equal6) {
                eax7 = __image_base;
                eax7 = *reinterpret_cast<void***>(eax7 + reinterpret_cast<unsigned char>(a2) * 2);
                eax8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax7) & 1);
            } else {
                eax8 = fun_415fc0(ecx, a2, 1);
                esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 - 4 - 4 + 4 + 8);
            }
            if (!eax8) {
                return a2;
            }
        }
        edx9 = __image_base;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx9 + (reinterpret_cast<uint32_t>(reinterpret_cast<signed char>(a2) >> 8) & 0xff) * 2) + 1) & 0x80)) {
            eax10 = reinterpret_cast<void**>(1);
        } else {
            eax10 = reinterpret_cast<void**>(2);
        }
        esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4);
        eax12 = g42ed50;
        eax13 = fun_417b00(eax12, 0x100, reinterpret_cast<int32_t>(esp11) - 4 - 4 + 28, eax10, reinterpret_cast<int32_t>(esp11) + 8, 3, 0);
        if (eax13) {
            if (!reinterpret_cast<int1_t>(eax13 == 1)) {
                eax14 = reinterpret_cast<void**>((v15 & 0xff) << 8 | v16 & 0xff);
            } else {
                return v17 & 0xff;
            }
        } else {
            return a2;
        }
    } else {
        eax14 = a2;
        if (reinterpret_cast<signed char>(eax14) >= reinterpret_cast<signed char>(65) && reinterpret_cast<signed char>(eax14) <= reinterpret_cast<signed char>(90)) {
            return eax14 + 32;
        }
    }
    return eax14;
}

void** fun_41e700(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

void** g42ec84;

void** g42ec80;

void** fun_41e4e0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

int32_t fun_41e460(void** a1, void** a2);

void** fun_41e550(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

struct s54 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

int32_t fun_41e250(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void** v13;
    void** ebx14;
    void** v15;
    void** ebp16;
    void** v17;
    void** esi18;
    void** v19;
    void** edi20;
    void** edi21;
    void** eax22;
    void** esi23;
    void** ecx24;
    int32_t eax25;
    int32_t ebp26;
    void** eax27;
    void** ebx28;
    void** eax29;
    void** v30;
    int32_t eax31;
    int32_t esi32;
    struct s54* edi33;
    struct s54* eax34;
    void** eax35;
    uint32_t ecx36;
    void** eax37;
    void** ebx38;
    void** edi39;
    uint32_t ecx40;
    uint32_t ecx41;
    void** eax42;
    uint32_t edx43;
    void*** esi44;
    void** edi45;
    uint32_t ecx46;
    void** ecx47;
    uint1_t cf48;
    uint32_t ebp49;
    void** eax50;
    void** eax51;
    int32_t eax52;

    v12 = reinterpret_cast<void**>(__return_address());
    v13 = ebx14;
    v15 = ebp16;
    v17 = esi18;
    v19 = edi20;
    edi21 = a2;
    if (!edi21) 
        goto addr_0x41e40e_2;
    eax22 = fun_41e700(ecx, edi21, 61, v19, v17, v15, v13, ecx);
    esi23 = eax22;
    if (!esi23) 
        goto addr_0x41e40e_2;
    if (edi21 == esi23) 
        goto addr_0x41e40e_2;
    ecx24 = g42ec84;
    eax25 = 0;
    *reinterpret_cast<unsigned char*>(&eax25) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(esi23 + 1) == 0));
    ebp26 = eax25;
    eax27 = g42ec80;
    if (eax27 == ecx24) {
        eax27 = fun_41e4e0(eax27, v19, v17, v15, v13, ecx, v12);
        g42ec80 = eax27;
    }
    if (!eax27) 
        goto addr_0x41e2ab_8;
    addr_0x41e322_9:
    ebx28 = eax27;
    eax29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi23) - reinterpret_cast<unsigned char>(edi21));
    v30 = eax29;
    eax31 = fun_41e460(edi21, eax29);
    esi32 = eax31;
    if (esi32 < 0 || !*reinterpret_cast<void***>(ebx28)) {
        if (ebp26) 
            goto addr_0x41e406_11;
        if (esi32 < 0) {
            esi32 = -esi32;
        }
        ecx24 = reinterpret_cast<void**>(esi32 * 4 + 8);
        eax22 = fun_41e550(ecx24, ebx28, ecx24, v19, v17, v15, v13, v30, v12, a2);
        if (!eax22) 
            goto addr_0x41e40e_2;
    } else {
        if (!ebp26) {
            *reinterpret_cast<void***>(ebx28 + esi32 * 4) = edi21;
            goto addr_0x41e397_17;
        } else {
            ecx24 = *reinterpret_cast<void***>(ebx28 + esi32 * 4);
            edi33 = reinterpret_cast<struct s54*>(ebx28 + esi32 * 4);
            fun_414d40(ecx24, ecx24, v19, v17, v15, v13, v30, v12, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
            if (edi33->f0) {
                eax34 = edi33;
                do {
                    eax34 = reinterpret_cast<struct s54*>(&eax34->f4);
                    edi33->f0 = eax34->f4;
                    ++esi32;
                    ecx24 = eax34->f0;
                    edi33 = eax34;
                } while (ecx24);
            }
            eax35 = fun_41e550(ecx24, ebx28, esi32 * 4, v19, v17, v15, v13, v30, v12, a2);
            if (eax35) {
                g42ec80 = eax35;
            }
            edi21 = a2;
            goto addr_0x41e397_17;
        }
    }
    *reinterpret_cast<void***>(eax22 + esi32 * 4) = edi21;
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax22 + esi32 * 4) + 4) = 0;
    g42ec80 = eax22;
    addr_0x41e397_17:
    if (!a3) {
        addr_0x41e406_11:
        return 0;
    } else {
        ecx36 = 0xffffffff;
        do {
            if (!ecx36) 
                break;
            --ecx36;
            ++edi21;
        } while (*reinterpret_cast<void***>(edi21));
        eax37 = fun_414db0(~ecx36 + 1, v19, v17, v15, v13, v30, v12, a2, a3, a4, a5, a6);
        ebx38 = eax37;
        if (!ebx38) 
            goto addr_0x41e406_11;
    }
    edi39 = a2;
    ecx40 = 0xffffffff;
    do {
        if (!ecx40) 
            break;
        --ecx40;
        ++edi39;
    } while (*reinterpret_cast<void***>(edi39));
    ecx41 = ~ecx40;
    eax42 = v30;
    edx43 = ecx41;
    esi44 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi39) - ecx41);
    edi45 = ebx38;
    ecx46 = ecx41 >> 2;
    while (ecx46) {
        --ecx46;
        *reinterpret_cast<void***>(edi45) = *esi44;
        edi45 = edi45 + 4;
        esi44 = esi44 + 4;
    }
    ecx47 = reinterpret_cast<void**>(edx43 & 3);
    cf48 = reinterpret_cast<uint1_t>(!!ebp26);
    ebp49 = reinterpret_cast<uint32_t>(-ebp26);
    while (ecx47) {
        --ecx47;
        *reinterpret_cast<void***>(edi45) = *esi44;
        ++edi45;
        ++esi44;
    }
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx38) + reinterpret_cast<unsigned char>(eax42)) = 0;
    SetEnvironmentVariableA();
    fun_414d40(ecx47, ebx38, ebx38, ~(ebp49 - (ebp49 + reinterpret_cast<uint1_t>(ebp49 < ebp49 + cf48))) & reinterpret_cast<unsigned char>(ebx38) + reinterpret_cast<unsigned char>(eax42) + 1, v19, v17, v15, v13, v30, v12, a2, a3, a4, a5, a6, a7, a8, a9);
    goto v13;
    addr_0x41e2ab_8:
    if (!a3 || (eax50 = g42ec88, eax50 == 0)) {
        if (ebp26) {
            return 0;
        }
        eax22 = fun_414db0(4, v19, v17, v15, v13, ecx, v12, a2, a3, a4, a5, a6);
        g42ec80 = eax22;
        if (!eax22) 
            goto addr_0x41e40e_2;
        *reinterpret_cast<void***>(eax22) = reinterpret_cast<void**>(0);
        eax51 = g42ec88;
        if (!eax51) 
            goto addr_0x41e300_43;
    } else {
        eax52 = fun_41df00(ecx24);
        if (eax52) {
            return -1;
        }
    }
    addr_0x41e31d_46:
    eax27 = g42ec80;
    goto addr_0x41e322_9;
    addr_0x41e300_43:
    eax22 = fun_414db0(4, v19, v17, v15, v13, ecx, v12, a2, a3, a4, a5, a6);
    g42ec88 = eax22;
    if (!eax22) {
        addr_0x41e40e_2:
        return -1;
    } else {
        *reinterpret_cast<void***>(eax22) = reinterpret_cast<void**>(0);
        goto addr_0x41e31d_46;
    }
}

void** fun_415490(void** a1, signed char a2);

void** fun_41e700(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void** eax9;
    void** v10;
    void** eax11;
    void** edi12;
    void** esi13;
    void** ebx14;
    void** edi15;
    void** ebx16;
    void** esi17;
    int32_t eax18;

    eax9 = g42ef64;
    if (!eax9) {
        v10 = a3;
        eax11 = fun_415490(a2, *reinterpret_cast<signed char*>(&v10));
        return eax11;
    }
    fun_417120(ecx, 25, edi12, esi13, ebx14, __return_address(), a2, a3, a4, a5, a6, a7, a8);
    edi15 = a2;
    ebx16 = a3;
    *reinterpret_cast<uint16_t*>(&esi17) = static_cast<uint16_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi15)));
    if (!*reinterpret_cast<uint16_t*>(&esi17)) {
        addr_0x41e783_4:
        fun_4171a0(25);
        eax18 = 0;
        *reinterpret_cast<unsigned char*>(&eax18) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(!reinterpret_cast<int1_t>(ebx16 == (reinterpret_cast<unsigned char>(esi17) & 0xffff))));
        return reinterpret_cast<uint32_t>(eax18 - 1) & reinterpret_cast<unsigned char>(edi15);
    } else {
        do {
            if (!(*reinterpret_cast<unsigned char*>((reinterpret_cast<unsigned char>(esi17) & 0xff) + 0x42ee61) & 4)) {
                eax9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi17) & 0xffff);
                if (ebx16 == eax9) 
                    goto addr_0x41e783_4;
            } else {
                eax9 = *reinterpret_cast<void***>(edi15 + 1);
                ++edi15;
                if (!eax9) 
                    break;
                eax9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax9) & 0xff);
                esi17 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(esi17) & 0xffff) << 8 | reinterpret_cast<unsigned char>(eax9));
                if (ebx16 == esi17) 
                    goto addr_0x41e7b1_10;
            }
            *reinterpret_cast<uint16_t*>(&esi17) = static_cast<uint16_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi15 + 1)));
            ++edi15;
        } while (*reinterpret_cast<uint16_t*>(&esi17));
        goto addr_0x41e783_4;
    }
    fun_4171a0(25);
    return 0;
    addr_0x41e7b1_10:
    fun_4171a0(25);
    return edi15 + 0xffffffff;
}

void** fun_41e7d0(uint32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

void** fun_41e4e0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    void** v9;
    void** edi10;
    void** edi11;
    uint32_t ecx12;
    void** edx13;
    void** v14;
    void** esi15;
    void** v16;
    void** ebx17;
    void** eax18;
    void** eax19;
    void** esi20;
    void** ebx21;
    void** eax22;
    void** eax23;

    v8 = reinterpret_cast<void**>(__return_address());
    v9 = edi10;
    edi11 = a1;
    ecx12 = 0;
    if (edi11) {
        edx13 = *reinterpret_cast<void***>(edi11);
        v14 = esi15;
        v16 = ebx17;
        eax18 = edi11 + 4;
        if (edx13) {
            do {
                ++ecx12;
                eax18 = eax18 + 4;
            } while (*reinterpret_cast<void***>(eax18));
        }
        eax19 = fun_414db0(ecx12 * 4 + 4, v16, v14, v9, v8, a1, a2, a3, a4, a5, a6, a7);
        esi20 = eax19;
        ebx21 = esi20;
        if (!esi20) {
            fun_416a10(9, v16, v14, v9, v8);
        }
        eax22 = *reinterpret_cast<void***>(edi11);
        if (eax22) {
            do {
                edi11 = edi11 + 4;
                eax23 = fun_41e7d0(ecx12, eax22, v16, v14, v9, v8, a1, a2);
                *reinterpret_cast<void***>(esi20) = eax23;
                eax22 = *reinterpret_cast<void***>(edi11);
                esi20 = esi20 + 4;
            } while (eax22);
        }
        *reinterpret_cast<void***>(esi20) = reinterpret_cast<void**>(0);
        return ebx21;
    } else {
        return 0;
    }
}

int32_t HeapReAlloc = 0x32c8e;

struct s55 {
    signed char* f0;
    void* f4;
    signed char f8;
    signed char[239] pad248;
    signed char f248;
};

int32_t fun_4179c0(void** a1, struct s55* a2, signed char* a3, void** a4);

void** fun_41e550(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** v11;
    void** v12;
    void** ebx13;
    void** v14;
    void** ebp15;
    void** v16;
    void** esi17;
    void** esi18;
    void*** esp19;
    void** v20;
    void** edi21;
    void** v22;
    void** v23;
    void** eax24;
    void** edi25;
    void** v26;
    void** v27;
    void** ebx28;
    void** v29;
    void** v30;
    void* esp31;
    signed char* eax32;
    signed char* ebp33;
    void* esp34;
    void** eax35;
    void** eax36;
    int1_t cf37;
    void** v38;
    void** ebx39;
    struct s55* v40;
    int32_t eax41;
    void** eax42;
    uint32_t eax43;
    void** eax44;
    void** edi45;
    void** edx46;
    signed char** esp47;
    signed char* v48;
    uint32_t ecx49;
    uint32_t ecx50;
    void** v51;
    void** v52;
    void** edx53;
    void** v54;
    void** v55;
    void** eax56;
    uint32_t eax57;
    void** eax58;
    void** edi59;
    uint32_t ecx60;
    signed char** esp61;
    signed char* v62;
    uint32_t ecx63;
    void** v64;
    void** v65;
    void** eax66;
    void** eax67;

    v11 = reinterpret_cast<void**>(__return_address());
    v12 = ebx13;
    v14 = ebp15;
    v16 = esi17;
    esi18 = a2;
    esp19 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4 - 4 - 4 - 4);
    v20 = edi21;
    if (!esi18) {
        eax24 = fun_414db0(a3, v20, v16, v14, v12, v22, v23, v11, a2, a3, a4, a5);
        return eax24;
    }
    edi25 = a3;
    if (!edi25) {
        fun_414d40(ecx, esi18, v20, v16, v14, v12, v26, v27, v11, a2, a3, a4, a5, a6, a7, a8, a9, a10);
        return 0;
    }
    if (reinterpret_cast<unsigned char>(edi25) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
        if (!edi25) {
            a3 = reinterpret_cast<void**>(16);
        } else {
            a3 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edi25 + 15) & 0xfffffff0);
        }
        edi25 = a3;
    }
    do {
        ebx28 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<unsigned char>(edi25) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
            fun_417120(ecx, 9, v20, v16, v14, v12, v29, v30, v11, a2, a3, a4, a5);
            esp31 = reinterpret_cast<void*>(esp19 - 4 - 4 + 4 + 4);
            ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp31) + 16);
            eax32 = fun_417540(esi18, reinterpret_cast<int32_t>(esp31) + 20, ecx);
            ebp33 = eax32;
            esp34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp31) - 4 - 4 - 4 - 4 + 4 + 12);
            if (!ebp33) {
                fun_4171a0(9);
                eax35 = g4313ac;
                eax36 = reinterpret_cast<void**>(HeapReAlloc(eax35, 0, esi18, edi25));
                esp19 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp34) - 4 - 4 + 4 + 4 - 4 - 4 - 4 - 4 - 4 + 4);
                ebx28 = eax36;
            } else {
                cf37 = reinterpret_cast<unsigned char>(edi25) < reinterpret_cast<unsigned char>(g42ceec);
                if (cf37) {
                    ecx = v38;
                    ebx39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi25) >> 4);
                    eax41 = fun_4179c0(ecx, v40, ebp33, ebx39);
                    esp34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp34) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
                    if (!eax41) {
                        eax42 = fun_417600(ecx, ebx39);
                        ebx28 = eax42;
                        esp34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp34) - 4 - 4 + 4 + 4);
                        if (!ebx28) 
                            goto addr_0x41e659_16;
                        eax43 = 0;
                        *reinterpret_cast<signed char*>(&eax43) = *ebp33;
                        eax44 = reinterpret_cast<void**>(eax43 << 4);
                        if (reinterpret_cast<unsigned char>(eax44) >= reinterpret_cast<unsigned char>(edi25)) {
                            eax44 = edi25;
                        }
                        edi45 = ebx28;
                        edx46 = eax44;
                        esp47 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp34) - 4);
                        v48 = ebp33;
                        ecx49 = reinterpret_cast<unsigned char>(eax44) >> 2;
                        while (ecx49) {
                            --ecx49;
                            *reinterpret_cast<void***>(edi45) = *reinterpret_cast<void***>(esi18);
                            edi45 = edi45 + 4;
                            esi18 = esi18 + 4;
                        }
                        ecx50 = reinterpret_cast<unsigned char>(edx46) & 3;
                        while (ecx50) {
                            --ecx50;
                            *reinterpret_cast<void***>(edi45) = *reinterpret_cast<void***>(esi18);
                            ++edi45;
                            ++esi18;
                        }
                        ecx = v51;
                        fun_4175a0(ecx, v52, v48, v20, v16, v14);
                        edi25 = a3;
                        esi18 = a2;
                        esp34 = reinterpret_cast<void*>(esp47 - 1 - 1 - 1 + 1 + 3);
                    } else {
                        ebx28 = esi18;
                    }
                }
                if (ebx28) {
                    addr_0x41e6a8_28:
                    fun_4171a0(9);
                    esp19 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp34) - 4 - 4 + 4 + 4);
                } else {
                    addr_0x41e659_16:
                    edx53 = g4313ac;
                    v54 = edi25;
                    v55 = edx53;
                    eax56 = reinterpret_cast<void**>(HeapAlloc(v55, 0, v54));
                    esp34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp34) - 4 - 4 - 4 - 4 + 4);
                    ebx28 = eax56;
                    if (ebx28) {
                        eax57 = 0;
                        *reinterpret_cast<signed char*>(&eax57) = *ebp33;
                        eax58 = reinterpret_cast<void**>(eax57 << 4);
                        if (reinterpret_cast<unsigned char>(eax58) >= reinterpret_cast<unsigned char>(edi25)) {
                            eax58 = edi25;
                        }
                        edi59 = ebx28;
                        ecx60 = reinterpret_cast<unsigned char>(eax58) >> 2;
                        while (ecx60) {
                            --ecx60;
                            *reinterpret_cast<void***>(edi59) = *reinterpret_cast<void***>(esi18);
                            edi59 = edi59 + 4;
                            esi18 = esi18 + 4;
                        }
                        esp61 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp34) - 4);
                        v62 = ebp33;
                        ecx63 = reinterpret_cast<unsigned char>(eax58) & 3;
                        while (ecx63) {
                            --ecx63;
                            *reinterpret_cast<void***>(edi59) = *reinterpret_cast<void***>(esi18);
                            ++edi59;
                            ++esi18;
                        }
                        ecx = v16;
                        fun_4175a0(v14, ecx, v62, v55, 0, v54);
                        edi25 = v64;
                        esi18 = v65;
                        esp34 = reinterpret_cast<void*>(esp61 - 1 - 1 - 1 + 1 + 3);
                        goto addr_0x41e6a8_28;
                    }
                }
            }
        }
        if (ebx28) 
            break;
        eax66 = g42ed34;
        if (!eax66) 
            break;
        eax67 = fun_417a90(edi25);
        esp19 = esp19 - 4 - 4 + 4 + 4;
    } while (eax67);
    goto addr_0x41e6ee_41;
    return ebx28;
    addr_0x41e6ee_41:
    return eax67;
}

void** fun_41e7d0(uint32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void** v9;
    void** v10;
    void** ebx11;
    void** v12;
    void** esi13;
    void** esi14;
    void** v15;
    void** edi16;
    void** edi17;
    uint32_t ecx18;
    void** eax19;
    void** edx20;
    void** edi21;
    uint32_t ecx22;
    uint32_t ecx23;
    void*** esi24;
    uint32_t ebx25;
    void** edi26;
    void** eax27;
    uint32_t ecx28;
    uint32_t ecx29;

    v9 = reinterpret_cast<void**>(__return_address());
    v10 = ebx11;
    v12 = esi13;
    esi14 = a2;
    v15 = edi16;
    if (!esi14) {
        addr_0x41e81a_2:
        return 0;
    } else {
        edi17 = esi14;
        ecx18 = 0xffffffff;
        do {
            if (!ecx18) 
                break;
            --ecx18;
            ++edi17;
            ++esi14;
        } while (*reinterpret_cast<void***>(edi17));
        eax19 = fun_414db0(~ecx18, v15, v12, v10, v9, a2, a3, a4, a5, a6, a7, a8);
        edx20 = eax19;
        if (!edx20) 
            goto addr_0x41e81a_2;
    }
    edi21 = esi14;
    ecx22 = 0xffffffff;
    do {
        if (!ecx22) 
            break;
        --ecx22;
        ++edi21;
    } while (*reinterpret_cast<void***>(edi21));
    ecx23 = ~ecx22;
    esi24 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi21) - ecx23);
    ebx25 = ecx23;
    edi26 = edx20;
    eax27 = edi26;
    ecx28 = ecx23 >> 2;
    while (ecx28) {
        --ecx28;
        *reinterpret_cast<void***>(edi26) = *esi24;
        edi26 = edi26 + 4;
        esi24 = esi24 + 4;
    }
    ecx29 = ebx25 & 3;
    while (ecx29) {
        --ecx29;
        *reinterpret_cast<void***>(edi26) = *esi24;
        ++edi26;
        ++esi24;
    }
    return eax27;
}

struct s56 {
    uint32_t f0;
    int32_t f4;
};

int32_t fun_4179c0(void** a1, struct s55* a2, signed char* a3, void** a4) {
    struct s55* ebp5;
    signed char* edi6;
    void** ebx7;
    int32_t eax8;
    struct s56* ecx9;
    void** edx10;
    struct s56* v11;
    void** esi12;
    signed char* ecx13;
    signed char* edx14;
    int1_t zf15;
    void* eax16;
    uint32_t eax17;

    ebp5 = a2;
    edi6 = a3;
    ebx7 = a4;
    eax8 = 0;
    ecx9 = reinterpret_cast<struct s56*>(reinterpret_cast<uint32_t>(a1 + (reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(ebp5) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 16))) >> 12) * 8) + 24);
    edx10 = reinterpret_cast<void**>(0);
    *reinterpret_cast<signed char*>(&edx10) = *edi6;
    v11 = ecx9;
    esi12 = edx10;
    if (reinterpret_cast<unsigned char>(esi12) <= reinterpret_cast<unsigned char>(ebx7)) {
        if (reinterpret_cast<unsigned char>(esi12) < reinterpret_cast<unsigned char>(ebx7) && (ecx13 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx7) + reinterpret_cast<uint32_t>(edi6)), reinterpret_cast<uint32_t>(ecx13) <= reinterpret_cast<uint32_t>(&ebp5->f248))) {
            edx14 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi12) + reinterpret_cast<uint32_t>(edi6));
            zf15 = edx14 == ecx13;
            if (reinterpret_cast<uint32_t>(edx14) < reinterpret_cast<uint32_t>(ecx13)) {
                do {
                    if (*edx14) 
                        break;
                    ++edx14;
                } while (reinterpret_cast<uint32_t>(edx14) < reinterpret_cast<uint32_t>(ecx13));
                zf15 = edx14 == ecx13;
            }
            if (zf15) {
                *edi6 = *reinterpret_cast<signed char*>(&ebx7);
                if (reinterpret_cast<uint32_t>(edi6) <= reinterpret_cast<uint32_t>(ebp5->f0) && reinterpret_cast<uint32_t>(ecx13) > reinterpret_cast<uint32_t>(ebp5->f0)) {
                    if (reinterpret_cast<uint32_t>(ecx13) >= reinterpret_cast<uint32_t>(&ebp5->f248)) {
                        ebp5->f4 = reinterpret_cast<void*>(0);
                        ebp5->f0 = &ebp5->f8;
                    } else {
                        ebp5->f0 = ecx13;
                        eax16 = reinterpret_cast<void*>(0);
                        if (!*ecx13) {
                            do {
                                eax16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax16) + 1);
                            } while (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax16) + reinterpret_cast<uint32_t>(ecx13) + 1));
                        }
                        ebp5->f4 = eax16;
                    }
                }
                v11->f0 = v11->f0 + (reinterpret_cast<unsigned char>(esi12) - reinterpret_cast<unsigned char>(ebx7));
                eax8 = 1;
            }
        }
        return eax8;
    } else {
        *edi6 = *reinterpret_cast<signed char*>(&ebx7);
        eax17 = ecx9->f0;
        ecx9->f4 = 0xf1;
        ecx9->f0 = eax17 + (reinterpret_cast<unsigned char>(esi12) - reinterpret_cast<unsigned char>(ebx7));
        return 1;
    }
}

void** fun_415490(void** a1, signed char a2) {
    uint32_t eax3;
    uint32_t ebx4;
    uint32_t eax5;
    void** edx6;
    uint32_t ebx7;
    uint32_t ebx8;
    uint32_t ecx9;
    void* esi10;
    void** eax11;
    uint32_t eax12;
    uint32_t eax13;

    eax3 = 0;
    *reinterpret_cast<signed char*>(&eax3) = a2;
    ebx4 = eax3;
    eax5 = eax3 << 8;
    edx6 = a1;
    if (!(reinterpret_cast<unsigned char>(edx6) & 3)) {
        addr_0x4154bb_3:
        ebx7 = ebx4 | eax5;
        ebx8 = ebx7 << 16 | ebx7;
    } else {
        do {
            ++edx6;
            if (*reinterpret_cast<void***>(edx6) == *reinterpret_cast<void***>(&ebx4)) 
                goto addr_0x415480_5;
            if (!*reinterpret_cast<void***>(edx6)) 
                goto addr_0x415504_7;
        } while (reinterpret_cast<unsigned char>(edx6) & 3);
        goto addr_0x4154bb_3;
    }
    while (1) {
        ecx9 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx6)) ^ ebx8;
        esi10 = reinterpret_cast<void*>(*reinterpret_cast<void***>(edx6) + 0x7efefeff);
        edx6 = edx6 + 4;
        if ((ecx9 ^ 0xffffffff ^ 0x7efefeff + ecx9) & 0x81010100) {
            eax11 = *reinterpret_cast<void***>(edx6 + 0xfffffffc);
            if (*reinterpret_cast<signed char*>(&eax11) == *reinterpret_cast<signed char*>(&ebx8)) 
                break;
            if (!*reinterpret_cast<signed char*>(&eax11)) 
                goto addr_0x415502_12;
            if (*reinterpret_cast<signed char*>(&eax11 + 1) == *reinterpret_cast<signed char*>(&ebx8)) 
                goto addr_0x41553e_14;
            if (!*reinterpret_cast<signed char*>(&eax11 + 1)) 
                goto addr_0x415502_12;
            eax12 = reinterpret_cast<unsigned char>(eax11) >> 16;
            if (*reinterpret_cast<signed char*>(&eax12) == *reinterpret_cast<signed char*>(&ebx8)) 
                goto addr_0x415537_17;
            if (!*reinterpret_cast<signed char*>(&eax12)) 
                goto addr_0x415502_12;
            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1) == *reinterpret_cast<signed char*>(&ebx8)) 
                goto addr_0x415530_20;
            if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1)) 
                goto addr_0x415502_12;
        } else {
            eax13 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx6)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(esi10)) & 0x81010100;
            if (!eax13) 
                continue;
            if (eax13 & 0x1010100) 
                goto addr_0x415502_12;
            if (!(reinterpret_cast<uint32_t>(esi10) & 0x80000000)) 
                goto addr_0x415502_12;
        }
    }
    return edx6 + 0xfffffffc;
    addr_0x415502_12:
    addr_0x415504_7:
    return 0;
    addr_0x41553e_14:
    return edx6 + 0xfffffffd;
    addr_0x415537_17:
    return edx6 + 0xfffffffe;
    addr_0x415530_20:
    return edx6 + 0xffffffff;
    addr_0x415480_5:
    return edx6 + 0xffffffff;
}

void** g42ed68;

int32_t LCMapStringA = 0x32ace;

int32_t LCMapStringW = 0x32ade;

void** fun_417b00(void** a1, int32_t a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** eax8;
    int32_t ebx9;
    int32_t eax10;
    void** v11;
    int32_t eax12;
    void** esi13;
    void** edi14;
    void** eax15;
    void** ebp16;
    void** ecx17;
    void** eax18;
    void** edi19;
    void** esi20;
    void** ebp21;
    void** ebx22;
    void** eax23;
    void** v24;
    int32_t eax25;
    void** v26;
    void** eax27;
    void** esi28;
    void** eax29;
    int32_t eax30;
    void** eax31;
    void** eax32;
    int32_t eax33;

    eax8 = g42ed68;
    ebx9 = LCMapStringA;
    if (!eax8) {
        eax10 = reinterpret_cast<int32_t>(ebx9(0, 0x100, 0x428074, 1, 0, 0));
        if (!eax10) {
            v11 = reinterpret_cast<void**>(0);
            eax12 = reinterpret_cast<int32_t>(LCMapStringW());
            if (!eax12) {
                addr_0x417d15_4:
                goto v11;
            } else {
                eax8 = reinterpret_cast<void**>(1);
            }
        } else {
            eax8 = reinterpret_cast<void**>(2);
        }
        g42ed68 = eax8;
    }
    esi13 = a4;
    if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi13) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi13 == 0)) {
        edi14 = a3;
    } else {
        edi14 = a3;
        eax15 = fun_417d20(edi14, esi13);
        esi13 = eax15;
        eax8 = g42ed68;
    }
    if (reinterpret_cast<int1_t>(eax8 == 2)) {
        ebx9();
        goto a5;
    }
    if (!reinterpret_cast<int1_t>(eax8 == 1)) {
        addr_0x417c7c_14:
        return eax8;
    } else {
        ebp16 = a7;
        if (!ebp16) {
            ecx17 = g42ed60;
            ebp16 = ecx17;
        }
        eax18 = reinterpret_cast<void**>(MultiByteToWideChar());
        if (!eax18) {
            goto 0;
        }
        eax23 = fun_414db0(reinterpret_cast<unsigned char>(eax18) + reinterpret_cast<unsigned char>(eax18), ebp16, 9, edi14, esi13, 0, 0, edi19, esi20, ebp21, ebx22, __return_address());
        if (!eax23) {
            goto 0;
        }
        v11 = eax23;
        v24 = esi20;
        eax25 = reinterpret_cast<int32_t>(MultiByteToWideChar());
        if (!eax25) 
            goto addr_0x417cff_22;
        ecx17 = eax18;
        v26 = ecx17;
        eax27 = reinterpret_cast<void**>(LCMapStringW(v26, ebp16));
        esi28 = eax27;
        if (!esi28) 
            goto addr_0x417cff_22;
        if (reinterpret_cast<unsigned char>(ebp16) & 0x400) 
            goto addr_0x417c38_25;
    }
    ecx17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi28) + reinterpret_cast<unsigned char>(esi28));
    eax29 = fun_414db0(ecx17, v26, ebp16, eax23, eax18, 0, 0, ebp16, 1, v24, esi13, v11);
    v24 = eax29;
    if (!eax29) 
        goto addr_0x417cff_22;
    eax30 = reinterpret_cast<int32_t>(LCMapStringW(0, ebp16, eax23, eax18, eax29, esi28, v26, ebp16));
    if (!eax30) 
        goto addr_0x417cff_22;
    if (!0) 
        goto addr_0x417cb7_29;
    ecx17 = eax23;
    eax31 = reinterpret_cast<void**>(WideCharToMultiByte(0, 0x220, ecx17, esi28, eax18, 0, 0, 0, 0, ebp16, eax23, eax18, eax29, esi28, v26, ebp16));
    esi28 = eax31;
    if (esi28) {
        addr_0x417c64_31:
        fun_414d40(ecx17, eax23, v26, ebp16, eax23, eax18, 0, 0, ebp16, 1, v24, esi13, v11, eax18, ebp16, 9, edi14, esi13);
        fun_414d40(v24, v24, v26, ebp16, eax23, eax18, 0, 0, ebp16, 1, v24, esi13, v11, eax18, ebp16, 9, edi14, esi13);
        eax8 = esi28;
        goto addr_0x417c7c_14;
    } else {
        addr_0x417cff_22:
        fun_414d40(ecx17, eax23, ebp16, 1, v24, esi13, v11, eax18, ebp16, 9, edi14, esi13, 0, 0, edi19, esi20, ebp21, ebx22);
        fun_414d40(ecx17, edi14, ebp16, 1, v24, esi13, v11, eax18, ebp16, 9, edi14, esi13, 0, 0, edi19, esi20, ebp21, ebx22);
        goto addr_0x417d15_4;
    }
    addr_0x417cb7_29:
    ecx17 = eax23;
    eax32 = reinterpret_cast<void**>(WideCharToMultiByte(0, 0x220, ecx17, esi28, 0, 0, 0, 0, 0, ebp16, eax23, eax18, eax29, esi28, v26, ebp16));
    esi28 = eax32;
    if (!esi28) 
        goto addr_0x417cff_22;
    goto addr_0x417c64_31;
    addr_0x417c38_25:
    if (!v11) 
        goto addr_0x417c64_31;
    if (reinterpret_cast<signed char>(esi28) > reinterpret_cast<signed char>(v11)) 
        goto addr_0x417cff_22;
    eax33 = reinterpret_cast<int32_t>(LCMapStringW(0, ebp16, eax23, eax18, esi13, v11, v26, ebp16));
    if (!eax33) 
        goto addr_0x417cff_22; else 
        goto addr_0x417c64_31;
}

struct s57 {
    signed char[1] pad1;
    void** f1;
};

struct s57* fun_416a40(void** a1, void** a2);

void** fun_4201d0(void** ecx, void** a2, void** a3);

void** fun_420230(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    struct s57* eax10;
    void** ebp11;
    void** eax12;

    eax10 = fun_416a40(a2, ecx);
    eax12 = fun_414db0(&eax10->f1, ecx, ebp11, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
    if (eax12) {
        fun_4201d0(a2, eax12, a2);
    }
    return eax12;
}

int32_t RegOpenKeyExA = 0x32892;

int32_t RegQueryValueExA = 0x3287e;

void* fun_41f2c0(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t* esp5;
    int32_t* ebp6;
    int32_t ecx7;
    int32_t edi8;
    int32_t ebp9;
    uint32_t eax10;
    uint32_t edi11;
    int1_t pf12;
    int1_t pf13;
    uint1_t cf14;
    int1_t pf15;
    int32_t v16;
    int32_t esi17;
    uint32_t ecx18;
    int32_t eax19;
    uint1_t zf20;
    void** edx21;
    void** v22;
    void** esp23;
    int32_t v24;

    esp5 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebp6 = esp5;
    ecx7 = a2;
    eax10 = reinterpret_cast<uint32_t>(RegOpenKeyExA(a1, ecx7, 0, 0x20019, ebp6 + 3, edi8, ebp9, __return_address()));
    edi11 = eax10;
    if (!(pf12 || (ebp6 = ebp6, !pf13))) {
        eax10 = eax10 - 0x2478fb85 + cf14;
        pf15 = __intrinsic();
    }
    v16 = esi17;
    if (!(pf15 || (ecx7 = ecx7, !pf15))) {
        eax10 = eax10 & 0xc087047b;
    }
    ecx18 = eax10;
    eax19 = ecx7;
    *reinterpret_cast<signed char*>(&eax19) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax19) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx18) + 1));
    __asm__("sldt word [eax]");
    zf20 = reinterpret_cast<uint1_t>(eax19 == 0);
    if (!zf20) {
        edx21 = reinterpret_cast<void**>(ebp6 + 2);
        v22 = edx21;
        RegQueryValueExA(a2, eax19, edi11, v22, a3, a4, *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v16) + 2));
        esp23 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp5 - 1 - 1 - 1 - 1 - 1 - 1 - 1 + 1 - 1) - 2 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
        if (__intrinsic() || !__intrinsic()) {
            edx21 = edx21;
        } else {
            *reinterpret_cast<void***>(eax19 - 24) = edx21;
        }
        if (reinterpret_cast<uint1_t>(!!(a3 - 1)) & zf20) {
            fun_41fb40(esp23, edx21, esp23, esp23 + 64, a2, eax19, edi11, v22, a3, a4, *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v16) + 2));
            goto v24;
        }
    }
}

void** fun_41dde0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_42026c(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** v14;
    void** v15;
    void** ebp16;
    void** eax17;
    void** v18;
    void** eax19;
    void** v20;

    eax17 = fun_420230(ecx, a2, v14, v15, ebp16, __return_address(), a2, a3, a4);
    if (eax17) {
        eax19 = fun_41dde0(a3, eax17, a3, v18, eax17, ebp16, __return_address());
        v20 = eax19;
        fun_414d40(a3, eax17, v20, eax17, ebp16, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    } else {
        v20 = reinterpret_cast<void**>(2);
    }
    return v20;
}

void** fun_41fd90(struct s23* a1) {
    void** eax2;

    eax2 = a1->f8;
    if (!eax2) {
        eax2 = a1->f16;
    } else {
        if (reinterpret_cast<unsigned char>(eax2) >= reinterpret_cast<unsigned char>(a1->f16)) {
            return a1->f16;
        }
    }
    return eax2;
}

signed char fun_41f9b0(int32_t a1, void** a2) {
    int32_t edx3;
    uint32_t eax4;
    int32_t v5;

    fun_41f970(a2, reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x80);
    edx3 = a1;
    eax4 = 0;
    do {
        if (edx3 == v5) 
            break;
        ++eax4;
    } while (eax4 < 16);
    goto addr_0x41f9e2_4;
    return 1;
    addr_0x41f9e2_4:
    return 0;
}

void** fun_41fe22(void** ecx, void** a2) {
    void** edi3;
    void** esi4;
    void** ebx5;
    void** v6;
    void** ebp7;
    void** eax8;
    int32_t ebx9;
    int32_t ebx10;

    if (a2 && (eax8 = fun_420230(ecx, a2, edi3, esi4, ebx5, v6, 0, ebp7, __return_address()), !!eax8)) {
        eax8 = reinterpret_cast<void**>(GetModuleHandleA(eax8));
        if (__intrinsic() || !__intrinsic()) {
        }
        __asm__("ror dword [esi-0x1], 1");
        *reinterpret_cast<int32_t*>(ebx9 + 0x47b04c4) = *reinterpret_cast<int32_t*>(ebx10 + 0x47b04c4) + 1;
    }
    return eax8;
}

int32_t fun_41fe94(void** ecx, void** a2, void** a3) {
    int32_t eax4;
    void** edi5;
    void** esi6;
    void** ebx7;
    void** v8;
    void** ebp9;
    int32_t ebx10;
    int32_t ebx11;

    if (!a2) {
        return eax4;
    } else {
        fun_420230(ecx, a3, edi5, esi6, ebx7, v8, 0, ebp9, __return_address());
        if (!(__intrinsic() || !__intrinsic())) {
            if (!__intrinsic()) {
            }
        }
        GetProcAddress(a2);
        if (!(__intrinsic() || !__intrinsic())) {
            *reinterpret_cast<signed char*>(ebx10 - 0x17af07bb) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx11 - 0x17af07bb) + *reinterpret_cast<signed char*>(&ecx));
        }
    }
}

void** fun_41fdb0(void** ecx, void** a2) {
    void** edi3;
    void** esi4;
    void** ebx5;
    void** v6;
    void** ebp7;
    void** eax8;

    if (!a2 || (eax8 = fun_420230(ecx, a2, edi3, esi4, ebx5, v6, 0, ebp7, __return_address()), eax8 == 0)) {
        return eax8;
    } else {
        LoadLibraryA(eax8);
        if (__intrinsic() || !__intrinsic()) {
        }
    }
}

int32_t g42e9f8;

int32_t g42e9fc;

int32_t g42ea04;

int32_t g42ea08;

int32_t g42ea0c;

int32_t g42ea10;

int32_t g42ea14;

int32_t g42ea18;

int32_t g42ea1c;

int16_t fun_41ff91(void** ecx, void** a2) {
    int16_t v3;
    void** eax4;
    int32_t eax5;
    int1_t zf6;
    int32_t eax7;
    int1_t zf8;
    int32_t eax9;
    int1_t zf10;
    int32_t eax11;
    int1_t zf12;
    int32_t eax13;
    int1_t zf14;
    int32_t eax15;
    int1_t zf16;
    int32_t eax17;
    int1_t zf18;
    int32_t eax19;
    int1_t zf20;
    int32_t eax21;
    int1_t zf22;
    int32_t eax23;
    int1_t zf24;

    v3 = 1;
    eax4 = fun_41fdb0(ecx, 0x42a9c8);
    if (!eax4) {
        v3 = 0;
    } else {
        eax5 = fun_41fe94(ecx, eax4, 0x42a9d8);
        g42e9f8 = eax5;
        zf6 = g42e9f8 == 0;
        if (zf6) {
            v3 = 0;
        }
        eax7 = fun_41fe94(eax4, eax4, 0x42a9f0);
        g42e9fc = eax7;
        zf8 = g42e9fc == 0;
        if (zf8) {
            v3 = 0;
        }
        eax9 = fun_41fe94(eax4, eax4, 0x42aa08);
        g42ea00 = eax9;
        zf10 = g42ea00 == 0;
        if (zf10) {
            v3 = 0;
        }
        eax11 = fun_41fe94(eax4, eax4, 0x42aa18);
        g42ea04 = eax11;
        zf12 = g42ea04 == 0;
        if (zf12) {
            v3 = 0;
        }
        eax13 = fun_41fe94(eax4, eax4, 0x42aa28);
        g42ea08 = eax13;
        zf14 = g42ea08 == 0;
        if (zf14) {
            v3 = 0;
        }
        eax15 = fun_41fe94(eax4, eax4, 0x42aa38);
        g42ea0c = eax15;
        zf16 = g42ea0c == 0;
        if (zf16) {
            v3 = 0;
        }
        eax17 = fun_41fe94(eax4, eax4, 0x42aa48);
        g42ea10 = eax17;
        zf18 = g42ea10 == 0;
        if (zf18) {
            v3 = 0;
        }
        eax19 = fun_41fe94(eax4, eax4, 0x42aa58);
        g42ea14 = eax19;
        zf20 = g42ea14 == 0;
        if (zf20) {
            v3 = 0;
        }
        eax21 = fun_41fe94(eax4, eax4, 0x42aa68);
        g42ea18 = eax21;
        zf22 = g42ea18 == 0;
        if (zf22) {
            v3 = 0;
        }
        eax23 = fun_41fe94(eax4, eax4, 0x42aa80);
        g42ea1c = eax23;
        zf24 = g42ea1c == 0;
        if (zf24) {
            v3 = 0;
        }
    }
    return v3;
}

void** fun_4201d0(void** ecx, void** a2, void** a3) {
    void* v4;
    int32_t ecx5;
    int32_t ecx6;
    uint32_t eax7;
    uint32_t ecx8;

    v4 = reinterpret_cast<void*>(0);
    *reinterpret_cast<void***>(a2) = *reinterpret_cast<void***>(a3);
    while (ecx5 = 0, *reinterpret_cast<signed char*>(&ecx5) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<uint32_t>(v4)), !!ecx5) {
        v4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v4) + 1);
        ecx6 = 0;
        *reinterpret_cast<signed char*>(&ecx6) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<uint32_t>(v4));
        eax7 = 0;
        *reinterpret_cast<signed char*>(&eax7) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint32_t>(v4) - 1);
        ecx8 = reinterpret_cast<uint32_t>(ecx6 - 1) ^ eax7;
        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint32_t>(v4)) = *reinterpret_cast<signed char*>(&ecx8);
    }
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint32_t>(v4)) = 0;
    return a2;
}

void** fun_4202b6(void** ecx, void** a2, void** a3) {
    void* v4;
    int32_t ecx5;
    uint32_t ecx6;
    uint32_t eax7;
    uint32_t ecx8;

    v4 = reinterpret_cast<void*>(0);
    *reinterpret_cast<void***>(a3) = *reinterpret_cast<void***>(a2);
    while (ecx5 = 0, *reinterpret_cast<signed char*>(&ecx5) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint32_t>(v4)), !!ecx5) {
        v4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v4) + 1);
        ecx6 = 0;
        *reinterpret_cast<signed char*>(&ecx6) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint32_t>(v4));
        eax7 = 0;
        *reinterpret_cast<signed char*>(&eax7) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint32_t>(v4) - 1);
        ecx8 = (ecx6 ^ eax7) + 1;
        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<uint32_t>(v4)) = *reinterpret_cast<signed char*>(&ecx8);
    }
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<uint32_t>(v4)) = 0;
    return a3;
}

void** fun_414f30(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** eax7;
    int32_t eax8;
    int32_t edi9;
    int32_t esi10;
    void** ebx11;
    void** esi12;
    void** edi13;
    void** eax14;
    void** eax15;

    eax7 = g42ed50;
    if (eax7) {
        InterlockedIncrement();
        eax8 = g4313a4;
        edi9 = InterlockedDecrement;
        if (!eax8) {
            esi10 = 0;
        } else {
            edi9(0x4313a8);
            fun_417120(ecx, 19, 0x4313a8, 0x4313a8, ebx11, esi12, edi13, __return_address(), a2, a3, a4, a5, a6);
            esi10 = 1;
        }
        eax14 = fun_414fc0(ecx, __return_address(), 0x4313a8);
        if (!esi10) {
            edi9();
            eax15 = eax14;
        } else {
            fun_4171a0(19);
            goto edi13;
        }
    } else {
        eax15 = a2;
        if (reinterpret_cast<signed char>(eax15) >= reinterpret_cast<signed char>(65) && reinterpret_cast<signed char>(eax15) <= reinterpret_cast<signed char>(90)) {
            return eax15 + 32;
        }
    }
    return eax15;
}

struct s58 {
    signed char[4] pad4;
    signed char f4;
};

void** fun_416e80(void** a1, void** a2, uint32_t a3, void** a4, void** a5, void** a6);

int32_t gffff;

void fun_4208de(void** ecx, int32_t a2, int32_t a3, void** a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, signed char* a9, unsigned char* a10, int32_t a11) {
    void** v12;
    void** v13;
    void** ebp14;
    void*** ebp15;
    void** v16;
    void** ebx17;
    uint32_t v18;
    uint32_t esi19;
    int32_t v20;
    int32_t edi21;
    int32_t ecx22;
    signed char* edx23;
    unsigned char* eax24;
    int1_t pf25;
    int1_t pf26;
    int1_t pf27;
    int1_t pf28;
    struct s58* ebx29;
    unsigned char bh30;

    v12 = reinterpret_cast<void**>(__return_address());
    v13 = ebp14;
    ebp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    fun_4159a0(ecx, v13, v12);
    v16 = ebx17;
    v18 = esi19;
    v20 = edi21;
    ecx22 = a7;
    edx23 = a9;
    eax24 = a10;
    *reinterpret_cast<int16_t*>(&v16) = 0;
    if (!pf25 && (ecx22 = ecx22, pf26)) {
    }
    if (pf27) 
        goto addr_0x42092f_5;
    if (pf28) 
        goto addr_0x420938_7;
    addr_0x42092f_5:
    addr_0x420939_8:
    do {
        *reinterpret_cast<unsigned char*>(&ebx29) = 0;
        ebp15 = ebp15;
    } while (!__intrinsic());
    *eax24 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax24 + *reinterpret_cast<signed char*>(&eax24)) + reinterpret_cast<uint1_t>(bh30 < reinterpret_cast<unsigned char>(ebx29->f4 + __intrinsic())));
    *edx23 = reinterpret_cast<signed char>(*edx23 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx22) + 1));
    fun_416e80(ebp15 + 0xffffeffc, *reinterpret_cast<void***>(&v20), v18, v16, v13, v12);
    fun_416e80(ebp15 + 0xffffdfe8, 0, 0x1000, v16, v13, v12);
    if (__intrinsic() || !__intrinsic()) {
    }
    goto gffff;
    addr_0x420938_7:
    goto addr_0x420939_8;
}

void** fun_420470(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    if (__intrinsic() || !__intrinsic()) {
    }
    __asm__("hlt ");
}

struct s59 {
    signed char[4] pad4;
    int32_t f4;
};

struct s60 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_420dee() {
    int1_t pf1;
    int32_t edi2;
    int32_t edi3;
    struct s59* ebx4;
    struct s60* ebx5;
    int32_t ebx6;

    pf1 = __intrinsic();
    if (pf1 || !pf1) {
        edi2 = edi3;
    } else {
        __asm__("fidivr word [ebx+0x4]");
    }
    do {
    } while (!pf1);
    if (!(__intrinsic() || !__intrinsic())) {
        ebx4->f4 = ebx5->f4 - edi2;
    }
    goto ebx6;
}

struct s61 {
    uint32_t f0;
    void** f4;
};

uint32_t fun_415320(int32_t a1, void** a2, void** a3, void** a4, void** a5, void** a6, int32_t a7, int32_t a8, void** a9);

void** gd287047b;

struct s62 {
    signed char[4] pad4;
    uint32_t f4;
    signed char[309530864] pad309530872;
    signed char f309530872;
    signed char[1645871956] pad1418531917;
    signed char f1418531917;
};

struct s63 {
    signed char[1] pad1;
    uint32_t f1;
};

signed char fun_421891(struct s61* a1, void** a2, void** a3, void** a4, void** a5, void** a6);

signed char fun_421505(void** ecx, int32_t a2, void** a3, int32_t a4, struct s61* a5, uint32_t a6, int16_t a7) {
    void** edi8;
    void** esi9;
    void** ebx10;
    void** ebp11;
    uint32_t eax12;
    uint32_t ecx13;
    int32_t* eax14;
    struct s62* ebx15;
    uint32_t ecx16;
    uint32_t ecx17;
    struct s63* edx18;
    int1_t pf19;
    uint32_t edi20;

    eax12 = fun_415320(0, edi8, esi9, ebx10, ecx, ebp11, __return_address(), a2, a3);
    ecx13 = a6 & 0xffff;
    eax14 = reinterpret_cast<int32_t*>(eax12 / ecx13);
    if ((a6 & 0xffff) >= 8) {
        if (!(__intrinsic() || !__intrinsic())) {
            *reinterpret_cast<signed char*>(&eax14) = *reinterpret_cast<signed char*>(&gd287047b);
        }
        *eax14 = *eax14 + 1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx15) + 0x127310f8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx15) + 0x127310f8) + *reinterpret_cast<signed char*>(&eax14));
        ecx16 = a6 & 0xffff;
        if (ecx16 != 8) {
            if (__intrinsic() || !__intrinsic()) {
            }
            ecx17 = ecx16;
            edx18 = reinterpret_cast<struct s63*>(a6 & 0xffff);
            if (edx18) {
                if (!(__intrinsic() || !__intrinsic())) {
                    *(eax14 - 2) = *(eax14 - 2) + 22;
                }
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx15) - 0xdae7bb) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx15) - 0xdae7bb) + *reinterpret_cast<signed char*>(&ecx17));
                *eax14 = *eax14 + 1;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx15) + 0x548d144d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx15) + 0x548d144d) + *reinterpret_cast<signed char*>(&ecx17));
                fun_421891(&edx18->f1, edi8, esi9, ebx10, eax12 % ecx13, ebp11);
                *reinterpret_cast<signed char*>(&eax14) = fun_421891(a5, 0x42eaf8, esi9, ebx10, eax12 % ecx13, ebp11);
                if (__intrinsic() || !__intrinsic()) {
                }
            }
        } else {
            fun_421891(a5, 0x42eaf8, edi8, esi9, ebx10, eax12 % ecx13);
            pf19 = __intrinsic();
            if (!(pf19 || !pf19)) {
                *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx15) + 4) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx15) + 4) ^ edi20;
                pf19 = __intrinsic();
            }
            if (!(pf19 || !pf19)) {
                __asm__("fdivr qword [ebx+0x4]");
            }
        }
    }
    return *reinterpret_cast<signed char*>(&eax14);
}

struct s64 {
    signed char[8] pad8;
    void** f8;
};

int32_t fun_413d9a(void** ecx, void** a2, int32_t a3, struct s64* a4);

void* fun_413a9f(void** ecx, void** a2, int32_t a3, int32_t a4, int32_t a5) {
    uint96_t v2;
    void* esp6;
    void* ebp7;
    uint96_t v8;
    int32_t ebx9;
    int32_t esi10;
    void* esp11;
    int1_t sf12;
    int1_t sf13;
    int1_t cf14;
    int1_t cf15;
    int1_t less_or_equal16;
    int1_t less_or_equal17;
    int1_t of18;
    int1_t of19;
    int1_t sf20;
    int1_t sf21;
    int1_t cf22;
    int1_t cf23;
    void* esp24;
    int1_t less_or_equal25;
    int1_t less_or_equal26;
    void* esp27;
    int1_t of28;
    int1_t of29;
    void* esp30;
    int1_t sf31;
    int1_t sf32;
    int32_t eax33;
    int32_t eax34;
    signed char dl35;
    int32_t eax36;
    signed char dl37;
    uint1_t cf38;
    void* esp39;
    int1_t cf40;
    int1_t of41;
    uint1_t less_or_equal42;

    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8) = a2;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 4) = reinterpret_cast<int32_t>(__return_address());
    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebp7 = esp6;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v8) + 8) = ecx;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 4) = ebx9;
    *reinterpret_cast<int32_t*>(&v8) = esi10;
    esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 - 4 - 4 - 4);
    do {
    } while (!sf12 && sf13);
    while ((ebp7 = ebp7, cf14) && !cf15) {
    }
    while (less_or_equal16 && !less_or_equal17) {
    }
    while (!of18 && of19) {
    }
    while ((ecx = ecx, !sf20) && sf21) {
    }
    while (cf22 && !cf23) {
    }
    esp24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp11) + 2);
    while ((ecx = ecx, less_or_equal25) && !less_or_equal26) {
    }
    esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp24) + 2);
    while (!of28 && of29) {
    }
    esp30 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) + 2);
    while (!sf31 && sf32) {
    }
    *reinterpret_cast<unsigned char*>(eax33 - 0x75) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax34 - 0x75) - reinterpret_cast<unsigned char>(dl35 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(eax36 - 0x75) < reinterpret_cast<unsigned char>(dl37 + cf38))));
    fun_413d9a(ecx, reinterpret_cast<int32_t>(ebp7) + 1 - 1 + 8, *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 2), *reinterpret_cast<struct s64**>(reinterpret_cast<int32_t>(&v8) + 6));
    esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp30) - 4 - 4 + 4 + 16);
    cf40 = __intrinsic();
    of41 = __intrinsic();
    less_or_equal42 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esp39) < 0 != of41) | reinterpret_cast<uint1_t>(esp39 == 0));
    do {
    } while (cf40 && !cf40);
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!of41 && of41) {
    }
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 5);
}

void** gc087047b;

struct s65 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s66 {
    signed char[4] pad4;
    uint32_t f4;
};

int32_t g42800c = 0x9e3779b9;

signed char fun_421891(struct s61* a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void* ebp7;
    uint32_t v8;
    void** eax9;
    void** v10;
    uint32_t edi11;
    uint32_t edi12;
    struct s65* ebx13;
    struct s66* ebx14;
    struct s61* eax15;
    void** ecx16;
    void* eax17;
    void* v18;
    int32_t ebx19;
    uint32_t ecx20;
    uint32_t eax21;
    int1_t zf22;

    ebp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v8 = a1->f0;
    eax9 = a1->f4;
    v10 = eax9;
    if (__intrinsic() || !__intrinsic()) {
        edi11 = edi12;
    } else {
        eax9 = gc087047b;
    }
    if (__intrinsic() || !__intrinsic()) {
    }
    if (!eax9) {
        if (!(__intrinsic() || !__intrinsic())) {
            ebx13->f4 = ebx14->f4 & edi11;
        }
        a1->f0 = v8;
        eax15 = a1;
        eax15->f4 = v10;
        return *reinterpret_cast<signed char*>(&eax15);
    } else {
        ecx16 = a2;
        eax17 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v10) - ((v8 << 4) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 8)) ^ v8 + (reinterpret_cast<uint32_t>(a1) << 5) ^ (v8 >> 5) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx16 + 12))));
        v18 = eax17;
        if (__intrinsic() || !__intrinsic()) {
            ebp7 = ebp7;
        } else {
            __asm__("fisttp word [ebx+0xe1c1f44d]");
        }
        *reinterpret_cast<unsigned char*>(&eax17) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax17) - 0x75) | 3);
        *reinterpret_cast<unsigned char*>(&ecx16) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx16) | *reinterpret_cast<unsigned char*>(ebx19 + 0x4503f445));
        ecx20 = reinterpret_cast<unsigned char>(ecx16) ^ reinterpret_cast<uint32_t>(eax17) ^ (reinterpret_cast<uint32_t>(v18) >> 5) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4));
        eax21 = (reinterpret_cast<uint32_t>(a1) << 5) - g42800c;
        zf22 = eax21 == 0;
        if (!(__intrinsic() || !__intrinsic())) {
            zf22 = (ecx20 ^ reinterpret_cast<uint32_t>(ebp7)) == 0;
        }
        if (zf22) {
        }
    }
}

struct s67 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s68 {
    signed char[4] pad4;
    int32_t f4;
};

struct s69 {
    signed char[4] pad4;
    uint32_t f4;
};

uint32_t fun_422b40(int32_t a1, int32_t a2, int32_t a3) {
    struct s67* ebx4;
    struct s68* ebx5;
    int32_t edi6;
    struct s69* ebx7;
    int32_t edi8;
    int32_t eax9;
    int32_t eax10;
    int32_t edi11;
    int32_t esi12;
    int32_t ebx13;

    if (!(__intrinsic() || !__intrinsic())) {
        ebx4->f4 = ebx5->f4 - (edi6 + reinterpret_cast<uint1_t>(ebx7->f4 < edi8 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) < 0x98)));
    }
    *reinterpret_cast<int32_t*>(eax9 + eax10 - 0x7a730000)(edi11, esi12, ebx13);
    __asm__("insb ");
}

struct s70 {
    signed char[4] pad4;
    int32_t f4;
};

struct s71 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4219a0(int32_t a1, void** a2, int32_t a3, void* a4, int32_t* a5, void** a6, int32_t a7, int32_t a8) {
    int32_t ebx9;
    int32_t ebx10;
    struct s70* ebx11;
    struct s71* ebx12;

    if (__intrinsic() || !__intrinsic()) {
    }
    *reinterpret_cast<int32_t*>(ebx9 + 0x458904c4) = *reinterpret_cast<int32_t*>(ebx10 + 0x458904c4) + 1;
    __asm__("clc ");
    if (!(__intrinsic() || !__intrinsic())) {
        ebx11->f4 = ebx12->f4 >> 1;
    }
    if (__intrinsic() || !__intrinsic()) {
    }
}

struct s72 {
    signed char f0;
    signed char[103] pad104;
    unsigned char f104;
};

struct s73 {
    signed char[4] pad4;
    int32_t f4;
};

struct s74 {
    signed char[4] pad4;
    int32_t f4;
};

struct s72* fun_421fc2(uint32_t* ecx) {
    int1_t pf2;
    int1_t pf3;
    int1_t pf4;
    struct s73* ebx5;
    struct s74* ebx6;
    int32_t edi7;
    int32_t ebx8;

    if (!(pf2 || !pf3)) {
        pf4 = __intrinsic();
    }
    if (!(pf4 || !pf4)) {
        ebx5->f4 = ebx6->f4 + edi7;
    }
    goto ebx8;
}

void** fun_411c70(struct s10* a1, void** a2, ...) {
    a1->f8 = a2;
    return a2;
}

void** fun_411ba0(void** a1, void** a2);

int16_t fun_4117e0(void** a1, void** a2, void** a3, void** a4) {
    void** v5;
    int32_t edi6;
    void** eax7;
    void*** ebp8;
    void** edx9;
    void** edi10;
    void** v11;
    void** ebp12;
    void** edi13;
    void** esi14;
    void** ebx15;
    void** ecx16;
    void** v17;
    void** eax18;
    void** v19;
    void** edx20;
    void** v21;
    void** ecx22;
    void** v23;

    v5 = a2;
    edi6 = 0;
    eax7 = fun_411ba0(a1, v5);
    if (eax7) {
        ebp8 = reinterpret_cast<void***>(eax7 + 68);
        fun_41f970(a1, ebp8);
        edx9 = *reinterpret_cast<void***>(eax7 + 0xa4);
        edi10 = eax7 + 4;
        v11 = *reinterpret_cast<void***>(eax7 + 0xa8);
        fun_412a30(edi10, edx9, v11, ebp12, edi13, esi14, ebx15, __return_address(), a1, a2, a3, a4);
        ecx16 = *reinterpret_cast<void***>(eax7 + 76);
        v17 = *reinterpret_cast<void***>(eax7 + 80);
        fun_412820(ecx16, edi10, ecx16, v17, ebp12, edi13, esi14, ebx15, __return_address(), a1, a2, a3);
        eax18 = *reinterpret_cast<void***>(eax7 + 84);
        v19 = *reinterpret_cast<void***>(eax7 + 88);
        fun_412620(edi10, eax18, v19, ebp12, edi13, esi14, ebx15, __return_address(), a1, a2, a3, a4);
        edx20 = *ebp8;
        v21 = *reinterpret_cast<void***>(eax7 + 72);
        fun_412490(edi10, edx20, v21, ebp12, edi13, esi14, ebx15, __return_address(), a1, a2, a3, a4);
        ecx22 = *reinterpret_cast<void***>(eax7 + 0x8c);
        v23 = *reinterpret_cast<void***>(eax7 + 0x90);
        fun_4122a0(edi10, ecx22, v23, ebp12, edi13, esi14, ebx15, __return_address(), a1, a2, a3);
        fun_412210(a1);
        fun_412180(a1);
        fun_4120f0(a1);
        edi6 = 1;
    }
    return *reinterpret_cast<int16_t*>(&edi6);
}

struct s75 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s76 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_f897946b(void** ecx);

int32_t fun_4205b5(void** a1, void** a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, void** a7) {
    uint64_t v2;
    void* ebp7;
    uint32_t edi8;
    uint32_t edi9;
    struct s75* ebx10;
    uint32_t edi11;
    void* ebp12;
    struct s76* ebx13;
    struct s76* ebx14;
    void** edx15;
    void** ecx16;
    void** v17;
    void** eax18;
    int1_t pf19;
    void* ebp20;
    void** edx21;
    void** eax22;
    struct s2* v23;
    void** eax24;
    void** v25;
    void** v26;
    void** eax27;
    int1_t pf28;

    *reinterpret_cast<void***>(&v2) = a2;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 4) = a3;
    ebp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    if (__intrinsic() || (ebp7 = ebp7, !__intrinsic())) {
        ebp7 = ebp7;
    } else {
        edi8 = edi9 | ebx10->f4;
    }
    edi11 = edi8;
    ebp12 = ebp7;
    ebx13 = ebx14;
    while (edx15 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp12) + 0xfffffff4), ecx16 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp12) + 8), eax18 = fun_41fa00(ecx16, 1, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 1), edx15, reinterpret_cast<int32_t>(ebp12) + 0xffffffec, v17), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 1) = eax18, pf19 = __intrinsic(), !!*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 1)) {
        if (pf19 || (edx15 = edx15, !pf19)) {
        }
        ebp20 = ebp12;
        edx21 = edx15;
        do {
            *reinterpret_cast<unsigned char*>(&ebx13) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx13) >> 6);
            ebp20 = ebp20;
        } while (!__intrinsic());
        eax22 = gd287047b;
        edx15 = edx21;
        ebx13 = ebx13;
        __asm__("in eax, dx");
        ebp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp20) + 1);
        ecx16 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp12) + 8);
        eax24 = fun_41fd00(ecx16, eax22, v23);
        pf19 = __intrinsic();
        if (eax24) 
            goto addr_0x4206c8_37;
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2) + 40;
    }
    addr_0x4206d8_39:
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 1) = reinterpret_cast<void**>(0);
    if (pf19 || (ebx13 = ebx13, !pf19)) {
        ecx16 = ecx16;
    } else {
        edi11 = edi11 + ebx13->f4;
    }
    fun_f897946b(ecx16);
    eax27 = fun_41fa00(reinterpret_cast<int32_t>(ebp12) - 1 + 8, 1, *reinterpret_cast<void***>(&v2), edx15, v25, v26);
    pf28 = __intrinsic();
    if (!eax27) {
        goto a7;
    } else {
        if (!(pf28 || (edi11 = edi11, !pf28))) {
            ebx13->f4 = ebx13->f4 + edi11 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax27) < reinterpret_cast<unsigned char>(0));
            pf28 = __intrinsic();
        }
        if (pf28 || !pf28) {
        }
        goto ebx13;
    }
    addr_0x4206c8_37:
    goto addr_0x4206d8_39;
}

int32_t g2e77a0e4;

int32_t gbe1f9535;

void** g991e1123;

unsigned char gcc076df6;

struct s77 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

unsigned char gabcf3910;

void** fun_94525fc3();

void** fun_a4d87024();

int16_t fun_40b7e0() {
    void** esp1;
    uint32_t eflags2;
    int1_t below_or_equal3;
    void** eax4;
    int32_t eax5;
    void** esp6;
    void** ecx7;
    int1_t less_or_equal8;
    int1_t below_or_equal9;
    void** edi10;
    void** esi11;
    void** edx12;
    void** esp13;
    void** ebx14;
    void** ebp15;
    int32_t ebp16;
    int1_t below_or_equal17;
    int32_t eax18;
    void* ecx19;
    signed char ch20;
    void** eax21;
    unsigned char al22;
    void** esp23;
    unsigned char* esi24;
    unsigned char* esi25;
    unsigned char* esi26;
    signed char* esi27;
    signed char* esi28;
    void** eax29;
    void** esp30;
    void** esp31;
    void** esp32;
    void** tmp32_33;
    unsigned char al34;
    void** esp35;
    struct s77* esp36;
    void** esp37;
    void** esp38;
    void** tmp32_39;
    void** ss40;

    esp1 = reinterpret_cast<void**>(__zero_stack_offset());
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    if (below_or_equal3) {
        while (1) {
            eax4 = reinterpret_cast<void**>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax5)));
            do {
                __asm__("enter 0xa20a, 0x35");
                esp6 = esp1 - 4;
                *reinterpret_cast<void***>(esp6) = ecx7;
                less_or_equal8 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax4)) <= reinterpret_cast<signed char>(1);
                *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax4) < 1);
                below_or_equal9 = *reinterpret_cast<unsigned char*>(&eax4) <= 1;
                *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) - 1);
                *reinterpret_cast<int1_t*>(&eflags2) = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax4)) < reinterpret_cast<signed char>(0);
                *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
                *reinterpret_cast<void***>(edi10) = eax4;
                edi10 = edi10 + 4;
                esi11 = esi11 + 4;
                edx12 = reinterpret_cast<void**>(0x7596a01a);
                esp13 = esp6 - 4;
                *reinterpret_cast<void***>(esp13) = reinterpret_cast<void**>(78);
                __asm__("outsb ");
                __asm__("fadd qword [edx+0x1ae5e971]");
                ebx14 = reinterpret_cast<void**>(78);
                esp1 = esp13 + 4;
                ebp15 = reinterpret_cast<void**>(0x2e77a0e4);
                __asm__("into ");
                __asm__("rol dl, 0xb7");
                --ecx7;
            } while (ecx7);
            if (!below_or_equal9) 
                break;
            addr_0x40b82c_8:
            if (less_or_equal8) 
                goto addr_0x40b87f_9;
            ebp16 = g2e77a0e4;
            esp1 = reinterpret_cast<void**>(0x2e77a0e8);
            *reinterpret_cast<uint32_t*>(*reinterpret_cast<int16_t*>(&ebp16) + *reinterpret_cast<int16_t*>(&esi11)) = *reinterpret_cast<int32_t*>(*reinterpret_cast<int16_t*>(&ebp16) + *reinterpret_cast<int16_t*>(&esi11)) + reinterpret_cast<unsigned char>(ebx14) + *reinterpret_cast<uint1_t*>(&eflags2);
            eax5 = reinterpret_cast<signed char>(eax4) / *reinterpret_cast<int32_t*>(eax4 + 0x64f00bcd);
        }
    } else {
        if (below_or_equal17) {
            goto addr_0x40b827_13;
        }
        gbe1f9535 = eax18;
        __asm__("lodsb ");
        *reinterpret_cast<signed char*>(&ebx14 + 1) = 0x69;
        edx12 = reinterpret_cast<void**>(0xa8effb17);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx19) + 1) = reinterpret_cast<unsigned char>(ch20 + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx14)));
        __asm__("out 0x67, eax");
        *reinterpret_cast<unsigned char*>(&eax21) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al22 & 40) + 25)));
        __asm__("iretd ");
        esp1 = esp1 - 4;
        __asm__("lds ecx, [eax+0xeeff7726]");
        if (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax21)) >= reinterpret_cast<signed char>(0)) 
            goto addr_0x40b7a5_16; else 
            goto addr_0x40b81d_17;
    }
    __asm__("into ");
    addr_0x40b87f_9:
    if (!less_or_equal8) 
        goto addr_0x40b8da_20;
    edi10 = *reinterpret_cast<void***>(esp1);
    esp23 = esp1 + 4;
    edx12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx12) | *reinterpret_cast<uint32_t*>(edx12 + 95));
    eax4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax4) | 0xa233c71c);
    __asm__("xlatb ");
    g991e1123 = eax4;
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) ^ 0xa4);
    __asm__("cli ");
    *reinterpret_cast<unsigned char*>(&ebx14) = reinterpret_cast<unsigned char>(78 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx14 + 0xffffffa6) + reinterpret_cast<uint1_t>(78 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebx14 + 0xffffffa6))))));
    *reinterpret_cast<unsigned char*>(ecx7 + 0x6c605949) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx7 + 0x6c605949) & *reinterpret_cast<unsigned char*>(&eax4));
    goto addr_0x40b89e_22;
    addr_0x40b7a5_16:
    __asm__("fild word [ecx]");
    __asm__("das ");
    __asm__("aas ");
    goto addr_0x40b7b4_23;
    addr_0x40b81d_17:
    eax4 = eax21;
    edi10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp1) * 0x47811573);
    ecx7 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx19) - 1);
    if (ecx7) {
        addr_0x40b7b4_23:
    } else {
        addr_0x40b827_13:
        less_or_equal8 = reinterpret_cast<signed char>(*esi24) <= reinterpret_cast<signed char>(23);
        *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(*esi25 < 23);
        *esi26 = reinterpret_cast<unsigned char>(*esi27 - 23);
        *reinterpret_cast<int1_t*>(&eflags2) = *esi28 < 0;
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
        __asm__("lds ebx, [ecx]");
    }
    esp1 = esp1 - 4;
    goto addr_0x40b82c_8;
    addr_0x40b967_25:
    if (!*reinterpret_cast<int1_t*>(&eflags2)) 
        goto addr_0x40b96a_26;
    while (ebx14 = reinterpret_cast<void**>(0xd9787516), --ecx7, reinterpret_cast<uint1_t>(!!ecx7) & 1) {
        addr_0x40b96a_26:
        eax4 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax4 + 0xc8e4eaa6) + __intrinsic());
        addr_0x40b97a_29:
        __asm__("retf ");
        eax29 = esi11;
        __asm__("fimul dword [edx+0x4b]");
        **reinterpret_cast<void****>(esi11 + 0xcba154cc) = *reinterpret_cast<void***>(eax4);
        esi11 = eax4 + 1;
        esp30 = esp31 - 4;
        *reinterpret_cast<void***>(esp30) = eax29;
        (&ecx7)[1] = *reinterpret_cast<void***>(ecx7);
        *reinterpret_cast<void***>(ebx14 + 0xf9589402) = eax29;
        esp32 = esp30 - 4;
        *reinterpret_cast<void***>(esp32) = reinterpret_cast<void**>(0x40b996);
        eax4 = reinterpret_cast<void**>(*reinterpret_cast<void***>(eax29)());
        esp31 = esp32 + 4;
        *reinterpret_cast<void***>(edx12) = *reinterpret_cast<void***>(edx12) + 0x6a;
        edx12 = reinterpret_cast<void**>(0x360fa5a0);
    }
    addr_0x40b904_35:
    *reinterpret_cast<signed char*>(&edx12 + 1) = *reinterpret_cast<signed char*>(ecx7 + 0x78);
    tmp32_33 = edx12;
    edx12 = eax4;
    eax4 = tmp32_33;
    *reinterpret_cast<unsigned char*>(ebx14 + 0xbee9027d) = *reinterpret_cast<unsigned char*>(&eax4);
    --esi11;
    al34 = gcc076df6;
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al34 ^ 34);
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    esp31 = esp23 - 4;
    *reinterpret_cast<void***>(esp31) = esp31;
    if (!*reinterpret_cast<int1_t*>(&eflags2)) {
        *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) - 0xe9);
        esp31 = esp31 - 4;
        *reinterpret_cast<void***>(esp31) = reinterpret_cast<void**>(0xdf);
        if (1) 
            goto addr_0x40b97a_29;
        __asm__("rcl ch, cl");
        *reinterpret_cast<void***>(eax4) = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax4)) + reinterpret_cast<unsigned char>(eax4))));
    }
    addr_0x40b965_39:
    *reinterpret_cast<unsigned char*>(&ecx7) = 6;
    goto addr_0x40b967_25;
    addr_0x40b95e_40:
    *reinterpret_cast<unsigned char*>(ebx14 + 50) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx14 + 50) + *reinterpret_cast<unsigned char*>(&ecx7)) + __intrinsic());
    *reinterpret_cast<int1_t*>(&eflags2) = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(ebx14 + 50)) < reinterpret_cast<signed char>(0);
    goto addr_0x40b965_39;
    while (*reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1)) {
        esp35 = esp31 - 4;
        *reinterpret_cast<void***>(esp35) = reinterpret_cast<void**>(0x5e153d5);
        esp36 = reinterpret_cast<struct s77*>(esp35 + 2);
        eax4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax4) ^ 0xbd697311);
        ecx7 = esp36->f0;
        esp23 = reinterpret_cast<void**>(&esp36->f4);
        __asm__("iretd ");
        if (__intrinsic()) 
            goto addr_0x40b904_35;
        addr_0x40b89e_22:
        __asm__("rcr byte [ebp-0x1e], cl");
        *reinterpret_cast<signed char*>(&ebx14 + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx14 + 1) - *reinterpret_cast<signed char*>(ebx14 + 0x5637bd06));
        *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx12)) < reinterpret_cast<unsigned char>(esp23));
        *reinterpret_cast<void***>(edx12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx12)) - reinterpret_cast<unsigned char>(esp23));
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = *reinterpret_cast<void***>(edx12) == 0;
        *reinterpret_cast<int1_t*>(&eflags2) = reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx12)) < reinterpret_cast<signed char>(0);
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        __asm__("enter 0x18f1, 0x7c");
        esp31 = esp23 - 4;
        *reinterpret_cast<void***>(esp31) = reinterpret_cast<void**>(eflags2 & 0xfcffff);
        *reinterpret_cast<unsigned char*>(&eax4) = gabcf3910;
        *reinterpret_cast<void***>(edi10) = *reinterpret_cast<void***>(esi11);
        ++edi10;
        ++esi11;
        __asm__("daa ");
        *reinterpret_cast<void***>(ebp15 + 81) = esp31;
        if (*reinterpret_cast<int1_t*>(&eflags2)) {
            esp37 = esp31 - 4;
            *reinterpret_cast<void***>(esp37) = reinterpret_cast<void**>(0x40b8c3);
            eax4 = fun_94525fc3();
            esp31 = esp37 + 4;
            __asm__("rcr dword [edx], 0x9d");
            if (!*reinterpret_cast<int1_t*>(&eflags2)) {
                ebp15 = reinterpret_cast<void**>(0x44736afe);
                __asm__("into ");
                __asm__("fcomi st0, st0");
                esp38 = esp31 - 4;
                *reinterpret_cast<void***>(esp38) = reinterpret_cast<void**>(0x40b8d8);
                eax4 = fun_a4d87024();
                esp1 = esp38 + 4;
                esi11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi11) + reinterpret_cast<unsigned char>(ecx7));
                *reinterpret_cast<int1_t*>(&eflags2) = reinterpret_cast<signed char>(esi11) < reinterpret_cast<signed char>(0);
                *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
                addr_0x40b8da_20:
                __asm__("insb ");
                esp31 = esp1 - 4;
                *reinterpret_cast<void***>(esp31) = edi10;
                if (*reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1)) 
                    continue;
                edx12 = __intrinsic();
                tmp32_39 = ebp15;
                ebp15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax4) * *reinterpret_cast<uint32_t*>(ebx14 + 0x3c7a7427));
                eax4 = tmp32_39;
                *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) + 0xc6);
                __asm__("lodsd ");
                if (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax4) == 0))) 
                    goto addr_0x40b95e_40;
            }
            __asm__("in eax, dx");
            __asm__("in eax, 0xb5");
            esp31 = esp31 - 2;
            *reinterpret_cast<void***>(esp31) = ss40;
            eax4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax4) | 0x96802b57);
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
        }
    }
    goto addr_0x40b967_25;
}

int16_t fun_40b1c0(int32_t ecx, int32_t a2, int32_t a3) {
    __asm__("rol ebx, 0xc4");
    __asm__("das ");
    __asm__("aam 0x7e");
}

uint32_t fun_4147a3(int32_t ecx);

void** fun_41488c(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9);

void** fun_4149ea(void** ecx, void** a2, void** a3, void** a4, void*** a5);

uint32_t fun_414818();

uint32_t fun_414a3f(uint32_t* ecx, void** a2, void** a3, uint32_t* a4);

uint32_t fun_423950(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    uint32_t eax7;
    uint32_t eax8;
    void** v9;
    void** v10;
    void** ebp11;
    void** eax12;
    void** eax13;
    uint32_t eax14;
    uint32_t* ecx15;

    eax7 = fun_4147a3(ecx);
    eax8 = eax7 & 0xffff;
    if (eax8) {
        eax12 = fun_41488c(v9, v10, ebp11, __return_address(), a2, a3, a4, a5, a6);
        eax8 = reinterpret_cast<unsigned char>(eax12) & 0xffff;
        if (eax8) {
            eax13 = fun_4149ea(a4, a2, a3, a4, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
            eax8 = reinterpret_cast<unsigned char>(eax13) & 0xffff;
            if (eax8) {
                eax14 = fun_414818();
                eax8 = eax14 & 0xffff;
                if (eax8) {
                    ecx15 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
                    eax8 = fun_414a3f(ecx15, a5, a6, ecx15);
                    if (eax8 == 0x6e) {
                        *reinterpret_cast<int16_t*>(&eax8) = 1;
                    } else {
                        *reinterpret_cast<int16_t*>(&eax8) = 0;
                    }
                } else {
                    *reinterpret_cast<int16_t*>(&eax8) = 0;
                }
            } else {
                *reinterpret_cast<int16_t*>(&eax8) = 0;
            }
        } else {
            *reinterpret_cast<int16_t*>(&eax8) = 0;
        }
    } else {
        *reinterpret_cast<int16_t*>(&eax8) = 0;
    }
    return eax8;
}

struct s78 {
    signed char[4] pad4;
    unsigned char f4;
    signed char[1166608448] pad1166608453;
    unsigned char f1166608453;
};

struct s79 {
    signed char[51] pad51;
    unsigned char f51;
};

struct s80 {
    signed char[51] pad51;
    unsigned char f51;
};

struct s81 {
    signed char[102] pad102;
    unsigned char f102;
};

struct s82 {
    signed char[102] pad102;
    unsigned char f102;
};

struct s83 {
    signed char f0;
    int32_t f1;
    int32_t f4;
};

struct s84 {
    int16_t f0;
    signed char[2] pad4;
    struct s83* f4;
};

uint32_t* fun_42617d(int32_t a1, int32_t* a2, int32_t a3) {
    uint64_t v1;
    int32_t v3;
    int32_t edi4;
    int32_t edx5;
    int32_t edx6;
    struct s78* ebx7;
    struct s78* ebx8;
    struct s79* esi9;
    struct s80* esi10;
    unsigned char ah11;
    int32_t* ecx12;
    int32_t* eax13;
    int32_t* eax14;
    int32_t eax15;
    unsigned char* eax16;
    signed char* eax17;
    signed char* eax18;
    signed char* eax19;
    signed char al20;
    int1_t pf21;
    signed char* eax22;
    int32_t v23;
    uint64_t v24;
    uint32_t* eax25;
    struct s81* eax26;
    struct s82* eax27;
    uint48_t v28;
    struct s83* esi29;
    signed char v30;
    int32_t v31;
    uint32_t dr2_32;
    struct s83* esi33;

    *reinterpret_cast<int32_t*>(&v1) = a1;
    *reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(&v1) + 4) = a2;
    v3 = edi4;
    if (!(__intrinsic() || !__intrinsic())) {
        __asm__("fdivr dword [ebx+0x4]");
    }
    edx5 = edx6;
    ebx7 = ebx8;
    if (!(__intrinsic() || !__intrinsic())) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx7) + 1) = 0xff;
    }
    do {
        esi9->f51 = reinterpret_cast<unsigned char>(esi10->f51 | ah11);
        *reinterpret_cast<unsigned char*>(&ecx12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx12) >> 40);
        *eax13 = *eax14 + eax15;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx7) + 0x45890845) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx7) + 0x45890845) + *reinterpret_cast<unsigned char*>(&ecx12));
        ecx12 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx12) - 1);
        if (reinterpret_cast<uint1_t>(!!ecx12) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx7) + 0x45890845))) 
            break;
    } while (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx7) + 0x45890845)) < reinterpret_cast<signed char>(0) == __intrinsic());
    goto addr_0x4261fd_22;
    goto v3;
    addr_0x4261fd_22:
    *eax16 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax17 + *reinterpret_cast<signed char*>(&edx5)) + __intrinsic());
    *eax18 = reinterpret_cast<signed char>(*eax19 + al20);
    pf21 = __intrinsic();
    if (*eax22) {
        pf21 = __intrinsic();
        if (v23 == 0x1011) {
            ecx12 = *reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(&v1) + 4);
            *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v24) + 1) = *ecx12;
        } else {
            *reinterpret_cast<int16_t*>(&eax25) = 0;
            goto addr_0x42631c_29;
        }
    }
    if (!(pf21 || !pf21)) {
        ebx7->f4 = reinterpret_cast<unsigned char>(ebx7->f4 & 0xff);
        pf21 = __intrinsic();
    }
    if (!(pf21 || !pf21)) {
        eax26->f102 = reinterpret_cast<unsigned char>(eax27->f102 & 0x8c);
    }
    __asm__("in al, 0xf");
    *reinterpret_cast<int32_t*>(&v28) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v24) + 4) + reinterpret_cast<int32_t>(ecx12);
    esi29 = (*reinterpret_cast<struct s84**>(reinterpret_cast<int32_t>(&v28) + 2))->f4;
    *reinterpret_cast<int16_t*>(&esi29) = (*reinterpret_cast<struct s84**>(reinterpret_cast<int32_t>(&v28) + 2))->f0;
    v30 = esi29->f0;
    v31 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi29) + 4);
    esi29->f1 = 0xcf530e58;
    esi29->f0 = 88;
    if (!0) {
        *reinterpret_cast<uint32_t*>(&v24) = dr2_32;
    }
    __asm__("sidt [ebp-0x14]");
    esi33 = (*reinterpret_cast<struct s84**>(reinterpret_cast<int32_t>(&v28) + 2))->f4;
    *reinterpret_cast<int16_t*>(&esi33) = (*reinterpret_cast<struct s84**>(reinterpret_cast<int32_t>(&v28) + 2))->f0;
    esi33->f1 = 0xcf535158;
    esi33->f0 = 88;
    eax25 = reinterpret_cast<uint32_t*>(0 / reinterpret_cast<uint32_t>(0));
    esi33->f0 = v30;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi33) + 4) = v31;
    __asm__("popad ");
    if (!1) {
        eax25 = *reinterpret_cast<uint32_t**>(reinterpret_cast<int32_t>(&v1) + 3);
        *eax25 = *reinterpret_cast<uint32_t*>(&v24);
    }
    *reinterpret_cast<int16_t*>(&eax25) = 1;
    addr_0x42631c_29:
    return eax25;
}

int32_t GetKeyboardType = 0x32c9c;

uint32_t fun_42708c(int32_t* ecx) {
    uint32_t eax2;

    eax2 = reinterpret_cast<uint32_t>(GetKeyboardType(0, ecx));
    if (eax2 != 7 || (eax2 = reinterpret_cast<uint32_t>(GetKeyboardType(1, 0, ecx)), eax2 != 0xd01) && (eax2 != 0xd02 && (eax2 != 0xd03 && (eax2 != 0xd04 && (eax2 != 0xd05 && (eax2 != 0xd06 && eax2 != 0xd07)))))) {
        *reinterpret_cast<int16_t*>(&eax2) = 0;
    } else {
        *reinterpret_cast<int16_t*>(&eax2) = 1;
    }
    return eax2;
}

int32_t GetLocalTime = 0x329b6;

int32_t GetSystemTime = 0x329a6;

void* g42ec58;

void* g42ec54;

void* g42ec50;

uint32_t g42ec48;

int32_t g42ec5c;

uint32_t fun_418a00(void* a1, void* a2, void** a3, void** a4, uint32_t a5, void* a6, uint32_t a7);

uint32_t fun_415320(int32_t a1, void** a2, void** a3, void** a4, void** a5, void** a6, int32_t a7, int32_t a8, void** a9) {
    void* esp10;
    void* v11;
    void* esp12;
    void* v13;
    int1_t zf14;
    int16_t v15;
    int1_t zf16;
    int16_t v17;
    int1_t zf18;
    int1_t zf19;
    int1_t zf20;
    uint32_t eax21;
    uint32_t eax22;
    int16_t v23;
    int32_t v24;
    int32_t v25;
    uint32_t v26;
    uint32_t v27;
    uint32_t v28;
    uint32_t v29;
    uint32_t v30;
    uint32_t v31;
    uint32_t eax32;
    uint32_t* v33;
    int32_t v34;

    esp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0xcc);
    v11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp10) + 16);
    GetLocalTime();
    esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp10) - 4 - 4 + 4);
    v13 = esp12;
    GetSystemTime();
    zf14 = v15 == *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42ec58) + 2);
    if (!zf14 || ((zf16 = v17 == *reinterpret_cast<int16_t*>(&g42ec58), !zf16) || ((zf18 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&v11) + 2) == *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&g42ec54) + 2), !zf18) || ((zf19 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&v13) + 2) == (&g42ec50)[1], !zf19) || (zf20 = *reinterpret_cast<void**>(&v13) == g42ec50, !zf20))))) {
        eax21 = reinterpret_cast<uint32_t>(GetTimeZoneInformation());
        if (eax21 == 0xffffffff) {
            eax22 = 0xffffffff;
        } else {
            if (eax21 != 2 || (!v23 || !v24)) {
                eax22 = 0;
            } else {
                eax22 = 1;
            }
        }
        g42ec50 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp12) - 4 - 4 + 4 + 32);
        g42ec54 = v13;
        g42ec48 = eax22;
        g42ec58 = v11;
        g42ec5c = v25;
    } else {
        eax22 = g42ec48;
    }
    eax32 = fun_418a00(v26 & 0xffff, v27 & 0xffff, v28 & 0xffff, v29 & 0xffff, v30 & 0xffff, v31 & 0xffff, eax22);
    if (v33) {
        *v33 = eax32;
    }
    goto v34;
}

void** fun_414dd0(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** v7;
    void** esi8;
    void** esi9;
    void** v10;
    void** edi11;
    void** eax12;
    void** edi13;
    void** eax14;

    v6 = reinterpret_cast<void**>(__return_address());
    v7 = esi8;
    esi9 = a2;
    v10 = edi11;
    if (reinterpret_cast<unsigned char>(esi9) > reinterpret_cast<unsigned char>(0xffffffe0)) {
        addr_0x414e0f_2:
        eax12 = reinterpret_cast<void**>(0);
    } else {
        if (!esi9) {
            esi9 = reinterpret_cast<void**>(1);
        }
        edi13 = a3;
        do {
            if (reinterpret_cast<unsigned char>(esi9) > reinterpret_cast<unsigned char>(0xffffffe0)) {
                eax12 = reinterpret_cast<void**>(0);
            } else {
                eax12 = fun_414e20(ecx, esi9, v10, v7, v6, a2, a3, a4, a5);
            }
            if (eax12) 
                break;
            if (!edi13) 
                break;
            eax14 = fun_417a90(esi9);
        } while (eax14);
        goto addr_0x414e0f_2;
    }
    return eax12;
}

void** fun_40c350(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** v8;
    void** ebx9;
    void** v10;
    void** ebp11;
    void** v12;
    void** esi13;
    void** v14;
    void** edi15;
    void** eax16;
    void** v17;
    void** ebp18;
    int32_t ecx19;
    void** esi20;
    void** edi21;
    uint32_t ebx22;
    void** edi23;
    void*** esi24;
    void* ebp25;
    void** v26;
    void** eax27;

    v7 = reinterpret_cast<void**>(__return_address());
    v8 = ebx9;
    v10 = ebp11;
    v12 = esi13;
    v14 = edi15;
    eax16 = fun_414db0(0x260, v14, v12, v10, v8, ecx, v7, a2, a3, a4, a5, a6);
    v17 = eax16;
    if (!eax16) {
        addr_0x40c3bb_2:
        return eax16;
    } else {
        ebp18 = a3;
        ecx19 = 0x98;
        esi20 = ebp18;
        edi21 = eax16;
        while (ecx19) {
            --ecx19;
            *reinterpret_cast<void***>(edi21) = *reinterpret_cast<void***>(esi20);
            edi21 = edi21 + 4;
            esi20 = esi20 + 4;
        }
        ebx22 = 0;
        if (!*reinterpret_cast<uint32_t*>(ebp18 + 0x20c)) 
            goto addr_0x40c3bb_2;
    }
    edi23 = a2;
    esi24 = reinterpret_cast<void***>(eax16 + 0x210);
    ebp25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebp18) - reinterpret_cast<unsigned char>(eax16));
    do {
        v26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp25) + reinterpret_cast<uint32_t>(esi24))) + reinterpret_cast<unsigned char>(edi23));
        eax27 = fun_40c2d0(edi23, v26, v14, v12, v10, v8, v17, v7, a2, a3, a4, a5);
        *esi24 = eax27;
        if (!eax27) 
            break;
        ++ebx22;
        esi24 = esi24 + 4;
    } while (ebx22 < *reinterpret_cast<uint32_t*>(a3 + 0x20c));
    eax16 = v17;
    goto addr_0x40c3bb_2;
}

void** fun_40c4b0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** eax8;

    eax8 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a1 + 12) == 1)) {
        eax8 = fun_40c3d0(a1, __return_address(), a1, a2, a3, a4);
    }
    return eax8;
}

int32_t RegisterClassA = 0x327de;

int32_t CreateWindowExA = 0x327cc;

int32_t ShowWindow = 0x327be;

int32_t fun_40c9c0(uint32_t a1, int32_t a2, int32_t a3, void** a4) {
    int32_t ecx5;
    int16_t ax6;
    int32_t eax7;

    ecx5 = 10;
    while (ecx5) {
        --ecx5;
    }
    ax6 = reinterpret_cast<int16_t>(RegisterClassA());
    if (!ax6 || (eax7 = reinterpret_cast<int32_t>(CreateWindowExA()), eax7 == 0)) {
        return 0;
    } else {
        ShowWindow();
        return 1;
    }
}

int32_t fun_40f6a0(void** a1, void** a2, void** a3) {
    int32_t eax4;

    g42f120 = reinterpret_cast<void**>(0);
    return eax4;
}

void** fun_40f6b0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void** v10;
    void** eax11;
    void** v12;
    void** esi13;
    void** eax14;
    void** v15;
    void** edi16;
    void** esi17;
    uint32_t ecx18;
    void** edi19;
    void** eax20;
    void** edx21;
    void** edi22;
    uint32_t ecx23;
    uint32_t ecx24;
    uint32_t eax25;
    void*** esi26;
    void** edi27;
    uint32_t ecx28;
    uint32_t ecx29;
    void** ecx30;
    void** eax31;

    v10 = reinterpret_cast<void**>(__return_address());
    eax11 = g42f120;
    v12 = esi13;
    eax14 = eax11 + 1;
    v15 = edi16;
    if (reinterpret_cast<unsigned char>(eax14) >= reinterpret_cast<unsigned char>(20)) {
        addr_0x40f718_2:
        *reinterpret_cast<int16_t*>(&eax14) = 1;
        return eax14;
    } else {
        esi17 = a2;
        ecx18 = 0xffffffff;
        edi19 = esi17;
        do {
            if (!ecx18) 
                break;
            --ecx18;
            ++edi19;
            ++esi17;
        } while (*reinterpret_cast<void***>(edi19));
        eax20 = fun_414db0(~ecx18, v15, v12, v10, a2, a3, a4, a5, a6, a7, a8, a9);
        edx21 = eax20;
        if (!edx21) 
            goto addr_0x40f6db_7;
    }
    edi22 = esi17;
    ecx23 = 0xffffffff;
    do {
        if (!ecx23) 
            break;
        --ecx23;
        ++edi22;
    } while (*reinterpret_cast<void***>(edi22));
    ecx24 = ~ecx23;
    eax25 = ecx24;
    esi26 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi22) - ecx24);
    edi27 = edx21;
    ecx28 = ecx24 >> 2;
    while (ecx28) {
        --ecx28;
        *reinterpret_cast<void***>(edi27) = *esi26;
        edi27 = edi27 + 4;
        esi26 = esi26 + 4;
    }
    ecx29 = eax25 & 3;
    while (ecx29) {
        --ecx29;
        *reinterpret_cast<void***>(edi27) = *esi26;
        ++edi27;
        ++esi26;
    }
    ecx30 = g42f120;
    *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ecx30) * 4 + 0x42f124) = edx21;
    eax31 = g42f120;
    eax14 = eax31 + 1;
    g42f120 = eax14;
    goto addr_0x40f718_2;
    addr_0x40f6db_7:
    *reinterpret_cast<int16_t*>(&eax20) = 0;
    return eax20;
}

int32_t GetEnvironmentVariableA = 0x326fe;

struct s85 {
    signed char[1] pad1;
    void** f1;
};

int16_t fun_40f4f0(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** v7;
    void** v8;
    void** ebx9;
    void** v10;
    void** ebp11;
    void** v12;
    void** esi13;
    void** esi14;
    void*** esp15;
    void** v16;
    void** edi17;
    void** edi18;
    uint32_t ecx19;
    void** v20;
    struct s85* eax21;
    struct s85* ebp22;
    void** edi23;
    uint32_t ecx24;
    void** esi25;
    void** eax26;
    void** ebx27;
    void** edx28;
    void** edi29;
    uint32_t ecx30;
    void** v31;
    void** ecx32;
    void** v33;
    void** eax34;
    void** esi35;
    void** eax36;
    void** edi37;
    void** edx38;
    uint32_t ecx39;
    uint32_t ecx40;
    int1_t zf41;
    void** edi42;
    uint32_t ecx43;
    void** v44;
    uint32_t ecx45;
    void*** esi46;
    uint32_t edx47;
    void** edi48;
    uint32_t ecx49;
    void** edi50;
    uint32_t ecx51;
    void** ecx52;
    void** edi53;
    uint32_t ecx54;
    uint32_t ecx55;
    uint32_t eax56;
    void*** esi57;
    void** edi58;
    uint32_t ecx59;
    uint32_t ecx60;
    void*** edi61;
    uint32_t ecx62;
    uint32_t ecx63;
    uint32_t edx64;
    void** edi65;
    uint32_t ecx66;
    void** edi67;
    uint32_t ecx68;

    v6 = reinterpret_cast<void**>(__return_address());
    v7 = ecx;
    v8 = ebx9;
    v10 = ebp11;
    v12 = esi13;
    esi14 = a2;
    esp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    v16 = edi17;
    if (!esi14) {
        return 0;
    }
    edi18 = esi14;
    ecx19 = 0xffffffff;
    do {
        if (!ecx19) 
            break;
        --ecx19;
        ++edi18;
        ++esi14;
    } while (*reinterpret_cast<void***>(edi18));
    if (!(reinterpret_cast<int32_t>(~ecx19) - 1)) 
        goto addr_0x40f514_7;
    v20 = reinterpret_cast<void**>(esp15 + 19);
    eax21 = reinterpret_cast<struct s85*>(GetEnvironmentVariableA());
    ebp22 = eax21;
    edi23 = esi14;
    ecx24 = 0xffffffff;
    do {
        if (!ecx24) 
            break;
        --ecx24;
        ++edi23;
    } while (*reinterpret_cast<void***>(edi23));
    esi25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(~ecx24) - 1 + reinterpret_cast<int32_t>(ebp22) + 1);
    if (!esi25) 
        goto addr_0x40f545_12;
    if (reinterpret_cast<unsigned char>(esi25) > reinterpret_cast<unsigned char>(0x8000)) {
        goto v10;
    }
    eax26 = fun_414db0(esi25, 0x42a548, v20, 1, v16, v12, v10, v8, v7, v6, a2, a3);
    ebx27 = eax26;
    if (!ebx27) {
        goto v10;
    }
    edx28 = esi25;
    edi29 = ebx27;
    ecx30 = reinterpret_cast<unsigned char>(esi25) >> 2;
    while (ecx30) {
        --ecx30;
        *reinterpret_cast<void***>(edi29) = reinterpret_cast<void**>(0);
        edi29 = edi29 + 4;
        esi25 = esi25 + 4;
    }
    v31 = esi25;
    ecx32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx28) & 3);
    v33 = ebx27;
    while (ecx32) {
        --ecx32;
        *reinterpret_cast<void***>(edi29) = reinterpret_cast<void**>(0);
        ++edi29;
    }
    GetEnvironmentVariableA();
    eax34 = g42e594;
    if (eax34) 
        goto addr_0x40f5a1_24;
    addr_0x40f5aa_25:
    esi35 = reinterpret_cast<void**>(&ebp22->f1);
    eax36 = fun_414db0(esi35, 0x42a548, v33, v31, 0x42a548, v20, 1, v16, v12, v10, v8, v7);
    edi37 = eax36;
    g42e594 = edi37;
    if (!edi37) {
        fun_414d40(ecx32, ebx27, 0x42a548, v33, v31, 0x42a548, v20, 1, v16, v12, v10, v8, v7, v6, a2, a3, a4, a5);
        goto 1;
    }
    edx38 = esi35;
    ecx39 = reinterpret_cast<unsigned char>(esi35) >> 2;
    while (ecx39) {
        --ecx39;
        *reinterpret_cast<void***>(edi37) = reinterpret_cast<void**>(0);
        edi37 = edi37 + 4;
    }
    ecx40 = reinterpret_cast<unsigned char>(edx38) & 3;
    zf41 = ebp22 == 0;
    while (ecx40) {
        --ecx40;
        *reinterpret_cast<void***>(edi37) = reinterpret_cast<void**>(0);
        ++edi37;
    }
    if (!zf41) 
        goto addr_0x40f5ea_34;
    addr_0x40f637_35:
    edi42 = v16;
    ecx43 = 0xffffffff;
    v44 = ebx27;
    do {
        if (!ecx43) 
            break;
        --ecx43;
        ++edi42;
    } while (*reinterpret_cast<void***>(edi42));
    ecx45 = ~ecx43;
    esi46 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi42) - ecx45);
    edx47 = ecx45;
    edi48 = ebx27;
    ecx49 = 0xffffffff;
    do {
        if (!ecx49) 
            break;
        --ecx49;
        ++edi48;
        ++esi46;
    } while (*reinterpret_cast<void***>(edi48));
    edi50 = edi48 - 1;
    ecx51 = edx47 >> 2;
    while (ecx51) {
        --ecx51;
        *reinterpret_cast<void***>(edi50) = *esi46;
        edi50 = edi50 + 4;
        esi46 = esi46 + 4;
    }
    ecx52 = reinterpret_cast<void**>(edx47 & 3);
    while (ecx52) {
        --ecx52;
        *reinterpret_cast<void***>(edi50) = *esi46;
        ++edi50;
        ++esi46;
    }
    SetEnvironmentVariableA();
    fun_414d40(ecx52, ebx27, 0x42a548, v44, 0x42a548, v33, v31, 0x42a548, v20, 1, v16, v12, v10, v8, v7, v6, a2, a3);
    goto "PATH";
    addr_0x40f5ea_34:
    edi53 = ebx27;
    ecx54 = 0xffffffff;
    do {
        if (!ecx54) 
            break;
        --ecx54;
        ++edi53;
    } while (*reinterpret_cast<void***>(edi53));
    ecx55 = ~ecx54;
    eax56 = ecx55;
    esi57 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi53) - ecx55);
    edi58 = g42e594;
    ecx59 = ecx55 >> 2;
    while (ecx59) {
        --ecx59;
        *reinterpret_cast<void***>(edi58) = *esi57;
        edi58 = edi58 + 4;
        esi57 = esi57 + 4;
    }
    ecx60 = eax56 & 3;
    while (ecx60) {
        --ecx60;
        *reinterpret_cast<void***>(edi58) = *esi57;
        ++edi58;
        ++esi57;
    }
    edi61 = reinterpret_cast<void***>(0x42a544);
    ecx62 = 0xffffffff;
    do {
        if (!ecx62) 
            break;
        --ecx62;
        ++edi61;
    } while (*edi61);
    ecx63 = ~ecx62;
    esi35 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edi61) - ecx63);
    edx64 = ecx63;
    edi65 = ebx27;
    ecx66 = 0xffffffff;
    do {
        if (!ecx66) 
            break;
        --ecx66;
        ++edi65;
        ++esi35;
    } while (*reinterpret_cast<void***>(edi65));
    edi67 = edi65 - 1;
    ecx68 = edx64 >> 2;
    while (ecx68) {
        --ecx68;
        *reinterpret_cast<void***>(edi67) = *reinterpret_cast<void***>(esi35);
        edi67 = edi67 + 4;
        esi35 = esi35 + 4;
    }
    ecx40 = edx64 & 3;
    while (ecx40) {
        --ecx40;
        *reinterpret_cast<void***>(edi67) = *reinterpret_cast<void***>(esi35);
        ++edi67;
        ++esi35;
    }
    goto addr_0x40f637_35;
    addr_0x40f5a1_24:
    fun_414d40(ecx32, eax34, 0x42a548, v33, v31, 0x42a548, v20, 1, v16, v12, v10, v8, v7, v6, a2, a3, a4, a5);
    goto addr_0x40f5aa_25;
    addr_0x40f545_12:
    goto v10;
    addr_0x40f514_7:
    return 0;
}

void** fun_40c4d0(void** ecx, void** a2, void** a3, void** a4) {
    return 0x4f7;
}

void** fun_40c4f0(void** ecx, void** a2, void** a3, void** a4) {
    return 0x3c800;
}

int32_t OpenFileMappingA = 0x32740;

int32_t MapViewOfFile = 0x324bc;

struct s7* fun_411600(void* ecx, signed char* a2, void* a3) {
    uint32_t ecx4;
    void** v5;
    void** ebx6;
    void** v7;
    void** esi8;
    void*** esp9;
    void** v10;
    void** edi11;
    signed char* edi12;
    uint32_t ecx13;
    uint32_t eax14;
    uint32_t ecx15;
    uint32_t ecx16;
    void** ecx17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    signed char v23;
    signed char v24;
    signed char v25;
    int32_t eax26;
    int32_t* v27;
    int32_t v28;

    ecx4 = 0xffffffff;
    v5 = ebx6;
    v7 = esi8;
    esp9 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x104 - 4 - 4 - 4);
    v10 = edi11;
    edi12 = a2;
    do {
        if (!ecx4) 
            break;
        --ecx4;
        ++edi12;
    } while (*edi12);
    ecx13 = ~ecx4;
    eax14 = ecx13;
    ecx15 = ecx13 >> 2;
    while (ecx15) {
        --ecx15;
    }
    ecx16 = eax14 & 3;
    while (ecx16) {
        --ecx16;
    }
    ecx17 = reinterpret_cast<void**>(esp9 + 12);
    fun_41e830(ecx17, ecx17, v10, v7, v5, v18, v19, v20, v21, v22);
    if (v23) {
        do {
            if (v24 == 92) {
            }
        } while (v25);
    }
    eax26 = reinterpret_cast<int32_t>(OpenFileMappingA());
    *v27 = eax26;
    if (eax26) {
        MapViewOfFile(eax26, 2, 0, 0, 0);
    }
    goto v28;
}

struct s86 {
    signed char[42] pad42;
    unsigned char f42;
};

struct s87 {
    signed char[42] pad42;
    unsigned char f42;
};

void fun_40986a(unsigned char cl) {
    struct s86* ebx2;
    struct s87* ebx3;
    unsigned char* esi4;
    unsigned char* esi5;

    ebx2->f42 = reinterpret_cast<unsigned char>(ebx3->f42 ^ cl);
    __asm__("rcl dword [ebx+0x3cfcf4d9], 1");
    *esi4 = reinterpret_cast<unsigned char>(*esi5 >> cl);
    __asm__("out 0xf, eax");
}

void** fun_4159a0(void** ecx, void** a2, void** a3) {
    int32_t v4;
    void* ecx5;
    uint32_t eax6;
    uint32_t eax7;
    int32_t* esp8;

    v4 = reinterpret_cast<int32_t>(__return_address());
    ecx5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 8);
    if (eax6 >= 0x1000) {
        do {
            ecx5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx5) - 0x1000);
            eax7 = eax7 - 0x1000;
        } while (eax7 >= 0x1000);
    }
    esp8 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx5) - eax7 - 4);
    *esp8 = v4;
    goto *esp8;
}

void** fun_40c230(void** a1, void** a2, int16_t a3) {
    void** edi4;
    void** eax5;
    int16_t bx6;
    void** esi7;
    void** edx8;

    edi4 = *reinterpret_cast<void***>(a1 + 16);
    eax5 = reinterpret_cast<void**>(0);
    if (!edi4) {
        addr_0x40c26b_2:
        eax5 = reinterpret_cast<void**>(0xfffffff);
    } else {
        bx6 = a3;
        esi7 = a2;
        edx8 = a1 + 24;
        do {
            if (*reinterpret_cast<void***>(*reinterpret_cast<void***>(edx8)) == esi7) 
                break;
            if (!bx6) 
                continue;
            if (!((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(edx8))) ^ reinterpret_cast<unsigned char>(esi7)) & 0x3ff)) 
                break;
            ++eax5;
            edx8 = edx8 + 4;
        } while (reinterpret_cast<unsigned char>(eax5) < reinterpret_cast<unsigned char>(edi4));
        goto addr_0x40c26b_2;
    }
    return eax5;
}

int32_t fun_40ca70(void** ecx);

int16_t fun_40ef40(void* a1, int32_t a2);

int32_t GetLogicalDriveStringsA = 0x32502;

int32_t GetDriveTypeA = 0x3247e;

int16_t fun_40f780(void** a1, signed char* a2, void* a3, int32_t a4, void* a5, int32_t a6) {
    void** esp7;
    int32_t v8;
    int32_t ebx9;
    void** edi10;
    void** esi11;
    int32_t v12;
    int32_t v13;
    int32_t v14;
    void* v15;
    void* esp16;
    void** ecx17;
    void* esp18;
    int16_t ax19;
    void* esp20;
    signed char* edi21;
    uint32_t ecx22;
    signed char v23;
    uint32_t ecx24;
    uint32_t edx25;
    signed char* esi26;
    signed char* edi27;
    uint32_t ecx28;
    uint32_t ecx29;
    int32_t eax30;
    void* esp31;
    int16_t ax32;
    void* esp33;
    int16_t ax34;
    signed char* edi35;
    uint32_t ecx36;
    signed char v37;
    uint32_t ecx38;
    uint32_t eax39;
    signed char* esi40;
    signed char* edi41;
    uint32_t ecx42;
    uint32_t ecx43;
    void* esp44;
    void* esi45;
    signed char v46;
    int32_t v47;
    int32_t ebx48;
    void** edi49;
    int32_t eax50;
    void* esp51;
    void* esp52;
    int16_t ax53;
    signed char* edi54;
    uint32_t ecx55;
    uint32_t ecx56;
    uint32_t edx57;
    signed char* esi58;
    signed char* edi59;
    signed char* v60;
    uint32_t ecx61;
    uint32_t ecx62;
    int32_t v63;
    int32_t v64;

    esp7 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x308);
    v8 = ebx9;
    fun_416160(esp7, a1, esp7, esp7 + 0x208, 0, 0, edi10, esi11, v8, v12, v13, v14, v15);
    esp16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp7 - 4) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
    ecx17 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp16) + 12);
    fun_416300(reinterpret_cast<uint32_t>(esp16) + 16, ecx17, reinterpret_cast<uint32_t>(esp16) + 0x214, 0, 0);
    esp18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp16) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
    ax19 = fun_40f950(reinterpret_cast<uint32_t>(esp18) + 16);
    esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp18) - 4 - 4 + 4 + 4);
    if (ax19) {
        edi21 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp20) + 16);
        ecx22 = 0xffffffff;
        do {
            if (!ecx22) 
                break;
            --ecx22;
            ++edi21;
        } while (v23);
        ecx24 = ~ecx22;
        edx25 = ecx24;
        esi26 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi21) - ecx24);
        edi27 = a2;
        ecx28 = ecx24 >> 2;
        while (ecx28) {
            --ecx28;
            *edi27 = *esi26;
            edi27 = edi27 + 4;
            esi26 = esi26 + 4;
        }
        ecx29 = edx25 & 3;
        while (ecx29) {
            --ecx29;
            *edi27 = *esi26;
            ++edi27;
            ++esi26;
        }
        return 1;
    }
    eax30 = fun_40ca70(ecx17);
    esp31 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 + 4);
    ax32 = fun_40ef40(reinterpret_cast<uint32_t>(esp31) + 16, eax30);
    esp33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp31) - 4 - 4 - 4 + 4 + 8);
    if (ax32 == 1 && (ax34 = fun_40f950(reinterpret_cast<uint32_t>(esp33) + 16), esp33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp33) - 4 - 4 + 4 + 4), !!ax34)) {
        edi35 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp33) + 16);
        ecx36 = 0xffffffff;
        do {
            if (!ecx36) 
                break;
            --ecx36;
            ++edi35;
        } while (v37);
        ecx38 = ~ecx36;
        eax39 = ecx38;
        esi40 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi35) - ecx38);
        edi41 = a2;
        ecx42 = ecx38 >> 2;
        while (ecx42) {
            --ecx42;
            *edi41 = *esi40;
            edi41 = edi41 + 4;
            esi40 = esi40 + 4;
        }
        ecx43 = eax39 & 3;
        while (ecx43) {
            --ecx43;
            *edi41 = *esi40;
            ++edi41;
            ++esi40;
        }
        return 1;
    }
    GetLogicalDriveStringsA();
    esp44 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp33) - 4 - 4 - 4 + 4);
    esi45 = reinterpret_cast<void*>(0);
    if (!v46) {
        goto v47;
    }
    ebx48 = GetDriveTypeA;
    do {
        edi49 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp44) + reinterpret_cast<uint32_t>(esi45) + 0x114);
        eax50 = reinterpret_cast<int32_t>(ebx48());
        esp44 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp44) - 4 - 4 + 4);
        if (eax50 != 5) 
            goto addr_0x40f8d8_27;
        esp51 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp44) - 4 - 4 - 4);
        fun_416300(reinterpret_cast<uint32_t>(esp51) + 28, edi49, 0x429118, 0, 0);
        esp52 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp51) - 4 - 4 - 4 + 4 + 20);
        ax53 = fun_40f950(reinterpret_cast<uint32_t>(esp52) + 16);
        esp44 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp52) - 4 - 4 + 4 + 4);
        if (ax53) 
            break;
        addr_0x40f8d8_27:
        if (*reinterpret_cast<void***>(edi49)) {
            do {
                esi45 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi45) + 1);
            } while (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp44) + reinterpret_cast<uint32_t>(esi45) + 0x115));
        }
        esi45 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi45) + 1);
    } while (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp44) + reinterpret_cast<uint32_t>(esi45) + 0x115));
    goto addr_0x40f8f5_31;
    edi54 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp44) + 16);
    ecx55 = 0xffffffff;
    do {
        if (!ecx55) 
            break;
        --ecx55;
        ++edi54;
    } while (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v8) + 1));
    ecx56 = ~ecx55;
    edx57 = ecx56;
    esi58 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi54) - ecx56);
    edi59 = v60;
    ecx61 = ecx56 >> 2;
    while (ecx61) {
        --ecx61;
        *edi59 = *esi58;
        edi59 = edi59 + 4;
        esi58 = esi58 + 4;
    }
    ecx62 = edx57 & 3;
    while (ecx62) {
        --ecx62;
        *edi59 = *esi58;
        ++edi59;
        ++esi58;
    }
    goto v63;
    addr_0x40f8f5_31:
    goto v64;
}

struct s88 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s89 {
    signed char[11] pad11;
    signed char f11;
};

struct s90 {
    signed char[11] pad11;
    signed char f11;
};

int32_t fun_40ca70(void** ecx) {
    int1_t pf2;
    struct s88* ebx3;
    struct s88* ebx4;
    int1_t pf5;
    unsigned char* eax6;
    unsigned char* eax7;
    unsigned char al8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;
    signed char* eax12;
    signed char* eax13;
    signed char al14;
    signed char* eax15;
    signed char* eax16;
    signed char al17;
    struct s89* eax18;
    struct s90* eax19;
    int32_t eax20;
    signed char al21;
    unsigned char al22;
    int1_t pf23;
    int32_t eax24;
    struct s88* ebx25;
    uint32_t edi26;
    uint32_t edi27;
    struct s88* ebx28;
    int1_t pf29;
    struct s88* ebx30;

    if (pf2 || (ebx3 = ebx4, !pf5)) {
        ebx3 = ebx3;
    } else {
        __asm__("rcl byte [eax-0x15], cl");
    }
    *eax6 = reinterpret_cast<unsigned char>(*eax7 | al8);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
    *eax12 = reinterpret_cast<signed char>(*eax13 + al14);
    *eax15 = reinterpret_cast<signed char>(*eax16 + al17);
    eax18->f11 = reinterpret_cast<signed char>(eax19->f11 + *reinterpret_cast<signed char*>(&ecx + 1));
    __asm__("salc ");
    __asm__("int1 ");
    *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(al21 - reinterpret_cast<unsigned char>(88 + reinterpret_cast<uint1_t>(al22 < reinterpret_cast<unsigned char>(88 + __intrinsic()))));
    pf23 = __intrinsic();
    eax24 = eax20;
    if (!(pf23 || !pf23)) {
        *reinterpret_cast<signed char*>(&gc087047b) = *reinterpret_cast<signed char*>(&eax24);
    }
    if (!(pf23 || !pf23)) {
        ebx3->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4) >> *reinterpret_cast<signed char*>(&ecx));
        pf23 = __intrinsic();
    }
    __asm__("in eax, dx");
    ebx25 = ebx3;
    if (!(pf23 || (ebx25 = ebx25, !pf23))) {
        edi26 = edi27 & ebx25->f4;
        pf23 = __intrinsic();
    }
    ebx28 = ebx25;
    if (pf23 || !pf23) {
        ebx28 = ebx28;
    } else {
        ebx28->f4 = reinterpret_cast<unsigned char>(ebx28->f4 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx28) + 1));
    }
    __asm__("rol byte [ebx+ecx*4], 0x0");
    pf29 = __intrinsic();
    if (!(pf29 || !pf29)) {
        ebx28->f4 = reinterpret_cast<unsigned char>(ebx28->f4 | edi26);
        pf29 = __intrinsic();
    }
    if (pf29 || !pf29) {
    }
    ebx30 = ebx28;
    do {
        *reinterpret_cast<unsigned char*>(&ebx30) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx30) >> 6);
    } while (!__intrinsic());
    __asm__("in eax, dx");
    if (__intrinsic() || !__intrinsic()) {
    }
    goto ebx30;
}

int16_t fun_40ef40(void* a1, int32_t a2) {
    signed char* v3;
    int32_t esi4;
    void** esp5;
    void* v6;
    void* edi7;
    int32_t edi8;
    void* ebx9;
    int32_t eax10;
    int32_t v11;
    int32_t v12;
    int32_t v13;

    v3 = reinterpret_cast<signed char*>(__return_address());
    esi4 = GetDriveTypeA;
    esp5 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4 - 4 - 4);
    v6 = edi7;
    edi8 = a2;
    ebx9 = reinterpret_cast<void*>(0);
    do {
        fun_4150c0(esp5 + 7, 0x4296dc, reinterpret_cast<uint32_t>(ebx9) + 65, v6);
        eax10 = reinterpret_cast<int32_t>(esi4());
        esp5 = esp5 - 1 - 1 - 1 - 1 + 1 + 3 - 1 - 1 + 1;
        if (eax10 != 5) 
            continue;
        fun_4116e0(esp5 + 7, esp5 + 3);
        esp5 = esp5 - 1 - 1 - 1 + 1 + 2;
        if (v11 == edi8) 
            break;
        ebx9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx9) + 1);
    } while (reinterpret_cast<uint32_t>(ebx9) < 26);
    goto addr_0x40ef94_5;
    if (v3) {
        *v3 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx9) + 65);
    }
    goto v12;
    addr_0x40ef94_5:
    goto v13;
}

signed char* gf65a2cd6;

signed char g5571c6b8;

void fun_4080d0(int32_t ecx) {
    signed char* eax2;
    void* esp3;
    signed char bl4;
    signed char al5;
    signed char* edi6;
    int32_t ebx7;
    int32_t esi8;

    while (!__intrinsic()) {
        eax2 = gf65a2cd6;
        __asm__("fld tword [ecx+0x939bbefd]");
        esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 1);
        if (reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esp3) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(esp3 == 0)) 
            goto addr_0x408135_4;
        *eax2 = reinterpret_cast<signed char>(*eax2 << 1);
    }
    __asm__("fbstp tword [ebp+0x12]");
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) & 0x9e);
    *reinterpret_cast<signed char*>(ecx - 0x6ff19944) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx - 0x6ff19944) + bl4);
    __asm__("les edi, [edx+0x3d]");
    __asm__("retf ");
    al5 = g5571c6b8;
    *edi6 = al5;
    __asm__("aaa ");
    if (reinterpret_cast<signed char>(reinterpret_cast<signed char>(al5 - 90) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax2) < 0x1165bf1a + __intrinsic())) < reinterpret_cast<signed char>(0)) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) = 38;
        *reinterpret_cast<uint32_t*>(ebx7 - 100) = esi8 + ecx + __intrinsic();
        __asm__("stc ");
    } else {
        __asm__("cli ");
        __asm__("popad ");
        __asm__("aas ");
        __asm__("lodsb ");
        __asm__("out 0x47, eax");
        __asm__("sti ");
    }
    addr_0x408135_4:
}

struct s91 {
    signed char f0;
    signed char f1;
};

void fun_418734();

void fun_41875c();

void fun_4187d0(uint32_t ecx);

int32_t __image_base = 0x41deb0;

int32_t __image_base = 0x41deb0;

int32_t __image_base = 0x41deb0;

void** __image_base = reinterpret_cast<void**>(0xec);

void** __image_base = reinterpret_cast<void**>(0xdc);

int32_t fun_417e80(void** a1, struct s6* a2, void* a3) {
    int32_t v4;
    void** v5;
    void** ebp6;
    void** v7;
    void** esi8;
    void*** esp9;
    void** v10;
    void** edi11;
    void** ecx12;
    void** ebp13;
    signed char bl14;
    struct s91* edi15;
    uint32_t v16;
    struct s91* v17;
    void** esi18;
    void** v19;
    void** edx20;
    uint32_t eax21;
    uint32_t eax22;
    void** eax23;
    void** v24;
    void** eax25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    uint32_t eax33;
    int32_t ecx34;
    void** eax35;
    void** eax36;
    void** eax37;
    void** eax38;
    void** eax39;
    void** eax40;
    void** eax41;
    uint32_t eax42;
    int32_t ecx43;
    void** eax44;
    void** eax45;
    void** eax46;
    void** eax47;
    uint32_t eax48;
    void** ecx49;
    void** eax50;
    void** eax51;
    signed char v52;
    void** eax53;
    void*** esp54;
    void** eax55;
    void** v56;
    void*** esp57;
    void** esp58;
    uint32_t esi59;
    void** eax60;
    uint32_t ecx61;
    signed char v62;
    void** eax63;
    void** esi64;
    void** eax65;
    void** ecx66;
    void** esi67;
    void** eax68;
    void** edx69;
    void** esi70;
    void** eax71;
    void** edx72;
    void** eax73;
    void** edi74;
    uint32_t ecx75;
    void** edx76;
    uint32_t ebp77;
    void** eax78;
    void** v79;
    void** eax80;
    void** eax81;
    void** ebx82;
    void* edi83;
    void** esi84;
    void** ecx85;
    void*** esp86;
    void** eax87;
    void** esi88;
    void** ebx89;
    void** eax90;
    void*** esp91;
    void** ebx92;
    void** eax93;
    void** eax94;
    void** eax95;
    uint1_t less96;
    void** esi97;
    void** edi98;
    void** ecx99;
    void* eax100;
    void* v101;
    void** eax102;
    void** ebp103;
    void*** ebx104;
    void** ecx105;
    void** eax106;

    v4 = reinterpret_cast<int32_t>(__return_address());
    v5 = ebp6;
    v7 = esi8;
    esp9 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x24c - 4 - 4 - 4 - 4);
    v10 = edi11;
    ecx12 = reinterpret_cast<void**>(0);
    ebp13 = reinterpret_cast<void**>(0);
    bl14 = a2->f0;
    edi15 = reinterpret_cast<struct s91*>(&a2->f1);
    *reinterpret_cast<signed char*>(&v16) = bl14;
    v17 = edi15;
    if (bl14) {
        esi18 = v19;
        while (edx20 = reinterpret_cast<void**>(0), !0) {
            if (bl14 < 32 || bl14 > 0x78) {
                eax21 = 0;
            } else {
                eax22 = reinterpret_cast<uint32_t>(static_cast<int32_t>(bl14));
                *reinterpret_cast<signed char*>(&eax22) = *reinterpret_cast<signed char*>(eax22 + reinterpret_cast<uint32_t>("LC_COLLATE"));
                eax21 = eax22 & 15;
            }
            eax23 = reinterpret_cast<void**>(static_cast<int32_t>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx12 + eax21 * 8) + 0x428080)) >> 4);
            v24 = eax23;
            switch (eax23) {
                addr_0x418080_9:
            case 0:
                eax25 = __image_base;
                v26 = reinterpret_cast<void**>(0);
                if (*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax25 + (v16 & 0xff) * 2) + 1) & 0x80) {
                    fun_418810(static_cast<int32_t>(bl14), a1, esp9 + 28, v10);
                    bl14 = edi15->f0;
                    esp9 = esp9 - 4 - 4 - 4 - 4 + 4 + 12;
                    v17 = reinterpret_cast<struct s91*>(&edi15->f1);
                }
                fun_418810(static_cast<int32_t>(bl14), a1, esp9 + 28, v10);
                esp9 = esp9 - 4 - 4 - 4 - 4 + 4 + 12;
                goto addr_0x4186ba_12;
            case 1:
                v27 = reinterpret_cast<void**>(0);
                v28 = reinterpret_cast<void**>(0);
                v29 = reinterpret_cast<void**>(0);
                v30 = reinterpret_cast<void**>(0);
                v31 = reinterpret_cast<void**>(0);
                v32 = reinterpret_cast<void**>(0xffffffff);
                v26 = reinterpret_cast<void**>(0);
                goto addr_0x4186ba_12;
            case 2:
                eax33 = bl14 + 0xffffffe0;
                if (eax33 <= 16) {
                    ecx34 = 0;
                    *reinterpret_cast<signed char*>(&ecx34) = *reinterpret_cast<signed char*>(eax33 + reinterpret_cast<int32_t>(fun_418734));
                    switch (ecx34) {
                    case 0:
                        eax35 = v31;
                        *reinterpret_cast<unsigned char*>(&eax35) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax35) | 2);
                        v31 = eax35;
                        break;
                    case 1:
                        eax36 = v31;
                        *reinterpret_cast<unsigned char*>(&eax36) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax36) | 0x80);
                        v31 = eax36;
                        break;
                    case 2:
                        eax37 = v31;
                        *reinterpret_cast<unsigned char*>(&eax37) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax37) | 1);
                        v31 = eax37;
                        break;
                    case 3:
                        eax38 = v31;
                        *reinterpret_cast<unsigned char*>(&eax38) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax38) | 4);
                        v31 = eax38;
                        break;
                    case 4:
                        eax39 = v31;
                        *reinterpret_cast<unsigned char*>(&eax39) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax39) | 8);
                        v31 = eax39;
                    case 5:
                        goto 0x4186ba;
                    }
                    goto addr_0x4186ba_12;
                }
            case 3:
                if (bl14 != 42) {
                    v29 = reinterpret_cast<void**>(bl14 + reinterpret_cast<uint32_t>(esi18 + reinterpret_cast<unsigned char>(esi18) * 4) * 2 + 0xffffffd0);
                    goto addr_0x4186ba_12;
                } else {
                    eax40 = fun_4188e0(esp9 + 0x268);
                    esp9 = esp9 - 4 - 4 + 4 + 4;
                    v29 = eax40;
                    if (reinterpret_cast<signed char>(eax40) < reinterpret_cast<signed char>(0)) {
                        v31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) | 4);
                        v29 = reinterpret_cast<void**>(-reinterpret_cast<unsigned char>(eax40));
                        goto addr_0x4186ba_12;
                    }
                }
            case 4:
                v32 = reinterpret_cast<void**>(0);
                goto addr_0x4186ba_12;
            case 5:
                if (bl14 != 42) {
                    v32 = reinterpret_cast<void**>(bl14 + reinterpret_cast<uint32_t>(v32 + reinterpret_cast<unsigned char>(v32) * 4) * 2 + 0xffffffd0);
                    goto addr_0x4186ba_12;
                } else {
                    eax41 = fun_4188e0(esp9 + 0x268);
                    esp9 = esp9 - 4 - 4 + 4 + 4;
                    v32 = eax41;
                    if (reinterpret_cast<signed char>(eax41) < reinterpret_cast<signed char>(0)) {
                        v32 = reinterpret_cast<void**>(0xffffffff);
                        goto addr_0x4186ba_12;
                    }
                }
            case 6:
                eax42 = bl14 + 0xffffffb7;
                if (eax42 > 46) {
                    addr_0x4186ba_12:
                    bl14 = v17->f0;
                    edi15 = reinterpret_cast<struct s91*>(&v17->f1);
                    *reinterpret_cast<signed char*>(&v16) = bl14;
                    v17 = edi15;
                    if (!bl14) 
                        goto addr_0x4186d7_31;
                } else {
                    ecx43 = 0;
                    *reinterpret_cast<signed char*>(&ecx43) = *reinterpret_cast<signed char*>(eax42 + reinterpret_cast<int32_t>(fun_41875c));
                    switch (ecx43) {
                    case 0:
                        if (edi15->f0 != 54 || edi15->f1 != 52) {
                            v24 = reinterpret_cast<void**>(0);
                            goto addr_0x418080_9;
                        } else {
                            eax44 = v31;
                            *reinterpret_cast<unsigned char*>(&eax44 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax44 + 1) | 0x80);
                            v17 = edi15 + 1;
                            v31 = eax44;
                            break;
                        }
                    case 1:
                        eax45 = v31;
                        *reinterpret_cast<unsigned char*>(&eax45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) | 32);
                        v31 = eax45;
                        break;
                    case 2:
                        eax46 = v31;
                        *reinterpret_cast<unsigned char*>(&eax46) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax46) | 16);
                        v31 = eax46;
                        break;
                    case 3:
                        eax47 = v31;
                        *reinterpret_cast<unsigned char*>(&eax47 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax47 + 1) | 8);
                        v31 = eax47;
                    case 4:
                        goto 0x4186ba;
                    }
                    goto addr_0x4186ba_12;
                }
                esi18 = v29;
                ecx12 = v24;
                break;
            case 7:
                eax48 = bl14 + 0xffffffbd;
                if (eax48 > 53) {
                    addr_0x4185a0_41:
                    if (v28) 
                        goto addr_0x4186ba_12;
                } else {
                    ecx49 = reinterpret_cast<void**>(0);
                    *reinterpret_cast<signed char*>(&ecx49) = *reinterpret_cast<signed char*>(eax48 + reinterpret_cast<int32_t>(fun_4187d0));
                    switch (ecx49) {
                    case 0:
                        eax50 = v31;
                        if (!(reinterpret_cast<unsigned char>(eax50) & 0x830)) {
                            *reinterpret_cast<unsigned char*>(&eax50 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax50 + 1) | 8);
                            v31 = eax50;
                        }
                    case 6:
                        if (!(reinterpret_cast<unsigned char>(v31) & 0x810)) {
                            eax51 = fun_4188e0(esp9 + 0x268);
                            esp9 = esp9 - 4 - 4 + 4 + 4;
                            v52 = *reinterpret_cast<signed char*>(&eax51);
                            ebp13 = reinterpret_cast<void**>(1);
                            goto addr_0x418186_47;
                        } else {
                            eax53 = fun_418920(esp9 + 0x268);
                            esp54 = esp9 - 4 - 4 + 4 + 4 - 4;
                            eax55 = fun_41cb80(ecx49, esp54 + 96, eax53, v10, v7, v5);
                            ebp13 = eax55;
                            esp9 = esp54 - 4 - 4 + 4 + 8;
                            if (reinterpret_cast<signed char>(ebp13) >= reinterpret_cast<signed char>(0)) {
                                addr_0x418186_47:
                                v56 = reinterpret_cast<void**>(esp9 + 92);
                                break;
                            } else {
                                v28 = reinterpret_cast<void**>(1);
                                v56 = reinterpret_cast<void**>(esp9 + 92);
                                break;
                            }
                        }
                    case 1:
                    case 2:
                        v27 = reinterpret_cast<void**>(1);
                        bl14 = reinterpret_cast<signed char>(bl14 + 32);
                    case 8:
                        v56 = reinterpret_cast<void**>(esp9 + 92);
                        v31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) | 64);
                        if (reinterpret_cast<signed char>(v32) >= reinterpret_cast<signed char>(0)) {
                            if (!v32 && bl14 == 0x67) {
                                v32 = reinterpret_cast<void**>(1);
                            }
                        } else {
                            v32 = reinterpret_cast<void**>(6);
                        }
                        esp57 = esp9 - 4 - 4;
                        esp58 = reinterpret_cast<void**>(esp57 - 4);
                        __image_base(esp58 + 22, esp57 + 100, static_cast<int32_t>(bl14), v32, v27);
                        esp9 = reinterpret_cast<void***>(esp58 - 1 - 1 - 1 + 1 + 5);
                        esi59 = reinterpret_cast<unsigned char>(v31) & 0x80;
                        if (esi59 && !v32) {
                            __image_base(esp9 + 92);
                            esp9 = esp9 - 4 - 4 + 4 + 4;
                        }
                        if (bl14 == 0x67 && !esi59) {
                            __image_base(esp9 + 92);
                            esp9 = esp9 - 4 - 4 + 4 + 4;
                        }
                        if (v52 == 45) {
                            eax60 = v31;
                            *reinterpret_cast<unsigned char*>(&eax60 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax60 + 1) | 1);
                            v31 = eax60;
                            v56 = reinterpret_cast<void**>(esp9 + 93);
                        }
                        ecx61 = 0xffffffff;
                        do {
                            if (!ecx61) 
                                break;
                            --ecx61;
                        } while (v62);
                        ebp13 = reinterpret_cast<void**>(~ecx61 - 1);
                        break;
                    case 3:
                        eax63 = v31;
                        if (!(reinterpret_cast<unsigned char>(eax63) & 0x830)) {
                            *reinterpret_cast<unsigned char*>(&eax63 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax63 + 1) | 8);
                            v31 = eax63;
                        }
                    case 13:
                        esi64 = reinterpret_cast<void**>(0x7fffffff);
                        if (v32 != 0xffffffff) {
                            esi64 = v32;
                        }
                        eax65 = fun_4188e0(esp9 + 0x268);
                        ecx66 = eax65;
                        esp9 = esp9 - 4 - 4 + 4 + 4;
                        v56 = ecx66;
                        if (!(reinterpret_cast<unsigned char>(v31) & 0x810)) {
                            if (!ecx66) {
                                ecx66 = __image_base;
                                v56 = ecx66;
                            }
                            esi67 = esi64 - 1;
                            eax68 = ecx66;
                            if (esi64) {
                                do {
                                    if (!*reinterpret_cast<void***>(eax68)) 
                                        break;
                                    ++eax68;
                                    edx69 = esi67;
                                    --esi67;
                                } while (edx69);
                            }
                            ebp13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax68) - reinterpret_cast<unsigned char>(ecx66));
                            break;
                        } else {
                            if (!ecx66) {
                                ecx66 = __image_base;
                                v56 = ecx66;
                            }
                            esi70 = esi64 - 1;
                            v26 = reinterpret_cast<void**>(1);
                            eax71 = ecx66;
                            if (esi64) {
                                do {
                                    if (!*reinterpret_cast<void***>(eax71)) 
                                        break;
                                    eax71 = eax71 + 2;
                                    edx72 = esi70;
                                    --esi70;
                                } while (edx72);
                            }
                            ebp13 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax71) - reinterpret_cast<unsigned char>(ecx66)) >> 1);
                            break;
                        }
                        addr_0x4183f0_82:
                    case 4:
                        goto addr_0x418402_83;
                    case 5:
                        eax73 = fun_4188e0(esp9 + 0x268);
                        esp9 = esp9 - 4 - 4 + 4 + 4;
                        if (!eax73 || (ecx49 = *reinterpret_cast<void***>(eax73 + 4), ecx49 == 0)) {
                            edi74 = __image_base;
                            ecx75 = 0xffffffff;
                            v56 = edi74;
                            do {
                                if (!ecx75) 
                                    break;
                                --ecx75;
                                ++edi74;
                            } while (*reinterpret_cast<void***>(edi74));
                            ebp13 = reinterpret_cast<void**>(~ecx75 - 1);
                            break;
                        } else {
                            edx76 = v31;
                            if (!(*reinterpret_cast<unsigned char*>(&edx76 + 1) & 8)) {
                                ebp13 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax73))));
                                v26 = reinterpret_cast<void**>(0);
                                v56 = ecx49;
                                break;
                            } else {
                                ebp77 = reinterpret_cast<uint32_t>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax73))));
                                v56 = ecx49;
                                v26 = reinterpret_cast<void**>(1);
                                ebp13 = reinterpret_cast<void**>(ebp77 >> 1);
                                break;
                            }
                        }
                    case 7:
                    case 9:
                        eax78 = v31;
                        v79 = reinterpret_cast<void**>(10);
                        *reinterpret_cast<unsigned char*>(&eax78) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax78) | 64);
                        v31 = eax78;
                        goto addr_0x418447_93;
                    case 10:
                        eax80 = fun_4188e0(esp9 + 0x268);
                        esp9 = esp9 - 4 - 4 + 4 + 4;
                        if (!(*reinterpret_cast<unsigned char*>(&v31) & 32)) {
                            v28 = reinterpret_cast<void**>(1);
                            *reinterpret_cast<void***>(eax80) = reinterpret_cast<void**>(0);
                            break;
                        } else {
                            v28 = reinterpret_cast<void**>(1);
                            *reinterpret_cast<void***>(eax80) = reinterpret_cast<void**>(0);
                            break;
                        }
                    case 11:
                        v79 = reinterpret_cast<void**>(8);
                        if (*reinterpret_cast<unsigned char*>(&v31) & 0x80) {
                            eax81 = v31;
                            *reinterpret_cast<unsigned char*>(&eax81 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax81 + 1) | 2);
                            v31 = eax81;
                            goto addr_0x418447_93;
                        }
                    case 12:
                        v32 = reinterpret_cast<void**>(8);
                        goto addr_0x4183f0_82;
                    case 14:
                        v79 = reinterpret_cast<void**>(10);
                        goto addr_0x418447_93;
                    case 15:
                        goto addr_0x418402_83;
                    case 16:
                        goto 0x4185a0;
                    }
                    goto addr_0x4185a0_41;
                }
                ebx82 = v31;
                if (!(*reinterpret_cast<unsigned char*>(&ebx82) & 64)) 
                    goto addr_0x4185df_103;
                if (!(*reinterpret_cast<unsigned char*>(&ebx82 + 1) & 1)) {
                    if (!(*reinterpret_cast<unsigned char*>(&ebx82) & 1)) {
                        if (!(*reinterpret_cast<unsigned char*>(&ebx82) & 2)) {
                            addr_0x4185df_103:
                            edi83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v29) - reinterpret_cast<unsigned char>(ebp13) - reinterpret_cast<unsigned char>(v30));
                            if (*reinterpret_cast<unsigned char*>(&ebx82) & 12) {
                                esi84 = a1;
                            } else {
                                esi84 = a1;
                                fun_418860(32, edi83, esi84, esp9 + 28);
                                esp9 = esp9 - 4 - 4 - 4 - 4 - 4 + 4 + 16;
                            }
                        } else {
                            goto addr_0x4185d7_110;
                        }
                    } else {
                        goto addr_0x4185d7_110;
                    }
                } else {
                    goto addr_0x4185d7_110;
                }
                ecx85 = reinterpret_cast<void**>(esp9 + 28);
                esp86 = esp9 - 4 - 4;
                fun_4188a0(esp86 + 42, v30, esi84, ecx85);
                esp9 = esp86 - 4 - 4 - 4 + 4 + 16;
                if (*reinterpret_cast<unsigned char*>(&ebx82) & 8 && !(*reinterpret_cast<unsigned char*>(&ebx82) & 4)) {
                    ecx85 = reinterpret_cast<void**>(esp9 + 28);
                    fun_418860(48, edi83, esi84, ecx85);
                    esp9 = esp9 - 4 - 4 - 4 - 4 - 4 + 4 + 16;
                }
                eax87 = v26;
                if (!eax87 || reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ebp13) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ebp13 == 0)) {
                    fun_4188a0(v56, ebp13, esi84, esp9 + 28);
                    esp9 = esp9 - 4 - 4 - 4 - 4 - 4 + 4 + 16;
                } else {
                    esi88 = v56;
                    ebx89 = ebp13 + 0xffffffff;
                    do {
                        eax87 = *reinterpret_cast<void***>(esi88);
                        esi88 = esi88 + 2;
                        eax90 = fun_41cb80(ecx85, esp9 + 72, eax87, v10, v7, v5);
                        esp9 = esp9 - 4 - 4 - 4 + 4 + 8;
                        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax90) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax90 == 0)) 
                            break;
                        esp91 = esp9 - 4 - 4 - 4;
                        eax87 = reinterpret_cast<void**>(esp91 + 84);
                        fun_4188a0(eax87, eax90, a1, esp9 + 28);
                        esp9 = esp91 - 4 - 4 + 4 + 16;
                        ecx85 = ebx89;
                        --ebx89;
                    } while (ecx85);
                    ebx82 = v31;
                }
                if (*reinterpret_cast<unsigned char*>(&ebx82) & 4) {
                    fun_418860(32, edi83, a1, esp9 + 28);
                    esp9 = esp9 - 4 - 4 - 4 - 4 - 4 + 4 + 16;
                    goto addr_0x4186ba_12;
                }
                addr_0x4185d7_110:
                v30 = reinterpret_cast<void**>(1);
                goto addr_0x4185df_103;
                addr_0x418447_93:
                ebx92 = v31;
                if (!(*reinterpret_cast<unsigned char*>(&ebx92 + 1) & 0x80)) {
                    if (!(*reinterpret_cast<unsigned char*>(&ebx92) & 32)) {
                        if (!(*reinterpret_cast<unsigned char*>(&ebx92) & 64)) {
                            eax93 = fun_4188e0(esp9 + 0x268);
                            esp9 = esp9 - 4 - 4 + 4 + 4;
                            edx20 = reinterpret_cast<void**>(0);
                        } else {
                            edx20 = reinterpret_cast<void**>(esp9 + 0x268);
                            eax93 = fun_4188e0(edx20);
                            esp9 = esp9 - 4 - 4 + 4 + 4;
                            __asm__("cdq ");
                        }
                    } else {
                        if (!(*reinterpret_cast<unsigned char*>(&ebx92) & 64)) {
                            eax94 = fun_4188e0(esp9 + 0x268);
                            esp9 = esp9 - 4 - 4 + 4 + 4;
                            eax93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax94) & 0xffff);
                            __asm__("cdq ");
                        } else {
                            eax95 = fun_4188e0(esp9 + 0x268);
                            eax93 = reinterpret_cast<void**>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax95)));
                            esp9 = esp9 - 4 - 4 + 4 + 4;
                            __asm__("cdq ");
                        }
                    }
                } else {
                    edx20 = reinterpret_cast<void**>(esp9 + 0x268);
                    eax93 = fun_418900(edx20);
                    esp9 = esp9 - 4 - 4 + 4 + 4;
                }
                if (!(*reinterpret_cast<unsigned char*>(&ebx92) & 64) || ((less96 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edx20) < reinterpret_cast<signed char>(0)), !reinterpret_cast<uint1_t>(less96 | reinterpret_cast<uint1_t>(edx20 == 0))) || static_cast<int1_t>(!less96))) {
                    esi97 = eax93;
                    edi98 = edx20;
                } else {
                    esi97 = reinterpret_cast<void**>(-reinterpret_cast<unsigned char>(eax93));
                    *reinterpret_cast<unsigned char*>(&ebx92 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx92 + 1) | 1);
                    edi98 = reinterpret_cast<void**>(-(reinterpret_cast<unsigned char>(edx20) + reinterpret_cast<uint1_t>(!!eax93)));
                    v31 = ebx92;
                }
                if (!(*reinterpret_cast<unsigned char*>(&ebx92 + 1) & 0x80)) {
                    edi98 = reinterpret_cast<void**>(0);
                }
                ecx99 = v32;
                if (reinterpret_cast<signed char>(ecx99) >= reinterpret_cast<signed char>(0)) {
                    v31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx92) & 0xfffffff7);
                } else {
                    ecx99 = reinterpret_cast<void**>(1);
                }
                if (!(reinterpret_cast<unsigned char>(esi97) | reinterpret_cast<unsigned char>(edi98))) {
                    v30 = reinterpret_cast<void**>(0);
                }
                eax100 = reinterpret_cast<void*>(esp9 + 0x25b);
                v101 = eax100;
                while ((v32 = ecx99 - 1, !reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx99) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ecx99 == 0))) || reinterpret_cast<unsigned char>(esi97) | reinterpret_cast<unsigned char>(edi98)) {
                    eax102 = v79;
                    __asm__("cdq ");
                    ebp103 = eax102;
                    *reinterpret_cast<int16_t*>(&eax102) = fun_41cce0(esi97, edi98, ebp103, ecx99);
                    ebx104 = reinterpret_cast<void***>(eax102 + 48);
                    *reinterpret_cast<int16_t*>(&eax102) = fun_41cc70(esi97, edi98, ebp103, ecx99);
                    esp9 = esp9 - 4 - 4 - 4 - 4 - 4 + 16 + 4 - 4 - 4 - 4 - 4 - 4 + 16 + 4;
                    esi97 = eax102;
                    edi98 = ecx99;
                    if (reinterpret_cast<int32_t>(ebx104) > reinterpret_cast<int32_t>(57)) {
                    }
                    ecx99 = v32;
                    eax100 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v101) - 1);
                    v101 = eax100;
                }
                ecx105 = v31;
                ebp13 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp9 + 0x25b) - reinterpret_cast<uint32_t>(eax100));
                eax106 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax100) + 1);
                v56 = eax106;
                if (*reinterpret_cast<unsigned char*>(&ecx105 + 1) & 2 && (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(&v4) == 48) || !ebp13)) {
                    ++ebp13;
                    v56 = eax106 - 1;
                    goto addr_0x4185a0_41;
                }
                addr_0x418402_83:
                v79 = reinterpret_cast<void**>(16);
                if (*reinterpret_cast<unsigned char*>(&v31) & 0x80) {
                    v30 = reinterpret_cast<void**>(2);
                    goto addr_0x418447_93;
                }
            }
        }
    }
    addr_0x4186d7_31:
    return 0;
}

int32_t fun_41fb40(void** ecx, void** a2, void** a3, void** a4, int32_t a5, int32_t a6, uint32_t a7, void** a8, int32_t a9, int32_t a10, int16_t a11) {
    void** edi12;
    void** esi13;
    void** eax14;
    int32_t eax15;

    fun_411eb0(ecx, a2, 0, 64, a3, edi12, esi13);
    eax14 = *reinterpret_cast<void***>(a3 + 60);
    fun_411eb0(ecx, a2, eax14, 0xf8, a4, edi12, esi13);
    eax15 = 0;
    *reinterpret_cast<unsigned char*>(&eax15) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(a4) == 0x4550));
    return eax15;
}

void fun_412230(void** a1, int32_t a2, int32_t a3) {
    void** esp4;
    void** edi5;
    void** eax6;
    void** esi7;
    void* esp8;
    void** v9;
    void* esp10;
    void** eax11;

    esp4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8);
    edi5 = a1;
    eax6 = fun_41fa00(edi5, 1, 0, esp4 + 4, esp4, esp4 + 12);
    esi7 = eax6;
    esp8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp4 - 4) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
    if (esi7) {
        do {
            fun_411930(edi5, a1, v9, 4);
            esp10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp8) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
            eax11 = fun_41fa00(edi5, 1, esi7 + 40, reinterpret_cast<uint32_t>(esp10) + 12, reinterpret_cast<uint32_t>(esp10) + 8, reinterpret_cast<uint32_t>(esp10) + 20);
            esi7 = eax11;
            esp8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp10) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
        } while (esi7);
    }
    return;
}

void fun_4121a0(void** a1, int32_t a2, int32_t a3) {
    void** esp4;
    void** edi5;
    void** eax6;
    void** esi7;
    void* esp8;
    void** v9;
    void* esp10;
    void** eax11;

    esp4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8);
    edi5 = a1;
    eax6 = fun_41fa00(edi5, 2, 0, esp4 + 4, esp4, esp4 + 12);
    esi7 = eax6;
    esp8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp4 - 4) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
    if (esi7) {
        do {
            fun_411930(edi5, a1, v9, 5);
            esp10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp8) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
            eax11 = fun_41fa00(edi5, 2, esi7 + 40, reinterpret_cast<uint32_t>(esp10) + 12, reinterpret_cast<uint32_t>(esp10) + 8, reinterpret_cast<uint32_t>(esp10) + 20);
            esi7 = eax11;
            esp8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp10) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
        } while (esi7);
    }
    return;
}

void fun_412110(void** a1, int32_t a2, int32_t a3) {
    void** esp4;
    void** edi5;
    void** eax6;
    void** esi7;
    void* esp8;
    void** v9;
    void* esp10;
    void** eax11;

    esp4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8);
    edi5 = a1;
    eax6 = fun_41fa00(edi5, 10, 0, esp4 + 4, esp4, esp4 + 12);
    esi7 = eax6;
    esp8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp4 - 4) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
    if (esi7) {
        do {
            fun_411930(edi5, a1, v9, 6);
            esp10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp8) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
            eax11 = fun_41fa00(edi5, 10, esi7 + 40, reinterpret_cast<uint32_t>(esp10) + 12, reinterpret_cast<uint32_t>(esp10) + 8, reinterpret_cast<uint32_t>(esp10) + 20);
            esi7 = eax11;
            esp8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp10) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
        } while (esi7);
    }
    return;
}

void** fun_412fe0(void** a1, void** a2, void** a3, void** a4) {
    void** v5;
    void** ebx6;
    void** v7;
    void** ebp8;
    void** v9;
    void** esi10;
    void** esi11;
    void** v12;
    void** edi13;
    void** ebx14;
    void** ebp15;
    void** edi16;
    void** eax17;
    int16_t ax18;
    void** ecx19;
    int16_t ax20;

    v5 = ebx6;
    v7 = ebp8;
    v9 = esi10;
    esi11 = *reinterpret_cast<void***>(a1 + 8);
    v12 = edi13;
    if (esi11 || (esi11 = *reinterpret_cast<void***>(a1), !!esi11)) {
        ebx14 = a4;
        ebp15 = a3;
        edi16 = a2;
        do {
            eax17 = *reinterpret_cast<void***>(esi11);
            ax18 = fun_413880(eax17, edi16);
            if (ax18) 
                goto addr_0x413048_4;
            ecx19 = *reinterpret_cast<void***>(esi11);
            ax20 = fun_413800(ecx19, edi16, ebp15, ebx14);
            if (ax20) 
                break;
            esi11 = *reinterpret_cast<void***>(esi11 + 4);
        } while (esi11);
        goto addr_0x41302c_7;
    } else {
        addr_0x413048_4:
        return 0;
    }
    fun_412ee0(a1, esi11, v12, v9, v7, v5);
    return esi11;
    addr_0x41302c_7:
    return 0;
}

void** fun_4133e0(void** a1, void*** a2, void*** a3, void** a4) {
    void** ebx5;
    void*** ebp6;
    void** edx7;
    void** eax8;
    void* esp9;
    int32_t ecx10;
    void** v11;
    void*** eax12;
    void** v13;
    struct s25* edx14;
    void*** esp15;
    void** eax16;
    void* esp17;
    void** esi18;
    struct s25* v19;

    ebx5 = a4;
    ebp6 = a2;
    edx7 = *a3;
    eax8 = *ebp6;
    esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 36 - 4 - 4 - 4 - 4);
    ecx10 = 8;
    v11 = eax8;
    eax12 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp9) + 16);
    while (ecx10) {
        --ecx10;
    }
    v13 = edx7;
    edx14 = *reinterpret_cast<struct s25**>(reinterpret_cast<int32_t>(esp9) + reinterpret_cast<unsigned char>(ebx5) * 4 + 20);
    esp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp9) - 4);
    eax16 = fun_4132e0(edx14, esp15 + 64, eax12, ebx5);
    esp17 = reinterpret_cast<void*>(esp15 - 4 - 4 - 4 - 4 + 4 + 16);
    if (*reinterpret_cast<int16_t*>(&eax16) && ebx5 != 3) {
        esi18 = reinterpret_cast<void**>(0);
        do {
            if (ebx5 == esi18) 
                continue;
            eax16 = fun_4131b0(v19, reinterpret_cast<int32_t>(esp17) + 60, reinterpret_cast<int32_t>(esp17) + 16);
            esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 - 4 - 4 - 4 + 4 + 12);
            if (!*reinterpret_cast<int16_t*>(&eax16)) 
                break;
            ++esi18;
        } while (reinterpret_cast<signed char>(esi18) < reinterpret_cast<signed char>(8));
    }
    *ebp6 = v11;
    *a3 = v13;
    return eax16;
}

void fun_411aa0(void** a1, void** a2, void** a3, void** a4, void** a5);

void fun_4135d0(void** a1, void** a2) {
    fun_411aa0(a1, 3, __return_address(), a1, a2);
    return;
}

void** fun_411ad0(void** a1, int32_t a2, void** a3, void** a4) {
    void** eax5;
    void** v6;

    eax5 = fun_411c30(a1);
    if (eax5) {
        v6 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax5 + a2 * 4) + 20);
        eax5 = fun_4130c0(v6, a3, a4, __return_address(), a1);
    }
    return eax5;
}

void** fun_411c80(void** a1, void** a2, void** a3, void** a4) {
    void** ecx5;
    void** eax6;
    void* esi7;

    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a1 + 8) == 0x65) || ((ecx5 = *reinterpret_cast<void***>(a1), eax6 = reinterpret_cast<void**>(SetFilePointer(ecx5, a2, 0, 0)), eax6 == 0xffffffff) || ((eax6 = reinterpret_cast<void**>(ReadFile()), *reinterpret_cast<int16_t*>(&eax6) == 0) || !reinterpret_cast<int1_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12 == esi7)))) {
        *reinterpret_cast<int16_t*>(&eax6) = 0;
        return eax6;
    } else {
        goto esi7;
    }
}

void** fun_411f90(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** edi14;
    void** edi15;
    void** esi16;
    void** eax17;
    void** eax18;

    edi14 = reinterpret_cast<void**>(0);
    if (a2 && (eax17 = fun_411fd0(ecx, a2, edi15, esi16, __return_address(), a2, a3, a4), !!eax17)) {
        eax18 = reinterpret_cast<void**>(LoadLibraryA(eax17));
        edi14 = eax18;
        fun_414d40(ecx, eax17, eax17, edi15, esi16, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    }
    return edi14;
}

int16_t fun_411ce0(void** a1, void** a2, void** a3, void** a4) {
    void** ecx5;
    int32_t eax6;
    int16_t ax7;
    void* esi8;

    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a1 + 8) == 0x65) || ((ecx5 = *reinterpret_cast<void***>(a1), eax6 = reinterpret_cast<int32_t>(SetFilePointer(ecx5, a2, 0, 0)), eax6 == -1) || ((ax7 = reinterpret_cast<int16_t>(WriteFile()), ax7 == 0) || !reinterpret_cast<int1_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12 == esi8)))) {
        return 0;
    } else {
        goto esi8;
    }
}

void** fun_41fbf0(void** a1, void** a2, uint32_t a3, void** a4, void** a5, void** a6);

struct s92 {
    unsigned char f0;
    unsigned char f1;
};

void** fun_41fc50(void** a1, struct s92* a2, void** a3, void** a4, void** a5);

void** fun_41f3e0(void** a1, int32_t a2, void** a3, void** a4, void** a5, void** a6, int32_t* a7) {
    void* esp8;
    void** ecx9;
    void** edi10;
    int32_t edi11;
    int32_t esi12;
    uint32_t ebp13;
    void** ebx14;
    int32_t v15;
    int32_t v16;
    int16_t v17;
    uint32_t ecx18;
    uint32_t v19;
    void* esp20;
    void** eax21;
    void* v22;
    uint32_t v23;
    void** ebx24;
    void** ebp25;
    void** esi26;
    void** eax27;
    void** eax28;
    int32_t v29;
    signed char al30;
    void** v31;
    void** v32;
    void** eax33;
    void** eax34;
    void** v35;
    void** v36;
    void** eax37;
    void** v38;
    void** eax39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** eax44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    int32_t v49;
    void** v50;
    void** eax51;
    void** v52;
    void** v53;
    void** eax54;
    int32_t v55;
    void** v56;
    void** eax57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** eax64;
    void** v65;
    void** v66;
    void** eax67;
    int32_t v68;
    void** eax69;
    int32_t v70;
    signed char al71;
    void** v72;
    void** eax73;
    void** v74;
    void** v75;
    void** eax76;
    int32_t v77;
    void** v78;
    void** v79;
    void** eax80;

    esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x160);
    ecx9 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp8) + 0x120);
    edi10 = a1;
    fun_41fb40(ecx9, edi10, ecx9, reinterpret_cast<int32_t>(esp8) + 40, edi11, esi12, ebp13, ebx14, v15, v16, v17);
    ecx18 = v19 & 0xffff;
    esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12);
    eax21 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v22) + (v23 & 0xffff) + 24);
    ebx24 = eax21 + (ecx18 + ecx18 * 4) * 8;
    if (a3) {
        eax21 = a3;
    }
    ebp25 = a5;
    *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ebp25) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(a6) = reinterpret_cast<void**>(0);
    switch (a2 - 1) {
    default:
        *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(ebp25) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a6) = reinterpret_cast<void**>(0);
        esi26 = reinterpret_cast<void**>(0);
        break;
    case 0:
        eax27 = fun_41fbf0(edi10, 0x20000020, 0x20000020, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16);
        esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
        esi26 = eax27;
        goto addr_0x41f5de_7;
    case 1:
        while (eax28 = fun_41fbf0(edi10, 0xc0000040, 0xc0000040, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16), esi26 = eax28, esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24), !!esi26) {
            al30 = fun_41f9b0(v29, edi10);
            esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 + 4 + 8);
            if (!al30) 
                goto addr_0x41f744_10;
            eax21 = esi26 + 40;
        }
        break;
        addr_0x41f744_10:
        if (esi26) {
            *reinterpret_cast<void***>(a4) = v31;
            *reinterpret_cast<void***>(a6) = v32;
            eax33 = fun_41fd90(reinterpret_cast<int32_t>(esp20) + 16);
            *reinterpret_cast<void***>(ebp25) = eax33;
            return esi26;
        }
    case 2:
        eax34 = fun_41fc50(edi10, 0x42a970, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16);
        esi26 = eax34;
        esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
        if (esi26) {
            *reinterpret_cast<void***>(a4) = v35;
            *reinterpret_cast<void***>(a6) = v36;
            eax37 = fun_41fd90(reinterpret_cast<int32_t>(esp20) + 16);
            *reinterpret_cast<void***>(ebp25) = eax37;
            return esi26;
        }
    case 4:
        eax39 = fun_41fb90(edi10, v38, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16);
        esi26 = eax39;
        if (esi26) {
            *reinterpret_cast<void***>(a4) = v40;
            *reinterpret_cast<void***>(a6) = v41;
            *reinterpret_cast<void***>(ebp25) = v42;
            return esi26;
        }
    case 5:
        eax44 = fun_41fb90(edi10, v43, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16);
        esi26 = eax44;
        if (esi26) {
            *reinterpret_cast<void***>(a4) = v45;
            *reinterpret_cast<void***>(a6) = v46;
            *reinterpret_cast<void***>(ebp25) = v47;
            if (!v47) {
                *reinterpret_cast<void***>(ebp25) = v48;
            }
            *a7 = v49;
            return esi26;
        }
    case 6:
        eax51 = fun_41fb90(edi10, v50, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16);
        esi26 = eax51;
        esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
        if (esi26) {
            *reinterpret_cast<void***>(a4) = v52;
            *reinterpret_cast<void***>(a6) = v53;
            eax54 = fun_41fd90(reinterpret_cast<int32_t>(esp20) + 16);
            *reinterpret_cast<void***>(ebp25) = eax54;
            *a7 = v55;
            return esi26;
        }
    case 7:
        eax57 = fun_41fb90(edi10, v56, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16);
        esi26 = eax57;
        if (!esi26) {
            if (v58) {
                *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(a6) = v58;
                *reinterpret_cast<void***>(ebp25) = v59;
                return esi26;
            }
        } else {
            *reinterpret_cast<void***>(a4) = v60;
            *reinterpret_cast<void***>(a6) = v61;
            *reinterpret_cast<void***>(ebp25) = v62;
            return esi26;
        }
    case 8:
        eax64 = fun_41fb90(edi10, v63, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16);
        esi26 = eax64;
        esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
        if (esi26) {
            *reinterpret_cast<void***>(a4) = v65;
            *reinterpret_cast<void***>(a6) = v66;
            eax67 = fun_41fd90(reinterpret_cast<int32_t>(esp20) + 16);
            *reinterpret_cast<void***>(ebp25) = eax67;
            *a7 = v68;
            return esi26;
        }
    case 9:
        while (eax69 = fun_41fbf0(edi10, 0x40000040, 0xc0000060, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16), esi26 = eax69, esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24), !!esi26) {
            al71 = fun_41f9b0(v70, edi10);
            esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 + 4 + 8);
            if (!al71) 
                goto addr_0x41f5de_7;
            eax21 = esi26 + 40;
        }
        break;
    case 10:
        eax73 = fun_41fb90(edi10, v72, eax21, ebx24, reinterpret_cast<int32_t>(esp20) + 16);
        esi26 = eax73;
        esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20);
        if (esi26) {
            *reinterpret_cast<void***>(a4) = v74;
            *reinterpret_cast<void***>(a6) = v75;
            eax76 = fun_41fd90(reinterpret_cast<int32_t>(esp20) + 16);
            *reinterpret_cast<void***>(ebp25) = eax76;
            *a7 = v77;
            return esi26;
        }
    }
    return esi26;
    addr_0x41f5de_7:
    if (esi26) {
        *reinterpret_cast<void***>(a4) = v78;
        *reinterpret_cast<void***>(a6) = v79;
        eax80 = fun_41fd90(reinterpret_cast<int32_t>(esp20) + 16);
        *reinterpret_cast<void***>(ebp25) = eax80;
        return esi26;
    }
}

void** fun_41f3b0(void** a1);

struct s93 {
    signed char[1] pad1;
    void** f1;
};

void** fun_412350(void** a1, void** a2, void** a3) {
    void** v4;
    void** v5;
    void** ebx6;
    void** v7;
    void** ebp8;
    void** v9;
    void** edi10;
    void** edi11;
    void** eax12;
    void** ebp13;
    void** ebx14;
    void** v15;
    void** esi16;
    void** esi17;
    void** eax18;
    struct s93* ecx19;
    void** ecx20;
    void** edx21;

    v4 = reinterpret_cast<void**>(__return_address());
    v5 = ebx6;
    v7 = ebp8;
    v9 = edi10;
    edi11 = a1;
    eax12 = fun_41f3b0(edi11);
    ebp13 = a3;
    ebx14 = eax12;
    if (ebp13) {
        v15 = esi16;
        esi17 = a2;
        do {
            eax18 = *reinterpret_cast<void***>(esi17);
            ecx19 = reinterpret_cast<struct s93*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17 + 16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17 + 4)) - reinterpret_cast<unsigned char>(eax18));
            ecx20 = reinterpret_cast<void**>(&ecx19->f1);
            fun_411930(edi11, reinterpret_cast<unsigned char>(eax18) - reinterpret_cast<unsigned char>(ebx14), ecx20, 7);
            fun_4123c0(ecx20, edi11, esi17, ebx14, v15, v9, v7, v5, v4, a1, a2);
            edx21 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17 + 8)) - reinterpret_cast<unsigned char>(ebx14));
            eax12 = fun_411930(edi11, edx21, 4, 7);
            esi17 = esi17 + 24;
            ebp13 = ebp13 - 24;
        } while (ebp13);
    }
    return eax12;
}

void** fun_41fb90(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** esi7;
    void** v8;
    void** edi9;
    void** edi10;
    void** esi11;
    void** ebx12;
    void** ebp13;
    void** ecx14;
    void** eax15;

    v6 = esi7;
    v8 = edi9;
    edi10 = a3;
    if (reinterpret_cast<unsigned char>(edi10) >= reinterpret_cast<unsigned char>(a4)) {
        return 0;
    }
    esi11 = a5;
    ebx12 = a2;
    ebp13 = a1;
    do {
        fun_411eb0(ecx14, ebp13, edi10, 40, esi11, v8, v6);
        eax15 = *reinterpret_cast<void***>(esi11 + 8);
        if (!eax15) {
            eax15 = *reinterpret_cast<void***>(esi11 + 16);
        }
        ecx14 = *reinterpret_cast<void***>(esi11 + 12);
        if (reinterpret_cast<unsigned char>(ecx14) > reinterpret_cast<unsigned char>(ebx12)) 
            continue;
        if (reinterpret_cast<unsigned char>(ebx12) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax15) + reinterpret_cast<unsigned char>(ecx14))) 
            break;
        edi10 = edi10 + 40;
    } while (reinterpret_cast<unsigned char>(edi10) < reinterpret_cast<unsigned char>(a4));
    goto addr_0x41fbdb_9;
    return edi10;
    addr_0x41fbdb_9:
    return 0;
}

void** fun_412530(void** ecx, void** a2, void** a3, void* a4) {
    void** ebx5;
    void* esi6;
    uint32_t ecx7;
    void** edx8;
    signed char* edi9;
    void** ecx10;
    void** eax11;
    void** eax12;
    int32_t v13;
    void** edx14;
    void** ecx15;
    void** eax16;

    ebx5 = a3;
    esi6 = a4;
    ecx7 = 0xffffffff;
    edx8 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 12);
    edi9 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(edx8));
    do {
        if (!ecx7) 
            break;
        --ecx7;
        ++edi9;
        esi6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi6) + 1);
    } while (*edi9);
    fun_411930(a2, edx8, ~ecx7, 0);
    ecx10 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 28);
    eax11 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 20) << 2);
    fun_411930(a2, ecx10, eax11, 0);
    eax12 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 32);
    v13 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 24);
    fun_4125b0(a2, eax12, esi6, v13);
    edx14 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 36);
    ecx15 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(ebx5) + 20) << 1);
    eax16 = fun_411930(a2, edx14, ecx15, 0);
    return eax16;
}

void** fun_4127e0(void** a1, void** a2, void** a3, void** a4) {
    void** edx5;
    void** v6;
    void** eax7;

    edx5 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2));
    v6 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(a2) + 4);
    fun_411930(a1, edx5, v6, 2);
    eax7 = fun_411930(a1, a2, 16, 2);
    return eax7;
}

struct s94 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
    signed char[4] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
};

void fun_4128e0(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** ebx6;
    void** ebp7;
    struct s94* esi8;
    void** edx9;
    uint32_t ecx10;
    signed char* edi11;
    void* ecx12;
    void** ecx13;
    void** ecx14;
    void** eax15;
    void** edi16;

    ebx6 = a3;
    ebp7 = a1;
    esi8 = reinterpret_cast<struct s94*>(reinterpret_cast<unsigned char>(ebx6) + reinterpret_cast<unsigned char>(a2));
    while (esi8->f4 || esi8->f12) {
        edx9 = esi8->f12;
        ecx10 = 0xffffffff;
        edi11 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx6) + reinterpret_cast<unsigned char>(edx9));
        do {
            if (!ecx10) 
                break;
            --ecx10;
            ++edi11;
            esi8 = reinterpret_cast<struct s94*>(&esi8->pad4);
        } while (*edi11);
        ecx12 = reinterpret_cast<void*>(~ecx10);
        fun_411930(ebp7, edx9, (reinterpret_cast<uint32_t>(ecx12) & 1) + reinterpret_cast<uint32_t>(ecx12), 1);
        ecx13 = esi8->f0;
        fun_412990(ecx13, ebp7, ecx13, ebx6, 0);
        ecx14 = esi8->f16;
        eax15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx6) + reinterpret_cast<unsigned char>(ecx14));
        if (reinterpret_cast<unsigned char>(a4) <= reinterpret_cast<unsigned char>(eax15) && (edi16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a5) + reinterpret_cast<unsigned char>(a4)), reinterpret_cast<unsigned char>(eax15) < reinterpret_cast<unsigned char>(edi16))) {
            if (reinterpret_cast<unsigned char>(a4) > reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax15)) || reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax15)) >= reinterpret_cast<unsigned char>(edi16)) {
                fun_412990(ecx14, ebp7, ecx14, ebx6, 1);
            } else {
                fun_412990(ecx14, ebp7, ecx14, ebx6, 0);
                esi8 = reinterpret_cast<struct s94*>(reinterpret_cast<uint32_t>(esi8) + 20);
                continue;
            }
        }
        esi8 = reinterpret_cast<struct s94*>(reinterpret_cast<uint32_t>(esi8) + 20);
    }
    return;
}

struct s95 {
    signed char[4] pad4;
    void** f4;
};

void** fun_412ae0(void** ecx, void** a2, void** a3, void* a4, void** a5, void** a6) {
    void** eax7;
    void* ebx8;
    void** ebp9;
    void** edx10;
    struct s95* esi11;
    uint32_t v12;
    void** v13;
    signed char* edi14;
    uint32_t ecx15;
    void* ecx16;

    eax7 = a3;
    if (eax7) {
        ebx8 = a4;
        ebp9 = a2;
        edx10 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx8) + reinterpret_cast<unsigned char>(eax7));
        esi11 = reinterpret_cast<struct s95*>(reinterpret_cast<uint32_t>(ebx8) + reinterpret_cast<unsigned char>(eax7));
        v12 = 1;
        v13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a6) + reinterpret_cast<unsigned char>(a5));
        if (edx10) {
            do {
                ++v12;
                if (reinterpret_cast<unsigned char>(a5) <= reinterpret_cast<unsigned char>(edx10) && (reinterpret_cast<unsigned char>(edx10) < reinterpret_cast<unsigned char>(v13) && !(reinterpret_cast<unsigned char>(edx10) & 0x80000000))) {
                    edi14 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx8) + reinterpret_cast<unsigned char>(edx10) + 2);
                    ecx15 = 0xffffffff;
                    do {
                        if (!ecx15) 
                            break;
                        --ecx15;
                        ++edi14;
                        esi11 = reinterpret_cast<struct s95*>(reinterpret_cast<uint32_t>(esi11) + 1);
                    } while (*edi14);
                    ecx16 = reinterpret_cast<void*>(~ecx15 + 2);
                    fun_411930(ebp9, edx10, (reinterpret_cast<uint32_t>(ecx16) & 1) + reinterpret_cast<uint32_t>(ecx16), 1);
                }
                edx10 = esi11->f4;
                esi11 = reinterpret_cast<struct s95*>(&esi11->f4);
            } while (edx10);
            eax7 = a3;
        }
        eax7 = fun_411930(ebp9, eax7, v12 * 4, 1);
    }
    return eax7;
}

void** fun_412b90(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** edi14;
    void** esi15;
    void** eax16;
    void** esi17;
    void** eax18;
    void** eax19;
    void** ecx20;

    eax16 = fun_414db0(16, edi14, esi15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8);
    esi17 = eax16;
    if (esi17) {
        *reinterpret_cast<void***>(esi17 + 8) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(esi17 + 12) = reinterpret_cast<void**>(0);
        eax18 = fun_412cf0(0, 0, a1, edi14, esi15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8);
        *reinterpret_cast<void***>(esi17) = eax18;
        if (eax18) {
            eax19 = fun_412cf0(0xff, 0, a1, edi14, esi15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8);
            ecx20 = *reinterpret_cast<void***>(esi17);
            *reinterpret_cast<void***>(esi17 + 4) = eax19;
            if (!eax19) {
                fun_412d40(ecx20, ecx20, edi14, esi15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
            } else {
                *reinterpret_cast<void***>(ecx20 + 4) = eax19;
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi17 + 4) + 8) = *reinterpret_cast<void***>(esi17);
                return esi17;
            }
        }
        fun_414d40(ecx20, esi17, edi14, esi15, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
        esi17 = reinterpret_cast<void**>(0);
    }
    return esi17;
}

void** fun_413790(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void** eax17;

    eax17 = fun_414d40(ecx, a2, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    return eax17;
}

int16_t fun_4139a0(void** a1, void** a2) {
    int32_t eax3;

    eax3 = 0;
    if (*reinterpret_cast<void***>(a1 + 8) == *reinterpret_cast<void***>(a2 + 8) && (*reinterpret_cast<void***>(a2) == reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) || reinterpret_cast<int1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) == *reinterpret_cast<void***>(a1)))) {
        eax3 = 1;
    }
    return *reinterpret_cast<int16_t*>(&eax3);
}

void** fun_413920(void** a1, void** a2);

void** fun_413260(void** a1, void*** a2, void*** a3) {
    void** esi4;
    void** ecx5;
    void*** edi6;
    void** edx7;
    void** v8;
    void** eax9;
    void** v10;
    int16_t ax11;
    void** v12;
    void** eax13;
    void** edx14;
    int16_t ax15;
    void** ecx16;
    void** v17;
    void** eax18;
    void** eax19;

    esi4 = a1;
    if (esi4) {
        ecx5 = *reinterpret_cast<void***>(esi4 + 8);
        edi6 = a2;
        edx7 = *reinterpret_cast<void***>(ecx5);
        v8 = *edi6;
        eax9 = fun_413920(edx7, v8);
        *edi6 = eax9;
        v10 = *reinterpret_cast<void***>(esi4);
        ax11 = fun_413890(v10, eax9);
        if (ax11) {
            do {
                v12 = *reinterpret_cast<void***>(esi4);
                eax13 = fun_4138d0(v12);
                *edi6 = eax13;
                esi4 = *reinterpret_cast<void***>(esi4 + 4);
                edx14 = *reinterpret_cast<void***>(esi4);
                ax15 = fun_413890(edx14, eax13);
            } while (ax15);
        }
        ecx16 = *reinterpret_cast<void***>(esi4);
        v17 = *a3;
        eax18 = fun_413940(ecx16, v17);
        *a3 = eax18;
        return reinterpret_cast<unsigned char>(eax18) - (reinterpret_cast<unsigned char>(eax18) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax18) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax18) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax18) < reinterpret_cast<unsigned char>(*edi6))))) + 1;
    } else {
        *reinterpret_cast<int16_t*>(&eax19) = 0;
        return eax19;
    }
}

void** fun_413920(void** a1, void** a2) {
    void** eax3;

    eax3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)));
    if (reinterpret_cast<unsigned char>(a2) >= reinterpret_cast<unsigned char>(eax3)) {
        eax3 = a2;
    }
    return eax3;
}

void** fun_413220(struct s25* a1, void** a2) {
    void** edi3;
    void** esi4;
    void** eax5;
    int16_t ax6;

    edi3 = a2;
    esi4 = a1->f12;
    if (!edi3 || !esi4) {
        esi4 = a1->f0;
    } else {
        do {
            eax5 = *reinterpret_cast<void***>(esi4);
            ax6 = fun_413860(eax5, edi3);
            if (ax6) 
                break;
            esi4 = *reinterpret_cast<void***>(esi4 + 8);
        } while (esi4);
        goto addr_0x41324d_5;
    }
    return esi4;
    addr_0x41324d_5:
    return esi4;
}

void** fun_413370(void** a1, void** a2, void** a3, void** a4) {
    void** esi5;
    void** ebp6;
    void** edi7;
    void** ebx8;
    void** eax9;
    void** eax10;
    void** edx11;
    int16_t ax12;
    void** ecx13;
    int16_t ax14;

    esi5 = a1;
    if (!esi5) {
        addr_0x4133ce_2:
        return esi5;
    } else {
        ebp6 = a4;
        edi7 = a3;
        ebx8 = a2;
        do {
            eax9 = *reinterpret_cast<void***>(esi5);
            eax10 = fun_413a00(eax9, ebx8, edi7);
            if (!*reinterpret_cast<int16_t*>(&eax10)) {
                edx11 = *reinterpret_cast<void***>(esi5);
                ax12 = fun_413880(edx11, edi7);
                if (ax12) 
                    break;
            } else {
                ecx13 = *reinterpret_cast<void***>(esi5);
                ax14 = fun_4138b0(ecx13, ebp6);
                if (ax14) 
                    goto addr_0x4133ce_2;
            }
            esi5 = *reinterpret_cast<void***>(esi5 + 4);
        } while (esi5);
        goto addr_0x4133c5_9;
    }
    esi5 = reinterpret_cast<void**>(0);
    goto addr_0x4133ce_2;
    addr_0x4133c5_9:
    return esi5;
}

void** fun_411b00(void** a1) {
    void** eax2;

    eax2 = fun_411c30(a1);
    if (!eax2) {
        return 0;
    } else {
        return *reinterpret_cast<void***>(eax2 + 0xc4);
    }
}

int16_t fun_411b20(void** a1, void** a2) {
    void** eax3;

    eax3 = fun_411c30(a1);
    if (!eax3) {
        return 0;
    } else {
        *reinterpret_cast<void***>(eax3 + 0xc4) = a2;
        return 1;
    }
}

int16_t fun_411b70(void** a1, void* a2) {
    void** eax3;

    eax3 = fun_411c30(a1);
    if (!eax3) {
        return 0;
    } else {
        *reinterpret_cast<void**>(eax3 + 0xc8) = a2;
        return 1;
    }
}

signed char* fun_413f78(void** ecx, void** a2, void** a3, void** a4, void** a5, struct s64* a6, uint32_t a7, int16_t a8);

int32_t fun_413d9a(void** ecx, void** a2, int32_t a3, struct s64* a4) {
    uint144_t v2;
    int32_t* esp4;
    int32_t ebp5;
    int32_t* ebp6;
    int1_t less_or_equal7;
    int1_t cf8;
    void* esp9;
    int1_t sf10;
    int1_t of11;
    uint64_t v12;
    int32_t esi13;
    int32_t* esp14;
    int32_t edi15;
    uint64_t v16;
    void* esp17;
    int32_t ebx18;
    void** ecx19;
    void** eax20;
    void* esp21;
    uint1_t zf22;
    uint1_t less_or_equal23;
    int1_t cf24;
    int1_t sf25;
    int1_t of26;
    uint1_t less_or_equal27;
    void* esp28;
    void* esp29;
    void* esp30;
    void* esp31;
    void* esp32;
    void* esp33;
    void* esp34;
    void* esp35;
    void* esp36;
    void* esp37;
    uint48_t v38;
    void** v39;
    int1_t cf40;
    int1_t sf41;
    int1_t of42;

    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10) = a2;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 14) = a3;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 6) = reinterpret_cast<int32_t>(__return_address());
    esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2) = ebp5;
    ebp6 = esp4;
    less_or_equal7 = reinterpret_cast<int32_t>(esp4) <= reinterpret_cast<int32_t>(20);
    cf8 = reinterpret_cast<uint32_t>(esp4) < 20;
    esp9 = reinterpret_cast<void*>(esp4 - 5);
    sf10 = reinterpret_cast<int32_t>(esp9) < reinterpret_cast<int32_t>(0);
    of11 = __intrinsic();
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v12) + 4) = esi13;
    esp14 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp9) - 4 - 4 - 4);
    *reinterpret_cast<int32_t*>(&v12) = edi15;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v16) + 4) = 0;
    do {
    } while (!of11 && of11);
    do {
    } while (!sf10 && sf10);
    esp17 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 2);
    while (cf8 && !cf8) {
    }
    do {
    } while (less_or_equal7 && !less_or_equal7);
    while (!of11 && of11) {
    }
    while ((ebx18 = ebx18, !sf10) && sf10) {
    }
    ecx19 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 9);
    eax20 = fun_41fa00(ecx19, 1, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v16) + 3), reinterpret_cast<uint32_t>(ebp6) - 1 + 0xffffffec, ecx, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v12) + 2));
    esp21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp17) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v16) + 3) = eax20;
    if (*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v16) + 3)) {
        ecx19 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 9);
        eax20 = fun_41fd00(ecx19, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v16) + 3), *reinterpret_cast<struct s2**>(reinterpret_cast<int32_t>(&v2) + 13));
        esp21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp21) - 4 - 4 - 4 - 4 + 4 + 12);
        zf22 = reinterpret_cast<uint1_t>(eax20 == 0);
        less_or_equal23 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax20) < reinterpret_cast<signed char>(0)) | zf22);
        if (!zf22) {
            do {
            } while (!1 && !0);
            do {
            } while (less_or_equal23 && !less_or_equal23);
            esp21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp21) + 2);
            while (!0 && !1) {
            }
            ecx19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx19) | *reinterpret_cast<uint32_t*>(ebx18 - 0x3d7c0bab));
        }
        *reinterpret_cast<signed char*>(ecx19 + 0x90ebf455) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx19 + 0x90ebf455) + 1);
    }
    cf24 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v16) + 3)) < reinterpret_cast<unsigned char>(0);
    sf25 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v16) + 3)) < reinterpret_cast<signed char>(0);
    of26 = __intrinsic();
    less_or_equal27 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v16) + 3)) <= reinterpret_cast<signed char>(0));
    if (!*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v16) + 3)) {
        do {
        } while (!sf25 && sf25);
        do {
        } while (cf24 && !cf24);
        esp28 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp21) + 2);
        while ((eax20 = eax20, less_or_equal27) && !less_or_equal27) {
        }
        esp29 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp28) + 2);
        while (!of26 && of26) {
        }
        esp30 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp29) + 2);
        while (!sf25 && sf25) {
        }
        esp21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp30) + 2);
        while (cf24 && !cf24) {
        }
        *reinterpret_cast<void***>(eax20) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax20)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
        *reinterpret_cast<signed char*>(&ebx18) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx18) + *reinterpret_cast<signed char*>(&ecx19 + 1));
        cf24 = __intrinsic();
        sf25 = *reinterpret_cast<signed char*>(&ebx18) < 0;
        of26 = __intrinsic();
        less_or_equal27 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf25 != of26) | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&ebx18) == 0));
    }
    esp31 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp21) + 2);
    while (less_or_equal27 && !less_or_equal27) {
    }
    esp32 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp31) + 2);
    while (!of26 && of26) {
    }
    esp33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp32) + 2);
    while (!sf25 && sf25) {
    }
    esp34 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp33) + 2);
    while (cf24 && !cf24) {
    }
    while (less_or_equal27 && !less_or_equal27) {
    }
    esp35 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 2);
    while (!of26 && of26) {
    }
    esp36 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp35) + 2);
    while (!sf25 && sf25) {
    }
    while (cf24 && !cf24) {
    }
    esp37 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp36) + 2);
    while (less_or_equal27 && !less_or_equal27) {
    }
    *reinterpret_cast<struct s64**>(&v38) = a4;
    fun_413f78(v39, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10), v39, *reinterpret_cast<void***>(&v16), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v38) + 2), *reinterpret_cast<struct s64**>(&v38), *reinterpret_cast<uint32_t*>(&v2), *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v2) + 4));
    cf40 = __intrinsic();
    sf41 = reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(esp37) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24) < reinterpret_cast<int32_t>(0);
    of42 = __intrinsic();
    do {
    } while (!of42 && of42);
    while (!sf41 && sf41) {
    }
    while (cf40 && !cf40) {
    }
    __asm__("clc ");
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 7);
}

int32_t g42e4f8;

signed char* fun_413f78(void** ecx, void** a2, void** a3, void** a4, void** a5, struct s64* a6, uint32_t a7, int16_t a8) {
    uint48_t v7;
    void*** esp8;
    void*** ebp9;
    void** ebp10;
    void** eax11;
    void* esp12;
    int1_t less_or_equal13;
    int1_t less_or_equal14;
    int1_t of15;
    int1_t of16;
    int1_t sf17;
    int1_t sf18;
    void* esp19;
    int1_t cf20;
    int1_t cf21;
    void* esp22;
    int1_t less_or_equal23;
    int1_t less_or_equal24;
    int1_t of25;
    int1_t of26;
    void* esp27;
    int1_t sf28;
    int1_t sf29;
    void* esp30;
    int1_t cf31;
    int1_t cf32;
    void* esp33;
    int1_t less_or_equal34;
    int1_t less_or_equal35;
    void* esp36;
    int1_t of37;
    int1_t of38;
    void* esp39;
    int1_t sf40;
    int1_t sf41;
    void* esp42;
    int1_t cf43;
    int1_t cf44;
    void* esp45;
    int1_t less_or_equal46;
    int1_t less_or_equal47;
    void* esp48;
    int1_t of49;
    int1_t of50;
    void* esp51;
    int1_t sf52;
    int1_t sf53;
    int1_t cf54;
    int1_t cf55;
    void* esp56;
    int1_t less_or_equal57;
    int1_t less_or_equal58;
    void* esp59;
    int1_t of60;
    int1_t of61;
    int1_t sf62;
    int1_t sf63;
    void* esp64;
    int1_t cf65;
    int1_t cf66;
    void* esp67;
    int1_t less_or_equal68;
    int1_t less_or_equal69;
    void* esp70;
    int1_t of71;
    int1_t of72;
    int1_t sf73;
    int1_t sf74;
    int1_t cf75;
    int1_t cf76;
    void* esp77;
    int1_t less_or_equal78;
    int1_t less_or_equal79;
    void* esp80;
    int1_t of81;
    int1_t of82;
    void* esp83;
    int1_t sf84;
    int1_t sf85;
    void* esp86;
    int1_t cf87;
    int1_t cf88;
    void* esp89;
    int1_t less_or_equal90;
    int1_t less_or_equal91;
    int1_t of92;
    int1_t of93;
    void** v94;
    uint32_t edx95;
    uint1_t zf96;
    int1_t sf97;
    uint1_t less_or_equal98;
    void** v99;
    void* esp100;
    int1_t cf101;
    int1_t sf102;
    int1_t of103;
    uint1_t less_or_equal104;

    *reinterpret_cast<uint32_t*>(&v7) = a7;
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v7) + 4) = a8;
    esp8 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebp9 = esp8;
    eax11 = fun_4159a0(ecx, ebp10, __return_address());
    esp12 = reinterpret_cast<void*>(esp8 - 4 + 4 - 4 - 4 - 4);
    g42e4f8 = 0;
    do {
        ecx = ecx;
    } while (less_or_equal13 && !less_or_equal14);
    while (!of15 && of16) {
    }
    while (!sf17 && sf18) {
    }
    esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp12) + 2);
    while (cf20 && !cf21) {
    }
    esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) + 2);
    while (less_or_equal23 && !less_or_equal24) {
    }
    do {
    } while (!of25 && of26);
    esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp22) + 2);
    while ((ebp9 = ebp9, !sf28) && sf29) {
    }
    esp30 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) + 2);
    while ((ecx = ecx, cf31) && !cf32) {
    }
    esp33 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp30) + 2);
    while (less_or_equal34 && !less_or_equal35) {
    }
    esp36 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp33) + 2);
    while ((eax11 = eax11, !of37) && of38) {
    }
    esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp36) + 2);
    while ((ecx = ecx, !sf40) && sf41) {
    }
    esp42 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) + 2);
    while (cf43 && !cf44) {
    }
    esp45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp42) + 2);
    while (less_or_equal46 && !less_or_equal47) {
    }
    esp48 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp45) + 2);
    while ((ecx = ecx, !of49) && of50) {
    }
    esp51 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp48) + 2);
    while ((ecx = ecx, !sf52) && sf53) {
    }
    while ((ebp9 = ebp9, cf54) && !cf55) {
    }
    esp56 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp51) + 2);
    while ((ebp9 = ebp9, less_or_equal57) && !less_or_equal58) {
    }
    esp59 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp56) + 2);
    while (!of60 && of61) {
    }
    while (!sf62 && sf63) {
    }
    esp64 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp59) + 2);
    while ((ebp9 = ebp9, cf65) && !cf66) {
    }
    esp67 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp64) + 2);
    while ((ebp9 = ebp9, less_or_equal68) && !less_or_equal69) {
    }
    esp70 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp67) + 2);
    while (!of71 && of72) {
    }
    do {
        ebp9 = ebp9;
    } while (!sf73 && sf74);
    do {
        ebp9 = ebp9;
    } while (cf75 && !cf76);
    esp77 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp70) + 2);
    while ((eax11 = eax11, less_or_equal78) && !less_or_equal79) {
    }
    esp80 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp77) + 2);
    while (!of81 && of82) {
    }
    esp83 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp80) + 2);
    while ((ecx = ecx, !sf84) && sf85) {
    }
    esp86 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp83) + 2);
    while ((ecx = ecx, cf87) && !cf88) {
    }
    esp89 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp86) + 2);
    while ((ebp9 = ebp9, less_or_equal90) && !less_or_equal91) {
    }
    do {
    } while (!of92 && of93);
    *reinterpret_cast<void**>(&eax11) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax11)));
    *reinterpret_cast<unsigned char*>(ecx + 0x1000107d) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 0x1000107d) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax11)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    if (!__intrinsic()) {
        v94 = reinterpret_cast<void**>(0x1000);
    } else {
        v94 = a4;
    }
    edx95 = *reinterpret_cast<uint32_t*>(&v7) & 0xffff;
    zf96 = reinterpret_cast<uint1_t>(edx95 == 0);
    sf97 = reinterpret_cast<int32_t>(edx95) < reinterpret_cast<int32_t>(0);
    less_or_equal98 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf97) | zf96);
    if (zf96) {
        fun_411eb0(a2, a2, a3, v94, ebp9 + 0xffffeff8, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v7) + 2), v99);
        esp100 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp89) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
        cf101 = __intrinsic();
        sf102 = reinterpret_cast<int32_t>(esp100) < 0;
        of103 = __intrinsic();
        less_or_equal104 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf102 != of103) | reinterpret_cast<uint1_t>(esp100 == 0));
        do {
        } while (less_or_equal104 && !less_or_equal104);
        while (!of103 && of103) {
        }
        while (sf102) {
        }
        while (cf101 && !cf101) {
        }
        while (less_or_equal104 && !less_or_equal104) {
        }
        while (!of103 && of103) {
        }
    } else {
        do {
        } while (!sf97 && sf97);
        while (!1 && !0) {
        }
        while (less_or_equal98 && !less_or_equal98) {
        }
        while (!0 && !1) {
        }
        do {
        } while (!sf97 && sf97);
        while (!1 && !0) {
        }
    }
}

uint32_t fun_4147cc(int32_t a1);

uint32_t fun_4147a3(int32_t ecx) {
    uint32_t eax2;

    eax2 = fun_4147cc(ecx);
    if (eax2 != 0xffffffff) {
        eax2 = eax2;
        CloseHandle(eax2);
        *reinterpret_cast<int16_t*>(&eax2) = 1;
    } else {
        *reinterpret_cast<int16_t*>(&eax2) = 0;
    }
    return eax2;
}

int32_t wsprintfA = 0x327b2;

uint32_t fun_4147cc(int32_t a1) {
    uint32_t eax2;

    wsprintfA(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x104, "\\\\.\\%s", "Secdrv");
    eax2 = reinterpret_cast<uint32_t>(CreateFileA(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x104, 0xc0000000, 3, 0, 3, 0x80, 0));
    return eax2;
}

void** g42ec30;

void** fun_41488c(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    int1_t zf10;
    void** eax11;
    void** ebp12;
    int1_t zf13;
    void** eax14;
    void** ecx15;
    void** edx16;

    zf10 = g42ec30 == 0;
    if (!zf10) {
        addr_0x4148f2_2:
        *reinterpret_cast<int16_t*>(&eax11) = 1;
    } else {
        eax11 = fun_414db0(0xb24, ebp12, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9);
        g42ec30 = eax11;
        zf13 = g42ec30 == 0;
        if (!zf13) {
            eax14 = g42ec30;
            fun_416e80(eax14, 0, 0xb24, ebp12, __return_address(), a1);
            ecx15 = g42ec30;
            *reinterpret_cast<void***>(ecx15) = reinterpret_cast<void**>(1);
            edx16 = g42ec30;
            *reinterpret_cast<void***>(edx16 + 4) = reinterpret_cast<void**>(3);
            eax11 = g42ec30;
            *reinterpret_cast<void***>(eax11 + 8) = reinterpret_cast<void**>(0);
            goto addr_0x4148f2_2;
        } else {
            *reinterpret_cast<int16_t*>(&eax11) = 0;
        }
    }
    return eax11;
}

void** fun_416e80(void** a1, void** a2, uint32_t a3, void** a4, void** a5, void** a6) {
    uint32_t edx7;
    void** eax8;
    void** edi9;
    uint32_t ecx10;
    void*** eax11;
    uint32_t ecx12;
    uint32_t ecx13;

    edx7 = a3;
    if (!edx7) {
        return a1;
    }
    eax8 = reinterpret_cast<void**>(0);
    eax8 = a2;
    edi9 = a1;
    if (edx7 < 4) {
        do {
            addr_0x416ec7_4:
            *reinterpret_cast<void***>(edi9) = eax8;
            ++edi9;
            --edx7;
        } while (edx7);
    } else {
        ecx10 = reinterpret_cast<uint32_t>(-reinterpret_cast<unsigned char>(a1)) & 3;
        if (ecx10) {
            edx7 = edx7 - ecx10;
            do {
                *reinterpret_cast<void***>(edi9) = eax8;
                ++edi9;
                --ecx10;
            } while (ecx10);
        }
        eax11 = reinterpret_cast<void***>((reinterpret_cast<unsigned char>(eax8) << 8) + reinterpret_cast<unsigned char>(eax8));
        eax8 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax11) << 16) + reinterpret_cast<uint32_t>(eax11));
        ecx12 = edx7;
        edx7 = edx7 & 3;
        ecx13 = ecx12 >> 2;
        if (!ecx13) 
            goto addr_0x416ec7_4; else 
            goto addr_0x416ec1_9;
    }
    addr_0x416ecd_10:
    return a1;
    addr_0x416ec1_9:
    while (ecx13) {
        --ecx13;
        *reinterpret_cast<void***>(edi9) = eax8;
        edi9 = edi9 + 4;
    }
    if (!edx7) 
        goto addr_0x416ecd_10; else 
        goto addr_0x416ec7_4;
}

void** g7ffe0000;

void** fun_4148f8(void*** ecx) {
    void** eax2;

    __asm__("pushad ");
    eax2 = g7ffe0000;
    __asm__("popad ");
    return eax2;
}

struct s96 {
    uint32_t f0;
    uint32_t f4;
    uint32_t f8;
    uint32_t f12;
};

uint32_t fun_414992(struct s96* a1, uint32_t* a2) {
    uint32_t v3;
    uint32_t v4;
    uint32_t v5;
    void*** ecx6;
    void** eax7;
    uint32_t eax8;

    v3 = a1->f0;
    v4 = v3 ^ a1->f4;
    v5 = v4 ^ a1->f8;
    ecx6 = reinterpret_cast<void***>(v5 ^ a1->f12);
    eax7 = fun_4148f8(ecx6);
    eax8 = reinterpret_cast<unsigned char>(eax7) - *a2;
    if (eax8 <= 10) {
        *reinterpret_cast<int16_t*>(&eax8) = 1;
    } else {
        *reinterpret_cast<int16_t*>(&eax8) = 0;
    }
    return eax8;
}

int16_t fun_414915(void*** ecx, void*** a2, void*** a3);

void** fun_416b40(void** a1, void** a2, void** a3);

void** fun_4149ea(void** ecx, void** a2, void** a3, void** a4, void*** a5) {
    void** eax6;
    void*** ecx7;
    void** eax8;

    eax6 = g42ec30;
    *reinterpret_cast<void***>(eax6 + 12) = a2;
    ecx7 = reinterpret_cast<void***>(eax6 + 16);
    fun_414915(ecx7, ecx7, a5);
    *reinterpret_cast<void***>(eax6 + 0x410) = a4;
    eax8 = fun_416b40(eax6 + 0x414, a3, a4);
    *reinterpret_cast<int16_t*>(&eax8) = 1;
    return eax8;
}

struct s97 {
    int32_t f0;
    signed char f1;
    signed char f2;
    signed char f3;
};

struct s98 {
    int32_t f0;
    signed char f1;
    signed char f2;
    signed char f3;
};

void** fun_416b40(void** a1, void** a2, void** a3) {
    void** esi4;
    void** edi5;
    uint32_t ecx6;
    uint32_t edx7;
    struct s97* esi8;
    struct s98* edi9;
    uint32_t ecx10;
    uint32_t edx11;
    void* eax12;

    esi4 = a2;
    edi5 = a1;
    if (reinterpret_cast<unsigned char>(edi5) <= reinterpret_cast<unsigned char>(esi4) || reinterpret_cast<unsigned char>(edi5) >= reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(esi4))) {
        if (reinterpret_cast<unsigned char>(edi5) & 3) {
            if (reinterpret_cast<unsigned char>(a3) < reinterpret_cast<unsigned char>(4)) {
                goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(a3 - 4) * 4 + 0x416c98);
            } else {
                goto *reinterpret_cast<int32_t*>((reinterpret_cast<unsigned char>(edi5) & 3) * 4 + 0x416ba0);
            }
        }
        ecx6 = reinterpret_cast<unsigned char>(a3) >> 2;
        edx7 = reinterpret_cast<unsigned char>(a3) & 3;
        if (ecx6 >= 8) 
            goto addr_0x416b73_7;
    } else {
        esi8 = reinterpret_cast<struct s97*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(esi4) + 0xfffffffc);
        edi9 = reinterpret_cast<struct s98*>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<unsigned char>(edi5) + 0xfffffffc);
        if (reinterpret_cast<uint32_t>(edi9) & 3) {
            if (reinterpret_cast<unsigned char>(a3) >= reinterpret_cast<unsigned char>(4)) {
                goto *reinterpret_cast<int32_t*>((reinterpret_cast<uint32_t>(edi9) & 3) * 4 + 0x416d28);
            }
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(a3) * 4 + 0x416e20);
        } else {
            ecx10 = reinterpret_cast<unsigned char>(a3) >> 2;
            edx11 = reinterpret_cast<unsigned char>(a3) & 3;
            if (ecx10 < 8) {
                goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(-ecx10) * 4 + 0x416dd0);
                goto *reinterpret_cast<int32_t*>(edx11 * 4 + 0x416e20);
            } else {
                while (ecx10) {
                    --ecx10;
                    edi9->f0 = esi8->f0;
                    edi9 = reinterpret_cast<struct s98*>(reinterpret_cast<uint32_t>(edi9) - 4);
                    esi8 = reinterpret_cast<struct s97*>(reinterpret_cast<uint32_t>(esi8) - 4);
                }
                goto *reinterpret_cast<int32_t*>(edx11 * 4 + 0x416e20);
            }
        }
    }
    switch (ecx6) {
        addr_0x416c7f_20:
    case 0:
        switch (edx7) {
        case 0:
            return a1;
        case 1:
            *reinterpret_cast<void***>(edi5) = *reinterpret_cast<void***>(esi4);
            return a1;
        case 2:
            *reinterpret_cast<void***>(edi5) = *reinterpret_cast<void***>(esi4);
            *reinterpret_cast<void***>(edi5 + 1) = *reinterpret_cast<void***>(esi4 + 1);
            return a1;
        case 3:
            *reinterpret_cast<void***>(edi5) = *reinterpret_cast<void***>(esi4);
            *reinterpret_cast<void***>(edi5 + 1) = *reinterpret_cast<void***>(esi4 + 1);
            *reinterpret_cast<void***>(edi5 + 2) = *reinterpret_cast<void***>(esi4 + 2);
            return a1;
        }
        addr_0x416c6c_25:
    case 1:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi5 + ecx6 * 4) - 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4 + ecx6 * 4) - 4);
        eax12 = reinterpret_cast<void*>(ecx6 * 4);
        esi4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi4) + reinterpret_cast<uint32_t>(eax12));
        edi5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi5) + reinterpret_cast<uint32_t>(eax12));
        goto addr_0x416c7f_20;
        addr_0x416c64_26:
    case 2:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi5 + ecx6 * 4) - 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4 + ecx6 * 4) - 8);
        goto addr_0x416c6c_25;
        addr_0x416c5c_27:
    case 3:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi5 + ecx6 * 4) - 12) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4 + ecx6 * 4) - 12);
        goto addr_0x416c64_26;
        addr_0x416c54_28:
    case 4:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi5 + ecx6 * 4) - 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4 + ecx6 * 4) - 16);
        goto addr_0x416c5c_27;
        addr_0x416c4c_29:
    case 5:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi5 + ecx6 * 4) - 20) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4 + ecx6 * 4) - 20);
        goto addr_0x416c54_28;
        addr_0x416c44_30:
    case 6:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi5 + ecx6 * 4) - 24) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4 + ecx6 * 4) - 24);
        goto addr_0x416c4c_29;
    case 7:
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi5 + ecx6 * 4) - 28) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi4 + ecx6 * 4) - 28);
        goto addr_0x416c44_30;
    }
    addr_0x416b73_7:
    while (ecx6) {
        --ecx6;
        *reinterpret_cast<void***>(edi5) = *reinterpret_cast<void***>(esi4);
        edi5 = edi5 + 4;
        esi4 = esi4 + 4;
    }
    goto *reinterpret_cast<int32_t*>(edx7 * 4 + 0x416c88);
    return a1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi9) + 3) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + 3);
    return a1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi9) + 3) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + 3);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi9) + 2) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + 2);
    return a1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi9) + 3) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + 3);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi9) + 2) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + 2);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + 1);
    return a1;
}

struct s99 {
    signed char[4] pad4;
    unsigned char f4;
};

void** fun_417d50(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void*** esp8;
    void** eax9;
    void** ebp10;
    void** ebx11;
    void** eax12;
    uint32_t eax13;
    void** edi14;
    void** esi15;
    void** ebp16;
    void** ebx17;
    void** edi18;
    void** eax19;
    void** eax20;
    void** ecx21;
    struct s99* eax22;
    uint32_t eax23;
    void** eax24;
    void** eax25;

    esp8 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4);
    eax9 = *reinterpret_cast<void***>(a2 + 12);
    ebp10 = *reinterpret_cast<void***>(a2 + 16);
    if (!(*reinterpret_cast<unsigned char*>(&eax9) & 0x82)) 
        goto addr_0x417e73_2;
    if (*reinterpret_cast<unsigned char*>(&eax9) & 64) 
        goto addr_0x417e73_2;
    ebx11 = reinterpret_cast<void**>(0);
    if (*reinterpret_cast<unsigned char*>(&eax9) & 1) {
        *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
        if (!(*reinterpret_cast<unsigned char*>(&eax9) & 16)) {
            addr_0x417e73_2:
            *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) | 32);
            *reinterpret_cast<void***>(a2 + 12) = eax9;
            return 0xffffffff;
        } else {
            *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) & 0xfe);
            *reinterpret_cast<void***>(a2) = *reinterpret_cast<void***>(a2 + 8);
            *reinterpret_cast<void***>(a2 + 12) = eax9;
        }
    }
    eax12 = *reinterpret_cast<void***>(a2 + 12);
    *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) & 0xef) | 2);
    *reinterpret_cast<void***>(a2 + 12) = eax12;
    if (!(reinterpret_cast<unsigned char>(eax12) & 0x10c) && (a2 != 0x42d1e0 && !reinterpret_cast<int1_t>(a2 == 0x42d200) || (eax13 = fun_41cb50(ebp10), esp8 = esp8 - 4 - 4 + 4 + 4, !eax13))) {
        fun_41caf0(a2, edi14, esi15, ebp16, ebx17, __return_address(), a1, a2, a3, a4);
        esp8 = esp8 - 4 - 4 + 4 + 4;
    }
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) & 0x108)) {
        edi18 = reinterpret_cast<void**>(1);
        eax19 = fun_418af0(ebp10, esp8 + 20, 1);
        ebx11 = eax19;
    } else {
        eax20 = *reinterpret_cast<void***>(a2 + 8);
        edi18 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) - reinterpret_cast<unsigned char>(eax20));
        ecx21 = *reinterpret_cast<void***>(a2 + 24) - 1;
        *reinterpret_cast<void***>(a2) = eax20 + 1;
        *reinterpret_cast<void***>(a2 + 4) = ecx21;
        if (reinterpret_cast<signed char>(edi18) <= reinterpret_cast<signed char>(0)) {
            if (ebp10 == 0xffffffff) {
                eax22 = reinterpret_cast<struct s99*>(0x42d5f8);
            } else {
                eax23 = reinterpret_cast<unsigned char>(ebp10) & 31;
                eax22 = reinterpret_cast<struct s99*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(ebp10) >> 5) * 4 + 0x430280)) + (eax23 + eax23 * 8) * 4);
            }
            if (eax22->f4 & 32) {
                fun_419040(ebp10, 0, 2, edi14, esi15);
            }
            *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2 + 8)) = a1;
        } else {
            eax24 = fun_418af0(ebp10, eax20, edi18);
            ebx11 = eax24;
            *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2 + 8)) = a1;
        }
    }
    if (ebx11 == edi18) {
        return reinterpret_cast<unsigned char>(a1) & 0xff;
    } else {
        eax25 = *reinterpret_cast<void***>(a2 + 12);
        *reinterpret_cast<unsigned char*>(&eax25) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax25) | 32);
        *reinterpret_cast<void***>(a2 + 12) = eax25;
        return 0xffffffff;
    }
}

void** fun_4151c0(void** ecx, void** a2) {
    void** eax3;
    void* esp4;
    int1_t less_or_equal5;
    void** eax6;
    void** eax7;
    void** edx8;
    void** eax9;
    void* esp10;
    void** eax11;
    void** eax12;
    void** eax13;
    uint32_t v14;
    uint32_t v15;
    uint32_t v16;

    eax3 = g42ed50;
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4);
    if (eax3) {
        if (reinterpret_cast<signed char>(a2) < reinterpret_cast<signed char>(0x100)) {
            less_or_equal5 = reinterpret_cast<signed char>(g42adcc) <= reinterpret_cast<signed char>(1);
            if (less_or_equal5) {
                eax6 = __image_base;
                eax6 = *reinterpret_cast<void***>(eax6 + reinterpret_cast<unsigned char>(a2) * 2);
                eax7 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax6) & 2);
            } else {
                eax7 = fun_415fc0(ecx, a2, 2);
                esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 + 4 + 8);
            }
            if (!eax7) {
                return a2;
            }
        }
        edx8 = __image_base;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx8 + (reinterpret_cast<uint32_t>(reinterpret_cast<signed char>(a2) >> 8) & 0xff) * 2) + 1) & 0x80)) {
            eax9 = reinterpret_cast<void**>(1);
        } else {
            eax9 = reinterpret_cast<void**>(2);
        }
        esp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4);
        eax11 = g42ed50;
        eax12 = fun_417b00(eax11, 0x200, reinterpret_cast<int32_t>(esp10) - 4 - 4 + 28, eax9, reinterpret_cast<int32_t>(esp10) + 8, 3, 0);
        if (eax12) {
            if (!reinterpret_cast<int1_t>(eax12 == 1)) {
                eax13 = reinterpret_cast<void**>((v14 & 0xff) << 8 | v15 & 0xff);
            } else {
                return v16 & 0xff;
            }
        } else {
            return a2;
        }
    } else {
        eax13 = a2;
        if (reinterpret_cast<signed char>(eax13) >= reinterpret_cast<signed char>(97) && reinterpret_cast<signed char>(eax13) <= reinterpret_cast<signed char>(0x7a)) {
            return eax13 - 32;
        }
    }
    return eax13;
}

uint32_t fun_418a00(void* a1, void* a2, void** a3, void** a4, uint32_t a5, void* a6, uint32_t a7) {
    void** ebx8;
    void* esi9;
    void** edi10;
    void** esi11;
    void** ebp12;
    void** ebx13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void*** ecx20;
    void* eax21;
    void*** eax22;
    uint32_t eax23;
    void* eax24;
    uint32_t ebp25;
    void** eax26;
    void** ecx27;
    void** v28;
    void** v29;
    void** v30;
    int32_t eax31;

    ebx8 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(a1) - 0x76c);
    if (reinterpret_cast<signed char>(ebx8) < reinterpret_cast<signed char>(70) || reinterpret_cast<signed char>(ebx8) > reinterpret_cast<signed char>(0x8a)) {
        return 0xffffffff;
    } else {
        esi9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(a2) * 4 + 0x42df84)) + reinterpret_cast<unsigned char>(a3));
        if (!(*reinterpret_cast<unsigned char*>(&ebx8) & 3) && reinterpret_cast<int32_t>(a2) > reinterpret_cast<int32_t>(2)) {
            esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) + 1);
        }
        fun_4195b0(a3, edi10, esi11, ebp12, ebx13, v14, v15, v16, v17, v18, v19);
        ecx20 = reinterpret_cast<void***>(ebx8 + reinterpret_cast<uint32_t>(ebx8 + reinterpret_cast<unsigned char>(ebx8) * 8) * 8);
        eax21 = reinterpret_cast<void*>((reinterpret_cast<signed char>(ebx8 + 0xffffffff) >> 2) + (reinterpret_cast<uint32_t>(ecx20) + reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<uint32_t>(ecx20) * 4));
        eax22 = reinterpret_cast<void***>(a4 + (reinterpret_cast<uint32_t>(eax21) + reinterpret_cast<uint32_t>(eax21) * 2) * 8);
        eax23 = a5 + ((reinterpret_cast<uint32_t>(eax22) << 4) - reinterpret_cast<uint32_t>(eax22)) * 4;
        eax24 = g42d440;
        ebp25 = reinterpret_cast<uint32_t>(a6) + ((eax23 << 4) - eax23) * 4 + reinterpret_cast<uint32_t>(eax24) + 0x7c558180;
        if (a7 == 1 || a7 == 0xffffffff && ((eax26 = g42d444, !!eax26) && (ecx27 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 36 - 4 - 4 - 4 - 4 - 4 + 4 + 16), eax31 = fun_4198d0(ecx27, ecx27, edi10, esi11, ebp12, ebx13, v28, v29, a4, v30, reinterpret_cast<uint32_t>(a2) - 1, ebx8), !!eax31))) {
            ebp25 = ebp25 + reinterpret_cast<unsigned char>(g42d448);
        }
        return ebp25;
    }
}

void fun_415920(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11);

int32_t g42eca0;

int32_t GetCurrentProcess = 0x32930;

int32_t TerminateProcess = 0x329d4;

int32_t g42ec9c;

signed char g42ec98;

int32_t* g4313b8;

void* g4313b4;

int32_t ExitProcess = 0x329c6;

void** fun_415860(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    void** ebx9;
    void** esi10;
    void** ebp11;
    int32_t eax12;
    int32_t eax13;
    void** ebx14;
    int32_t* ecx15;
    void* esi16;
    int32_t* esi17;
    int32_t eax18;
    void** eax19;

    v8 = ebx9;
    fun_415920(ecx, esi10, ebp11, v8, __return_address(), a2, a3, a4, a5, a6, a7);
    eax12 = g42eca0;
    if (eax12 == 1) {
        eax13 = reinterpret_cast<int32_t>(GetCurrentProcess(a2));
        TerminateProcess(eax13, a2);
    }
    ebx14 = a4;
    g42ec9c = 1;
    g42ec98 = *reinterpret_cast<signed char*>(&ebx14);
    if (!a3) {
        ecx15 = g4313b8;
        if (ecx15 && (esi16 = g4313b4, esi17 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi16) - 4), reinterpret_cast<uint32_t>(esi17) >= reinterpret_cast<uint32_t>(ecx15))) {
            do {
                eax18 = *esi17;
                if (eax18) {
                    eax18();
                    ecx15 = g4313b8;
                }
                --esi17;
            } while (reinterpret_cast<uint32_t>(esi17) >= reinterpret_cast<uint32_t>(ecx15));
        }
        fun_415940(0x429018, 0x429020);
    }
    fun_415940(0x429024, 0x429028);
    if (!ebx14) {
        g42eca0 = 1;
        ExitProcess();
        goto v8;
    } else {
        eax19 = fun_415930();
        return eax19;
    }
}

void fun_4171c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** ebp11;

    if (reinterpret_cast<unsigned char>(a2) < reinterpret_cast<unsigned char>(0x42d1c0) || reinterpret_cast<unsigned char>(a2) > reinterpret_cast<unsigned char>(0x42d420)) {
        EnterCriticalSection();
        goto ebp11;
    } else {
        fun_417120(ecx, (reinterpret_cast<int32_t>(a2 - 0x42d1c0) >> 5) + 28, ebp11, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10);
        return;
    }
}

void** fun_415a10(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** edi15;
    void** eax16;
    void** edi17;
    void** esi18;
    void** v19;
    int32_t eax20;
    void** v21;

    edi15 = reinterpret_cast<void**>(0xffffffff);
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) & 0x83) {
        eax16 = fun_415b00(a2);
        edi15 = eax16;
        fun_4192f0(ecx, a2, edi17, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
        v19 = *reinterpret_cast<void***>(a2 + 16);
        eax20 = fun_4163a0(v19, edi17, esi18);
        if (eax20 >= 0) {
            if (*reinterpret_cast<void***>(a2 + 28)) {
                v21 = *reinterpret_cast<void***>(a2 + 28);
                fun_414d40(ecx, v21, edi17, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                *reinterpret_cast<void***>(a2 + 28) = reinterpret_cast<void**>(0);
            }
        } else {
            *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(0);
            return 0xffffffff;
        }
    }
    *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(0);
    return edi15;
}

void** fun_417230(void** a1) {
    int32_t ebp2;
    void** eax3;

    if (reinterpret_cast<unsigned char>(a1) < reinterpret_cast<unsigned char>(0x42d1c0) || reinterpret_cast<unsigned char>(a1) > reinterpret_cast<unsigned char>(0x42d420)) {
        LeaveCriticalSection();
        goto ebp2;
    } else {
        eax3 = fun_4171a0((reinterpret_cast<int32_t>(a1 - 0x42d1c0) >> 5) + 28);
        return eax3;
    }
}

void** g42d4d8 = reinterpret_cast<void**>(0xff);

int32_t TlsGetValue = 0x32b2e;

int32_t TlsSetValue = 0x32b04;

int32_t GetCurrentThreadId = 0x32aee;

int32_t SetLastError = 0x32b1e;

struct s38* fun_419530(void** a1, void** a2, void** a3) {
    void** eax4;
    void** eax5;
    void** edi6;
    void** esi7;
    void** eax8;
    int32_t eax9;
    void** eax10;

    GetLastError();
    eax4 = g42d4d8;
    eax5 = reinterpret_cast<void**>(TlsGetValue());
    if (!eax5) {
        eax8 = fun_41d0f0(1, 0x74, eax4, edi6, esi7, __return_address(), a1, a2, a3);
        if (!eax8 || (eax9 = reinterpret_cast<int32_t>(TlsSetValue()), eax9 == 0)) {
            fun_416a10(16, eax4, edi6, esi7, __return_address());
        } else {
            fun_419510(eax8);
            eax10 = reinterpret_cast<void**>(GetCurrentThreadId());
            *reinterpret_cast<void***>(eax8) = eax10;
            *reinterpret_cast<void***>(eax8 + 4) = reinterpret_cast<void**>(0xffffffff);
            SetLastError();
            goto eax8;
        }
    }
    SetLastError();
    goto edi6;
}

void fun_419b70(int32_t a1, int32_t a2, void** a3, int32_t a4, int32_t a5, void* a6, void* a7, uint32_t a8, int32_t a9, void* a10, int32_t a11);

int16_t g42ee10;

uint32_t g42ee1c;

uint32_t g42ee18;

uint32_t g42ee14;

int16_t g42edbc;

void** g42d4e4 = reinterpret_cast<void**>(0);

void** g42d4f4 = reinterpret_cast<void**>(0);

uint32_t g42edc8;

uint32_t g42edc4;

uint32_t g42edc0;

uint32_t g42d4f8 = 0;

uint32_t g42d4e8 = 0;

int32_t fun_419900(void** a1) {
    void** eax2;
    void** ecx3;
    void** eax4;
    int1_t zf5;
    void** ecx6;
    void** edx7;
    int32_t v8;
    void* v9;
    int32_t v10;
    uint32_t v11;
    void* v12;
    void* v13;
    int32_t v14;
    int32_t v15;
    void** v16;
    int1_t zf17;
    uint32_t ecx18;
    int32_t edx19;
    int32_t v20;
    int32_t edx21;
    void* v22;
    uint32_t ecx23;
    int32_t v24;
    void* edx25;
    uint32_t v26;
    int32_t ecx27;
    void* v28;
    void* v29;
    int32_t v30;
    int32_t v31;
    void** v32;
    int32_t v33;
    uint32_t edx34;
    int32_t ecx35;
    int32_t ecx36;
    uint32_t edx37;
    uint32_t ecx38;
    int32_t edx39;
    int32_t ecx40;
    int1_t zf41;
    void** edx42;
    void** eax43;
    int32_t v44;
    uint32_t edx45;
    int32_t ecx46;
    uint32_t ecx47;
    int32_t eax48;
    void* edx49;
    void** ecx50;
    int32_t eax51;
    uint32_t eax52;
    int32_t edx53;
    uint32_t edx54;
    int32_t ecx55;
    uint32_t eax56;
    int32_t ecx57;
    int32_t edx58;
    void** eax59;
    void*** eax60;
    void*** eax61;
    void*** eax62;
    void*** eax63;
    void*** eax64;
    void*** eax65;
    uint32_t eax66;
    uint32_t ecx67;
    int32_t edx68;
    uint32_t edx69;
    int32_t ecx70;

    eax2 = g42d444;
    if (!eax2) {
        return 0;
    }
    ecx3 = g42d4e0;
    eax4 = *reinterpret_cast<void***>(a1 + 20);
    if (eax4 != ecx3 || (zf5 = eax4 == g42d4f0, !zf5)) {
        ecx6 = g42ed70;
        if (!ecx6) {
            fun_419b70(1, 1, eax4, 4, 1, 0, 0, 2, 0, 0, 0);
            edx7 = *reinterpret_cast<void***>(a1 + 20);
            v8 = 0;
            v9 = reinterpret_cast<void*>(0);
            v10 = 0;
            v11 = 2;
            v12 = reinterpret_cast<void*>(0);
            v13 = reinterpret_cast<void*>(0);
            v14 = 5;
            v15 = 10;
            v16 = edx7;
        } else {
            zf17 = g42ee10 == 0;
            if (!zf17) {
                ecx18 = g42ee1c;
                edx19 = 0;
                *reinterpret_cast<int16_t*>(&edx19) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42ee1c) + 2);
                v20 = edx19;
                edx21 = 0;
                *reinterpret_cast<int16_t*>(&edx21) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42ee18) + 2);
                v22 = reinterpret_cast<void*>(ecx18 & 0xffff);
                ecx23 = g42ee18;
                v24 = edx21;
                edx25 = reinterpret_cast<void*>(0);
                *reinterpret_cast<int16_t*>(&edx25) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42ee14) + 2);
                v26 = ecx23 & 0xffff;
                ecx27 = 0;
                v28 = edx25;
                *reinterpret_cast<int16_t*>(&ecx27) = g42ee12;
                v29 = reinterpret_cast<void*>(0);
                v30 = 0;
                v31 = ecx27;
                v32 = eax4;
                v33 = 0;
            } else {
                edx34 = g42ee1c;
                ecx35 = 0;
                *reinterpret_cast<int16_t*>(&ecx35) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42ee1c) + 2);
                v20 = ecx35;
                ecx36 = 0;
                *reinterpret_cast<int16_t*>(&ecx36) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42ee18) + 2);
                v22 = reinterpret_cast<void*>(edx34 & 0xffff);
                edx37 = g42ee18;
                v24 = ecx36;
                ecx38 = g42ee14;
                v26 = edx37 & 0xffff;
                v28 = reinterpret_cast<void*>(0);
                v29 = reinterpret_cast<void*>(ecx38 & 0xffff);
                edx39 = 0;
                ecx40 = 0;
                *reinterpret_cast<int16_t*>(&edx39) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42ee14) + 2);
                *reinterpret_cast<int16_t*>(&ecx40) = g42ee12;
                v30 = edx39;
                v31 = ecx40;
                v32 = eax4;
                v33 = 1;
            }
            fun_419b70(1, v33, v32, v31, v30, v29, v28, v26, v24, v22, v20);
            zf41 = g42edbc == 0;
            if (!zf41) 
                goto addr_0x419a4b_10; else 
                goto addr_0x4199f8_11;
        }
    } else {
        addr_0x419ad4_12:
        edx42 = g42d4e4;
        eax43 = g42d4f4;
        if (reinterpret_cast<signed char>(edx42) >= reinterpret_cast<signed char>(eax43)) {
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 28)) < reinterpret_cast<signed char>(eax43) || reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 28)) > reinterpret_cast<signed char>(edx42)) {
                return 1;
            }
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 28)) <= reinterpret_cast<signed char>(eax43)) 
                goto addr_0x419b13_16;
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 28)) >= reinterpret_cast<signed char>(edx42)) 
                goto addr_0x419b13_16; else 
                goto addr_0x419b0e_18;
        } else {
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 28)) < reinterpret_cast<signed char>(edx42) || reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 28)) > reinterpret_cast<signed char>(eax43)) {
                addr_0x419b0e_18:
                return 0;
            } else {
                if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 28)) > reinterpret_cast<signed char>(edx42) && reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 28)) < reinterpret_cast<signed char>(eax43)) {
                    return 1;
                }
            }
        }
    }
    addr_0x419ac8_22:
    v44 = 1;
    addr_0x419aca_23:
    fun_419b70(0, v44, v16, v15, v14, v13, v12, v11, v10, v9, v8);
    goto addr_0x419ad4_12;
    addr_0x419a4b_10:
    edx45 = g42edc8;
    ecx46 = 0;
    *reinterpret_cast<int16_t*>(&ecx46) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42edc8) + 2);
    v8 = ecx46;
    ecx47 = g42edc4;
    eax48 = 0;
    v9 = reinterpret_cast<void*>(edx45 & 0xffff);
    *reinterpret_cast<int16_t*>(&eax48) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42edc4) + 2);
    edx49 = reinterpret_cast<void*>(0);
    *reinterpret_cast<int16_t*>(&edx49) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42edc0) + 2);
    v10 = eax48;
    v11 = ecx47 & 0xffff;
    ecx50 = *reinterpret_cast<void***>(a1 + 20);
    eax51 = 0;
    *reinterpret_cast<int16_t*>(&eax51) = g42edbe;
    v12 = edx49;
    v13 = reinterpret_cast<void*>(0);
    v14 = 0;
    v15 = eax51;
    v16 = ecx50;
    v44 = 0;
    goto addr_0x419aca_23;
    addr_0x4199f8_11:
    eax52 = g42edc8;
    edx53 = 0;
    *reinterpret_cast<int16_t*>(&edx53) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42edc8) + 2);
    v8 = edx53;
    edx54 = g42edc4;
    ecx55 = 0;
    v9 = reinterpret_cast<void*>(eax52 & 0xffff);
    *reinterpret_cast<int16_t*>(&ecx55) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42edc4) + 2);
    eax56 = g42edc0;
    v10 = ecx55;
    v11 = edx54 & 0xffff;
    ecx57 = 0;
    edx58 = 0;
    *reinterpret_cast<int16_t*>(&ecx57) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g42edc0) + 2);
    *reinterpret_cast<int16_t*>(&edx58) = g42edbe;
    v12 = reinterpret_cast<void*>(0);
    v13 = reinterpret_cast<void*>(eax56 & 0xffff);
    eax59 = *reinterpret_cast<void***>(a1 + 20);
    v14 = ecx57;
    v15 = edx58;
    v16 = eax59;
    goto addr_0x419ac8_22;
    addr_0x419b13_16:
    eax60 = reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 8)) * 2);
    eax61 = reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 4) + reinterpret_cast<uint32_t>(eax60 + reinterpret_cast<uint32_t>(eax60) * 4) * 4);
    eax62 = eax61 + reinterpret_cast<uint32_t>(eax61) * 2;
    eax63 = reinterpret_cast<void***>(*reinterpret_cast<void***>(a1) + reinterpret_cast<uint32_t>(eax62 + reinterpret_cast<uint32_t>(eax62) * 4) * 4);
    eax64 = eax63 + reinterpret_cast<uint32_t>(eax63) * 4;
    eax65 = eax64 + reinterpret_cast<uint32_t>(eax64) * 4;
    eax66 = reinterpret_cast<uint32_t>(eax65 + reinterpret_cast<uint32_t>(eax65) * 4) << 3;
    if (*reinterpret_cast<void***>(a1 + 28) != edx42) {
        ecx67 = g42d4f8;
        edx68 = 0;
        *reinterpret_cast<unsigned char*>(&edx68) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax66) < reinterpret_cast<int32_t>(ecx67)));
        return edx68;
    } else {
        edx69 = g42d4e8;
        ecx70 = 0;
        *reinterpret_cast<unsigned char*>(&ecx70) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax66) >= reinterpret_cast<int32_t>(edx69)));
        return ecx70;
    }
}

uint32_t g42f0dc;

void fun_41a004(unsigned char* ecx);

void** fun_419e80(void** a1, void** a2, void** a3, void** a4) {
    void** al5;
    int32_t edx6;
    int32_t ebp7;
    uint32_t edi8;
    void** eax9;
    void** edi10;
    void** ecx11;
    int32_t esi12;
    void** v13;
    void** cl14;
    uint32_t ecx15;
    int32_t ebx16;
    void** ecx17;
    void** eax18;
    int32_t eax19;

    al5 = *reinterpret_cast<void***>(a2);
    edx6 = 0;
    ebp7 = 0;
    edi8 = g42f0dc;
    if (al5 == 97) {
        eax9 = reinterpret_cast<void**>(0x109);
    } else {
        if (al5 == 0x72) {
            eax9 = reinterpret_cast<void**>(0);
            edi10 = reinterpret_cast<void**>(edi8 | 1);
            goto addr_0x419ebd_5;
        } else {
            if (al5 == 0x77) {
                eax9 = reinterpret_cast<void**>(0x301);
            } else {
                return 0;
            }
        }
    }
    edi10 = reinterpret_cast<void**>(edi8 | 2);
    addr_0x419ebd_5:
    ecx11 = a2 + 1;
    esi12 = 1;
    v13 = ecx11;
    cl14 = *reinterpret_cast<void***>(ecx11);
    if (cl14) {
        do {
            if (!esi12) 
                break;
            ecx15 = reinterpret_cast<uint32_t>(cl14 + 0xffffffd5);
            if (ecx15 > 73) 
                goto addr_0x419f6c_12;
            ebx16 = 0;
            *reinterpret_cast<signed char*>(&ebx16) = *reinterpret_cast<signed char*>(ecx15 + reinterpret_cast<int32_t>(fun_41a004));
            switch (ebx16) {
            case 0:
                if (*reinterpret_cast<unsigned char*>(&eax9) & 2) {
                    addr_0x419f6c_12:
                case 9:
                    esi12 = 0;
                    break;
                } else {
                    *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) & 0xfe) | 2);
                    edi10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi10) & 0xfffffffc | 0x80);
                    break;
                }
            case 1:
                if (*reinterpret_cast<unsigned char*>(&eax9) & 64) 
                    goto addr_0x419f6c_12;
                *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) | 64);
                break;
            case 2:
                if (ebp7) 
                    goto addr_0x419f6c_12;
                ebp7 = 1;
                *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) | 16);
                break;
            case 3:
                if (ebp7) 
                    goto addr_0x419f6c_12;
                ebp7 = 1;
                *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) | 32);
                break;
            case 4:
                if (1) 
                    goto addr_0x419f6c_12;
                *reinterpret_cast<unsigned char*>(&eax9 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9 + 1) | 16);
                break;
            case 5:
                if (1) 
                    goto addr_0x419f6c_12;
                *reinterpret_cast<unsigned char*>(&eax9 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9 + 1) | 0x80);
                break;
            case 6:
                if (edx6) 
                    goto addr_0x419f6c_12;
                edx6 = 1;
                edi10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi10) | 0x4000);
                break;
            case 7:
                if (edx6) 
                    goto addr_0x419f6c_12;
                edx6 = 1;
                edi10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi10) & 0xffffbfff);
                break;
            case 8:
                if (1) 
                    goto addr_0x419f6c_12;
                *reinterpret_cast<unsigned char*>(&eax9 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9 + 1) | 64);
            }
            ecx17 = v13 + 1;
            v13 = ecx17;
            cl14 = *reinterpret_cast<void***>(ecx17);
        } while (cl14);
    }
    eax18 = fun_4164c0(a1, eax9, a3, 0x1a4);
    if (reinterpret_cast<signed char>(eax18) >= reinterpret_cast<signed char>(0)) {
        eax19 = g42ed6c;
        g42ed6c = eax19 + 1;
        *reinterpret_cast<void***>(a4 + 12) = edi10;
        *reinterpret_cast<void***>(a4 + 4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a4 + 8) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a4 + 28) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a4 + 16) = eax18;
        return a4;
    } else {
        return 0;
    }
}

int32_t SetStdHandle = 0x32b82;

int32_t fun_41aa60(void** a1) {
    void** eax2;
    int32_t** edi3;
    uint32_t eax4;
    uint32_t esi5;
    void** edi6;
    void** esi7;
    void** ebx8;
    void** eax9;
    void*** eax10;
    int1_t zf11;
    void** ecx12;
    int32_t v13;
    void** ecx14;

    eax2 = g430380;
    if (reinterpret_cast<unsigned char>(a1) >= reinterpret_cast<unsigned char>(eax2) || ((edi3 = reinterpret_cast<int32_t**>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280), eax4 = reinterpret_cast<unsigned char>(a1) & 31, esi5 = eax4 + eax4 * 8 << 2, (1 & *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*edi3) + esi5 + 4)) == 0) || *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*edi3) + esi5) == -1)) {
        eax9 = fun_419020(edi6, esi7, ebx8);
        *reinterpret_cast<void***>(eax9) = reinterpret_cast<void**>(9);
        eax10 = fun_419030(edi6, esi7);
        *eax10 = reinterpret_cast<void**>(0);
        return -1;
    }
    zf11 = g42ade4 == 1;
    if (!zf11) 
        goto addr_0x41aac7_4;
    ecx12 = a1;
    if (!ecx12) {
        v13 = 0xf6;
    } else {
        ecx14 = ecx12 - 1;
        if (!ecx14) {
            v13 = 0xf5;
        } else {
            if (ecx14 - 1) {
                addr_0x41aac7_4:
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*edi3) + esi5) = -1;
                return 0;
            } else {
                v13 = 0xf4;
            }
        }
    }
    SetStdHandle(v13, 0);
    goto addr_0x41aac7_4;
}

struct s100 {
    int32_t f0;
    unsigned char f4;
    signed char[3] pad8;
    int32_t f8;
    void** f12;
};

struct s101 {
    signed char[1152] pad1152;
    void** f1152;
};

void** fun_41a840(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** v7;
    void** ebx8;
    void** v9;
    void** ebp10;
    void** v11;
    void** esi12;
    void** v13;
    void** edi14;
    void** v15;
    void** v16;
    void** edi17;
    void** v18;
    void* ebx19;
    struct s100** ebp20;
    struct s100* esi21;
    void** edi22;
    void* edx23;
    void** eax24;
    void** ebx25;

    v6 = reinterpret_cast<void**>(__return_address());
    v7 = ebx8;
    v9 = ebp10;
    v11 = esi12;
    v13 = edi14;
    v15 = reinterpret_cast<void**>(0xffffffff);
    fun_417120(ecx, 18, v13, v11, v9, v7, 0xffffffff, v16, v6, a2, a3, a4, a5);
    edi17 = reinterpret_cast<void**>(0);
    v18 = reinterpret_cast<void**>(0);
    ebx19 = reinterpret_cast<void*>(0);
    ebp20 = reinterpret_cast<struct s100**>(0x430280);
    do {
        esi21 = *ebp20;
        if (!esi21) 
            break;
        if (reinterpret_cast<uint32_t>(esi21) >= reinterpret_cast<uint32_t>(esi21) + 0x480) {
            addr_0x41a8ff_4:
            if (0) 
                goto addr_0x41a992_5; else 
                continue;
        } else {
            do {
                if (!(esi21->f4 & 1)) {
                    if (!esi21->f8) {
                        fun_417120(ecx, 17, v13, v11, v9, v7, 0xffffffff, v18, v6, a2, a3, a4, a5);
                        if (!esi21->f8) {
                            ecx = reinterpret_cast<void**>(&esi21->f12);
                            InitializeCriticalSection(ecx);
                            esi21->f8 = esi21->f8 + 1;
                        }
                        fun_4171a0(17);
                    }
                    edi22 = reinterpret_cast<void**>(&esi21->f12);
                    EnterCriticalSection(edi22);
                    if (!(esi21->f4 & 1)) 
                        goto addr_0x41a8dd_12;
                    LeaveCriticalSection(edi22, edi22);
                }
                esi21 = reinterpret_cast<struct s100*>(reinterpret_cast<uint32_t>(esi21) + 36);
            } while (reinterpret_cast<uint32_t>(esi21) < reinterpret_cast<uint32_t>(*ebp20) + 0x480);
        }
        goto addr_0x41a8ff_4;
        addr_0x41a8dd_12:
        esi21->f0 = -1;
        edx23 = reinterpret_cast<void*>(__intrinsic() >> 3);
        v7 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx23) + (reinterpret_cast<uint32_t>(edx23) >> 31) + reinterpret_cast<uint32_t>(ebx19));
        goto addr_0x41a8ff_4;
        ++ebp20;
        edi17 = v18 + 1;
        ebx19 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx19) + 32);
        v18 = edi17;
    } while (reinterpret_cast<int32_t>(ebp20) < 0x430380);
    goto addr_0x41a925_17;
    eax24 = fun_414db0(0x480, v13, v11, v9, v7, 0xffffffff, v18, v6, a2, a3, a4, a5);
    if (eax24) {
        ebx25 = g430380;
        *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi17) * 4 + 0x430280) = eax24;
        g430380 = ebx25 + 32;
        if (reinterpret_cast<unsigned char>(eax24) < reinterpret_cast<unsigned char>(eax24 + 0x480)) {
            do {
                *reinterpret_cast<void***>(eax24 + 4) = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(eax24) = reinterpret_cast<void**>(0xffffffff);
                *reinterpret_cast<signed char*>(eax24 + 5) = 10;
                *reinterpret_cast<void***>(eax24 + 8) = reinterpret_cast<void**>(0);
                eax24 = eax24 + 36;
            } while (reinterpret_cast<unsigned char>(eax24) < reinterpret_cast<unsigned char>(&(*reinterpret_cast<struct s101**>(reinterpret_cast<unsigned char>(edi17) * 4 + 0x430280))->f1152));
        }
        v15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi17) << 5);
        fun_41ab50(reinterpret_cast<unsigned char>(edi17) << 5, v13, v11, v9, v7, v15, v18);
    }
    addr_0x41a992_5:
    fun_4171a0(18);
    return v15;
    addr_0x41a925_17:
    goto addr_0x41a992_5;
}

int32_t fun_41a9b0(void** a1, void** a2) {
    void** eax3;
    void**** edi4;
    uint32_t eax5;
    uint32_t esi6;
    void** edi7;
    void** esi8;
    void** ebx9;
    void** eax10;
    void*** eax11;
    int32_t eax12;
    void** ecx13;
    void** ecx14;

    eax3 = g430380;
    if (reinterpret_cast<unsigned char>(a1) >= reinterpret_cast<unsigned char>(eax3) || (edi4 = reinterpret_cast<void****>((reinterpret_cast<signed char>(a1) >> 5) * 4 + 0x430280), eax5 = reinterpret_cast<unsigned char>(a1) & 31, esi6 = eax5 + eax5 * 8 << 2, !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(*edi4) + esi6) == 0xffffffff))) {
        eax10 = fun_419020(edi7, esi8, ebx9);
        *reinterpret_cast<void***>(eax10) = reinterpret_cast<void**>(9);
        eax11 = fun_419030(edi7, esi8);
        *eax11 = reinterpret_cast<void**>(0);
        return -1;
    } else {
        eax12 = g42ade4;
        if (eax12 == 1) {
            ecx13 = a1;
            if (!ecx13) {
                SetStdHandle(0xf6, a2);
            } else {
                ecx14 = ecx13 - 1;
                if (!ecx14) {
                    SetStdHandle();
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(*edi4) + esi6) = a2;
                    goto esi8;
                } else {
                    if (!(ecx14 - 1)) {
                        SetStdHandle();
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(*edi4) + esi6) = a2;
                        goto esi8;
                    }
                }
            }
        }
        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(*edi4) + esi6) = a2;
        return 0;
    }
}

int32_t fun_41af50(void** a1, void** a2, void** a3) {
    int32_t v4;
    int32_t ebp5;
    void**** v6;
    void**** esi7;
    void** esp8;
    void** edi9;
    void* ebp10;
    void** edx11;
    uint32_t eax12;
    int32_t ecx13;
    void* eax14;
    void**** esi15;
    void* ebx16;
    void*** ecx17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    int32_t eax22;
    void* esp23;
    void* edi24;
    unsigned char al25;
    void** ebp26;
    void** v27;
    void** esi28;
    void** v29;
    void** ebp30;
    void** v31;
    void*** esp32;
    void** v33;
    void*** edx34;
    void** v35;
    int32_t eax36;
    void** eax37;
    void** eax38;
    void** eax39;
    void*** eax40;

    v4 = ebp5;
    v6 = esi7;
    esp8 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4 - 4 - 4 - 4);
    edi9 = a2;
    ebp10 = reinterpret_cast<void*>(0);
    edx11 = edi9;
    if (!a3 || (eax12 = reinterpret_cast<unsigned char>(a1) & 31, ecx13 = reinterpret_cast<signed char>(a1) >> 5, eax14 = *reinterpret_cast<void**>(ecx13 * 4 + 0x430280), esi15 = reinterpret_cast<void****>(ecx13 * 4 + 0x430280), ebx16 = reinterpret_cast<void*>(eax12 + eax12 * 8 << 2), !!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(eax14) + 4) & 2))) {
        return 0;
    } else {
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(eax14) + 4) & 72 && *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(eax14) + 5) != 10) {
            *reinterpret_cast<void***>(edi9) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(eax14) + 5);
            ecx17 = *esi15;
            edx11 = edi9 + 1;
            ebp10 = reinterpret_cast<void*>(1);
            --a3;
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(ecx17) + 5) = 10;
        }
        v18 = reinterpret_cast<void**>(esp8 + 5);
        v19 = a3;
        v20 = edx11;
        v21 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(*esi15));
        eax22 = reinterpret_cast<int32_t>(ReadFile());
        esp23 = reinterpret_cast<void*>(esp8 - 1 - 1 - 1 - 1 - 1 - 1 + 1);
        if (!eax22) 
            goto addr_0x41afe0_6;
    }
    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(*esi15) + 4) & 0x80)) {
        addr_0x41b161_8:
        goto v4;
    } else {
        if (!edi24 || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi9) == 10)) {
            al25 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(*esi15) + 4) & 0xfb);
        } else {
            al25 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(*esi15) + 4) | 4);
        }
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(*esi15) + 4) = al25;
        ebp26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp10) + reinterpret_cast<int32_t>(edi24) + reinterpret_cast<unsigned char>(v27));
        esi28 = edi9;
        v29 = ebp26;
        if (reinterpret_cast<unsigned char>(v27) < reinterpret_cast<unsigned char>(ebp26)) 
            goto addr_0x41b066_13;
    }
    addr_0x41b15b_14:
    goto addr_0x41b161_8;
    addr_0x41b066_13:
    while (*reinterpret_cast<void***>(edi9) != 26) {
        if (*reinterpret_cast<void***>(edi9) != 13) {
            *reinterpret_cast<void***>(esi28) = *reinterpret_cast<void***>(edi9);
            ++esi28;
            ++edi9;
            goto addr_0x41b129_17;
        }
        if (reinterpret_cast<unsigned char>(edi9) >= reinterpret_cast<unsigned char>(ebp26 - 1)) {
            ebp30 = reinterpret_cast<void**>(0);
            v31 = reinterpret_cast<void**>(0);
            esp32 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp23) - 4 - 4);
            v33 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp23) + 20);
            edx34 = *v6;
            v35 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(edx34));
            ++edi9;
            eax36 = reinterpret_cast<int32_t>(ReadFile(v35, esp32 + 27, 1, v33));
            esp23 = reinterpret_cast<void*>(esp32 - 4 - 4 - 4 - 4 + 4);
            if (!eax36) {
                eax37 = reinterpret_cast<void**>(GetLastError(v35, esp32 + 27, 1, v33));
                esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 + 4);
                ebp30 = eax37;
            }
            if (ebp30) 
                goto addr_0x41b125_22;
            if (!v21) 
                goto addr_0x41b125_22;
            if (*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v20)) + 4) & 72) 
                goto addr_0x41b0e2_25;
        } else {
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(edi9 + 1) == 10)) {
                *reinterpret_cast<void***>(esi28) = reinterpret_cast<void**>(13);
                ++esi28;
                ++edi9;
                goto addr_0x41b129_17;
            } else {
                edi9 = edi9 + 2;
                *reinterpret_cast<void***>(esi28) = reinterpret_cast<void**>(10);
                goto addr_0x41b128_29;
            }
        }
        if (esi28 || !reinterpret_cast<int1_t>((&v31)[3] == 10)) {
            fun_4190c0(v18, 0xff, 1, v35, esp32 + 27, 1, v33, 0, v21, v20, v19);
            esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4 - 4 - 4 + 4 + 12);
            if ((&v31)[3] == 10) {
                addr_0x41b129_17:
                ebp26 = v29;
                if (reinterpret_cast<unsigned char>(edi9) < reinterpret_cast<unsigned char>(ebp26)) 
                    continue; else 
                    goto addr_0x41b135_32;
            } else {
                addr_0x41b125_22:
                *reinterpret_cast<void***>(esi28) = reinterpret_cast<void**>(13);
            }
        } else {
            *reinterpret_cast<void***>(esi28) = reinterpret_cast<void**>(10);
        }
        addr_0x41b128_29:
        ++esi28;
        goto addr_0x41b129_17;
        addr_0x41b0e2_25:
        if (!reinterpret_cast<int1_t>((&v31)[3] == 10)) {
            *reinterpret_cast<void***>(esi28) = reinterpret_cast<void**>(13);
            ++esi28;
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v20)) + 5) = (&v31)[3];
            goto addr_0x41b129_17;
        } else {
            *reinterpret_cast<void***>(esi28) = (&v31)[3];
            goto addr_0x41b128_29;
        }
    }
    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(*v6) + 4) & 64)) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(*v6) + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(*v6) + 4) | 2);
        goto addr_0x41b15b_14;
    }
    addr_0x41b135_32:
    goto v4;
    addr_0x41afe0_6:
    eax38 = reinterpret_cast<void**>(GetLastError());
    if (!reinterpret_cast<int1_t>(eax38 == 5)) {
        if (eax38 != 0x6d) {
            fun_418fa0(eax38);
            goto v4;
        }
    } else {
        eax39 = fun_419020(v21, v20, v19);
        *reinterpret_cast<void***>(eax39) = reinterpret_cast<void**>(9);
        eax40 = fun_419030(v21, v20);
        *eax40 = reinterpret_cast<void**>(5);
        goto v4;
    }
}

void fun_4170f0();

int32_t TlsAlloc = 0x32b12;

int32_t fun_4194b0(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** eax6;
    void** esi7;
    void** eax8;
    int32_t eax9;
    void** eax10;

    fun_4170f0();
    eax6 = reinterpret_cast<void**>(TlsAlloc());
    g42d4d8 = eax6;
    if (eax6 == 0xffffffff || ((eax8 = fun_41d0f0(1, 0x74, esi7, __return_address(), a1, a2, a3, a4, a5), eax8 == 0) || (eax9 = reinterpret_cast<int32_t>(TlsSetValue()), eax9 == 0))) {
        return 0;
    } else {
        fun_419510(eax8);
        eax10 = reinterpret_cast<void**>(GetCurrentThreadId());
        *reinterpret_cast<void***>(eax8) = eax10;
        *reinterpret_cast<void***>(eax8 + 4) = reinterpret_cast<void**>(0xffffffff);
        goto eax8;
    }
}

void** fun_41a610(void** a1);

struct s102 {
    signed char f0;
    signed char f1;
    signed char f2;
};

int32_t GetCPInfo = 0x32b60;

void** g42ef7c;

int32_t fun_41a3f0(void** ecx, void** a2) {
    void** v3;
    void** ebx4;
    void** v5;
    void** ebp6;
    void** edi7;
    void** esi8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** eax14;
    void** ebp15;
    void** eax16;
    void** v17;
    void** esi18;
    int32_t edx19;
    void*** eax20;
    uint32_t ecx21;
    signed char* edi22;
    int32_t ebx23;
    uint32_t edi24;
    int32_t ebx25;
    struct s102* ebp26;
    struct s102* esi27;
    uint32_t eax28;
    unsigned char dl29;
    void** eax30;
    void** ecx31;
    void** edx32;
    void** eax33;
    int32_t eax34;
    int1_t zf35;
    int32_t v36;
    uint32_t ecx37;
    signed char* edi38;
    void** esi39;
    int32_t v40;
    signed char v41;
    uint32_t eax42;
    signed char v43;
    signed char v44;
    uint32_t eax45;
    void** eax46;

    v3 = ebx4;
    v5 = ebp6;
    fun_417120(ecx, 25, edi7, esi8, v5, v3, v9, v10, v11, v12, v13, __return_address(), a2);
    eax14 = fun_41a610(a2);
    ebp15 = eax14;
    eax16 = g42ef64;
    v17 = ebp15;
    if (ebp15 == eax16) {
        fun_4171a0(25);
        return 0;
    }
    esi18 = reinterpret_cast<void**>(0);
    if (!ebp15) {
        fun_41a6c0();
        fun_4171a0(25);
        return 0;
    } else {
        edx19 = 0;
        eax20 = reinterpret_cast<void***>(0x42d508);
        do {
            if (*eax20 == ebp15) 
                break;
            eax20 = eax20 + 48;
            ++edx19;
        } while (reinterpret_cast<uint32_t>(eax20) < 0x42d5f8);
        goto addr_0x41a455_8;
    }
    ecx21 = 64;
    edi22 = reinterpret_cast<signed char*>(0x42ee60);
    ebx23 = edx19 + edx19 * 2;
    while (ecx21) {
        --ecx21;
        *edi22 = reinterpret_cast<signed char>(0);
        edi22 = edi22 + 4;
    }
    *edi22 = 0;
    edi24 = 0;
    ebx25 = ebx23 << 4;
    ebp26 = reinterpret_cast<struct s102*>(ebx25 + 0x42d518);
    do {
        esi27 = ebp26;
        if (ebp26->f0) {
            do {
                *reinterpret_cast<signed char*>(&ecx21) = esi27->f1;
                if (!*reinterpret_cast<signed char*>(&ecx21)) 
                    break;
                eax28 = 0;
                ecx21 = ecx21 & 0xff;
                *reinterpret_cast<signed char*>(&eax28) = esi27->f0;
                if (eax28 <= ecx21) {
                    dl29 = *reinterpret_cast<unsigned char*>(edi24 + 0x42d500);
                    do {
                        *reinterpret_cast<unsigned char*>(eax28 + 0x42ee61) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax28 + 0x42ee61) | dl29);
                        ++eax28;
                    } while (eax28 <= ecx21);
                }
                esi27 = reinterpret_cast<struct s102*>(&esi27->f2);
            } while (esi27->f2);
        }
        ++edi24;
        ebp26 = reinterpret_cast<struct s102*>(reinterpret_cast<int32_t>(ebp26) + 8);
    } while (edi24 < 4);
    g42ef64 = v17;
    eax30 = fun_41a660(v17);
    ecx31 = *reinterpret_cast<void***>(ebx25 + 0x42d50c);
    edx32 = *reinterpret_cast<void***>(ebx25 + 0x42d510);
    g42ef68 = eax30;
    g42ef70 = ecx31;
    eax33 = *reinterpret_cast<void***>(ebx25 + 0x42d50c + 8);
    g42ef74 = edx32;
    g42ef78 = eax33;
    fun_4171a0(25);
    return 0;
    addr_0x41a455_8:
    eax34 = reinterpret_cast<int32_t>(GetCPInfo());
    if (eax34 != 1) {
        zf35 = g42ef7c == 0;
        if (zf35) {
            fun_4171a0(25);
            goto v36;
        }
    } else {
        ecx37 = 64;
        edi38 = reinterpret_cast<signed char*>(0x42ee60);
        while (ecx37) {
            --ecx37;
            *edi38 = reinterpret_cast<signed char>(0);
            edi38 = edi38 + 4;
            esi18 = esi18 + 4;
        }
        *edi38 = 0;
        esi39 = esi18 + 1;
        if (reinterpret_cast<unsigned char>(v5) > reinterpret_cast<unsigned char>(1)) 
            goto addr_0x41a480_33;
    }
    g42ef64 = esi39;
    g42ef68 = esi39;
    addr_0x41a4fd_35:
    g42ef70 = reinterpret_cast<void**>(0);
    g42ef74 = reinterpret_cast<void**>(0);
    g42ef78 = reinterpret_cast<void**>(0);
    fun_4171a0(25);
    goto v40;
    addr_0x41a480_33:
    if (*reinterpret_cast<signed char*>(&v3 + 2)) {
        do {
            *reinterpret_cast<signed char*>(&ecx37) = v41;
            if (!*reinterpret_cast<signed char*>(&ecx37)) 
                break;
            eax42 = 0;
            ecx37 = ecx37 & 0xff;
            *reinterpret_cast<signed char*>(&eax42) = v43;
            if (eax42 <= ecx37) {
                do {
                    *reinterpret_cast<unsigned char*>(eax42 + 0x42ee61) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax42 + 0x42ee61) | 4);
                    ++eax42;
                } while (eax42 <= ecx37);
            }
        } while (v44);
    }
    eax45 = 1;
    do {
        *reinterpret_cast<unsigned char*>(eax45 + 0x42ee61) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax45 + 0x42ee61) | 8);
        ++eax45;
    } while (eax45 < 0xff);
    g42ef64 = ebp15;
    eax46 = fun_41a660(ebp15);
    g42ef68 = eax46;
    goto addr_0x41a4fd_35;
}

struct s35* g4313b0;

int32_t g42ec90;

void** g42ec78;

int32_t g42ec74;

void fun_41b520(void** a1, void** a2, void** a3) {
    void* esp4;
    struct s35* edi5;
    void** edi6;
    void** esi7;
    void** v8;
    void** v9;
    void** eax10;
    void* esp11;

    GetModuleFileNameA();
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
    edi5 = g4313b0;
    g42ec90 = 0x42ef88;
    if (!edi5->f0) {
        edi5 = reinterpret_cast<struct s35*>(0x42ef88);
    }
    fun_41b5c0(edi5, 0, 0, reinterpret_cast<int32_t>(esp4) + 8, reinterpret_cast<int32_t>(esp4) + 12);
    eax10 = fun_414db0(edi6 + 0x410, 0, 0x42ef88, 0x104, edi6, esi7, v8, v9, __return_address(), a1, a2, a3);
    esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20 - 4 - 4 + 4 + 4);
    if (!eax10) {
        fun_416a10(8, 0, 0x42ef88, 0x104, edi6);
        esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp11) - 4 - 4 + 4 + 4);
    }
    fun_41b5c0(edi5, eax10, eax10 + 0x410, reinterpret_cast<int32_t>(esp11) - 4 + 12, reinterpret_cast<int32_t>(esp11) + 12);
    g42ec78 = eax10;
    g42ec74 = 0x103;
    goto esi7;
}

void** g42ecc4;

void** fun_41b430(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void** v13;
    void** edx14;
    void** v15;
    void** ebx16;
    void** v17;
    void** ebp18;
    void** v19;
    void** esi20;
    void** al21;
    void* esi22;
    void** v23;
    void** edi24;
    void** edi25;
    uint32_t ecx26;
    void** eax27;
    void** esi28;
    void** v29;
    void** ebp30;
    void** dl31;
    void** edi32;
    uint32_t ecx33;
    void** ebx34;
    void** eax35;
    void** edi36;
    uint32_t ecx37;
    void** eax38;
    uint32_t ecx39;
    uint32_t edx40;
    void*** esi41;
    void** edi42;
    uint32_t ecx43;
    void** eax44;
    void** eax45;
    void** eax46;

    v12 = reinterpret_cast<void**>(__return_address());
    v13 = ecx;
    edx14 = g42ecc4;
    v15 = ebx16;
    v17 = ebp18;
    v19 = esi20;
    al21 = *reinterpret_cast<void***>(edx14);
    esi22 = reinterpret_cast<void*>(0);
    v23 = edi24;
    if (al21) {
        do {
            if (al21 != 61) {
                esi22 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi22) + 1);
            }
            edi25 = edx14;
            ecx26 = 0xffffffff;
            do {
                if (!ecx26) 
                    break;
                --ecx26;
                ++edi25;
                esi22 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi22) + 1);
            } while (*reinterpret_cast<void***>(edi25));
            ecx = reinterpret_cast<void**>(~ecx26 - 1);
            al21 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edx14) + reinterpret_cast<unsigned char>(ecx) + 1);
            edx14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx14) + reinterpret_cast<unsigned char>(ecx) + 1);
        } while (al21);
    }
    eax27 = fun_414db0(reinterpret_cast<uint32_t>(esi22) * 4 + 4, v23, v19, v17, v15, v13, v12, a2, a3, a4, a5, a6);
    esi28 = eax27;
    v29 = esi28;
    g42ec80 = esi28;
    if (!esi28) {
        fun_416a10(9, v23, v19, v17, v15);
    }
    ebp30 = g42ecc4;
    dl31 = *reinterpret_cast<void***>(ebp30);
    if (dl31) {
        do {
            edi32 = ebp30;
            ecx33 = 0xffffffff;
            do {
                if (!ecx33) 
                    break;
                --ecx33;
                ++edi32;
                ++esi28;
            } while (*reinterpret_cast<void***>(edi32));
            ecx = reinterpret_cast<void**>(~ecx33 - 1);
            ebx34 = ecx + 1;
            if (dl31 != 61) {
                eax35 = fun_414db0(ebx34, v23, v19, v17, v15, v29, v12, a2, a3, a4, a5, a6);
                *reinterpret_cast<void***>(esi28) = eax35;
                if (!eax35) {
                    fun_416a10(9, v23, v19, v17, v15);
                }
                edi36 = ebp30;
                ecx37 = 0xffffffff;
                do {
                    if (!ecx37) 
                        break;
                    --ecx37;
                    ++edi36;
                } while (*reinterpret_cast<void***>(edi36));
                eax38 = v29;
                ecx39 = ~ecx37;
                edx40 = ecx39;
                esi41 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi36) - ecx39);
                edi42 = *reinterpret_cast<void***>(eax38);
                ecx43 = ecx39 >> 2;
                while (ecx43) {
                    --ecx43;
                    *reinterpret_cast<void***>(edi42) = *esi41;
                    edi42 = edi42 + 4;
                    esi41 = esi41 + 4;
                }
                ecx = reinterpret_cast<void**>(edx40 & 3);
                eax44 = eax38 + 4;
                while (ecx) {
                    --ecx;
                    *reinterpret_cast<void***>(edi42) = *esi41;
                    ++edi42;
                    ++esi41;
                }
                v29 = eax44;
                esi28 = eax44;
            }
            dl31 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ebp30) + reinterpret_cast<unsigned char>(ebx34));
            ebp30 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp30) + reinterpret_cast<unsigned char>(ebx34));
        } while (dl31);
    }
    eax45 = g42ecc4;
    eax46 = fun_414d40(ecx, eax45, v23, v19, v17, v15, v29, v12, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    g42ecc4 = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(esi28) = reinterpret_cast<void**>(0);
    return eax46;
}

int32_t g4313bc;

void fun_4157f0(void** a1, void** a2, void** a3) {
    int32_t eax4;

    eax4 = g4313bc;
    if (eax4) {
        eax4();
    }
    fun_415940(0x429008, 0x429014);
    fun_415940(0x429000, 0x429004);
    return;
}

void** fun_41b3f0(uint32_t a1, uint32_t a2, unsigned char a3) {
    uint32_t eax4;
    void** eax5;
    uint32_t edx6;

    eax4 = a1 & 0xff;
    if (!(*reinterpret_cast<unsigned char*>(eax4 + 0x42ee61) & a3)) {
        if (!a2) {
            eax5 = reinterpret_cast<void**>(0);
        } else {
            edx6 = 0;
            *reinterpret_cast<int16_t*>(&edx6) = *reinterpret_cast<int16_t*>(eax4 * 2 + 0x42abca);
            eax5 = reinterpret_cast<void**>(edx6 & a2);
        }
        if (!eax5) {
            return eax5;
        }
    }
    return 1;
}

struct s103 {
    signed char[4] pad4;
    signed char f4;
};

void** fun_40ce40(void** ecx) {
    int1_t pf2;
    struct s103* ebx3;
    struct s103* ebx4;
    struct s103* ebx5;
    struct s103* ebx6;
    signed char tmp8_7;

    pf2 = __intrinsic();
    if (!(pf2 || !pf2)) {
        pf2 = __intrinsic();
    }
    ebx3 = ebx4;
    if (pf2 || !pf2) {
        ebx3 = ebx3;
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1) = 0xff;
        pf2 = __intrinsic();
    }
    ebx5 = ebx3;
    if (pf2 || !pf2) {
    }
    do {
        *reinterpret_cast<unsigned char*>(&ebx5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx5) >> 6);
    } while (!__intrinsic());
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1) - reinterpret_cast<unsigned char>(ebx5->f4 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1) < reinterpret_cast<unsigned char>(ebx5->f4 + __intrinsic()))));
    ebx6 = ebx5;
    do {
    } while (!__undefined());
    tmp8_7 = ebx6->f4;
    ebx6->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx6) + 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx6) + 1) = tmp8_7;
    goto ebx6;
}

int32_t RtlUnwind = 0x32a16;

void fun_41e820() {
    goto RtlUnwind;
}

int32_t __image_base = 0x42aec8;

struct s28* fun_4172a0() {
    int32_t eax1;
    struct s28* eax2;
    struct s28* ebp3;
    int32_t edi4;
    int32_t edi5;
    struct s31* eax6;
    struct s31* esi7;
    int32_t eax8;
    struct s28* ecx9;
    int32_t eax10;
    struct s28* eax11;
    struct s29* ecx12;
    int32_t eax13;
    int32_t edx14;
    int32_t ecx15;
    struct s31* edi16;
    void** eax17;

    eax1 = g42aed8;
    if (eax1 != -1) {
        eax2 = reinterpret_cast<struct s28*>(HeapAlloc());
        ebp3 = eax2;
        if (!ebp3) {
            addr_0x4173fc_3:
            goto edi4;
        } else {
            addr_0x4172d1_4:
            edi5 = VirtualAlloc;
            eax6 = reinterpret_cast<struct s31*>(edi5(0));
            esi7 = eax6;
            if (esi7) {
                eax8 = reinterpret_cast<int32_t>(edi5());
                if (!eax8) {
                    VirtualFree(esi7, 0, 0x8000);
                } else {
                    if (!reinterpret_cast<int1_t>(ebp3 == 0x42aec8)) {
                        ebp3->f0 = reinterpret_cast<struct s28*>(0x42aec8);
                        ecx9 = __image_base;
                        ebp3->f4 = ecx9;
                        __image_base = ebp3;
                        ebp3->f4->f0 = ebp3;
                    } else {
                        eax10 = __image_base;
                        if (!eax10) {
                            __image_base = 0x42aec8;
                        }
                        eax11 = __image_base;
                        if (!eax11) {
                            __image_base = reinterpret_cast<struct s28*>(0x42aec8);
                        }
                    }
                    ecx12 = reinterpret_cast<struct s29*>(&ebp3->f24);
                    ebp3->f20 = reinterpret_cast<uint32_t>(esi7) + 0x400000;
                    ebp3->f16 = esi7;
                    ebp3->f8 = ecx12;
                    ebp3->f12 = reinterpret_cast<struct s30*>(&ebp3->f152);
                    eax13 = 0;
                    do {
                        edx14 = 0;
                        *reinterpret_cast<unsigned char*>(&edx14) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax13 >= 16));
                        ecx12 = reinterpret_cast<struct s29*>(reinterpret_cast<uint32_t>(ecx12) + 8);
                        ++eax13;
                        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx12) + 0xfffffff8) = (reinterpret_cast<uint32_t>(edx14 - 1) & 0xf1) - 1;
                        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx12) + 0xfffffffc) = 0xf1;
                    } while (eax13 < 0x400);
                    ecx15 = 0x4000;
                    edi16 = esi7;
                    while (ecx15) {
                        --ecx15;
                        edi16->f0 = reinterpret_cast<struct s32*>(0);
                        edi16 = reinterpret_cast<struct s31*>(&edi16->f4);
                        esi7 = reinterpret_cast<struct s31*>(&esi7->f4);
                    }
                    if (reinterpret_cast<uint32_t>(esi7) < reinterpret_cast<uint32_t>(ebp3->f16) + 0x10000) {
                        do {
                            esi7->f4 = reinterpret_cast<void**>(0xf0);
                            esi7->f0 = reinterpret_cast<struct s32*>(&esi7->f8);
                            esi7->f248 = -1;
                            esi7 = reinterpret_cast<struct s31*>(reinterpret_cast<uint32_t>(esi7) + 0x1000);
                        } while (reinterpret_cast<uint32_t>(esi7) < reinterpret_cast<uint32_t>(ebp3->f16) + 0x10000);
                    }
                    goto 4;
                }
            }
        }
        if (ebp3 != 0x42aec8) {
            eax17 = g4313ac;
            HeapFree(eax17, 0, ebp3, 0);
            goto addr_0x4173fc_3;
        }
    } else {
        ebp3 = reinterpret_cast<struct s28*>(0x42aec8);
        goto addr_0x4172d1_4;
    }
}

void** fun_415b70(void** ecx, void** a2, void** a3, void** a4) {
    void** eax5;

    eax5 = fun_415b80(ecx, 1, __return_address(), a2, a3, a4);
    return eax5;
}

void** fun_41d4f0(void** ecx, void** a2) {
    void** ebx3;
    void** eax4;
    int32_t eax5;
    void** ebp6;
    void** edi7;
    uint32_t ecx8;
    void** edx9;
    void** esi10;
    void** edi11;
    uint32_t ecx12;
    void** eax13;

    ebx3 = g42ec80;
    if (!ebx3) {
        eax4 = g42ec88;
        if (eax4) {
            eax5 = fun_41df00(ecx);
            if (eax5) 
                goto addr_0x41d577_4;
            ebx3 = g42ec80;
        }
        if (!ebx3) 
            goto addr_0x41d577_4;
    }
    ebp6 = a2;
    if (!ebp6) {
        addr_0x41d577_4:
        return 0;
    } else {
        edi7 = ebp6;
        ecx8 = 0xffffffff;
        edx9 = *reinterpret_cast<void***>(ebx3);
        do {
            if (!ecx8) 
                break;
            --ecx8;
            ++edi7;
        } while (*reinterpret_cast<void***>(edi7));
        esi10 = reinterpret_cast<void**>(~ecx8 - 1);
        if (!edx9) 
            goto addr_0x41d577_4;
    }
    do {
        edi11 = edx9;
        ecx12 = 0xffffffff;
        do {
            if (!ecx12) 
                break;
            --ecx12;
            ++edi11;
            ++esi10;
        } while (*reinterpret_cast<void***>(edi11));
        if (reinterpret_cast<unsigned char>(~ecx12 - 1) <= reinterpret_cast<unsigned char>(esi10)) 
            continue;
        if (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi10) + reinterpret_cast<unsigned char>(edx9)) != 61) 
            continue;
        eax13 = fun_41dec0(edx9, ebp6, esi10);
        if (!eax13) 
            break;
        edx9 = *reinterpret_cast<void***>(ebx3 + 4);
        ebx3 = ebx3 + 4;
    } while (edx9);
    goto addr_0x41d565_19;
    return reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx3)) + reinterpret_cast<unsigned char>(esi10) + 1;
    addr_0x41d565_19:
    return 0;
}

void** fun_41d2c0(void** ecx, void** a2, void** a3, void** a4);

void fun_41d240(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    int32_t eax7;
    int32_t edi8;
    int32_t esi9;
    void** edi10;
    void** esi11;
    void** ebx12;

    InterlockedIncrement();
    eax7 = g4313a4;
    edi8 = InterlockedDecrement;
    if (!eax7) {
        esi9 = 0;
    } else {
        edi8(0x4313a8);
        fun_417120(ecx, 19, 0x4313a8, 0x4313a8, edi10, esi11, ebx12, __return_address(), a2, a3, a4, a5, a6);
        esi9 = 1;
    }
    fun_41d2c0(a2, __return_address(), a2, a3);
    if (!esi9) {
        edi8();
        goto esi11;
    } else {
        fun_4171a0(19);
        goto ebx12;
    }
}

void fun_419b70(int32_t a1, int32_t a2, void** a3, int32_t a4, int32_t a5, void* a6, void* a7, uint32_t a8, int32_t a9, void* a10, int32_t a11) {
    void** ebx12;
    void* ecx13;
    void** ecx14;
    uint32_t eax15;
    int32_t edi16;
    void* eax17;
    void* ecx18;
    void*** eax19;
    void* edx20;
    void** edi21;
    uint32_t eax22;
    void** edx23;
    void* eax24;
    void* eax25;
    void* eax26;
    uint32_t eax27;
    uint32_t eax28;
    void* eax29;
    void* eax30;
    void* eax31;

    ebx12 = a3;
    if (a2 != 1) {
        if (*reinterpret_cast<unsigned char*>(&ebx12) & 3) {
            ecx13 = *reinterpret_cast<void**>(a4 * 4 + 0x42df84);
        } else {
            ecx13 = *reinterpret_cast<void**>(a4 * 4 + 0x42df4c);
        }
        ecx14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx13) + reinterpret_cast<uint32_t>(a7));
    } else {
        eax15 = reinterpret_cast<unsigned char>(ebx12) & 3;
        if (eax15) {
            edi16 = a4 * 4;
            eax17 = *reinterpret_cast<void**>(edi16 + 0x42df84);
        } else {
            edi16 = a4 * 4;
            eax17 = *reinterpret_cast<void**>(edi16 + 0x42df4c);
        }
        ecx18 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax17) + 1);
        eax19 = reinterpret_cast<void***>(ebx12 + reinterpret_cast<uint32_t>(ebx12 + reinterpret_cast<unsigned char>(ebx12) * 8) * 8);
        __asm__("cdq ");
        edx20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>((reinterpret_cast<signed char>(ebx12 + 0xffffffff) >> 2) + (reinterpret_cast<uint32_t>(eax19) + reinterpret_cast<uint32_t>(ecx18) + reinterpret_cast<uint32_t>(eax19) * 4) + 0xffff9c25) % 7);
        if (reinterpret_cast<int32_t>(edx20) >= reinterpret_cast<int32_t>(a6)) {
            ecx14 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx18) + ((a5 << 3) - a5 - reinterpret_cast<uint32_t>(edx20) + reinterpret_cast<uint32_t>(a6)));
        } else {
            ecx14 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx18) + ((a5 << 3) - a5 - reinterpret_cast<uint32_t>(edx20) + reinterpret_cast<uint32_t>(a6)) + 0xfffffff9);
        }
        if (a5 == 5) {
            if (eax15) {
                edi21 = *reinterpret_cast<void***>(edi16 + 0x42df88);
            } else {
                edi21 = *reinterpret_cast<void***>(edi16 + 0x42df50);
            }
            if (reinterpret_cast<signed char>(ecx14) > reinterpret_cast<signed char>(edi21)) {
                ecx14 = ecx14 - 7;
            }
        }
    }
    if (a1 != 1) {
        g42d4f4 = ecx14;
        eax22 = a9 + ((a8 << 4) - a8) * 4;
        edx23 = g42d448;
        eax24 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a10) + ((eax22 << 4) - eax22) * 4 + reinterpret_cast<unsigned char>(edx23));
        eax25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint32_t>(eax24) * 4);
        eax26 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25) * 4);
        eax27 = a11 + (reinterpret_cast<uint32_t>(eax26) + reinterpret_cast<uint32_t>(eax26) * 4) * 8;
        g42d4f8 = eax27;
        if (reinterpret_cast<int32_t>(eax27) >= reinterpret_cast<int32_t>(0)) {
            if (reinterpret_cast<int32_t>(eax27) >= reinterpret_cast<int32_t>(0x5265c00)) {
                g42d4f8 = eax27 - 0x5265bff;
            }
            g42d4f0 = ebx12;
            return;
        } else {
            g42d4f0 = ebx12;
            g42d4f8 = eax27 + 0x5265bff;
            return;
        }
    } else {
        g42d4e4 = ecx14;
        g42d4e0 = ebx12;
        eax28 = a9 + ((a8 << 4) - a8) * 4;
        eax29 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a10) + ((eax28 << 4) - eax28) * 4);
        eax30 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29) * 4);
        eax31 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax30) + reinterpret_cast<uint32_t>(eax30) * 4);
        g42d4e8 = a11 + (reinterpret_cast<uint32_t>(eax31) + reinterpret_cast<uint32_t>(eax31) * 4) * 8;
        return;
    }
}

int16_t g42f0d6;

int16_t g42f0d8;

uint32_t fun_41c1c0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11);

uint32_t fun_41bc00(void** a1, void** a2, void** a3, void** a4) {
    void** ebx5;
    void** ebp6;
    uint32_t eax7;
    uint32_t eax8;
    uint32_t eax9;
    uint32_t eax10;
    uint32_t eax11;
    uint32_t eax12;
    uint32_t eax13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t eax16;
    uint32_t eax17;
    uint32_t eax18;
    uint32_t eax19;
    uint32_t eax20;
    uint32_t eax21;
    uint32_t eax22;
    uint32_t eax23;
    uint32_t eax24;
    uint32_t eax25;
    uint32_t eax26;
    uint32_t eax27;
    uint32_t eax28;
    uint32_t eax29;
    uint32_t eax30;
    uint32_t eax31;
    uint32_t eax32;
    uint32_t eax33;
    uint32_t eax34;
    uint32_t eax35;
    uint32_t eax36;
    uint32_t eax37;
    uint32_t eax38;
    uint32_t eax39;
    uint32_t eax40;
    uint32_t eax41;
    uint32_t eax42;
    uint32_t eax43;
    uint32_t eax44;
    uint32_t eax45;
    uint32_t eax46;
    uint32_t eax47;
    uint32_t eax48;
    void** esi49;
    void** edi50;
    void** ebp51;
    void** ebx52;
    uint32_t eax53;

    ebx5 = reinterpret_cast<void**>(0);
    ebp6 = reinterpret_cast<void**>(0);
    *reinterpret_cast<int16_t*>(&ebx5) = g42f0d6;
    *reinterpret_cast<int16_t*>(&ebp6) = g42f0d8;
    if (a1) {
        eax7 = fun_41d9c0(1, ebx5, 49, a1 + 4);
        eax8 = fun_41d9c0(1, ebx5, 50, a1 + 8);
        eax9 = fun_41d9c0(1, ebx5, 51, a1 + 12);
        eax10 = fun_41d9c0(1, ebx5, 52, a1 + 16);
        eax11 = fun_41d9c0(1, ebx5, 53, a1 + 20);
        eax12 = fun_41d9c0(1, ebx5, 54, a1 + 24);
        eax13 = fun_41d9c0(1, ebx5, 55, a1);
        eax14 = fun_41d9c0(1, ebx5, 42, a1 + 32);
        eax15 = fun_41d9c0(1, ebx5, 43, a1 + 36);
        eax16 = fun_41d9c0(1, ebx5, 44, a1 + 40);
        eax17 = fun_41d9c0(1, ebx5, 45, a1 + 44);
        eax18 = fun_41d9c0(1, ebx5, 46, a1 + 48);
        eax19 = fun_41d9c0(1, ebx5, 47, a1 + 52);
        eax20 = fun_41d9c0(1, ebx5, 48, a1 + 28);
        eax21 = fun_41d9c0(1, ebx5, 68, a1 + 56);
        eax22 = fun_41d9c0(1, ebx5, 69, a1 + 60);
        eax23 = fun_41d9c0(1, ebx5, 70, a1 + 64);
        eax24 = fun_41d9c0(1, ebx5, 71, a1 + 68);
        eax25 = fun_41d9c0(1, ebx5, 72, a1 + 72);
        eax26 = fun_41d9c0(1, ebx5, 73, a1 + 76);
        eax27 = fun_41d9c0(1, ebx5, 74, a1 + 80);
        eax28 = fun_41d9c0(1, ebx5, 75, a1 + 84);
        eax29 = fun_41d9c0(1, ebx5, 76, a1 + 88);
        eax30 = fun_41d9c0(1, ebx5, 77, a1 + 92);
        eax31 = fun_41d9c0(1, ebx5, 78, a1 + 96);
        eax32 = fun_41d9c0(1, ebx5, 79, a1 + 100);
        eax33 = fun_41d9c0(1, ebx5, 56, a1 + 0x68);
        eax34 = fun_41d9c0(1, ebx5, 57, a1 + 0x6c);
        eax35 = fun_41d9c0(1, ebx5, 58, a1 + 0x70);
        eax36 = fun_41d9c0(1, ebx5, 59, a1 + 0x74);
        eax37 = fun_41d9c0(1, ebx5, 60, a1 + 0x78);
        eax38 = fun_41d9c0(1, ebx5, 61, a1 + 0x7c);
        eax39 = fun_41d9c0(1, ebx5, 62, a1 + 0x80);
        eax40 = fun_41d9c0(1, ebx5, 63, a1 + 0x84);
        eax41 = fun_41d9c0(1, ebx5, 64, a1 + 0x88);
        eax42 = fun_41d9c0(1, ebx5, 65, a1 + 0x8c);
        eax43 = fun_41d9c0(1, ebx5, 66, a1 + 0x90);
        eax44 = fun_41d9c0(1, ebx5, 67, a1 + 0x94);
        eax45 = fun_41d9c0(1, ebx5, 40, a1 + 0x98);
        eax46 = fun_41d9c0(1, ebx5, 41, a1 + 0x9c);
        eax47 = fun_41d9c0(1, ebp6, 31, a1 + 0xa0);
        eax48 = fun_41d9c0(1, ebp6, 32, a1 + 0xa4);
        eax53 = fun_41c1c0(ebp6, a1, esi49, edi50, ebp51, ebx52, __return_address(), a1, a2, a3, a4);
        return eax7 | eax8 | eax9 | eax10 | eax11 | eax12 | eax13 | eax14 | eax15 | eax16 | eax17 | eax18 | eax19 | eax20 | eax21 | eax22 | eax23 | eax24 | eax25 | eax26 | eax27 | eax28 | eax29 | eax30 | eax31 | eax32 | eax33 | eax34 | eax35 | eax36 | eax37 | eax38 | eax39 | eax40 | eax41 | eax42 | eax43 | eax44 | eax45 | eax46 | eax47 | eax48 | eax53;
    } else {
        return 0xffffffff;
    }
}

uint32_t fun_41c1c0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void*** esp13;
    void** v14;
    void** esi15;
    void** v16;
    void** edi17;
    uint32_t eax18;
    void* esp19;
    uint32_t eax20;
    uint32_t eax21;
    uint32_t esi22;
    void** eax23;
    void** eax24;
    void** edx25;
    void** cl26;
    void** ecx27;
    void** eax28;
    void** edx29;
    void** eax30;

    v12 = reinterpret_cast<void**>(__return_address());
    esp13 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4);
    v14 = esi15;
    v16 = edi17;
    eax18 = fun_41d9c0(0, a1, 35, esp13 + 8);
    esp19 = reinterpret_cast<void*>(esp13 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 16);
    eax20 = fun_41d9c0(0, a1, 37, reinterpret_cast<int32_t>(esp19) + 8);
    eax21 = fun_41d9c0(1, a1, 30, reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 - 4 - 4 + 4 + 16 + 20);
    esi22 = eax18 | eax20 | eax21;
    if (esi22) {
        return esi22;
    }
    eax23 = fun_414db0(13, v16, v14, 0, 0, v12, a1, a2, a3, a4, a5, a6);
    *reinterpret_cast<void***>(a2 + 0xa8) = eax23;
    if (1) {
        *reinterpret_cast<void***>(eax23) = reinterpret_cast<void**>(0x68);
        eax24 = eax23 + 1;
        if (1) {
            addr_0x41c25c_5:
            edx25 = a1;
            cl26 = *reinterpret_cast<void***>(edx25);
            if (cl26) {
                do {
                    *reinterpret_cast<void***>(eax24) = cl26;
                    cl26 = *reinterpret_cast<void***>(edx25 + 1);
                    ++eax24;
                    ++edx25;
                } while (cl26);
            }
        } else {
            *reinterpret_cast<void***>(eax24) = reinterpret_cast<void**>(0x68);
            goto addr_0x41c25b_8;
        }
    } else {
        *reinterpret_cast<void***>(eax23) = reinterpret_cast<void**>(72);
        eax24 = eax23 + 1;
        if (1) 
            goto addr_0x41c25c_5;
        *reinterpret_cast<void***>(eax24) = reinterpret_cast<void**>(72);
        goto addr_0x41c25b_8;
    }
    *reinterpret_cast<void***>(eax24) = reinterpret_cast<void**>(0x6d);
    ecx27 = reinterpret_cast<void**>(0);
    eax28 = eax24 + 1;
    if (!1) {
        *reinterpret_cast<void***>(eax28) = reinterpret_cast<void**>(0x6d);
        ++eax28;
    }
    edx29 = a1;
    ecx27 = *reinterpret_cast<void***>(edx29);
    if (ecx27) {
        do {
            *reinterpret_cast<void***>(eax28) = ecx27;
            ecx27 = *reinterpret_cast<void***>(edx29 + 1);
            ++eax28;
            ++edx29;
        } while (ecx27);
    }
    *reinterpret_cast<void***>(eax28) = reinterpret_cast<void**>(0x73);
    eax30 = eax28 + 1;
    *reinterpret_cast<void***>(eax30) = reinterpret_cast<void**>(0x73);
    *reinterpret_cast<void***>(eax30 + 1) = reinterpret_cast<void**>(0);
    fun_414d40(ecx27, a1, v16, v14, 0, 0, v12, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    return 0;
    addr_0x41c25b_8:
    ++eax24;
    goto addr_0x41c25c_5;
}

int16_t g42f0cc;

uint32_t fun_41c5f0(void** a1) {
    void** esi2;
    uint32_t eax3;
    uint32_t eax4;
    uint32_t eax5;
    uint32_t eax6;
    void** ebp7;
    uint32_t eax8;
    void** v9;
    uint32_t eax10;
    uint32_t eax11;
    uint32_t eax12;
    uint32_t eax13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t eax16;
    uint32_t eax17;
    uint32_t eax18;
    uint32_t eax19;

    esi2 = reinterpret_cast<void**>(0);
    *reinterpret_cast<int16_t*>(&esi2) = g42f0cc;
    if (a1) {
        eax3 = fun_41d9c0(1, esi2, 21, a1 + 12);
        eax4 = fun_41d9c0(1, esi2, 20, a1 + 16);
        eax5 = fun_41d9c0(1, esi2, 22, a1 + 20);
        eax6 = fun_41d9c0(1, esi2, 23, a1 + 24);
        ebp7 = a1 + 28;
        eax8 = fun_41d9c0(1, esi2, 24, ebp7);
        v9 = *reinterpret_cast<void***>(ebp7);
        fun_41c4c0(v9);
        eax10 = fun_41d9c0(1, esi2, 80, a1 + 32);
        eax11 = fun_41d9c0(1, esi2, 81, a1 + 36);
        eax12 = fun_41d9c0(0, esi2, 26, a1 + 40);
        eax13 = fun_41d9c0(0, esi2, 25, a1 + 41);
        eax14 = fun_41d9c0(0, esi2, 84, a1 + 42);
        eax15 = fun_41d9c0(0, esi2, 85, a1 + 43);
        eax16 = fun_41d9c0(0, esi2, 86, a1 + 44);
        eax17 = fun_41d9c0(0, esi2, 87, a1 + 45);
        eax18 = fun_41d9c0(0, esi2, 82, a1 + 46);
        eax19 = fun_41d9c0(0, esi2, 83, a1 + 47);
        return eax3 | eax4 | eax5 | eax6 | eax8 | eax10 | eax11 | eax12 | eax13 | eax14 | eax15 | eax16 | eax17 | eax18 | eax19;
    } else {
        return 0xffffffff;
    }
}

void** fun_41cbf0(void** a1, void** a2) {
    void** ecx3;
    void** ecx4;
    void** eax5;
    void** eax6;
    uint16_t cx7;

    if (!a1) {
        return a1;
    }
    ecx3 = g42ed50;
    if (ecx3) {
        ecx4 = g42ed60;
        a1 = reinterpret_cast<void**>(0);
        eax5 = reinterpret_cast<void**>(WideCharToMultiByte(ecx4));
        if (!eax5 || !0) {
            eax6 = fun_419020(__return_address(), a1, a2);
            *reinterpret_cast<void***>(eax6) = reinterpret_cast<void**>(42);
            eax5 = reinterpret_cast<void**>(0xffffffff);
            goto addr_0x41cc61_6;
        } else {
            addr_0x41cc61_6:
            return eax5;
        }
    } else {
        cx7 = *reinterpret_cast<uint16_t*>(&a2);
        if (cx7 <= 0xff) {
            *reinterpret_cast<void***>(a1) = *reinterpret_cast<void***>(&cx7);
            return 1;
        }
    }
}

void** fun_41d2c0(void** ecx, void** a2, void** a3, void** a4) {
    int32_t v5;
    void** v6;
    void** ebp7;
    void** ebp8;
    void** v9;
    void** esi10;
    void** v11;
    void** edi12;
    void** edi13;
    void** eax14;
    void** eax15;
    int32_t eax16;
    void** eax17;
    void** ecx18;
    int1_t zf19;
    void** ebx20;
    void** v21;
    void** eax22;
    void** esi23;
    int32_t eax24;
    void*** esp25;
    void** ecx26;
    void* esp27;
    void* eax28;
    void* edx29;
    int1_t zf30;
    void** eax31;
    void* eax32;
    void** ecx33;
    void** eax34;

    v5 = reinterpret_cast<int32_t>(__return_address());
    v6 = ebp7;
    ebp8 = a4;
    v9 = esi10;
    v11 = edi12;
    edi13 = a2;
    eax14 = reinterpret_cast<void**>(0);
    if (edi13 && !ebp8) {
        return 0;
    }
    if (!edi13) {
        eax15 = g42ed50;
        if (eax15) {
            eax16 = reinterpret_cast<int32_t>(WideCharToMultiByte());
            if (eax16 && !0) {
                goto 0;
            }
        } else {
            eax17 = fun_4162e0(a3);
            return eax17;
        }
    } else {
        ecx18 = g42ed50;
        if (ecx18) {
            zf19 = reinterpret_cast<int1_t>(g42adcc == 1);
            if (!zf19) {
                ebx20 = a3;
                v21 = ebp8;
                eax22 = reinterpret_cast<void**>(WideCharToMultiByte());
                esi23 = eax22;
                if (!esi23) {
                    if (!edi13 && (eax24 = reinterpret_cast<int32_t>(GetLastError()), esp25 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4), eax24 == 0x7a)) {
                        if (reinterpret_cast<unsigned char>(esi23) >= reinterpret_cast<unsigned char>(ebp8)) {
                            addr_0x41d43c_13:
                            goto v21;
                        } else {
                            do {
                                ecx26 = g42ed60;
                                esp27 = reinterpret_cast<void*>(esp25 - 4 - 4);
                                eax28 = reinterpret_cast<void*>(WideCharToMultiByte(ecx26, 0, ebx20, 1));
                                esp25 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp27) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
                                if (!eax28) 
                                    break;
                                if (reinterpret_cast<int32_t>(esp27) + 36) 
                                    break;
                                if (reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(eax28) + reinterpret_cast<unsigned char>(esi23)) > reinterpret_cast<unsigned char>(ebp8)) 
                                    goto addr_0x41d43c_13;
                                edx29 = reinterpret_cast<void*>(0);
                                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax28) < 0) | reinterpret_cast<uint1_t>(eax28 == 0))) {
                                    do {
                                        zf30 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp25) + reinterpret_cast<int32_t>(edx29) + 28) == 0;
                                        *reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi23) + reinterpret_cast<unsigned char>(edi13)) = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp25) + reinterpret_cast<int32_t>(edx29) + 28);
                                        if (zf30) 
                                            goto addr_0x41d43c_13;
                                        edx29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx29) + 1);
                                        ++esi23;
                                    } while (reinterpret_cast<int32_t>(edx29) < reinterpret_cast<int32_t>(eax28));
                                }
                                ebx20 = ebx20 + 2;
                            } while (reinterpret_cast<unsigned char>(esi23) < reinterpret_cast<unsigned char>(ebp8));
                            goto addr_0x41d43c_13;
                        }
                    }
                } else {
                    if (!edi13) {
                        goto v21;
                    }
                }
            } else {
                if (ebp8) {
                    eax31 = fun_41d4b0(a3, ebp8);
                    ebp8 = eax31;
                }
                eax32 = reinterpret_cast<void*>(WideCharToMultiByte());
                if (!eax32) 
                    goto addr_0x41d496_26;
                if (!edi13) 
                    goto addr_0x41d378_28;
            }
        } else {
            if (!ebp8) {
                addr_0x41d4a4_30:
                goto v5;
            } else {
                ecx33 = a3;
                do {
                    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx33)) > reinterpret_cast<unsigned char>(0xff)) 
                        break;
                    ecx33 = ecx33 + 2;
                    *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax14) + reinterpret_cast<unsigned char>(edi13)) = *reinterpret_cast<void***>(ecx33);
                    if (!*reinterpret_cast<signed char*>(ecx33 + 0xfffffffe)) 
                        goto addr_0x41d4a4_30;
                    ++eax14;
                } while (reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(ebp8));
                goto addr_0x41d324_35;
            }
        }
    }
    addr_0x41d496_26:
    eax34 = fun_419020(v11, v9, v6);
    *reinterpret_cast<void***>(eax34) = reinterpret_cast<void**>(42);
    goto addr_0x41d4a4_30;
    addr_0x41d378_28:
    if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax32) + reinterpret_cast<unsigned char>(edi13) - 1)) {
        goto ebp8;
    }
    addr_0x41d324_35:
    return eax14;
}

void** g42f110;

int32_t CompareStringA = 0x32c6a;

int32_t CompareStringW = 0x32c7c;

void** fun_41df80(void** a1, int32_t a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** eax8;
    int32_t ebx9;
    int32_t eax10;
    int32_t eax11;
    void** esi12;
    void** ebp13;
    void** eax14;
    void** edi15;
    void** eax16;
    void** eax17;
    int32_t v18;
    void** ebx19;
    void** v20;
    int32_t eax21;
    int32_t v22;
    int32_t edi23;
    void** v24;
    void** eax25;
    void** ebx26;
    int32_t v27;
    void** edi28;
    void** esi29;
    void** ebp30;
    void** eax31;
    int32_t eax32;
    void* eax33;
    void** v34;
    void** eax35;
    int32_t eax36;
    void** esi37;
    void** eax38;
    void** v39;
    int32_t v40;
    void** v41;
    void** v42;
    signed char v43;
    int32_t v44;
    int32_t v45;
    int32_t v46;
    void** v47;
    void** v48;
    signed char v49;

    eax8 = g42f110;
    ebx9 = CompareStringA;
    if (!eax8) {
        eax10 = reinterpret_cast<int32_t>(ebx9());
        if (!eax10) {
            eax11 = reinterpret_cast<int32_t>(CompareStringW(0, 0, 0x428078, 1, 0x428078, 1));
            if (!eax11) 
                goto addr_0x41e1a0_4;
            g42f110 = reinterpret_cast<void**>(1);
        } else {
            g42f110 = reinterpret_cast<void**>(2);
        }
    }
    esi12 = a4;
    if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi12) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi12 == 0)) {
        ebp13 = a3;
    } else {
        ebp13 = a3;
        eax14 = fun_417d20(ebp13, esi12);
        esi12 = eax14;
    }
    edi15 = a6;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edi15) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edi15 == 0))) {
        eax16 = fun_417d20(a5, edi15);
        edi15 = eax16;
    }
    eax17 = g42f110;
    if (reinterpret_cast<int1_t>(eax17 == 2)) {
        ebx9();
        goto v18;
    }
    if (!reinterpret_cast<int1_t>(eax17 == 1)) {
        addr_0x41e23d_15:
        return eax17;
    } else {
        ebx19 = a7;
        v20 = reinterpret_cast<void**>(0);
        if (!ebx19) {
            ebx19 = g42ed60;
        }
        if (!esi12) 
            goto addr_0x41e071_19;
        if (edi15) 
            goto addr_0x41e16c_21;
        addr_0x41e071_19:
        if (esi12 == edi15) {
            return 2;
        }
        if (reinterpret_cast<signed char>(edi15) > reinterpret_cast<signed char>(1)) {
            return 1;
        }
        if (reinterpret_cast<signed char>(esi12) > reinterpret_cast<signed char>(1)) {
            return 3;
        }
        eax21 = reinterpret_cast<int32_t>(GetCPInfo());
        if (!eax21) {
            goto v22;
        }
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi12) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi12 == 0))) 
            goto addr_0x41e0c2_30;
    }
    if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edi15) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edi15 == 0)) {
        addr_0x41e16c_21:
        edi23 = MultiByteToWideChar;
        v24 = ebp13;
        eax25 = reinterpret_cast<void**>(edi23());
        if (!eax25) {
            goto 0;
        }
    } else {
        if (reinterpret_cast<unsigned char>(ebx26) < reinterpret_cast<unsigned char>(2)) {
            goto v27;
        }
        if (!*reinterpret_cast<signed char*>(&v20 + 2)) 
            goto addr_0x41e152_36; else 
            goto addr_0x41e131_37;
    }
    eax31 = fun_414db0(reinterpret_cast<unsigned char>(eax25) + reinterpret_cast<unsigned char>(eax25), ebx19, 9, v24, esi12, 0, 0, edi28, esi29, ebp30, ebx26, 0);
    if (eax31) {
        eax32 = reinterpret_cast<int32_t>(edi23());
        if (!eax32 || ((eax33 = reinterpret_cast<void*>(edi23(ebx19, 9, ebx26, 0, 0)), eax33 == 0) || ((eax35 = fun_414db0(reinterpret_cast<uint32_t>(eax33) + reinterpret_cast<uint32_t>(eax33), ebx19, 9, ebx26, 0, 0, 0, ebx19, 1, v34, esi12, eax31), v24 = eax35, eax35 == 0) || (eax36 = reinterpret_cast<int32_t>(edi23(ebx19, 1, esi12, 0, eax35, eax33, ebx19, 9, ebx26, 0, 0)), eax36 == 0)))) {
            esi37 = eax31;
        } else {
            eax38 = reinterpret_cast<void**>(CompareStringW(0, ebx19, eax25, eax25, v34, eax33, ebx19, 1, esi12, 0, eax35, eax33, ebx19, 9, ebx26, 0, 0));
            esi37 = eax38;
        }
        fun_414d40(v39, v39, ebx19, 1, v34, esi12, eax31, eax25, ebx19, 9, v24, esi12, 0, 0, edi28, esi29, ebp30, ebx26);
        fun_414d40(v39, ebp30, ebx19, 1, v34, esi12, eax31, eax25, ebx19, 9, v24, esi12, 0, 0, edi28, esi29, ebp30, ebx26);
        eax17 = esi37;
        goto addr_0x41e23d_15;
    } else {
        addr_0x41e1a0_4:
        goto 0;
    }
    addr_0x41e152_36:
    goto v40;
    do {
        addr_0x41e131_37:
        if (!v41) 
            goto addr_0x41e152_36;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3)) < reinterpret_cast<unsigned char>(v42)) 
            continue;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3)) <= reinterpret_cast<unsigned char>(v41)) 
            break;
    } while (v43);
    goto addr_0x41e152_36;
    addr_0x41e15f_46:
    goto v44;
    addr_0x41e0c2_30:
    if (reinterpret_cast<unsigned char>(ebx26) < reinterpret_cast<unsigned char>(2)) {
        goto v45;
    }
    if (*reinterpret_cast<signed char*>(&v20 + 2)) 
        goto addr_0x41e0e2_49;
    addr_0x41e100_50:
    goto v46;
    do {
        addr_0x41e0e2_49:
        if (!v47) 
            goto addr_0x41e100_50;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp13)) < reinterpret_cast<unsigned char>(v48)) 
            continue;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp13)) <= reinterpret_cast<unsigned char>(v47)) 
            goto addr_0x41e15f_46;
    } while (v49);
    goto addr_0x41e100_50;
}

struct s57* fun_416a40(void** a1, void** a2) {
    void** ecx3;
    void** eax4;

    ecx3 = a1;
    if (!(reinterpret_cast<unsigned char>(ecx3) & 3)) {
        while (1) {
            addr_0x416a60_2:
            ecx3 = ecx3 + 4;
            if (!((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx3)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ecx3) + 0x7efefeff)) & 0x81010100)) 
                continue;
            eax4 = *reinterpret_cast<void***>(ecx3 + 0xfffffffc);
            if (!*reinterpret_cast<signed char*>(&eax4)) 
                break;
            if (!*reinterpret_cast<signed char*>(&eax4 + 1)) 
                goto addr_0x416aa7_5;
            if (!(reinterpret_cast<unsigned char>(eax4) & 0xff0000)) 
                goto addr_0x416a9d_7;
            if (!(reinterpret_cast<unsigned char>(eax4) & 0xff000000)) 
                goto addr_0x416a93_9;
        }
    } else {
        do {
            ++ecx3;
            if (!*reinterpret_cast<void***>(ecx3)) 
                goto addr_0x416a93_9;
        } while (reinterpret_cast<unsigned char>(ecx3) & 3);
        goto addr_0x416a5b_13;
    }
    return reinterpret_cast<uint32_t>(ecx3 + 0xfffffffc) - reinterpret_cast<unsigned char>(a1);
    addr_0x416aa7_5:
    return reinterpret_cast<uint32_t>(ecx3 + 0xfffffffd) - reinterpret_cast<unsigned char>(a1);
    addr_0x416a9d_7:
    return reinterpret_cast<uint32_t>(ecx3 + 0xfffffffe) - reinterpret_cast<unsigned char>(a1);
    addr_0x416a93_9:
    return reinterpret_cast<unsigned char>(ecx3 + 0xffffffff) - reinterpret_cast<unsigned char>(a1);
    addr_0x416a5b_13:
    goto addr_0x416a60_2;
}

struct s104 {
    signed char[106] pad106;
    unsigned char f106;
};

struct s105 {
    signed char[106] pad106;
    unsigned char f106;
};

int32_t RegEnumKeyExA = 0x328a2;

int32_t fun_41f0e0(void* ecx, int32_t a2, void* a3) {
    int32_t edi4;
    struct s104* eax5;
    struct s105* eax6;
    unsigned char dl7;
    signed char* edx8;
    signed char* edx9;
    int32_t edi10;
    int32_t esi11;
    int32_t ebx12;
    signed char* eax13;

    edi4 = a2;
    if (!(__intrinsic() || (edi4 = edi4, !__intrinsic()))) {
        __asm__("arpl [ebp+0x4d8df445], cx");
    }
    eax5->f106 = reinterpret_cast<unsigned char>(eax6->f106 | dl7);
    *edx8 = reinterpret_cast<signed char>(*edx9 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax13 = reinterpret_cast<signed char*>(RegEnumKeyExA(edi4, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x310, ecx, 0, edi10, esi11, ebx12));
    if (__intrinsic() || !__intrinsic()) {
    }
    *eax13 = reinterpret_cast<signed char>(*eax13 + *reinterpret_cast<signed char*>(&eax13));
}

struct s106 {
    signed char f0;
    signed char f1;
};

signed char* fun_415450(uint32_t ecx, signed char* a2, signed char a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7) {
    signed char* edi8;
    uint32_t ecx9;
    int32_t ecx10;
    struct s106* edi11;
    signed char al12;
    signed char* edi13;
    signed char* eax14;

    edi8 = a2;
    ecx9 = 0xffffffff;
    do {
        if (!ecx9) 
            break;
        --ecx9;
        ++edi8;
    } while (*edi8);
    ecx10 = reinterpret_cast<int32_t>(-(ecx9 + 1));
    edi11 = reinterpret_cast<struct s106*>(edi8 - 1);
    al12 = a3;
    do {
        if (!ecx10) 
            break;
        --ecx10;
        edi11 = reinterpret_cast<struct s106*>(reinterpret_cast<int32_t>(edi11) - 1);
    } while (edi11->f0 != al12);
    edi13 = &edi11->f1;
    if (*edi13 == al12) {
        eax14 = edi13;
    } else {
        eax14 = reinterpret_cast<signed char*>(0);
    }
    return eax14;
}

void** fun_41fbf0(void** a1, void** a2, uint32_t a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** esi8;
    void** esi9;
    void** v10;
    void** edi11;
    void** edi12;
    uint32_t ebx13;
    void** ebp14;
    void** ecx15;

    v7 = esi8;
    esi9 = a4;
    v10 = edi11;
    if (reinterpret_cast<unsigned char>(esi9) >= reinterpret_cast<unsigned char>(a5)) {
        return 0;
    }
    edi12 = a6;
    ebx13 = a3;
    ebp14 = a2;
    do {
        fun_411eb0(ecx15, a1, esi9, 40, edi12, v10, v7);
        ecx15 = reinterpret_cast<void**>(ebx13 & reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi12 + 36)));
        if (ecx15 == ebp14) 
            break;
        esi9 = esi9 + 40;
    } while (reinterpret_cast<unsigned char>(esi9) < reinterpret_cast<unsigned char>(a5));
    goto addr_0x41fc33_6;
    return esi9;
    addr_0x41fc33_6:
    return 0;
}

void** fun_41fc50(void** a1, struct s92* a2, void** a3, void** a4, void** a5) {
    void** ebp6;
    void** v7;
    void** esi8;
    void*** esp9;
    void** v10;
    void** edi11;
    void** edi12;
    struct s92* ebx13;
    void** ecx14;
    struct s92* esi15;
    void* eax16;
    uint1_t cf17;
    unsigned char v18;
    uint1_t cf19;
    uint32_t eax20;
    uint32_t eax21;

    ebp6 = a3;
    v7 = esi8;
    esp9 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4 - 4 - 4 - 4);
    v10 = edi11;
    if (reinterpret_cast<unsigned char>(ebp6) >= reinterpret_cast<unsigned char>(a4)) {
        return 0;
    }
    edi12 = a5;
    ebx13 = a2;
    do {
        fun_411eb0(ecx14, a1, ebp6, 40, edi12, v10, v7);
        esp9 = esp9 - 4 - 4 - 4 - 4 - 4 + 4 + 16;
        ecx14 = reinterpret_cast<void**>(0);
        esi15 = ebx13;
        eax16 = reinterpret_cast<void*>(esp9 + 16);
        do {
            *reinterpret_cast<unsigned char*>(&ecx14) = 0;
            cf17 = reinterpret_cast<uint1_t>(0 < esi15->f0);
            if (esi15->f0) 
                break;
            if (1) 
                goto addr_0x41fcc1_7;
            *reinterpret_cast<unsigned char*>(&ecx14) = v18;
            cf17 = reinterpret_cast<uint1_t>(v18 < esi15->f1);
            if (v18 != esi15->f1) 
                break;
            eax16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax16) + 2);
            ++esi15;
        } while (*reinterpret_cast<unsigned char*>(&ecx14));
        goto addr_0x41fcc1_7;
        cf19 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax16) < reinterpret_cast<uint32_t>(eax16) + cf17);
        eax20 = reinterpret_cast<uint32_t>(eax16) - (reinterpret_cast<uint32_t>(eax16) + cf19);
        eax21 = eax20 - (1 - reinterpret_cast<uint1_t>(eax20 < 1 - cf19));
        addr_0x41fcca_11:
        if (!eax21) 
            break; else 
            continue;
        addr_0x41fcc1_7:
        eax21 = 0;
        goto addr_0x41fcca_11;
        ebp6 = ebp6 + 40;
    } while (reinterpret_cast<unsigned char>(ebp6) < reinterpret_cast<unsigned char>(a4));
    goto addr_0x41fcd9_13;
    return ebp6;
    addr_0x41fcd9_13:
    return 0;
}

int32_t g4313a8;

void** fun_41dde0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** esi8;
    void** edi9;
    int1_t zf10;
    int1_t less_or_equal11;
    void** ebx12;
    void** esi13;
    void** edi14;
    void** ebp15;
    void** v16;
    void** eax17;
    void** ebx18;
    void** eax19;
    int32_t eax20;
    void** al21;
    void* al22;
    void* cl23;
    void* al24;
    void** eax25;
    uint1_t cf26;
    void* eax27;
    uint1_t cf28;
    void* al29;

    esi8 = a3;
    edi9 = a2;
    zf10 = g42ed50 == 0;
    if (!zf10) {
        ++g4313a8;
        less_or_equal11 = g4313a4 <= 0;
        if (!less_or_equal11) {
            --g4313a8;
            fun_417120(ecx, 19, ebx12, esi13, edi14, ebp15, __return_address(), a2, a3, a4, a5, a6, a7);
            v16 = reinterpret_cast<void**>(1);
        } else {
            v16 = reinterpret_cast<void**>(0);
        }
        eax17 = reinterpret_cast<void**>(0xff);
        ebx18 = reinterpret_cast<void**>(0);
        do {
            eax17 = eax17;
            if (!eax17) 
                break;
            eax17 = *reinterpret_cast<void***>(esi8);
            ++esi8;
            ebx18 = *reinterpret_cast<void***>(edi9);
            ++edi9;
        } while (eax17 == ebx18 || (eax19 = fun_414fc0(ecx, ebx18, eax17), ebx18 = eax19, eax17 = fun_414fc0(ecx, eax17, v16), ebx18 == eax17));
        goto addr_0x41de8a_8;
    } else {
        eax20 = 0x42edff;
        do {
            al21 = *reinterpret_cast<void***>(&eax20);
            if (!al21) 
                goto addr_0x41de2e_11;
            *reinterpret_cast<void***>(&eax20) = *reinterpret_cast<void***>(esi8);
            ++esi8;
            ++edi9;
        } while (*reinterpret_cast<void***>(edi9) == *reinterpret_cast<void***>(&eax20) || (al22 = reinterpret_cast<void*>(*reinterpret_cast<void***>(&eax20) - 65), cl23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al22) < 26))))) & 32), al24 = reinterpret_cast<void*>(*reinterpret_cast<void***>(edi9) - 65), *reinterpret_cast<void**>(&ecx) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl23) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl23) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(cl23) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl23) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al24) < 26))))) & 32), *reinterpret_cast<void***>(&eax20) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx))) + 65), *reinterpret_cast<void***>(&eax20) == reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al22) + reinterpret_cast<unsigned char>(cl23)) + 65));
        goto addr_0x41de2a_13;
    }
    addr_0x41de8f_14:
    if (v16) {
        fun_4171a0(19);
    } else {
        --g4313a8;
    }
    eax25 = eax17;
    addr_0x41deab_18:
    return eax25;
    addr_0x41de8a_8:
    cf26 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax17) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax17) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ebx18) < reinterpret_cast<unsigned char>(eax17))));
    eax27 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax17) - (reinterpret_cast<unsigned char>(eax17) + cf26));
    eax17 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax27) - (1 - reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax27) < 1 - cf26)));
    goto addr_0x41de8f_14;
    addr_0x41de2e_11:
    eax25 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(al21)));
    goto addr_0x41deab_18;
    addr_0x41de2a_13:
    cf28 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax20)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax20)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax20)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al22) + reinterpret_cast<unsigned char>(cl23)) + 65))));
    al29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax20)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax20)) + cf28));
    al21 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(al29) - reinterpret_cast<unsigned char>(1 - reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al29) < reinterpret_cast<unsigned char>(1 - cf28))));
    goto addr_0x41de2e_11;
}

void** fun_416ac0(void** a1, void** a2) {
    void** dl3;
    void** edi4;
    void** dh5;
    uint32_t eax6;
    uint32_t ebx7;
    uint32_t eax8;
    void** edx9;
    uint32_t ebx10;
    uint32_t ebx11;
    uint32_t ecx12;
    void* esi13;
    void** eax14;
    uint32_t eax15;
    uint32_t eax16;
    void** al17;
    void** esi18;
    void** ecx19;

    dl3 = *reinterpret_cast<void***>(a2);
    edi4 = a1;
    if (!dl3) {
        return edi4;
    }
    dh5 = *reinterpret_cast<void***>(a2 + 1);
    if (dh5) 
        goto addr_0x416ad8_4;
    eax6 = 0;
    *reinterpret_cast<void***>(&eax6) = dl3;
    ebx7 = eax6;
    eax8 = eax6 << 8;
    edx9 = a1;
    if (reinterpret_cast<unsigned char>(edx9) & 3) 
        goto addr_0x4154a8_7;
    addr_0x4154bb_8:
    ebx10 = ebx7 | eax8;
    ebx11 = ebx10 << 16 | ebx10;
    while (1) {
        ecx12 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx9)) ^ ebx11;
        esi13 = reinterpret_cast<void*>(*reinterpret_cast<void***>(edx9) + 0x7efefeff);
        edx9 = edx9 + 4;
        if ((ecx12 ^ 0xffffffff ^ 0x7efefeff + ecx12) & 0x81010100) {
            eax14 = *reinterpret_cast<void***>(edx9 + 0xfffffffc);
            if (*reinterpret_cast<signed char*>(&eax14) == *reinterpret_cast<signed char*>(&ebx11)) 
                break;
            if (!*reinterpret_cast<signed char*>(&eax14)) 
                goto addr_0x415502_12;
            if (*reinterpret_cast<signed char*>(&eax14 + 1) == *reinterpret_cast<signed char*>(&ebx11)) 
                goto addr_0x41553e_14;
            if (!*reinterpret_cast<signed char*>(&eax14 + 1)) 
                goto addr_0x415502_12;
            eax15 = reinterpret_cast<unsigned char>(eax14) >> 16;
            if (*reinterpret_cast<signed char*>(&eax15) == *reinterpret_cast<signed char*>(&ebx11)) 
                goto addr_0x415537_17;
            if (!*reinterpret_cast<signed char*>(&eax15)) 
                goto addr_0x415502_12;
            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax15) + 1) == *reinterpret_cast<signed char*>(&ebx11)) 
                goto addr_0x415530_20;
            if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax15) + 1)) 
                goto addr_0x415502_12;
        } else {
            eax16 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx9)) ^ 0xffffffff ^ reinterpret_cast<uint32_t>(esi13)) & 0x81010100;
            if (!eax16) 
                continue;
            if (eax16 & 0x1010100) 
                goto addr_0x415502_12;
            if (!(reinterpret_cast<uint32_t>(esi13) & 0x80000000)) 
                goto addr_0x415502_12;
        }
    }
    return edx9 + 0xfffffffc;
    addr_0x415502_12:
    addr_0x415504_27:
    return 0;
    addr_0x41553e_14:
    return edx9 + 0xfffffffd;
    addr_0x415537_17:
    return edx9 + 0xfffffffe;
    addr_0x415530_20:
    return edx9 + 0xffffffff;
    do {
        addr_0x4154a8_7:
        ++edx9;
        if (*reinterpret_cast<void***>(edx9) == *reinterpret_cast<void***>(&ebx7)) 
            break;
        if (!*reinterpret_cast<void***>(edx9)) 
            goto addr_0x415504_27;
    } while (reinterpret_cast<unsigned char>(edx9) & 3);
    goto addr_0x4154bb_8;
    return edx9 + 0xffffffff;
    addr_0x416af4_31:
    return 0;
    addr_0x416b33_32:
    return edi4 + 0xffffffff;
    while (1) {
        addr_0x416aec_33:
        if (al17 == dl3) {
            do {
                al17 = *reinterpret_cast<void***>(esi18);
                ++esi18;
                if (al17 != dh5) 
                    goto addr_0x416aec_33;
                edi4 = esi18 + 0xffffffff;
                do {
                    if (!*reinterpret_cast<void***>(ecx19 + 2)) 
                        goto addr_0x416b33_32;
                    esi18 = esi18 + 2;
                    if (*reinterpret_cast<void***>(esi18) != *reinterpret_cast<void***>(ecx19 + 2)) 
                        goto addr_0x416ad8_4;
                    if (!*reinterpret_cast<void***>(ecx19 + 3)) 
                        goto addr_0x416b33_32;
                    ecx19 = ecx19 + 2;
                } while (*reinterpret_cast<void***>(ecx19 + 3) == *reinterpret_cast<void***>(esi18 + 0xffffffff));
                addr_0x416ad8_4:
                ecx19 = a2;
                esi18 = edi4 + 1;
            } while (*reinterpret_cast<void***>(edi4) == dl3);
            if (!*reinterpret_cast<void***>(edi4)) 
                goto addr_0x416af4_31;
        } else {
            if (!al17) 
                goto addr_0x416af4_31;
        }
        al17 = *reinterpret_cast<void***>(esi18);
        ++esi18;
    }
}

void** fun_411ba0(void** a1, void** a2) {
    void** ebx3;
    void** eax4;
    void** esi5;
    int32_t ecx6;
    void** edi7;
    void** eax8;
    void** ax9;

    ebx3 = a1;
    eax4 = fun_411c30(ebx3);
    if (eax4) {
        return eax4;
    }
    esi5 = reinterpret_cast<void**>(0x42e5e8);
    do {
        if (!*reinterpret_cast<void***>(esi5)) 
            break;
        esi5 = esi5 + 0xcc;
    } while (reinterpret_cast<unsigned char>(esi5) < reinterpret_cast<unsigned char>(0x42e9e4));
    goto addr_0x411bcd_6;
    ecx6 = 51;
    edi7 = esi5;
    while (ecx6) {
        --ecx6;
        *reinterpret_cast<void***>(edi7) = reinterpret_cast<void**>(0);
        edi7 = edi7 + 4;
        esi5 = esi5 + 4;
    }
    *reinterpret_cast<void***>(esi5) = reinterpret_cast<void**>(1);
    eax8 = esi5 + 4;
    *reinterpret_cast<void***>(esi5 + 4) = *reinterpret_cast<void***>(ebx3);
    *reinterpret_cast<void***>(eax8 + 4) = *reinterpret_cast<void***>(ebx3 + 4);
    *reinterpret_cast<void***>(eax8 + 8) = *reinterpret_cast<void***>(ebx3 + 8);
    *reinterpret_cast<void***>(esi5 + 16) = a2;
    ax9 = fun_412c10(esi5 + 20);
    if (ax9) {
        return esi5;
    } else {
        *reinterpret_cast<void***>(esi5) = ax9;
        return 0;
    }
    addr_0x411bcd_6:
    return 0;
}

int32_t DeviceIoControl = 0x326d2;

uint32_t fun_414818() {
    int32_t v1;
    uint32_t eax2;
    uint32_t v3;
    int16_t v4;
    void** ecx5;
    void** edx6;

    eax2 = fun_4147cc(v1);
    v3 = eax2;
    if (v3 != 0xffffffff) {
        v4 = 1;
        ecx5 = g42ec30;
        edx6 = g42ec30;
        eax2 = reinterpret_cast<uint32_t>(DeviceIoControl(v3, 0xef002407, edx6, 0x514, ecx5 + 0x514, 0x610, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 8, 0));
        if (!eax2) {
            v4 = 0;
        }
        if (v3) {
            CloseHandle(v3, v3, 0xef002407, edx6, 0x514, ecx5 + 0x514, 0x610, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 8, 0);
        }
        *reinterpret_cast<int16_t*>(&eax2) = v4;
    } else {
        *reinterpret_cast<int16_t*>(&eax2) = 0;
    }
    return eax2;
}

struct s107 {
    uint32_t f0;
    uint32_t f4;
    uint32_t f8;
    uint32_t f12;
    signed char[1024] pad1040;
    void** f1040;
};

struct s107* fun_414760(struct s107* a1);

uint32_t fun_414a3f(uint32_t* ecx, void** a2, void** a3, uint32_t* a4) {
    void** eax5;
    struct s107* eax6;
    uint32_t eax7;
    uint32_t eax8;

    eax5 = g42ec30;
    eax6 = fun_414760(eax5 + 0x514);
    if (reinterpret_cast<uint32_t>(eax6) & 0xffff) {
        eax7 = fun_414992(reinterpret_cast<uint32_t>(eax5 + 0x514) + 12, a4);
        if (eax7 & 0xffff) {
            fun_416b40(a2, reinterpret_cast<uint32_t>(eax5 + 0x514) + 0x410, a3);
            eax8 = 0x6e;
        } else {
            eax8 = 0x70;
        }
    } else {
        eax8 = 0x6f;
    }
    return eax8;
}

uint32_t g42e5cc;

struct s108 {
    signed char[2] pad2;
    int16_t f2;
};

struct s109 {
    int16_t f0;
    int16_t f2;
};

int32_t fun_40faa0(unsigned char* a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10, int32_t a11, int32_t a12, int32_t a13, int32_t a14, int32_t a15, int32_t a16, int32_t a17, int32_t a18, int32_t a19, int32_t a20, int32_t a21, int32_t a22, int32_t a23, int32_t a24, int32_t a25, int32_t a26, int32_t a27, int32_t a28, int32_t a29, int32_t a30, int32_t a31, int32_t a32, int32_t a33, int32_t a34, int32_t a35, int32_t a36, int32_t a37, int32_t a38, int32_t a39, int32_t a40, int32_t a41, int32_t a42, int32_t a43, int32_t a44, int16_t a45) {
    unsigned char* esi46;
    void* esp47;
    unsigned char* ecx48;
    int1_t of49;
    int1_t of50;
    void* esp51;
    int1_t sf52;
    int1_t sf53;
    int1_t cf54;
    int1_t cf55;
    void* esp56;
    int1_t less_or_equal57;
    int1_t less_or_equal58;
    int1_t of59;
    int1_t of60;
    void* esp61;
    int32_t eax62;
    int1_t sf63;
    int1_t sf64;
    void* esp65;
    int1_t cf66;
    int1_t cf67;
    int1_t less_or_equal68;
    int1_t less_or_equal69;
    void* esp70;
    int1_t of71;
    int1_t of72;
    void* esp73;
    int1_t sf74;
    int1_t sf75;
    int1_t cf76;
    int1_t cf77;
    int1_t less_or_equal78;
    int1_t less_or_equal79;
    int1_t of80;
    int1_t of81;
    void* esp82;
    int1_t sf83;
    int1_t sf84;
    void* esp85;
    int1_t cf86;
    int1_t cf87;
    void* esp88;
    int1_t less_or_equal89;
    int1_t less_or_equal90;
    int1_t of91;
    int1_t of92;
    void* esp93;
    int1_t sf94;
    int1_t sf95;
    void* esp96;
    int1_t cf97;
    int1_t cf98;
    void* esp99;
    int1_t less_or_equal100;
    int1_t less_or_equal101;
    void* esp102;
    int1_t of103;
    int1_t of104;
    void* esp105;
    int32_t ebx106;
    int1_t sf107;
    int1_t sf108;
    void* esp109;
    int1_t cf110;
    int1_t cf111;
    int1_t less_or_equal112;
    int1_t less_or_equal113;
    void* esp114;
    int1_t of115;
    int1_t of116;
    void* esp117;
    int1_t sf118;
    int1_t sf119;
    int1_t cf120;
    int1_t sf121;
    int1_t of122;
    uint1_t less_or_equal123;
    void* esp124;
    void* esp125;
    void* esp126;
    void* esp127;
    void* esp128;
    void* esp129;
    void* esp130;
    void* esp131;
    void* esp132;
    void* esp133;
    void* esp134;
    void* esp135;
    void* esp136;
    void* esp137;
    void* esp138;
    void* esp139;
    void* esp140;
    void* esp141;
    void* esp142;
    void* esp143;
    void* esp144;
    void* esp145;
    void* esp146;
    void* esp147;
    void* esp148;
    void* esp149;
    void* esp150;
    void* esp151;
    void* esp152;
    void* esp153;
    void* esp154;
    void* esp155;
    void* esp156;
    void* esp157;
    void* esp158;
    void* esp159;
    void* esp160;
    void* esp161;
    void* esp162;
    void* esp163;
    void* esp164;
    void* esp165;
    void* esp166;
    void* esp167;
    void* esp168;
    void* esp169;
    uint32_t eax170;
    int32_t ecx171;
    int1_t sf172;
    int1_t of173;
    uint1_t less_or_equal174;
    void* esp175;
    void* esp176;
    void* esp177;
    void* esp178;
    void* esp179;
    void* esp180;
    void* esp181;
    void* esp182;
    void* esp183;
    void* esp184;
    void* esp185;
    void* esp186;
    void* esp187;
    void* esp188;
    void* esp189;
    void* esp190;
    void* esp191;
    void* esp192;
    void* esp193;
    void* esp194;
    void* esp195;
    void* esp196;
    void* esp197;
    void* esp198;
    void* esp199;
    void* esp200;
    void* esp201;
    void* esp202;
    void* esp203;
    void* esp204;
    void* esp205;
    void* esp206;
    void* esp207;
    void* esp208;
    void* esp209;
    void* esp210;
    void* esp211;
    int1_t cf212;
    int1_t sf213;
    int1_t of214;
    uint1_t less_or_equal215;
    void* esp216;
    void* esp217;
    void* esp218;
    void* esp219;
    void* esp220;
    void* esp221;
    void* esp222;
    void* esp223;
    void* esp224;
    void* esp225;
    void* esp226;
    void* esp227;
    void* esp228;
    void* esp229;
    void* esp230;
    void* esp231;
    void* esp232;
    void* esp233;
    void* esp234;
    void* esp235;
    void* esp236;
    void* esp237;
    void* esp238;
    void* esp239;
    void* esp240;
    void* esp241;
    void* esp242;
    void* esp243;
    void* esp244;
    void* esp245;
    void* esp246;
    void* esp247;
    void* esp248;
    void* esp249;
    struct s108* esp250;
    struct s109* esp251;
    int16_t es252;
    int16_t* esp253;
    void* esp254;
    void* esp255;
    void* esp256;
    void* esp257;
    void* esp258;
    unsigned char* edi259;

    esi46 = a1;
    esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4);
    ecx48 = esi46;
    do {
    } while (!of49 && of50);
    esp51 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp47) + 2);
    while (!sf52 && sf53) {
    }
    while (cf54 && !cf55) {
    }
    esp56 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp51) + 2);
    while (less_or_equal57 && !less_or_equal58) {
    }
    while (!of59 && of60) {
    }
    esp61 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp56) + 2);
    while ((eax62 = eax62, !sf63) && sf64) {
    }
    esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp61) + 2);
    while ((esi46 = esi46, cf66) && !cf67) {
    }
    while (less_or_equal68 && !less_or_equal69) {
    }
    esp70 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) + 2);
    while (!of71 && of72) {
    }
    esp73 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp70) + 2);
    while ((eax62 = eax62, !sf74) && sf75) {
    }
    while (cf76 && !cf77) {
    }
    while (less_or_equal78 && !less_or_equal79) {
    }
    while (!of80 && of81) {
    }
    esp82 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp73) + 2);
    while ((esi46 = esi46, !sf83) && sf84) {
    }
    esp85 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp82) + 2);
    while (cf86 && !cf87) {
    }
    esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp85) + 2);
    while (less_or_equal89 && !less_or_equal90) {
    }
    do {
    } while (!of91 && of92);
    esp93 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp88) + 2);
    while ((ecx48 = ecx48, !sf94) && sf95) {
    }
    esp96 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp93) + 2);
    while ((esi46 = esi46, cf97) && !cf98) {
    }
    esp99 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp96) + 2);
    while ((esi46 = esi46, less_or_equal100) && !less_or_equal101) {
    }
    esp102 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp99) + 2);
    while (!of103 && of104) {
    }
    esp105 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp102) + 2);
    while ((ebx106 = ebx106, !sf107) && sf108) {
    }
    esp109 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp105) + 2);
    while ((eax62 = eax62, cf110) && !cf111) {
    }
    do {
        esi46 = esi46;
    } while (less_or_equal112 && !less_or_equal113);
    esp114 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp109) + 2);
    while ((esi46 = esi46, !of115) && of116) {
    }
    esp117 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp114) + 2);
    while ((eax62 = eax62, !sf118) && sf119) {
    }
    __asm__("in eax, 0x42");
    *reinterpret_cast<unsigned char*>(&ebx106) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx106) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx48) + 1));
    cf120 = __intrinsic();
    sf121 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&ebx106)) < reinterpret_cast<signed char>(0);
    of122 = __intrinsic();
    less_or_equal123 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf121 != of122) | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ebx106) == 0));
    esp124 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp117) + 2);
    while (cf120 && !cf120) {
    }
    esp125 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp124) + 2);
    while ((eax62 = eax62, less_or_equal123) && !less_or_equal123) {
    }
    esp126 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp125) + 2);
    while (!of122 && of122) {
    }
    esp127 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp126) + 2);
    while (!sf121 && sf121) {
    }
    esp128 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp127) + 2);
    while (cf120 && !cf120) {
    }
    while (less_or_equal123 && !less_or_equal123) {
    }
    esp129 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp128) + 2);
    while (!of122 && of122) {
    }
    esp130 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp129) + 2);
    while (!sf121 && sf121) {
    }
    esp131 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp130) + 2);
    while (cf120 && !cf120) {
    }
    esp132 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp131) + 2);
    while (less_or_equal123 && !less_or_equal123) {
    }
    esp133 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp132) + 2);
    while (!of122 && of122) {
    }
    esp134 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp133) + 2);
    while (!sf121 && sf121) {
    }
    esp135 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp134) + 2);
    while ((eax62 = eax62, cf120) && !cf120) {
    }
    esp136 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp135) + 2);
    while (less_or_equal123 && !less_or_equal123) {
    }
    esp137 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp136) + 2);
    while ((eax62 = eax62, !of122) && of122) {
    }
    esp138 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp137) + 2);
    while (!sf121 && sf121) {
    }
    esp139 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp138) + 2);
    while ((esi46 = esi46, cf120) && !cf120) {
    }
    esp140 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp139) + 2);
    while (less_or_equal123 && !less_or_equal123) {
    }
    while (!of122 && of122) {
    }
    esp141 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp140) + 2);
    while (!sf121 && sf121) {
    }
    esp142 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp141) + 2);
    while (cf120 && !cf120) {
    }
    esp143 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp142) + 2);
    while ((ecx48 = ecx48, less_or_equal123) && !less_or_equal123) {
    }
    esp144 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp143) + 2);
    while ((esi46 = esi46, !of122) && of122) {
    }
    while (!sf121 && sf121) {
    }
    esp145 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp144) + 2);
    while (cf120 && !cf120) {
    }
    esp146 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp145) + 2);
    while ((ecx48 = ecx48, less_or_equal123) && !less_or_equal123) {
    }
    esp147 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp146) + 2);
    while ((ecx48 = ecx48, !of122) && of122) {
    }
    esp148 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp147) + 2);
    while (!sf121 && sf121) {
    }
    esp149 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp148) + 2);
    while ((eax62 = eax62, cf120) && !cf120) {
    }
    esp150 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp149) + 2);
    while (less_or_equal123 && !less_or_equal123) {
    }
    esp151 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp150) + 2);
    while ((ecx48 = ecx48, !of122) && of122) {
    }
    esp152 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp151) + 2);
    while ((eax62 = eax62, !sf121) && sf121) {
    }
    esp153 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp152) + 2);
    while (cf120 && !cf120) {
    }
    while (less_or_equal123 && !less_or_equal123) {
    }
    esp154 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp153) + 2);
    while (!of122 && of122) {
    }
    esp155 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp154) + 2);
    while (!sf121 && sf121) {
    }
    esp156 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp155) + 2);
    while (cf120 && !cf120) {
    }
    esp157 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp156) + 2);
    while ((ecx48 = ecx48, less_or_equal123) && !less_or_equal123) {
    }
    while ((ecx48 = ecx48, !of122) && of122) {
    }
    esp158 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp157) + 2);
    while (!sf121 && sf121) {
    }
    esp159 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp158) + 2);
    while ((ecx48 = ecx48, cf120) && !cf120) {
    }
    do {
    } while (less_or_equal123 && !less_or_equal123);
    while (!of122 && of122) {
    }
    esp160 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp159) + 2);
    while ((esi46 = esi46, !sf121) && sf121) {
    }
    esp161 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp160) + 2);
    while (cf120 && !cf120) {
    }
    esp162 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp161) + 2);
    while ((eax62 = eax62, less_or_equal123) && !less_or_equal123) {
    }
    esp163 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp162) + 2);
    while (!of122 && of122) {
    }
    while (!sf121 && sf121) {
    }
    esp164 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp163) + 2);
    while ((eax62 = eax62, cf120) && !cf120) {
    }
    esp165 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp164) + 2);
    while ((ecx48 = ecx48, less_or_equal123) && !less_or_equal123) {
    }
    esp166 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp165) + 2);
    while (!of122 && of122) {
    }
    esp167 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp166) + 2);
    while (!sf121 && sf121) {
    }
    do {
    } while (cf120 && !cf120);
    esp168 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp167) + 2);
    while (less_or_equal123 && !less_or_equal123) {
    }
    esp169 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp168) + 2);
    while (!of122 && of122) {
    }
    eax170 = reinterpret_cast<uint32_t>(eax62 * 0x35e85a6d + 0x361962e9);
    g42e5cc = eax170;
    *ecx48 = reinterpret_cast<unsigned char>(*ecx48 ^ *reinterpret_cast<unsigned char*>(&eax170));
    ecx171 = reinterpret_cast<int32_t>(ecx48 + 1);
    sf172 = ecx171 < 0;
    of173 = __intrinsic();
    less_or_equal174 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf172 != of173) | reinterpret_cast<uint1_t>(ecx171 == 0));
    do {
        esi46 = esi46;
    } while (!sf172 && sf172);
    esp175 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp169) + 2);
    while ((esi46 = esi46, !1) && !0) {
    }
    esp176 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp175) + 2);
    while ((eax170 = eax170, less_or_equal174) && !less_or_equal174) {
    }
    __asm__("cdq ");
    do {
        ecx171 = ecx171;
    } while (!of173 && of173);
    esp177 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp176) + 2);
    while (!sf172 && sf172) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal174 && !less_or_equal174) {
    }
    esp178 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp177) + 2);
    while ((ecx171 = ecx171, !of173) && of173) {
    }
    while (!sf172 && sf172) {
    }
    esp179 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp178) + 2);
    while (!1 && !0) {
    }
    esp180 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp179) + 2);
    while ((eax170 = eax170, less_or_equal174) && !less_or_equal174) {
    }
    while (!of173 && of173) {
    }
    esp181 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp180) + 2);
    while (!sf172 && sf172) {
    }
    esp182 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp181) + 2);
    while (!1 && !0) {
    }
    while (less_or_equal174 && !less_or_equal174) {
    }
    esp183 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp182) + 2);
    while (!of173 && of173) {
    }
    esp184 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp183) + 2);
    while (!sf172 && sf172) {
    }
    while ((ecx171 = ecx171, !1) && !0) {
    }
    esp185 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp184) + 2);
    while ((ecx171 = ecx171, less_or_equal174) && !less_or_equal174) {
    }
    esp186 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp185) + 2);
    while ((ecx171 = ecx171, !of173) && of173) {
    }
    esp187 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp186) + 2);
    while (!sf172 && sf172) {
    }
    esp188 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp187) + 2);
    while (!1 && !0) {
    }
    while (less_or_equal174 && !less_or_equal174) {
    }
    while (!of173 && of173) {
    }
    esp189 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp188) + 2);
    while (!sf172 && sf172) {
    }
    esp190 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp189) + 2);
    while ((esi46 = esi46, !1) && !0) {
    }
    do {
        ecx171 = ecx171;
    } while (less_or_equal174 && !less_or_equal174);
    esp191 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp190) + 2);
    while (!of173 && of173) {
    }
    esp192 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp191) + 2);
    while ((esi46 = esi46, !sf172) && sf172) {
    }
    while (!1 && !0) {
    }
    esp193 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp192) + 2);
    while (less_or_equal174 && !less_or_equal174) {
    }
    esp194 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp193) + 2);
    while (!of173 && of173) {
    }
    esp195 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp194) + 2);
    while (!sf172 && sf172) {
    }
    esp196 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp195) + 2);
    while (!1 && !0) {
    }
    esp197 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp196) + 2);
    while ((eax170 = eax170, less_or_equal174) && !less_or_equal174) {
    }
    esp198 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp197) + 2);
    while ((esi46 = esi46, !of173) && of173) {
    }
    esp199 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp198) + 2);
    while (!sf172 && sf172) {
    }
    esp200 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp199) + 2);
    while (!1 && !0) {
    }
    while (less_or_equal174 && !less_or_equal174) {
    }
    esp201 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp200) + 2);
    while ((ecx171 = ecx171, !of173) && of173) {
    }
    while (!sf172 && sf172) {
    }
    do {
    } while (!1 && !0);
    while (less_or_equal174 && !less_or_equal174) {
    }
    while (!of173 && of173) {
    }
    esp202 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp201) + 2);
    while ((ecx171 = ecx171, !sf172) && sf172) {
    }
    esp203 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp202) + 2);
    while (!1 && !0) {
    }
    esp204 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp203) + 2);
    while (less_or_equal174 && !less_or_equal174) {
    }
    esp205 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp204) + 2);
    while ((ecx171 = ecx171, !of173) && of173) {
    }
    esp206 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp205) + 2);
    while ((esi46 = esi46, !sf172) && sf172) {
    }
    esp207 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp206) + 2);
    while (!1 && !0) {
    }
    while ((eax170 = eax170, less_or_equal174) && !less_or_equal174) {
    }
    esp208 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp207) + 2);
    while ((eax170 = eax170, !of173) && of173) {
    }
    esp209 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp208) + 2);
    while ((esi46 = esi46, !sf172) && sf172) {
    }
    while (!1 && !0) {
    }
    esp210 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp209) + 2);
    while ((esi46 = esi46, less_or_equal174) && !less_or_equal174) {
    }
    __asm__("lds eax, [ebx+0x8b04c0]");
    esp211 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp210) + (eax170 >> 31 << 4));
    cf212 = __intrinsic();
    sf213 = reinterpret_cast<int32_t>(esp211) < reinterpret_cast<int32_t>(0);
    of214 = __intrinsic();
    less_or_equal215 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf213 != of214) | reinterpret_cast<uint1_t>(esp211 == 0));
    esp216 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp211) + 4);
    do {
    } while (!of214 && of214);
    while (!sf213 && sf213) {
    }
    do {
    } while (cf212 && !cf212);
    esp217 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp216) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp218 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp217) + 2);
    while (!of214 && of214) {
    }
    esp219 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp218) + 2);
    while (!sf213 && sf213) {
    }
    esp220 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp219) + 2);
    while ((esi46 = esi46, cf212) && !cf212) {
    }
    esp221 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp220) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp222 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp221) + 2);
    while ((ecx171 = ecx171, !of214) && of214) {
    }
    esp223 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp222) + 2);
    while ((esi46 = esi46, !sf213) && sf213) {
    }
    esp224 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp223) + 2);
    while (cf212 && !cf212) {
    }
    esp225 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp224) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp226 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp225) + 2);
    while (!of214 && of214) {
    }
    while (!sf213 && sf213) {
    }
    esp227 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp226) + 2);
    while (cf212 && !cf212) {
    }
    esp228 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp227) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp229 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp228) + 2);
    while ((ecx171 = ecx171, !of214) && of214) {
    }
    while (!sf213 && sf213) {
    }
    esp230 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp229) + 2);
    while (cf212 && !cf212) {
    }
    do {
    } while (less_or_equal215 && !less_or_equal215);
    esp231 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp230) + 2);
    while (!of214 && of214) {
    }
    esp232 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp231) + 2);
    while (!sf213 && sf213) {
    }
    esp233 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp232) + 2);
    while (cf212 && !cf212) {
    }
    esp234 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp233) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp235 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp234) + 2);
    while (!of214 && of214) {
    }
    esp236 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp235) + 2);
    while ((ecx171 = ecx171, !sf213) && sf213) {
    }
    do {
    } while (cf212 && !cf212);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp237 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp236) + 2);
    while ((ecx171 = ecx171, !of214) && of214) {
    }
    while (!sf213 && sf213) {
    }
    esp238 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp237) + 2);
    while (cf212 && !cf212) {
    }
    esp239 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp238) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp240 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp239) + 2);
    while (!of214 && of214) {
    }
    esp241 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp240) + 2);
    while (!sf213 && sf213) {
    }
    esp242 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp241) + 2);
    while ((ecx171 = ecx171, cf212) && !cf212) {
    }
    esp243 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp242) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp244 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp243) + 2);
    while ((ecx171 = ecx171, !of214) && of214) {
    }
    esp245 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp244) + 2);
    while (!sf213 && sf213) {
    }
    esp246 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp245) + 2);
    while (cf212 && !cf212) {
    }
    esp247 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp246) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp248 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp247) + 2);
    while (!of214 && of214) {
    }
    esp249 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp248) + 2);
    while ((esi46 = esi46, !sf213) && sf213) {
    }
    esp250 = reinterpret_cast<struct s108*>(reinterpret_cast<uint32_t>(esp249) + 2);
    while (cf212 && !cf212) {
    }
    esp251 = reinterpret_cast<struct s109*>(&esp250->f2);
    while ((esi46 = esi46, less_or_equal215) && !less_or_equal215) {
    }
    do {
    } while (!of214 && of214);
    es252 = esp251->f0;
    esp253 = &esp251->f2;
    while ((ecx171 = ecx171, !sf213) && sf213) {
    }
    while (--esp253, *esp253 = es252, !cf212) {
    }
    esp254 = reinterpret_cast<void*>(esp253 + 1);
    while (less_or_equal215 && !less_or_equal215) {
    }
    esp255 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp254) + 2);
    while ((esi46 = esi46, !of214) && of214) {
    }
    esp256 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp255) + 2);
    while (!sf213 && sf213) {
    }
    esp257 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp256) + 2);
    while (cf212 && !cf212) {
    }
    esp258 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp257) + 2);
    while (less_or_equal215 && !less_or_equal215) {
    }
    edi259 = reinterpret_cast<unsigned char*>(0x429174);
    while (ecx171) {
        --ecx171;
        *edi259 = *esi46;
        ++edi259;
        ++esi46;
    }
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp258) + 4 + 4 + 4 + 4);
}

void fun_411aa0(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** eax6;
    void** v7;

    eax6 = fun_411c30(a1);
    if (eax6) {
        v7 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax6 + reinterpret_cast<unsigned char>(a2) * 4) + 20);
        fun_413050(v7, __return_address(), a1, a2, a3, a4, a5);
    }
    return;
}

void** fun_41f3b0(void** a1) {
    void** esp2;
    int32_t v3;
    int32_t v4;
    uint32_t v5;
    void** v6;
    int32_t v7;
    int32_t v8;
    int16_t v9;
    void** v10;

    esp2 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x138);
    fun_41fb40(esp2, a1, esp2, esp2 + 64, v3, v4, v5, v6, v7, v8, v9);
    return v10;
}

void fun_414ac0(void* cl, void* a2, void* a3);

int16_t fun_414915(void*** ecx, void*** a2, void*** a3) {
    void* ebp4;
    void** eax5;
    void** v6;
    void* ecx7;
    int32_t v8;
    int32_t* ecx9;
    int16_t v10;
    void** eax11;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = fun_4148f8(ecx);
    v6 = eax5;
    ecx7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp4) - 4);
    fun_414ac0(*reinterpret_cast<void**>(&ecx7), ecx7, reinterpret_cast<int32_t>(ebp4) - 12);
    *a2 = v6;
    v8 = 3;
    while (v8) {
        ecx9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp4) - 12);
        eax11 = fun_414b11(ecx9, ecx9, v6, v10);
        a2[v8 * 4] = eax11;
        *a2 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*a2) ^ reinterpret_cast<unsigned char>(a2[v8 * 4]));
        --v8;
    }
    *a3 = v6;
    return 1;
}

struct s110 {
    void** f0;
    signed char[3] pad4;
    int16_t f4;
    int16_t f6;
    int16_t f8;
};

void** fun_41cd60(void** a1, void** a2, void** a3);

void fun_418940(void** ecx, struct s110* a2) {
    void** esi3;
    void** v4;
    void** v5;
    void** v6;
    void** v7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void* esp13;
    void* ecx14;
    uint32_t edx15;
    uint32_t edx16;
    int16_t v17;
    void** eax18;
    int32_t v19;

    fun_4195b0(ecx, esi3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
    esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 52 - 4 - 4 + 4);
    ecx14 = g42d440;
    edx15 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint32_t>(ecx14)) >> 5);
    edx16 = edx15 + (edx15 >> 31);
    a2->f6 = *reinterpret_cast<int16_t*>(&edx16);
    GetLocalTime();
    a2->f4 = v17;
    eax18 = fun_41cd60(reinterpret_cast<int32_t>(esp13) - 4 - 4 + 4 + 20, reinterpret_cast<int32_t>(esp13) + 4, esi3);
    a2->f0 = eax18;
    a2->f8 = -1;
    goto v19;
}

void** fun_418db0(void** a1);

void** fun_418d80(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** edi6;
    void** esi7;
    void** ebx8;
    void** eax9;

    fun_4171c0(ecx, a2, edi6, esi7, ebx8, __return_address(), a2, a3, a4, a5);
    eax9 = fun_418db0(a2);
    fun_417230(a2);
    return eax9;
}

int32_t fun_415750(void** a1, void** a2, void** a3) {
    void** eax4;
    void** edi5;
    void** edi6;
    void** esi7;
    void** eax8;
    void* eax9;
    void** eax10;
    void** ecx11;
    void** eax12;
    void** eax13;
    uint32_t eax14;

    eax4 = *reinterpret_cast<void***>(a1 + 12);
    if (!(*reinterpret_cast<unsigned char*>(&eax4) & 0x83) || (edi5 = a3, !!edi5) && (edi5 != 1 && !reinterpret_cast<int1_t>(edi5 == 2))) {
        eax8 = fun_419020(edi6, esi7, __return_address());
        *reinterpret_cast<void***>(eax8) = reinterpret_cast<void**>(22);
        return -1;
    } else {
        *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) & 0xef);
        *reinterpret_cast<void***>(a1 + 12) = eax4;
        if (reinterpret_cast<int1_t>(edi5 == 1)) {
            eax9 = fun_419140(a1);
            edi5 = reinterpret_cast<void**>(0);
            a2 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<uint32_t>(eax9));
        }
        fun_415b00(a1);
        eax10 = *reinterpret_cast<void***>(a1 + 12);
        if (!(*reinterpret_cast<unsigned char*>(&eax10) & 0x80)) {
            if (*reinterpret_cast<unsigned char*>(&eax10) & 1 && (*reinterpret_cast<unsigned char*>(&eax10) & 8 && !(*reinterpret_cast<unsigned char*>(&eax10 + 1) & 4))) {
                *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(0x200);
            }
        } else {
            *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax10) & 0xfc);
            *reinterpret_cast<void***>(a1 + 12) = eax10;
        }
        ecx11 = *reinterpret_cast<void***>(a1 + 16);
        eax12 = fun_419040(ecx11, a2, edi5, edi6, esi7);
        eax13 = eax12 + 1;
        eax14 = reinterpret_cast<uint32_t>(-reinterpret_cast<unsigned char>(eax13));
        return reinterpret_cast<int32_t>(-(eax14 - (eax14 + reinterpret_cast<uint1_t>(eax14 < eax14 + reinterpret_cast<uint1_t>(!!eax13))))) - 1;
    }
}

void fun_415920(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    fun_417120(ecx, 13, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    return;
}

void** fun_41a050(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    void** v9;
    void** ebx10;
    void** v11;
    void** ebp12;
    void** v13;
    void** esi14;
    void** v15;
    void** edi16;
    void** edi17;
    void** eax18;
    void** esi19;
    void** eax20;
    void** v21;
    void** v22;
    void** eax23;
    void* esi24;
    void** eax25;
    void** ecx26;
    void** edx27;
    void** v28;
    void** eax29;
    void** v30;
    void** edx31;

    v8 = reinterpret_cast<void**>(__return_address());
    v9 = ebx10;
    v11 = ebp12;
    v13 = esi14;
    v15 = edi16;
    edi17 = reinterpret_cast<void**>(0);
    fun_417120(ecx, 2, v15, v13, v11, v9, v8, a2, a3, a4, a5, a6, a7);
    eax18 = g4313a0;
    esi19 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<signed char>(eax18) <= reinterpret_cast<signed char>(0)) {
        addr_0x41a0ff_2:
        if (edi17) {
            *reinterpret_cast<void***>(edi17 + 4) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(edi17 + 12) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(edi17 + 8) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(edi17) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(edi17 + 28) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(edi17 + 16) = reinterpret_cast<void**>(0xffffffff);
        }
    } else {
        do {
            eax20 = g430384;
            if (!*reinterpret_cast<void***>(eax20 + reinterpret_cast<unsigned char>(esi19) * 4)) 
                goto addr_0x41a0b7_6;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(eax20 + reinterpret_cast<unsigned char>(esi19) * 4) + 12)) & 0x83)) {
                v21 = *reinterpret_cast<void***>(eax20 + reinterpret_cast<unsigned char>(esi19) * 4);
                fun_417200(ecx, esi19, v21, v15, v13, v11, v9, v8, a2, a3);
                ecx = g430384;
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx + reinterpret_cast<unsigned char>(esi19) * 4) + 12)) & 0x83)) 
                    goto addr_0x41a0b2_9;
                v22 = *reinterpret_cast<void***>(ecx + reinterpret_cast<unsigned char>(esi19) * 4);
                fun_417270(esi19, v22);
            }
            eax23 = g4313a0;
            ++esi19;
        } while (reinterpret_cast<signed char>(esi19) < reinterpret_cast<signed char>(eax23));
        goto addr_0x41a0b0_12;
    }
    fun_4171a0(2);
    return edi17;
    addr_0x41a0b7_6:
    esi24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi19) << 2);
    eax25 = fun_414db0(56, v15, v13, v11, v9, v8, a2, a3, a4, a5, a6, a7);
    ecx26 = g430384;
    *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ecx26) + reinterpret_cast<uint32_t>(esi24)) = eax25;
    edx27 = g430384;
    if (*reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edx27) + reinterpret_cast<uint32_t>(esi24))) {
        v28 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edx27) + reinterpret_cast<uint32_t>(esi24)) + 32;
        InitializeCriticalSection(v28);
        eax29 = g430384;
        v30 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax29) + reinterpret_cast<uint32_t>(esi24)) + 32;
        EnterCriticalSection(v30, v28);
        edx31 = g430384;
        edi17 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edx31) + reinterpret_cast<uint32_t>(esi24));
        goto addr_0x41a0ff_2;
    }
    addr_0x41a0b0_12:
    goto addr_0x41a0ff_2;
    addr_0x41a0b2_9:
    edi17 = *reinterpret_cast<void***>(ecx + reinterpret_cast<unsigned char>(esi19) * 4);
    goto addr_0x41a0ff_2;
}

void** fun_415f60(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** esi6;
    void** eax7;
    void** eax8;

    eax7 = fun_41a050(ecx, esi6, __return_address(), a2, a3, a4, a5);
    if (eax7) {
        eax8 = fun_419e80(a2, a3, a4, eax7);
        fun_417230(eax7);
        return eax8;
    } else {
        return eax7;
    }
}

int32_t __image_base = 0x42ece8;

int32_t __image_base = 0x42ed18;

int32_t __image_base = 0x42ed00;

void fun_4170f0() {
    int32_t eax1;
    int32_t esi2;
    int32_t esi3;
    int32_t ecx4;
    int32_t edx5;

    eax1 = __image_base;
    esi2 = InitializeCriticalSection;
    esi2(eax1, esi3, __return_address());
    ecx4 = __image_base;
    esi2(ecx4, eax1, esi3, __return_address());
    edx5 = __image_base;
    esi2();
    esi2();
    goto edx5;
}

int32_t GetACP = 0x32b6c;

int32_t GetOEMCP = 0x32b76;

void** fun_41a610(void** a1) {
    void** eax2;

    eax2 = a1;
    g42ef7c = reinterpret_cast<void**>(0);
    if (!reinterpret_cast<int1_t>(eax2 == 0xfffffffe)) {
        if (!reinterpret_cast<int1_t>(eax2 == 0xfffffffd)) {
            if (reinterpret_cast<int1_t>(eax2 == 0xfffffffc)) {
                eax2 = g42ed60;
                g42ef7c = reinterpret_cast<void**>(1);
            }
            return eax2;
        } else {
            g42ef7c = reinterpret_cast<void**>(1);
            goto GetACP;
        }
    } else {
        g42ef7c = reinterpret_cast<void**>(1);
        goto GetOEMCP;
    }
}

struct s39* fun_41b390(int32_t a1, struct s39* a2);

int32_t UnhandledExceptionFilter = 0x32bc4;

int32_t g42d698 = 3;

int32_t g42d69c = 7;

int32_t fun_41b180(int32_t ecx, int32_t a2, int32_t** a3) {
    void** edi4;
    void** esi5;
    void** ebp6;
    struct s38* eax7;
    struct s38* esi8;
    struct s39* v9;
    struct s39* eax10;
    struct s39* edx11;
    struct s39* v12;
    int32_t** v13;
    int32_t v14;
    int32_t ecx15;
    int32_t ebx16;
    int32_t edx17;
    int32_t ebx18;
    int32_t ebp19;
    int32_t edi20;
    int32_t v21;
    int32_t v22;
    int32_t v23;
    int32_t v24;
    int32_t v25;
    int32_t v26;
    int32_t v27;

    eax7 = fun_419530(edi4, esi5, ebp6);
    esi8 = eax7;
    v9 = esi8->f80;
    eax10 = fun_41b390(a2, v9);
    if (!eax10 || (edx11 = eax10->f8, v12 = edx11, edx11 == 0)) {
        UnhandledExceptionFilter();
        goto ecx;
    } else {
        if (!reinterpret_cast<int1_t>(edx11 == 5)) {
            if (!reinterpret_cast<int1_t>(edx11 == 1)) {
                v13 = esi8->f84;
                esi8->f84 = a3;
                if (eax10->f4 != 8) {
                    v14 = eax10->f4;
                    eax10->f8 = reinterpret_cast<struct s39*>(0);
                    edx11(v14);
                    esi8->f84 = v13;
                    return -1;
                } else {
                    ecx15 = g42d698;
                    ebx16 = g42d69c;
                    if (ecx15 < ebx16 + ecx15) {
                        edx17 = ecx15 + ecx15 * 2 << 2;
                        do {
                            ++ecx15;
                            *reinterpret_cast<struct s39**>(reinterpret_cast<uint32_t>(esi8->f80) + edx17 + 8) = reinterpret_cast<struct s39*>(0);
                            ebx18 = g42d698;
                            ebp19 = g42d69c;
                            edx17 = edx17 + 12;
                        } while (ecx15 < ebp19 + ebx18);
                        edx11 = v12;
                    }
                    edi20 = esi8->f88;
                    if (eax10->f0 != 0xc000008e) {
                        if (eax10->f0 != 0xc0000090) {
                            if (eax10->f0 != 0xc0000091) {
                                if (eax10->f0 != 0xc0000093) {
                                    if (eax10->f0 != 0xc000008d) {
                                        if (eax10->f0 != 0xc000008f) {
                                            if (eax10->f0 == 0xc0000092) {
                                                esi8->f88 = 0x8a;
                                            }
                                            v21 = esi8->f88;
                                            edx11(8, v21);
                                            esi8->f88 = edi20;
                                            esi8->f84 = v13;
                                            return -1;
                                        } else {
                                            esi8->f88 = 0x86;
                                            v22 = esi8->f88;
                                            edx11(8, v22);
                                            esi8->f88 = edi20;
                                            esi8->f84 = v13;
                                            return -1;
                                        }
                                    } else {
                                        esi8->f88 = 0x82;
                                        v23 = esi8->f88;
                                        edx11(8, v23);
                                        esi8->f88 = edi20;
                                        esi8->f84 = v13;
                                        return -1;
                                    }
                                } else {
                                    esi8->f88 = 0x85;
                                    v24 = esi8->f88;
                                    edx11(8, v24);
                                    esi8->f88 = edi20;
                                    esi8->f84 = v13;
                                    return -1;
                                }
                            } else {
                                esi8->f88 = 0x84;
                                v25 = esi8->f88;
                                edx11(8, v25);
                                esi8->f88 = edi20;
                                esi8->f84 = v13;
                                return -1;
                            }
                        } else {
                            esi8->f88 = 0x81;
                            v26 = esi8->f88;
                            edx11(8, v26);
                            esi8->f88 = edi20;
                            esi8->f84 = v13;
                            return -1;
                        }
                    } else {
                        esi8->f88 = 0x83;
                        v27 = esi8->f88;
                        edx11(8, v27);
                        esi8->f88 = edi20;
                        esi8->f84 = v13;
                        return -1;
                    }
                }
            } else {
                return -1;
            }
        } else {
            eax10->f8 = reinterpret_cast<struct s39*>(0);
            return 1;
        }
    }
}

void** fun_41cd70(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void*** esp7;
    void** edi8;
    void** ecx9;
    void* edx10;
    void** edx11;
    void* eax12;
    void*** ecx13;
    void** eax14;
    void* ecx15;
    void* ebx16;
    void** edx17;
    void*** esi18;
    void* ecx19;
    void** edx20;
    void*** esi21;
    void** ecx22;
    void** edx23;
    void** edx24;
    void** v25;
    void** edi26;
    void** esi27;
    void** ebx28;
    int32_t ecx29;
    void** esi30;
    void** eax31;
    void* esp32;
    void* eax33;
    void** ecx34;
    void** ecx35;
    uint1_t less36;
    void** edx37;
    void** eax38;
    int32_t ecx39;
    void** esi40;
    void** eax41;

    esp7 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4);
    edi8 = a1;
    ecx9 = *reinterpret_cast<void***>(edi8 + 20);
    if (reinterpret_cast<signed char>(ecx9) < reinterpret_cast<signed char>(69)) 
        goto addr_0x41cfa5_2;
    if (reinterpret_cast<signed char>(ecx9) > reinterpret_cast<signed char>(0x8b)) 
        goto addr_0x41cfa5_2;
    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 16)) < reinterpret_cast<signed char>(0) || reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 16)) > reinterpret_cast<signed char>(11)) {
        edx10 = reinterpret_cast<void*>(__intrinsic() >> 1);
        ecx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx9) + (reinterpret_cast<uint32_t>(edx10) + (reinterpret_cast<uint32_t>(edx10) >> 31)));
        __asm__("cdq ");
        edx11 = reinterpret_cast<void**>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 16)) % reinterpret_cast<int32_t>(12));
        *reinterpret_cast<void***>(edi8 + 16) = edx11;
        if (reinterpret_cast<signed char>(edx11) < reinterpret_cast<signed char>(0)) {
            --ecx9;
            *reinterpret_cast<void***>(edi8 + 16) = edx11 + 12;
        }
        if (reinterpret_cast<signed char>(ecx9) < reinterpret_cast<signed char>(69)) 
            goto addr_0x41cfa5_2;
        if (reinterpret_cast<signed char>(ecx9) > reinterpret_cast<signed char>(0x8b)) 
            goto addr_0x41cfa5_2;
    }
    eax12 = *reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi8 + 16)) * 4 + 0x42df88);
    if (!(*reinterpret_cast<unsigned char*>(&ecx9) & 3) && reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 16)) > reinterpret_cast<signed char>(1)) {
        eax12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax12) + 1);
    }
    ecx13 = reinterpret_cast<void***>(ecx9 + reinterpret_cast<uint32_t>(ecx9 + reinterpret_cast<unsigned char>(ecx9) * 8) * 8);
    eax14 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx13 + reinterpret_cast<uint32_t>(ecx13) * 4) + (reinterpret_cast<int32_t>(eax12) + reinterpret_cast<uint32_t>(reinterpret_cast<signed char>(ecx9 + 0xffffffff) >> 2)) + 0xffff9c21);
    ecx15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi8 + 12)));
    if (reinterpret_cast<signed char>(eax14) < reinterpret_cast<signed char>(0)) {
        addr_0x41ce20_12:
        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 12)) >= reinterpret_cast<signed char>(0)) 
            goto addr_0x41ce2c_13;
        if (reinterpret_cast<int32_t>(ecx15) >= reinterpret_cast<int32_t>(0)) 
            goto addr_0x41cfa5_2;
    } else {
        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 12)) < reinterpret_cast<signed char>(0)) 
            goto addr_0x41ce1c_16;
        if (reinterpret_cast<int32_t>(ecx15) < reinterpret_cast<int32_t>(0)) 
            goto addr_0x41cfa5_2;
        addr_0x41ce1c_16:
        if (reinterpret_cast<signed char>(eax14) < reinterpret_cast<signed char>(0)) 
            goto addr_0x41ce20_12;
    }
    addr_0x41ce2c_13:
    ebx16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx15) + reinterpret_cast<uint32_t>(ecx15) * 2 << 3);
    if (!ecx15) {
        eax14 = reinterpret_cast<void**>(0);
    } else {
        __asm__("cdq ");
        edx17 = reinterpret_cast<void**>(0);
        *reinterpret_cast<unsigned char*>(&edx17) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebx16) / reinterpret_cast<int32_t>(ecx15) != 24));
        eax14 = edx17;
    }
    if (eax14) 
        goto addr_0x41cfa5_2;
    esi18 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi8 + 8)) + reinterpret_cast<uint32_t>(ebx16));
    if (reinterpret_cast<int32_t>(ebx16) < reinterpret_cast<int32_t>(0)) {
        addr_0x41ce6b_22:
        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 8)) >= reinterpret_cast<signed char>(0)) 
            goto addr_0x41ce77_23;
        if (reinterpret_cast<int32_t>(esi18) >= reinterpret_cast<int32_t>(0)) 
            goto addr_0x41cfa5_2;
    } else {
        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 8)) < reinterpret_cast<signed char>(0)) 
            goto addr_0x41ce67_26;
        if (reinterpret_cast<int32_t>(esi18) < reinterpret_cast<int32_t>(0)) 
            goto addr_0x41cfa5_2;
        addr_0x41ce67_26:
        if (reinterpret_cast<int32_t>(ebx16) < reinterpret_cast<int32_t>(0)) 
            goto addr_0x41ce6b_22;
    }
    addr_0x41ce77_23:
    ecx19 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(esi18) << 4) - reinterpret_cast<uint32_t>(esi18) << 2);
    if (!esi18) {
        eax14 = reinterpret_cast<void**>(0);
    } else {
        __asm__("cdq ");
        edx20 = reinterpret_cast<void**>(0);
        *reinterpret_cast<unsigned char*>(&edx20) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx19) / reinterpret_cast<int32_t>(esi18) != 60));
        eax14 = edx20;
    }
    if (eax14) 
        goto addr_0x41cfa5_2;
    esi21 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi8 + 4)) + reinterpret_cast<uint32_t>(ecx19));
    if (reinterpret_cast<int32_t>(ecx19) < reinterpret_cast<int32_t>(0)) {
        addr_0x41ceba_32:
        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 4)) >= reinterpret_cast<signed char>(0)) 
            goto addr_0x41cec6_33;
        if (reinterpret_cast<int32_t>(esi21) >= reinterpret_cast<int32_t>(0)) 
            goto addr_0x41cfa5_2;
    } else {
        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi8 + 4)) < reinterpret_cast<signed char>(0)) 
            goto addr_0x41ceb6_36;
        if (reinterpret_cast<int32_t>(esi21) < reinterpret_cast<int32_t>(0)) 
            goto addr_0x41cfa5_2;
        addr_0x41ceb6_36:
        if (reinterpret_cast<int32_t>(ecx19) < reinterpret_cast<int32_t>(0)) 
            goto addr_0x41ceba_32;
    }
    addr_0x41cec6_33:
    ecx22 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(esi21) << 4) - reinterpret_cast<uint32_t>(esi21) << 2);
    if (!esi21) {
        eax14 = reinterpret_cast<void**>(0);
    } else {
        __asm__("cdq ");
        edx23 = reinterpret_cast<void**>(0);
        *reinterpret_cast<unsigned char*>(&edx23) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx22) / reinterpret_cast<int32_t>(esi21) != 60));
        eax14 = edx23;
    }
    if (eax14) 
        goto addr_0x41cfa5_2;
    eax14 = *reinterpret_cast<void***>(edi8);
    edx24 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax14) + reinterpret_cast<unsigned char>(ecx22));
    v25 = edx24;
    if (reinterpret_cast<signed char>(ecx22) < reinterpret_cast<signed char>(0)) {
        addr_0x41cf0c_42:
        if (reinterpret_cast<signed char>(eax14) >= reinterpret_cast<signed char>(0)) 
            goto addr_0x41cf18_43;
        if (reinterpret_cast<signed char>(edx24) >= reinterpret_cast<signed char>(0)) 
            goto addr_0x41cfa5_2;
    } else {
        if (reinterpret_cast<signed char>(eax14) < reinterpret_cast<signed char>(0)) 
            goto addr_0x41cf08_46;
        if (reinterpret_cast<signed char>(edx24) < reinterpret_cast<signed char>(0)) 
            goto addr_0x41cfa5_2;
        addr_0x41cf08_46:
        if (reinterpret_cast<signed char>(ecx22) < reinterpret_cast<signed char>(0)) 
            goto addr_0x41cf0c_42;
    }
    addr_0x41cf18_43:
    if (!a2) {
        eax14 = fun_419d10(esp7 + 16, edi26, esi27, ebx28, __return_address(), v25);
        if (!eax14) {
            addr_0x41cfa5_2:
            return 0xffffffff;
        } else {
            ecx29 = 9;
            esi30 = eax14;
            eax31 = v25;
        }
        while (ecx29) {
            --ecx29;
            *reinterpret_cast<void***>(edi8) = *reinterpret_cast<void***>(esi30);
            edi8 = edi8 + 4;
            esi30 = esi30 + 4;
        }
        return eax31;
    } else {
        fun_4195b0(ecx22, edi26, esi27, ebx28, __return_address(), v25, a2, a3, a4, a5, a6);
        esp32 = reinterpret_cast<void*>(esp7 - 4 + 4);
        eax33 = g42d440;
        ecx34 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp32) + 16);
        v25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v25) + reinterpret_cast<uint32_t>(eax33));
        eax14 = fun_415d70(ecx34, ecx34, edi26, esi27, ebx28, __return_address(), v25, a2, a3);
        if (!eax14) 
            goto addr_0x41cfa5_2;
        ecx35 = *reinterpret_cast<void***>(edi8 + 32);
        less36 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx35) < reinterpret_cast<signed char>(0));
        if (!reinterpret_cast<uint1_t>(less36 | reinterpret_cast<uint1_t>(ecx35 == 0)) || less36 && (ecx35 = *reinterpret_cast<void***>(eax14 + 32), !(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx35) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ecx35 == 0)))) {
            edx37 = g42d448;
            eax38 = fun_415d70(ecx35, reinterpret_cast<int32_t>(esp32) - 4 - 4 + 4 + 4 + 16, edi26, esi27, ebx28, __return_address(), reinterpret_cast<unsigned char>(v25) + reinterpret_cast<unsigned char>(edx37), a2, a3);
            ecx39 = 9;
            esi40 = eax38;
            eax41 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v25) + reinterpret_cast<unsigned char>(edx37));
            while (ecx39) {
                --ecx39;
                *reinterpret_cast<void***>(edi8) = *reinterpret_cast<void***>(esi40);
                edi8 = edi8 + 4;
                esi40 = esi40 + 4;
            }
            return eax41;
        }
    }
}

int32_t fun_41e460(void** a1, void** a2) {
    void** esi3;
    void** eax4;
    void** esi5;
    void** edi6;
    void** ebx7;
    void** eax8;
    void** edx9;
    void** esi10;

    esi3 = g42ec80;
    eax4 = *reinterpret_cast<void***>(esi3);
    if (!eax4) {
        esi5 = g42ec80;
        return -(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(esi3) - reinterpret_cast<unsigned char>(esi5)) >> 2);
    }
    edi6 = a2;
    ebx7 = a1;
    do {
        eax8 = fun_41dec0(ebx7, eax4, edi6);
        if (eax8) 
            continue;
        if (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi3)) + reinterpret_cast<unsigned char>(edi6)) == 61) 
            break;
        if (!*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi3)) + reinterpret_cast<unsigned char>(edi6))) 
            break;
        eax4 = *reinterpret_cast<void***>(esi3 + 4);
        esi3 = esi3 + 4;
    } while (eax4);
    goto addr_0x41e49d_8;
    edx9 = g42ec80;
    return reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(esi3) - reinterpret_cast<unsigned char>(edx9)) >> 2;
    addr_0x41e49d_8:
    esi10 = g42ec80;
    return -(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(esi3) - reinterpret_cast<unsigned char>(esi10)) >> 2);
}

struct s107* fun_414760(struct s107* a1) {
    struct s107* eax2;

    eax2 = a1;
    if (eax2->f0 >= 1) {
        if (a1->f0 != 1) 
            goto addr_0x41479d_3;
        if (a1->f4 < 3) 
            goto addr_0x414781_5;
    } else {
        *reinterpret_cast<int16_t*>(&eax2) = 0;
        goto addr_0x4147a1_7;
    }
    eax2 = a1;
    if (eax2->f4 != 3 || a1->f8 >= 0) {
        addr_0x41479d_3:
        *reinterpret_cast<int16_t*>(&eax2) = 1;
    } else {
        *reinterpret_cast<int16_t*>(&eax2) = 0;
    }
    addr_0x4147a1_7:
    return eax2;
    addr_0x414781_5:
    *reinterpret_cast<int16_t*>(&eax2) = 0;
    goto addr_0x4147a1_7;
}

void** fun_40c610(int32_t ecx, int32_t a2, int32_t a3, int32_t a4) {
    return 0x3ccf7;
}

void fun_414ac0(void* cl, void* a2, void* a3) {
    uint128_t v4;
    int32_t ebp5;
    int1_t less_or_equal6;
    int1_t less_or_equal7;
    int1_t of8;
    int1_t of9;
    int1_t sf10;
    int1_t sf11;
    int32_t ebx12;
    int32_t ebx13;
    uint1_t less_or_equal14;
    int32_t ebx15;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v4) + 12) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v4) + 8) = ebp5;
    do {
    } while (less_or_equal6 && !less_or_equal7);
    while (!of8 && of9) {
    }
    while (!sf10 && sf11) {
    }
    *reinterpret_cast<unsigned char*>(ebx12 - 0x14ef76ef) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx13 - 0x14ef76ef) | reinterpret_cast<unsigned char>(cl));
    less_or_equal14 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(ebx15 - 0x14ef76ef) == 0));
    while (!1 && !0) {
    }
    while (less_or_equal14 && !less_or_equal14) {
    }
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v4) + 10);
}

void** fun_41cd60(void** a1, void** a2, void** a3) {
    void** eax4;

    eax4 = fun_41cd70(a1, 1, __return_address(), a1, a2, a3);
    return eax4;
}

void** fun_415590(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** ebx7;
    void** v8;
    void** ebp9;
    void** v10;
    void** esi11;
    void** ebp12;
    void** esi13;
    void** v14;
    void** edi15;
    void** v16;
    void** v17;
    void** ebx18;
    void** edi19;
    void** v20;
    uint32_t ecx21;
    void** eax22;
    void** ecx23;
    void** eax24;
    void** eax25;
    void** eax26;
    void** edi27;
    void** edx28;
    uint32_t ecx29;
    uint32_t ecx30;
    void** edx31;
    void** ecx32;
    void** edi33;
    void** eax34;
    void** eax35;

    v6 = ebx7;
    v8 = ebp9;
    v10 = esi11;
    ebp12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a4) * reinterpret_cast<unsigned char>(a3));
    esi13 = a2;
    v14 = edi15;
    v16 = esi13;
    v17 = ebp12;
    if (!ebp12) {
        return 0;
    }
    ebx18 = a5;
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx18 + 12)) & 0x10c) {
        edi19 = *reinterpret_cast<void***>(ebx18 + 24);
        v20 = edi19;
        goto addr_0x4155d8_5;
    }
    v20 = reinterpret_cast<void**>(0x1000);
    do {
        edi19 = v20;
        addr_0x4155d8_5:
        ecx21 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx18 + 12)) & 0x108;
        if (!ecx21 || (eax22 = *reinterpret_cast<void***>(ebx18 + 4), eax22 == 0)) {
            if (reinterpret_cast<unsigned char>(ebp12) < reinterpret_cast<unsigned char>(edi19)) {
                ecx23 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi13))));
                eax24 = fun_417d50(ecx23, ebx18, v14, v10, v8, v6, v17);
                if (eax24 == 0xffffffff) 
                    break;
                eax25 = *reinterpret_cast<void***>(ebx18 + 24);
                ++esi13;
                --ebp12;
                v16 = esi13;
                v20 = eax25;
                if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax25) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax25 == 0))) 
                    continue;
            } else {
                if (!ecx21) 
                    goto addr_0x415639_12;
                eax26 = fun_415b00(ebx18);
                if (eax26) 
                    break;
                addr_0x415639_12:
                if (!edi19) 
                    goto addr_0x415649_14; else 
                    goto addr_0x41563d_15;
            }
        } else {
            if (reinterpret_cast<unsigned char>(ebp12) < reinterpret_cast<unsigned char>(eax22)) {
                eax22 = ebp12;
            }
            edi27 = *reinterpret_cast<void***>(ebx18);
            edx28 = eax22;
            ebp12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(eax22));
            ecx29 = reinterpret_cast<unsigned char>(eax22) >> 2;
            while (ecx29) {
                --ecx29;
                *reinterpret_cast<void***>(edi27) = *reinterpret_cast<void***>(esi13);
                edi27 = edi27 + 4;
                esi13 = esi13 + 4;
            }
            ecx30 = reinterpret_cast<unsigned char>(edx28) & 3;
            while (ecx30) {
                --ecx30;
                *reinterpret_cast<void***>(edi27) = *reinterpret_cast<void***>(esi13);
                ++edi27;
                ++esi13;
            }
            edx31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx18)) + reinterpret_cast<unsigned char>(eax22));
            ecx32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) + reinterpret_cast<unsigned char>(eax22));
            *reinterpret_cast<void***>(ebx18 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx18 + 4)) - reinterpret_cast<unsigned char>(eax22));
            *reinterpret_cast<void***>(ebx18) = edx31;
            v16 = ecx32;
            esi13 = ecx32;
            continue;
        }
        v20 = reinterpret_cast<void**>(1);
        continue;
        addr_0x415649_14:
        edi33 = ebp12;
        addr_0x41564b_26:
        eax34 = *reinterpret_cast<void***>(ebx18 + 16);
        eax35 = fun_418af0(eax34, esi13, edi33);
        if (eax35 == 0xffffffff) 
            goto addr_0x4156a9_27;
        ebp12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(eax35));
        esi13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi13) + reinterpret_cast<unsigned char>(eax35));
        v16 = esi13;
        if (reinterpret_cast<unsigned char>(eax35) < reinterpret_cast<unsigned char>(edi33)) 
            goto addr_0x4156a9_27;
        continue;
        addr_0x41563d_15:
        edi33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp12) - reinterpret_cast<unsigned char>(ebp12) % reinterpret_cast<unsigned char>(edi19));
        goto addr_0x41564b_26;
    } while (ebp12);
    goto addr_0x41569f_31;
    return (reinterpret_cast<unsigned char>(v17) - reinterpret_cast<unsigned char>(ebp12)) / reinterpret_cast<unsigned char>(a3);
    addr_0x41569f_31:
    return a4;
    addr_0x4156a9_27:
    *reinterpret_cast<void***>(ebx18 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx18 + 12)) | 32);
    return (reinterpret_cast<unsigned char>(v17) - reinterpret_cast<unsigned char>(ebp12)) / reinterpret_cast<unsigned char>(a3);
}

void** fun_418db0(void** a1) {
    void** ebp2;
    void** ebx3;
    void** eax4;
    void** v5;
    void** edx6;
    uint1_t less7;
    void** v8;
    void** eax9;
    void** ecx10;
    void** edi11;
    void** esi12;
    void** v13;
    uint32_t eax14;
    void** eax15;
    void** edi16;
    void** esi17;
    void** ebp18;
    void** esi19;
    int32_t ecx20;
    uint32_t eax21;
    void** edx22;
    void* edi23;
    void** eax24;
    void** eax25;
    void** edx26;
    void** eax27;
    void** ecx28;
    void** eax29;

    ebp2 = a1;
    ebx3 = *reinterpret_cast<void***>(ebp2 + 16);
    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebp2 + 4)) < reinterpret_cast<signed char>(0)) {
        *reinterpret_cast<void***>(ebp2 + 4) = reinterpret_cast<void**>(0);
    }
    eax4 = fun_41cfb0(ebx3, 0, 0, 1);
    v5 = edx6;
    less7 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edx6) < reinterpret_cast<signed char>(0));
    v8 = eax4;
    if (reinterpret_cast<uint1_t>(less7 | reinterpret_cast<uint1_t>(edx6 == 0))) {
        if (less7) {
            addr_0x418f8d_5:
            return 0xffffffff;
        } else {
            if (!1) {
                return 0xffffffff;
            }
        }
    }
    eax9 = *reinterpret_cast<void***>(ebp2 + 12);
    if (!(reinterpret_cast<unsigned char>(eax9) & 0x108)) {
        __asm__("cdq ");
        return reinterpret_cast<unsigned char>(eax4) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp2 + 4));
    }
    ecx10 = *reinterpret_cast<void***>(ebp2);
    edi11 = *reinterpret_cast<void***>(ebp2 + 8);
    esi12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx10) - reinterpret_cast<unsigned char>(edi11));
    v13 = esi12;
    if (*reinterpret_cast<unsigned char*>(&eax9) & 3) {
        eax14 = reinterpret_cast<unsigned char>(ebx3) & 31;
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<signed char>(ebx3) >> 5) * 4 + 0x430280)) + (eax14 + eax14 * 8) * 4 + 4) & 0x80 && (eax15 = edi11, reinterpret_cast<unsigned char>(eax15) < reinterpret_cast<unsigned char>(ecx10))) {
            do {
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax15) == 10)) {
                    ++esi12;
                }
                ++eax15;
            } while (reinterpret_cast<unsigned char>(eax15) < reinterpret_cast<unsigned char>(ecx10));
            v13 = esi12;
            goto addr_0x418e67_16;
        }
    }
    if (*reinterpret_cast<unsigned char*>(&eax9) & 0x80) {
        addr_0x418e67_16:
        if (!(reinterpret_cast<unsigned char>(v8) | reinterpret_cast<unsigned char>(v5))) {
            return esi12;
        }
    } else {
        eax4 = fun_419020(edi16, esi17, ebp18);
        *reinterpret_cast<void***>(eax4) = reinterpret_cast<void**>(22);
        goto addr_0x418f8d_5;
    }
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp2 + 12)) & 1)) {
        addr_0x418f62_21:
        return reinterpret_cast<unsigned char>(esi12) + reinterpret_cast<unsigned char>(v8);
    } else {
        if (*reinterpret_cast<void***>(ebp2 + 4)) {
            esi19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx10) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp2 + 4)) - reinterpret_cast<unsigned char>(edi11));
            ecx20 = reinterpret_cast<signed char>(ebx3) >> 5;
            eax21 = reinterpret_cast<unsigned char>(ebx3) & 31;
            edx22 = *reinterpret_cast<void***>(ecx20 * 4 + 0x430280);
            edi23 = reinterpret_cast<void*>(eax21 + eax21 * 8 << 2);
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi23) + reinterpret_cast<unsigned char>(edx22) + 4) & 0x80)) {
                addr_0x418f49_24:
                v8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v8) - reinterpret_cast<unsigned char>(esi19));
            } else {
                eax24 = fun_41cfb0(ebx3, 0, 0, 2);
                if (eax24 != v8 || edx22 != v5) {
                    fun_41cfb0(ebx3, v8, v5, 0);
                    if (reinterpret_cast<unsigned char>(esi19) > reinterpret_cast<unsigned char>(0x200) || ((eax25 = *reinterpret_cast<void***>(a1 + 12), (*reinterpret_cast<unsigned char*>(&eax25) & 8) == 0) || *reinterpret_cast<unsigned char*>(&eax25 + 1) & 4)) {
                        esi19 = *reinterpret_cast<void***>(a1 + 24);
                    } else {
                        esi19 = reinterpret_cast<void**>(0x200);
                    }
                    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi23) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ecx20 * 4 + 0x430280)) + 4) & 4)) 
                        goto addr_0x418f49_24; else 
                        goto addr_0x418f48_30;
                } else {
                    edx26 = a1;
                    eax27 = *reinterpret_cast<void***>(edx26 + 8);
                    ecx28 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi19) + reinterpret_cast<unsigned char>(eax27));
                    if (reinterpret_cast<unsigned char>(eax27) < reinterpret_cast<unsigned char>(ecx28)) {
                        do {
                            if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax27) == 10)) {
                                ++esi19;
                            }
                            ++eax27;
                        } while (reinterpret_cast<unsigned char>(eax27) < reinterpret_cast<unsigned char>(ecx28));
                    }
                    eax29 = *reinterpret_cast<void***>(edx26 + 12);
                    if (!(*reinterpret_cast<unsigned char*>(&eax29 + 1) & 32)) 
                        goto addr_0x418f49_24; else 
                        goto addr_0x418f05_36;
                }
            }
        } else {
            v13 = *reinterpret_cast<void***>(ebp2 + 4);
        }
    }
    esi12 = v13;
    goto addr_0x418f62_21;
    addr_0x418f48_30:
    ++esi19;
    goto addr_0x418f49_24;
    addr_0x418f05_36:
    goto addr_0x418f48_30;
}

int32_t g42d6a4 = 10;

struct s39* fun_41b390(int32_t a1, struct s39* a2) {
    int32_t edx3;
    struct s39* esi4;
    int32_t edi5;
    struct s39* eax6;
    struct s39* ecx7;

    edx3 = a1;
    esi4 = a2;
    edi5 = g42d6a4;
    eax6 = esi4;
    if (esi4->f0 != edx3) {
        ecx7 = reinterpret_cast<struct s39*>(reinterpret_cast<uint32_t>(esi4) + (edi5 + edi5 * 2) * 4);
        do {
            ++eax6;
            if (reinterpret_cast<uint32_t>(eax6) >= reinterpret_cast<uint32_t>(ecx7)) 
                break;
        } while (eax6->f0 != edx3);
    }
    if (reinterpret_cast<uint32_t>(eax6) >= reinterpret_cast<uint32_t>(esi4) + (edi5 + edi5 * 2) * 4 || eax6->f0 != edx3) {
        eax6 = reinterpret_cast<struct s39*>(0);
    }
    return eax6;
}

void** fun_415840(void** ecx, void** a2, void** a3) {
    void** eax4;

    eax4 = fun_415860(ecx, a2, 1, 0, __return_address(), a2, a3);
    return eax4;
}

void** fun_40c5f0(int32_t ecx, int32_t a2, int32_t a3, int32_t a4) {
    return 40;
}

struct s111 {
    signed char[79] pad79;
    unsigned char f79;
};

void fun_401000(int32_t ecx) {
    int32_t ecx2;
    int32_t ebx3;
    int32_t ebx4;
    int32_t edi5;
    int32_t ebx6;
    uint32_t edi7;
    struct s111* edx8;
    unsigned char dl9;
    unsigned char ah10;
    int32_t edi11;

    ecx2 = ecx - 1;
    if (0) {
        *reinterpret_cast<uint32_t*>(ebx3 + 0x1be982cf) = *reinterpret_cast<int32_t*>(ebx4 + 0x1be982cf) - (edi5 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx6 + 0x1be982cf) < edi7));
        *reinterpret_cast<unsigned char*>(&edx8) = reinterpret_cast<unsigned char>(dl9 >> *reinterpret_cast<signed char*>(&ecx2));
        edx8->f79 = reinterpret_cast<unsigned char>(edx8->f79 | ah10);
        goto edi11;
    } else {
        __asm__("hlt ");
    }
}

void fun_401025(int32_t ecx) {
    int1_t cf2;
    unsigned char ah3;
    signed char ah4;
    int32_t edi5;
    int32_t edi6;
    int32_t eax7;

    __asm__("lahf ");
    cf2 = *reinterpret_cast<unsigned char*>(ecx - 0x2f8d8b6) < ah3;
    *reinterpret_cast<unsigned char*>(ecx - 0x2f8d8b6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx - 0x2f8d8b6) - ah4);
    __asm__("aam 0xe4");
    if (cf2) {
        __asm__("in eax, 0x81");
        __asm__("fadd st0, st0");
        __asm__("iretd ");
        __asm__("fsubr qword [eax]");
        *reinterpret_cast<int32_t*>(edi5 - 95) = *reinterpret_cast<int32_t*>(edi6 - 95) << 1;
        __asm__("daa ");
        goto 0xe4915165;
    } else {
        goto eax7;
    }
}

struct s112 {
    signed char[24] pad24;
    unsigned char f24;
};

struct s113 {
    signed char[24] pad24;
    unsigned char f24;
};

struct s114 {
    signed char[102] pad102;
    int32_t f102;
};

int32_t fun_3abdc502();

int32_t gbef6bc55;

void fun_40109c() {
    int32_t ecx1;
    int32_t ecx2;
    struct s112* edx3;
    struct s113* edx4;
    unsigned char al5;
    struct s114** eax6;
    void** esp7;
    void* eax8;
    void* esi9;
    void* ebp10;
    struct s114* eax11;
    struct s114* edi12;
    uint1_t cf13;
    int16_t ds14;
    int32_t edx15;
    int32_t edx16;
    int1_t zf17;
    int32_t edx18;
    int32_t* esp19;
    int32_t* esp20;
    int32_t eax21;
    int16_t es22;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1) = -75;
    ecx2 = ecx1 - 1;
    if (ecx2) 
        goto 0x401026;
    edx3->f24 = reinterpret_cast<unsigned char>(edx4->f24 ^ al5);
    eax6 = reinterpret_cast<struct s114**>(__zero_stack_offset());
    __asm__("out 0x1f, al");
    esp7 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax8) - 4);
    *esp7 = esi9;
    __asm__("aad 0xc9");
    __asm__("sti ");
    __asm__("wait ");
    *reinterpret_cast<void**>(&eax6) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax6)) ^ 0x77) - 11)));
    ebp10 = *esp7;
    eax11 = edi12;
    cf13 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ecx2 - 0x7fdbcd27) < ecx2 + __intrinsic());
    *reinterpret_cast<uint32_t*>(ecx2 - 0x7fdbcd27) = *reinterpret_cast<uint32_t*>(ecx2 - 0x7fdbcd27) - (ecx2 + cf13);
    __asm__("fldcw word [esi]");
    ds14 = static_cast<int16_t>(eax11->f102);
    *reinterpret_cast<unsigned char*>(edx15 + reinterpret_cast<int32_t>(ebp10)) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx16 + reinterpret_cast<int32_t>(ebp10)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax11) + 1)) + cf13);
    zf17 = *reinterpret_cast<signed char*>(edx18 + reinterpret_cast<int32_t>(ebp10)) == 0;
    esp19 = reinterpret_cast<int32_t*>(esp7 + 1 - 1);
    *esp19 = ecx2;
    if (!zf17) {
        esp20 = esp19 - 1;
        *esp20 = 8;
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp20) - 2) = ds14;
        __asm__("hlt ");
    } else {
        *reinterpret_cast<signed char*>(&eax11) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax11) - 12);
        __asm__("out dx, al");
        __asm__("insd ");
        *eax6 = eax11;
        if (__intrinsic()) 
            goto 0x40105a;
        *(esp19 - 1) = 0x4010d5;
        eax21 = fun_3abdc502();
        __asm__("salc ");
        __asm__("in eax, dx");
        *reinterpret_cast<unsigned char*>(&eax21) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax21) | 0xbc);
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(ebp10) + 4 - 2) = es22;
        gbef6bc55 = eax21;
    }
}

struct s115 {
    signed char[1] pad1;
    signed char f1;
};

void fun_4010e5() {
    signed char* edi1;
    struct s115* edi2;
    int32_t eax3;
    int32_t ebp4;
    uint1_t cf5;
    int1_t zf6;
    int32_t ebx7;
    signed char bl8;
    uint48_t v9;
    int16_t ss10;
    int32_t eax11;
    int32_t edx12;
    int32_t edx13;

    edi1 = &edi2->f1;
    eax3 = ebp4 - 1;
    if (reinterpret_cast<uint1_t>(cf5 | reinterpret_cast<uint1_t>(eax3 == 0))) {
    }
    *reinterpret_cast<int32_t*>(edi1 - 40) = *reinterpret_cast<int32_t*>(edi1 - 40) + reinterpret_cast<int32_t>(edi1);
    zf6 = *reinterpret_cast<int32_t*>(edi1 - 40) == 0;
    *edi1 = *reinterpret_cast<signed char*>(&eax3);
    if (zf6) 
        goto addr_0x401137_7;
    addr_0x401137_7:
    *reinterpret_cast<signed char*>(&ebx7) = reinterpret_cast<signed char>(bl8 >> -3);
    __asm__("les ebx, [ebx]");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v9) + 2) = ebx7;
    *reinterpret_cast<int16_t*>(&v9) = ss10;
    __asm__("cdq ");
    if (__intrinsic()) 
        goto "???";
    __asm__("in al, 0xab");
    __asm__("in eax, 0x71");
    *reinterpret_cast<uint32_t*>(eax11 - 94) = *reinterpret_cast<uint32_t*>(eax11 - 94) - (edx12 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(eax11 - 94) < edx13 + __intrinsic()));
    goto *reinterpret_cast<int16_t*>(&v9);
}

void fun_4010f4(int32_t ecx) {
    int32_t ebx2;
    int32_t ebx3;
    int32_t ebx4;

    __asm__("sti ");
    __asm__("cli ");
    __asm__("aaa ");
    *reinterpret_cast<unsigned char*>(ebx2 - 0x622b3869) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx3 - 0x622b3869) - reinterpret_cast<unsigned char>(71 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx4 - 0x622b3869) < 71)));
    __asm__("outsb ");
    __asm__("out dx, al");
    *reinterpret_cast<signed char*>(ecx - 0xadd2d42) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx - 0xadd2d42) - *reinterpret_cast<signed char*>(&ecx));
    __asm__("fnsave [ebx+0x513330ef]");
    __asm__("arpl [0xb03e8797], bx");
    return;
}

void fun_401127() {
    return;
}

struct s116 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_401188(int32_t ecx) {
    void* edx2;
    int32_t eax3;
    void* edx4;
    int32_t eax5;
    unsigned char ah6;
    int32_t eax7;
    signed char* edi8;
    signed char al9;
    int32_t ebx10;
    struct s116* edi11;

    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx2) + eax3 * 2 + 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx4) + eax5 * 2 + 8) & ah6);
    __asm__("clc ");
    eax7 = ecx;
    if (*edi8 != al9) 
        goto 0x401142;
    __asm__("fnstcw word [ebp+0x17]");
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) | *reinterpret_cast<unsigned char*>(ebx10 + 0x746f2bf6));
    edi11->f1 = eax7;
}

struct s117 {
    signed char[109] pad109;
    int32_t f109;
};

void fun_40119c(int32_t ecx, int32_t a2) {
    struct s117* ebp3;
    void* ebp4;

    __asm__("wait ");
    ebp3 = reinterpret_cast<struct s117*>(reinterpret_cast<int32_t>(ebp4) + 1);
    ebp3->f109 = ebp3->f109 >> *reinterpret_cast<signed char*>(&ecx);
    if (ebp3->f109) {
        __asm__("aad 0x55");
        __asm__("sti ");
    }
}

void fun_4011ab() {
    int1_t less1;
    int32_t ebx2;
    int32_t esi3;
    int32_t ebx4;
    int32_t* edi5;
    int32_t* esi6;

    if (less1) {
        while (*reinterpret_cast<int32_t*>(ebx2 + esi3 * 8 - 0x12552b26) <= ebx4) {
            __asm__("das ");
            __asm__("out 0xfd, eax");
        }
        __asm__("pushad ");
    } else {
        __asm__("lahf ");
        *edi5 = *esi6;
        __asm__("outsb ");
        __asm__("out dx, al");
    }
}

signed char g6b2d286c;

struct s118 {
    signed char[62] pad62;
    int32_t f62;
};

uint32_t* fun_7f59dab5(int32_t a1);

struct s119 {
    signed char[65] pad65;
    uint32_t f65;
};

struct s120 {
    signed char[65] pad65;
    uint32_t f65;
};

signed char g159c783b;

void fun_401219() {
    int1_t sf1;
    signed char al2;
    int32_t ebp3;
    int32_t ebp4;
    struct s118* edi5;
    int32_t ebx6;
    int32_t ebx7;
    uint32_t* eax8;
    struct s119* esi9;
    struct s120* esi10;
    uint32_t edi11;
    int32_t eflags12;
    uint32_t* tmp32_13;
    uint32_t* edx14;
    uint32_t* ecx15;

    if (!sf1) {
    }
    g6b2d286c = al2;
    ebp3 = ebp4 + edi5->f62;
    if (__intrinsic()) {
        addr_0x401205_7:
    } else {
        ebx6 = ebx7 + 1;
        eax8 = fun_7f59dab5(__return_address());
        if (reinterpret_cast<uint1_t>(ebx6 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(ebx6 == 0)) {
        }
        esi9->f65 = esi10->f65 | edi11;
        *reinterpret_cast<int1_t*>(&eflags12) = __intrinsic();
        do {
            if (!*reinterpret_cast<int1_t*>(&eflags12)) {
                *reinterpret_cast<signed char*>(&eax8) = g159c783b;
                __asm__("wait ");
                tmp32_13 = edx14;
                edx14 = eax8;
                *ecx15 = *ecx15 & reinterpret_cast<uint32_t>(edx14);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx15) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx15) + 1) - *reinterpret_cast<signed char*>(ebp3 + 0x390767c3));
                __asm__("out dx, al");
                eax8 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_13) + 1);
                ecx15 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx15) - 1);
                if (!(reinterpret_cast<uint1_t>(!!ecx15) & reinterpret_cast<uint1_t>(!!eax8))) 
                    goto addr_0x4011fe_14;
            }
            *edx14 = *edx14 ^ 0x432ec792;
            *reinterpret_cast<int1_t*>(&eflags12) = __intrinsic();
        } while (1);
        goto addr_0x40124b_16;
    }
    __asm__("fdiv st2, st0");
    addr_0x40124b_16:
    if (1) {
        if (!0) {
            __asm__("fmul st0, st4");
            __asm__("lahf ");
        }
        __asm__("outsb ");
        if (reinterpret_cast<int32_t>(ecx15) - 1) 
            goto 0x401223;
        __asm__("into ");
        __asm__("retf ");
    } else {
        __asm__("aaa ");
        __asm__("int1 ");
    }
    addr_0x4011fe_14:
    __asm__("enter 0x265b, 0x22");
    __asm__("retf 0x72f6");
    goto addr_0x401205_7;
}

void fun_40122c() {
    int32_t* edi1;
    int32_t* esi2;
    void* esp3;
    int32_t edx4;
    int32_t edx5;
    int32_t esi6;

    __asm__("fadd qword [edx+0x2c84a853]");
    *edi1 = *esi2;
    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 1);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp3) + edx4 * 2 + 0x4eae1d78) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp3) + edx5 * 2 + 0x4eae1d78) + (esi6 + 4);
}

struct s121 {
    int32_t f0;
    signed char f4;
};

struct s122 {
    signed char[1] pad1;
    int32_t f1;
};

struct s123 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_401296(int32_t ecx) {
    int32_t ecx2;
    struct s121* edi3;
    struct s122* edi4;
    int32_t* esi5;
    struct s123* esi6;
    int32_t eax7;
    int32_t* eax8;
    signed char al9;

    ecx2 = ecx - 1;
    __asm__("fisttp qword [ecx-0x27]");
    if (!(reinterpret_cast<uint1_t>(ecx2 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(ecx2 == 0))) {
        edi3 = reinterpret_cast<struct s121*>(&edi4->f1);
        esi5 = &esi6->f1;
        __asm__("das ");
    }
    __asm__("fst dword [edx]");
    __asm__("enter 0x2a6c, 0x57");
    *esi5 = *esi5 - eax7;
    *reinterpret_cast<signed char*>(&eax8) = reinterpret_cast<signed char>(al9 - 37);
    edi3->f0 = *esi5;
    __asm__("in al, 0x85");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1) = -86;
    edi3->f4 = *reinterpret_cast<signed char*>(*eax8 * -52);
    __asm__("in al, dx");
    __asm__("fcomp qword [esi-0x7b]");
}

void fun_4012d1() {
}

struct s124 {
    signed char[1] pad1;
    signed char f1;
};

signed char g297e3083;

void fun_4012da() {
    void* ecx1;
    int1_t below_or_equal2;
    uint32_t edx3;
    int32_t edx4;
    uint16_t ds5;
    struct s124* edi6;

    __asm__("aam 0xa3");
    __asm__("lodsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1) = 32;
    __asm__("clc ");
    below_or_equal2 = edx3 <= *reinterpret_cast<uint32_t*>(edx4 + 0x387f6af);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx1) - 1) = static_cast<uint32_t>(ds5);
    if (!below_or_equal2) {
        __asm__("popad ");
        __asm__("hlt ");
    } else {
        if (!below_or_equal2) 
            goto 0x4012c3;
        edi6->f1 = g297e3083;
        __asm__("lodsd ");
    }
}

struct s125 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4012fb(uint32_t ecx) {
    uint32_t eflags2;
    struct s125* edi3;
    int32_t eax4;
    int32_t esi5;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    __asm__("pushad ");
    __asm__("out dx, al");
    __asm__("cmc ");
    __asm__("int1 ");
    edi3->f4 = eax4;
    __asm__("into ");
    *reinterpret_cast<int1_t*>(&eflags2) = 0;
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = (reinterpret_cast<uint32_t>(esi5 + 4 + 4) & ecx) == 0;
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
    if (*reinterpret_cast<int1_t*>(&eflags2)) 
        goto "???";
    __asm__("xlatb ");
    goto eflags2 & 0xfcffff;
}

void fun_40136f(int32_t ecx) {
    __asm__("fmul dword [ebx+0x32]");
    do {
    } while (!__intrinsic());
    if (ecx - 1) {
        __asm__("retf ");
    } else {
        __asm__("clc ");
        __asm__("salc ");
        __asm__("fimul word [ebx-0x1e]");
    }
}

void fun_4013a8() {
    int32_t esi1;
    int32_t esi2;
    unsigned char bl3;

    __asm__("repne rcr byte [esi-0x54], cl");
    *reinterpret_cast<unsigned char*>(esi1 - 0x51c62bc6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi2 - 0x51c62bc6) | bl3);
    __asm__("sahf ");
}

struct s126 {
    int32_t f0;
    void* f4;
};

void fun_4013ba() {
    struct s126* esp1;
    int32_t esi2;
    int32_t ecx3;
    int32_t edx4;
    void* esp5;
    int32_t eax6;
    int32_t ebp7;
    int16_t ax8;
    int32_t* esp9;
    int32_t esi10;
    signed char* edi11;
    int32_t ebx12;

    __asm__("fpxtract ");
    __asm__("iretd ");
    __asm__("in eax, dx");
    esp1 = reinterpret_cast<struct s126*>(esi2 * 83);
    __asm__("lodsb ");
    ecx3 = esp1->f0 - 1;
    if (reinterpret_cast<uint1_t>(!!ecx3) & reinterpret_cast<uint1_t>(!!(edx4 + 1))) {
        __asm__("retf ");
        __asm__("retf ");
        __asm__("clc ");
    } else {
        esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1->f4) + 4);
        eax6 = ebp7;
        *reinterpret_cast<int32_t*>(ax8 + 0x7c) = *reinterpret_cast<int32_t*>(ax8 + 0x7c) << *reinterpret_cast<unsigned char*>(&ecx3);
        esp9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp5) - 4);
        *esp9 = esi10;
        __asm__("lodsb ");
        *edi11 = *reinterpret_cast<signed char*>(&eax6);
        *(esp9 - 1) = ebx12;
        __asm__("aaa ");
        __asm__("insd ");
        __asm__("sti ");
        __asm__("iretd ");
        __asm__("lodsb ");
    }
}

void fun_4013ed() {
}

int32_t g3c2a6171;

void fun_4013f3(int32_t ecx) {
    int32_t eax2;
    int32_t* esp3;
    int1_t less4;
    int32_t ebx5;
    int32_t ebx6;
    int32_t esi7;
    signed char dh8;
    int32_t edi9;
    int32_t edi10;
    unsigned char bh11;

    if (ecx) {
        while (--ecx, !!ecx) {
            eax2 = 0x58898158;
            esp3 = reinterpret_cast<int32_t*>(0x3c2a617b);
            less4 = reinterpret_cast<signed char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1) + *reinterpret_cast<unsigned char*>(ebx5 + ebx6 + 6)))) < reinterpret_cast<signed char>(0) != __intrinsic();
            do {
                --esp3;
                *esp3 = esi7;
                if (less4) 
                    break;
            } while (!less4);
            goto addr_0x401433_6;
        }
    } else {
        goto addr_0x4013f6_9;
    }
    if (ecx >= 0) {
        addr_0x4013f7_11:
        __asm__("out dx, eax");
        __asm__("fimul word [ebp+0x4d]");
        __asm__("retf ");
        __asm__("arpl bp, di");
        *reinterpret_cast<signed char*>(ecx - 0x7e40c2c1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx - 0x7e40c2c1) - dh8);
        *reinterpret_cast<unsigned char*>(edi9 - 50) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi10 - 50) ^ bh11);
    } else {
        if (!ecx) {
            g3c2a6171 = ecx;
        }
    }
    addr_0x4013f6_9:
    goto addr_0x4013f7_11;
    addr_0x401433_6:
}

void fun_40140b(int32_t ecx) {
    do {
    } while (!__intrinsic());
    *reinterpret_cast<unsigned char*>(ecx - 0x60a24ec1) = 0;
}

struct s127 {
    signed char[33] pad33;
    signed char f33;
};

void fun_401455() {
    struct s127* edx1;
    signed char ch2;

    __asm__("aad 0xf4");
    edx1->f33 = ch2;
}

void fun_401477() {
    int1_t less_or_equal1;
    signed char* edi2;
    signed char al3;

    if (less_or_equal1) 
        goto 0x40145c;
    *edi2 = al3;
    if (reinterpret_cast<int32_t>(__zero_stack_offset()) + 1) {
        __asm__("clc ");
        __asm__("fmul st0, st4");
    }
}

void fun_401486() {
    __asm__("in al, dx");
}

void fun_40148b() {
    int32_t ebx1;
    int32_t ebx2;
    int32_t ebp3;
    signed char dl4;

    *reinterpret_cast<uint32_t*>(ebx1 - 0x6869d345) = *reinterpret_cast<uint32_t*>(ebx2 - 0x6869d345) | 0x16e13287;
    *reinterpret_cast<signed char*>(ebp3 + 0x160c61e) = dl4;
}

struct s128 {
    signed char[3] pad3;
    int32_t f3;
};

int32_t gf993a777;

void fun_4014a6(struct s128* ecx, int32_t a2) {
    int32_t edx3;
    int32_t eax4;

    __asm__("in al, 0xd0");
    ecx->f3 = ecx->f3 - edx3;
    gf993a777 = eax4;
    __asm__("stc ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) - 55) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) - 55) - 53;
    __asm__("lodsb ");
    __asm__("hlt ");
}

signed char gb4428c2c;

int32_t fun_4014d2(int32_t ecx) {
    int32_t eax2;
    int32_t edx3;

    eax2 = edx3;
    *reinterpret_cast<signed char*>(&eax2) = gb4428c2c;
    return eax2;
}

void fun_4014e0() {
    int1_t zf1;

    __asm__("rcl byte [ebp+0x55afddad], 1");
    __asm__("fnstcw word [esi+0x1e2ed242]");
    if (!zf1) {
    }
}

void fun_4014f4() {
    int1_t pf1;
    signed char al2;

    __asm__("cdq ");
    if (pf1) 
        goto 0x40148d;
    if (al2 > -41) 
        goto 0x4014b8;
    return;
}

struct s129 {
    signed char[6] pad6;
    signed char f6;
};

struct s130 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s131 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_401539(int32_t ecx) {
    struct s129* esi2;
    int32_t* edi3;
    int32_t* esi4;
    uint32_t* edi5;
    struct s130* edi6;
    uint32_t* esi7;
    struct s131* esi8;
    int1_t cf9;
    int32_t edx10;
    uint16_t* ebx11;

    __asm__("fiadd dword [edi+0x47]");
    __asm__("in eax, dx");
    __asm__("in al, dx");
    esi2->f6 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
    __asm__("clc ");
    __asm__("cdq ");
    *edi3 = *esi4;
    edi5 = &edi6->f4;
    esi7 = &esi8->f4;
    __asm__("insd ");
    cf9 = *esi7 < *edi5;
    *edi5 = *esi7;
    if (!cf9) {
        __asm__("fiadd word [ecx]");
    } else {
        __asm__("das ");
        edx10 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 + 4);
        if (*reinterpret_cast<uint16_t*>(&edx10) < *ebx11) {
            __asm__("sahf ");
        }
    }
    __asm__("arpl sp, ax");
}

struct s132 {
    signed char[56] pad56;
    unsigned char f56;
};

void fun_401565(signed char cl) {
    int32_t edx2;
    signed char dl3;
    signed char* edi4;
    void* edi5;
    signed char* eax6;
    void* eax7;
    struct s132* esi8;
    int32_t ebp9;
    int32_t ebx10;

    __asm__("rcl byte [edx+0xed24e83], 1");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx2) + 1) = 0x90;
    *reinterpret_cast<signed char*>(edx2 - 0x76) = dl3;
    __asm__("out dx, eax");
    __asm__("arpl [eax-0x1e], bx");
    __asm__("das ");
    __asm__("lahf ");
    edi4 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi5) - 1);
    __asm__("wait ");
    *edi4 = *eax6;
    __asm__("stc ");
    __asm__("insb ");
    __asm__("in eax, dx");
    __asm__("outsb ");
    eax7 = reinterpret_cast<void*>(edi4 + 1);
    esi8->f56 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esi8->f56 + *reinterpret_cast<signed char*>(&eax7)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esi8) < reinterpret_cast<uint32_t>(*reinterpret_cast<struct s132**>(reinterpret_cast<uint32_t>(eax6 + 1) ^ *reinterpret_cast<uint32_t*>(ebp9 + ebx10 * 8 - 0x2d150933)))));
    __asm__("int 0x3a");
    __asm__("int1 ");
    __asm__("hlt ");
}

struct s133 {
    signed char[89] pad89;
    uint32_t f89;
};

struct s134 {
    signed char[89] pad89;
    uint32_t f89;
};

uint32_t g8cc2aada;

void fun_4015d4() {
    int1_t less1;
    uint32_t eax2;
    signed char dh3;
    int32_t ebp4;
    int32_t ebp5;
    uint32_t ebx6;
    struct s133* ebp7;
    struct s134* ebp8;

    if (!less1) 
        goto 0x401585;
    __asm__("fisubr word [esi+0xa8a4809e]");
    while (1) {
        __asm__("sahf ");
        *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) + dh3)));
        *reinterpret_cast<unsigned char*>(ebp4 - 0x35c57eb) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp5 - 0x35c57eb) | *reinterpret_cast<unsigned char*>(&eax2));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1) = 35;
        __asm__("rol byte [edx+0x2f], 0x48");
        eax2 = eax2 | 0xf84985c4;
        --ebx6;
        __asm__("cli ");
        __asm__("aas ");
        __asm__("into ");
        ebp7->f89 = ebp8->f89 | ebx6;
        g8cc2aada = eax2;
        if (!1) 
            goto "???";
    }
}

void fun_40161a() {
    int1_t sf1;
    int1_t of2;

    if (!sf1) 
        goto 0x401608;
    __asm__("aas ");
    if (!of2) 
        goto 0x4015e7;
    if (0) 
        goto 0x401608;
}

int32_t g2033df07;

void fun_40162c() {
    uint48_t v1;
    int32_t ecx2;
    int1_t cf3;
    int1_t less4;
    int1_t zf5;
    int1_t of6;
    int32_t ecx7;
    int16_t cs8;
    int32_t esi9;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = 0x66;
    __asm__("outsb ");
    if (!cf3) {
        __asm__("repne daa ");
    }
    while (less4) {
        g2033df07 = g2033df07 << 1;
        zf5 = g2033df07 == 0;
        less4 = __undefined() != of6;
        __asm__("xlatb ");
    }
    ecx7 = ecx2 - 1;
    if (!(reinterpret_cast<uint1_t>(!!ecx7) & reinterpret_cast<uint1_t>(!zf5))) 
        goto addr_0x401639_9;
    addr_0x401639_9:
    *reinterpret_cast<int16_t*>(&v1) = cs8;
    if (reinterpret_cast<uint1_t>(!!(ecx7 - 1)) & reinterpret_cast<uint1_t>(esi9 - 1 == 0)) 
        goto 0x401602;
    goto *reinterpret_cast<int16_t*>(&v1);
}

void fun_401709() {
    __asm__("hlt ");
}

struct s135 {
    signed char[4] pad4;
    int32_t f4;
};

struct s136 {
    signed char[52] pad52;
    unsigned char f52;
};

signed char g72f0093f;

uint32_t g4e039692;

struct s137 {
    signed char[56] pad56;
    uint32_t f56;
};

void fun_ea008cad();

uint32_t g6cfa6e1;

signed char g3425e2e9;

void fun_40174a() {
    struct s135* esp1;
    int32_t ecx2;
    unsigned char ch3;
    struct s136* ebp4;
    int1_t zf5;
    int1_t of6;
    signed char al7;
    uint32_t eax8;
    struct s137* edi9;
    int32_t edx10;
    int16_t es11;
    int16_t v12;
    int32_t v13;
    int32_t ebx14;
    int16_t* esp15;
    int16_t ss16;
    int32_t* esp17;
    uint32_t eax18;
    int32_t ebx19;
    uint32_t eax20;
    int16_t ds21;
    int32_t esi22;
    int32_t* esp23;
    int16_t cs24;
    int32_t ebx25;
    void* ebx26;

    esp1 = reinterpret_cast<struct s135*>(__zero_stack_offset());
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = reinterpret_cast<unsigned char>(ch3 ^ ebp4->f52);
    zf5 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx2) + 1) == 0;
    of6 = 0;
    g72f0093f = al7;
    do {
        g4e039692 = eax8;
        do {
            *reinterpret_cast<signed char*>(&ecx2) = 52;
            if (of6) 
                goto addr_0x401729_4;
            edi9 = reinterpret_cast<struct s137*>(reinterpret_cast<int32_t>(edi9) + 1);
            *reinterpret_cast<signed char*>(&edx10) = 0x81;
            zf5 = 0;
            of6 = 0;
            __asm__("a16 in eax, 0xe5");
            esp1 = reinterpret_cast<struct s135*>(reinterpret_cast<uint32_t>(esp1) - 4 + 4);
            *reinterpret_cast<signed char*>(&ecx2) = 0x89;
            __asm__("pushad ");
            if (!1) 
                break;
            fun_ea008cad();
            es11 = v12;
            esp1 = reinterpret_cast<struct s135*>(reinterpret_cast<uint32_t>(esp1) - 4 + 4 + 4 + 2);
            *reinterpret_cast<unsigned char*>(&eax8) = 87;
            __asm__("in eax, 0x8d");
            __asm__("insd ");
            zf5 = v13 + 1 == 0;
            of6 = __intrinsic();
        } while (0);
        goto addr_0x4017c7_7;
        if (1) 
            goto addr_0x40177b_9;
    } while (0);
    goto addr_0x401772_11;
    addr_0x401729_4:
    while (zf5) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx14) + 1) = 0;
        esp15 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp1) - 2);
        *esp15 = ss16;
        eax8 = eax8 & 0x291c6ace;
        *reinterpret_cast<signed char*>(&ebx14) = 72;
        esp1 = reinterpret_cast<struct s135*>(esp15 + 2);
        *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax8) + 99);
        __asm__("fild dword [ebp-0x1a]");
        *reinterpret_cast<int32_t*>(ebx14 - 2) = ebx14;
        __asm__("salc ");
        g6cfa6e1 = eax8;
        --ebx14;
        __asm__("iretd ");
        zf5 = g3425e2e9 == -70;
        --ecx2;
        if (!ecx2) 
            goto addr_0x4016e7_16;
        addr_0x401726_17:
    }
    __asm__("sahf ");
    __asm__("das ");
    addr_0x4016e7_16:
    esp17 = &esp1->f4;
    eax18 = eax8 + 0x328f5451;
    ebx19 = *esp17;
    *reinterpret_cast<unsigned char*>(&eax18) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax18) | 44) | 0xa1);
    eax20 = eax18 - 1;
    if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax20) + 1) >= *reinterpret_cast<signed char*>(&ebx19)) {
        __asm__("cli ");
        *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp17 + 1) - 2) = ds21;
        *reinterpret_cast<unsigned char*>(esi22 - 43) = 0xff;
        if (0) {
        }
    }
    addr_0x4017c7_7:
    *reinterpret_cast<unsigned char*>(edx10 - 0x28fa5881) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx10 - 0x28fa5881) ^ 0xe7);
    esp23 = reinterpret_cast<int32_t*>((reinterpret_cast<uint32_t>(esp1) | edi9->f56) - 4);
    *esp23 = 0x72;
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp23) - 2) = cs24;
    goto ebx25;
    addr_0x40177b_9:
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp1) + reinterpret_cast<int32_t>(ebx26) - 2) = es11;
    addr_0x401772_11:
    if (!1) {
        ++eax8;
        zf5 = eax8 == 0;
        --ecx2;
        if (ecx2) {
            esp1 = reinterpret_cast<struct s135*>(0xa968efcb);
            goto addr_0x401726_17;
        }
    }
}

void fun_40178a() {
    uint32_t eax1;
    uint32_t eax2;
    int32_t ebx3;
    int32_t ebp4;
    int32_t ebx5;
    int32_t ebp6;

    eax1 = eax2 ^ 0x1f245ada;
    *reinterpret_cast<signed char*>(ebx3 + ebp4 - 0x282da442) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx5 + ebp6 - 0x282da442) - *reinterpret_cast<signed char*>(&eax1));
}

void fun_40179e() {
    __asm__("salc ");
}

void fun_3ed0ee8a();

void fun_4017a5(int32_t ecx) {
    __asm__("insb ");
    __asm__("fadd qword [edi]");
    fun_3ed0ee8a();
}

void fun_40181f() {
    __asm__("in eax, dx");
    __asm__("outsb ");
}

void fun_40182d() {
    int1_t cf1;
    uint32_t* eax2;
    uint32_t* eax3;
    int32_t ebp4;
    int32_t ebp5;

    if (cf1) 
        goto 0x4017cf;
    *eax2 = *eax3 ^ 0x2e9ad1e6;
    *reinterpret_cast<int32_t*>(ebp4 - 0x3fe2af3d) = *reinterpret_cast<int32_t*>(ebp5 - 0x3fe2af3d) - 1;
    __asm__("int1 ");
}

void fun_40184d() {
}

void fun_401853() {
    uint48_t v1;

    *reinterpret_cast<int32_t*>(&v1) = reinterpret_cast<int32_t>(__return_address());
    __asm__("rcr dword [ebx], 0x47");
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2);
}

void fun_401860() {
    __asm__("aas ");
    __asm__("hlt ");
}

unsigned char g99b336fd;

unsigned char fun_401891() {
    unsigned char al1;
    uint1_t cf2;

    al1 = g99b336fd;
    __asm__("iretd ");
    return al1 - reinterpret_cast<unsigned char>(14 + reinterpret_cast<uint1_t>(al1 < reinterpret_cast<unsigned char>(14 + cf2)));
}

void fun_40191e() {
}

uint32_t ge9d57a18;

void fun_401922(int32_t ecx) {
    uint1_t cf2;
    uint32_t ebx3;
    int32_t ebx4;

    __asm__("fsubr dword [ebx+edx-0x6b]");
    cf2 = reinterpret_cast<uint1_t>(ge9d57a18 < ebx3);
    ge9d57a18 = ge9d57a18 - (ebx4 + cf2);
    __asm__("insb ");
}

struct s138 {
    uint32_t f0;
    signed char f2;
};

struct s139 {
    signed char[118] pad118;
    int32_t f118;
};

struct s140 {
    signed char[20] pad20;
    unsigned char f20;
};

uint32_t g8441fcb4;

int32_t g348c0e47;

unsigned char ga8e1e8db;

void fun_401947(struct s138* ecx) {
    uint1_t cf2;
    unsigned char* edi3;
    unsigned char al4;
    uint1_t zf5;
    signed char* edi6;
    signed char al7;
    signed char* edi8;
    void* edi9;
    signed char* esi10;
    void* esi11;
    int32_t eax12;
    int32_t eax13;
    struct s139* eax14;
    unsigned char* edx15;
    uint32_t eax16;
    int32_t ecx17;
    int32_t eax18;
    int32_t eax19;
    signed char bh20;
    struct s140* eax21;
    struct s140* edx22;
    uint32_t ebx23;
    signed char bl24;
    unsigned char* tmp32_25;
    int32_t edx26;

    __asm__("out 0x2c, eax");
    cf2 = reinterpret_cast<uint1_t>(*edi3 < al4);
    zf5 = reinterpret_cast<uint1_t>(*edi6 == al7);
    edi8 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi9) - 1);
    esi10 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi11) - 1);
    if (!cf2) {
        eax12 = eax13 * eax14->f118;
        edx15 = __intrinsic();
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + 2) + *reinterpret_cast<signed char*>(&ecx));
        __asm__("out dx, eax");
        __asm__("int 0xe5");
        *edi8 = *esi10;
        __asm__("out 0x92, al");
        eax16 = reinterpret_cast<uint32_t>(eax12 + 0x2da8d806 + 0x3410a706);
        if (!(__intrinsic() | reinterpret_cast<uint1_t>(eax16 == 0))) 
            goto addr_0x4019c1_10;
    } else {
        __asm__("ror dword [eax-0x21], 0xbc");
        ecx17 = reinterpret_cast<int32_t>(ecx) - 1;
        if (reinterpret_cast<uint1_t>(!!ecx17) & zf5) {
            addr_0x40190e_12:
            if (reinterpret_cast<uint1_t>(!!(ecx17 - 1)) & reinterpret_cast<uint1_t>(!zf5)) 
                goto 0x401894; else 
                goto addr_0x401913_13;
        } else {
            *reinterpret_cast<unsigned char*>(eax18 - 98) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax19 - 98) + bh20) + cf2);
            eax21 = edx22;
            zf5 = reinterpret_cast<uint1_t>((*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax21) + 1) ^ eax21->f20) == 0);
            *edi8 = *reinterpret_cast<signed char*>(&eax21);
            __asm__("lock out 0xf2, al");
            __asm__("enter 0xc1ba, 0x80");
            if (zf5) 
                goto addr_0x40190d_18; else 
                goto addr_0x401973_19;
        }
    }
    addr_0x40198e_20:
    addr_0x4019c1_10:
    *reinterpret_cast<signed char*>(&ebx23) = reinterpret_cast<signed char>(bl24 + *(esi10 - 1 - 62));
    __asm__("insd ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax16) + 1) = 0x89;
    if (*reinterpret_cast<signed char*>(&ebx23) < 0) {
        __asm__("fldenv [edx+0x32]");
        ecx->f0 = ecx->f0 - (0x65 - reinterpret_cast<uint1_t>(ecx->f0 < 0x65 - __intrinsic()));
        ecx = reinterpret_cast<struct s138*>(reinterpret_cast<int32_t>(ecx) - 1);
        ebx23 = eax16;
        __asm__("cli ");
        g8441fcb4 = g8441fcb4 | 0x8441fcb4;
        edx15 = reinterpret_cast<unsigned char*>(g348c0e47 * -42);
    }
    tmp32_25 = *reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(ecx) - 0x6778fce2);
    *reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(ecx) - 0x6778fce2) = edx15;
    __asm__("fbld tword [ebx+0x6a8a70dd]");
    *tmp32_25 = reinterpret_cast<unsigned char>(*tmp32_25 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx23) + 1));
    __asm__("aas ");
    *tmp32_25 = reinterpret_cast<unsigned char>(*tmp32_25 ^ ebx23);
    edx26 = 0x72d4953c;
    ga8e1e8db = reinterpret_cast<unsigned char>(ga8e1e8db ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx26) + 1));
    addr_0x401913_13:
    addr_0x40190d_18:
    goto addr_0x40190e_12;
    addr_0x401973_19:
    if (0) {
        goto addr_0x40198e_20;
    } else {
        __asm__("cmc ");
    }
}

void fun_401979(int32_t ecx) {
    int32_t ebx2;
    int32_t ebx3;

    __asm__("lodsb ");
    if (!__intrinsic()) 
        goto 0x4019a6;
    *reinterpret_cast<int32_t*>(ebx2 - 0x35df7248) = *reinterpret_cast<int32_t*>(ebx3 - 0x35df7248) << *reinterpret_cast<unsigned char*>(&ecx);
}

uint32_t ge282c6c1;

void fun_401992(uint32_t ecx) {
    __asm__("popad ");
    ge282c6c1 = ge282c6c1 ^ ecx;
    __asm__("sahf ");
}

void fun_401a16() {
    signed char* eax1;
    signed char* eax2;
    unsigned char* esi3;
    void* esi4;
    int32_t ebx5;
    int32_t edx6;
    int32_t edx7;
    signed char ah8;
    int32_t edi9;

    *eax1 = reinterpret_cast<signed char>(*eax2 - 1);
    __asm__("retf 0x84e0");
    esi3 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi4) - *reinterpret_cast<int32_t*>(ebx5 - 0x74083f31));
    __asm__("das ");
    *reinterpret_cast<unsigned char*>(edx6 + 0x13723078) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx7 + 0x13723078) & 0x72);
    *esi3 = reinterpret_cast<unsigned char>(*esi3 + ah8);
    *esi3 = reinterpret_cast<unsigned char>(*esi3 >> 1);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 - 4 - 4 + edi9 - 4) = 0xce80ef6a;
    __asm__("fstp tword [ebp+0x2e]");
    __asm__("rol dword [edx-0x37], cl");
    if (!__intrinsic()) {
        __asm__("cmc ");
        __asm__("les edi, [ecx]");
        __asm__("aam 0x65");
        if (__intrinsic()) {
            __asm__("salc ");
            __asm__("lodsb ");
        } else {
            __asm__("in eax, dx");
        }
    } else {
        __asm__("cli ");
        __asm__("cli ");
    }
}

void fun_401a4a(int32_t ecx) {
    __asm__("aas ");
    __asm__("aas ");
    __asm__("aaa ");
}

void fun_401a6c(int32_t ecx) {
    int32_t edx2;
    int32_t edx3;
    unsigned char al4;
    unsigned char al5;
    int32_t eax6;

    __asm__("aaa ");
    edx2 = edx3 - 1;
    al4 = reinterpret_cast<unsigned char>(al5 & *reinterpret_cast<unsigned char*>(&edx2));
    __asm__("cmc ");
    if (!__intrinsic()) 
        goto 0x4019fa;
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(al4 - reinterpret_cast<unsigned char>(97 + reinterpret_cast<uint1_t>(al4 < 97)));
    *reinterpret_cast<unsigned char*>(eax6 + 0x5c015cf8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax6 + 0x5c015cf8) | *reinterpret_cast<unsigned char*>(&edx2));
    __asm__("enter 0x1e63, 0x1e");
    __asm__("outsd ");
}

void fun_401a87() {
}

struct s141 {
    struct s141* f0;
    signed char[71] pad73;
    uint32_t f73;
    signed char[32] pad109;
    uint32_t f109;
    signed char[1573682891] pad1573683004;
    signed char f1573683004;
};

signed char g6c1a14c9;

struct s142 {
    signed char[4] pad4;
    struct s141* f4;
};

struct s143 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s144 {
    signed char[1] pad1;
    struct s141* f1;
};

struct s141* fun_e9203a0c();

struct s145 {
    struct s141* f0;
    struct s141* f2;
};

struct s141* g4e3ccbc3;

int32_t fun_e0846b08();

signed char g321d0a8d;

void fun_401a9f(int32_t ecx) {
    struct s141* eax2;
    int1_t less_or_equal3;
    int32_t* edi4;
    int32_t* esi5;
    struct s141* edi6;
    struct s142* edi7;
    unsigned char* esi8;
    struct s143* esi9;
    struct s141* ecx10;
    struct s141* ebp11;
    void* esp12;
    struct s141* ebx13;
    struct s144* ebx14;
    uint1_t cf15;
    int32_t ebp16;
    int32_t ebp17;
    int32_t ebp18;
    struct s141* edx19;
    uint32_t edx20;
    int32_t* esp21;
    struct s141* eax22;
    uint32_t ebp23;
    int1_t pf24;
    uint1_t zf25;
    int1_t sf26;
    uint1_t below_or_equal27;
    void** esp28;
    uint32_t ecx29;
    struct s141* esp30;
    struct s145* esp31;
    uint32_t ecx32;
    struct s141* esp33;
    struct s141* ss34;
    struct s141* ebp35;
    struct s141* ebp36;
    struct s141* tmp32_37;
    uint32_t eax38;
    struct s141* esp39;
    struct s141** esp40;
    uint16_t fs41;
    int32_t* esp42;
    uint16_t ds43;
    int1_t less_or_equal44;
    struct s141** esp45;

    *reinterpret_cast<signed char*>(&eax2) = g6c1a14c9;
    __asm__("fdivr dword [eax]");
    __asm__("rcl dword [eax+0xc89e2d1c], 0xaf");
    if (!less_or_equal3) 
        goto 0x401a91;
    *edi4 = *esi5;
    edi6 = reinterpret_cast<struct s141*>(&edi7->f4);
    esi8 = &esi9->f4;
    ecx10 = ebp11;
    esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4);
    if (__intrinsic()) {
        ebx13 = reinterpret_cast<struct s141*>(&ebx14->f1);
        *reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(ecx10) + 0x5dcc7f3c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(ecx10) + 0x5dcc7f3c) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx13) + 1));
        cf15 = __intrinsic();
    }
    __asm__("aad 0xb");
    *reinterpret_cast<unsigned char*>(ebp16 - 0xc163dae) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebp17 - 0xc163dae) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx13) + 1) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebp18 - 0xc163dae) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx13) + 1) + cf15))));
    edx19 = reinterpret_cast<struct s141*>(edx20 | reinterpret_cast<uint16_t>(*reinterpret_cast<struct s141**>(reinterpret_cast<uint16_t>(eax2) + reinterpret_cast<uint32_t>(esi8) * 8)));
    *reinterpret_cast<int16_t*>(&ecx10) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ecx10) - 1);
    if (!(reinterpret_cast<uint1_t>(!!*reinterpret_cast<int16_t*>(&ecx10)) & reinterpret_cast<uint1_t>(edx19 == 0))) {
        __asm__("sti ");
        *reinterpret_cast<struct s141**>(edi6) = eax2;
    }
    do {
        __asm__("out 0x42, al");
        __asm__("arpl [ebx+0xf75ca0ee], bp");
        esp21 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp12) - 4);
        *esp21 = 0x401b12;
        eax22 = fun_e9203a0c();
        __asm__("in eax, 0x7");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(eax22) + 73) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(eax22) + 73) | ebp23;
        pf24 = __intrinsic();
        zf25 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(eax22) + 73) == 0);
        sf26 = __intrinsic();
        below_or_equal27 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf25));
        esp28 = reinterpret_cast<void**>(esp21 + 1 - 1);
        *reinterpret_cast<void***>(esp28) = esp28;
        __asm__("outsd ");
        if (!below_or_equal27) 
            break;
        if (sf26) 
            goto addr_0x401add_15;
        __asm__("into ");
        do {
            __asm__("retf 0xa765");
        } while (sf26);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx10) + 1) = 0xff;
        ecx29 = reinterpret_cast<uint16_t>(ecx10) - 1;
        if (ecx29) 
            goto addr_0x401b4b_19;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx13) + 1) = 40;
        esp30 = reinterpret_cast<struct s141*>(esp28 - 1);
        *reinterpret_cast<struct s141**>(esp30) = ebx13;
        esp31 = reinterpret_cast<struct s145*>(reinterpret_cast<uint16_t>(esp30) - 4);
        esp31->f0 = edi6;
        ecx32 = ecx29 - 1;
        if (ecx32) {
            __asm__("lodsb ");
            esp33 = eax22;
            *esi8 = reinterpret_cast<unsigned char>(*esi8 & ecx32);
        } else {
            __asm__("insd ");
            ss34 = esp31->f0;
            esp33 = reinterpret_cast<struct s141*>(&esp31->f2);
            __asm__("fnstcw word [eax-0x68]");
            if (!__intrinsic()) 
                goto addr_0x401b39_23;
        }
        ecx10 = *reinterpret_cast<struct s141**>(esp33);
        esp12 = reinterpret_cast<void*>(reinterpret_cast<uint16_t>(esp33) + 4);
    } while (!ecx10);
    goto addr_0x401ae4_25;
    if (!below_or_equal27) {
        __asm__("aad 0xe4");
        __asm__("enter 0x8742, 0xf");
        *reinterpret_cast<signed char*>(&ebx13) = 0x84;
        __asm__("sti ");
        ebp35 = eax22;
        eax22 = ebp36;
        *reinterpret_cast<signed char*>(&eax22) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax22) + 89);
        zf25 = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&eax22) == 0);
        goto addr_0x401b86_28;
    }
    while (pf24) {
        tmp32_37 = edx19;
        edx19 = eax22;
        eax22 = tmp32_37;
        if (ecx10) 
            goto addr_0x401c15_31;
        ebp35 = reinterpret_cast<struct s141*>(0x163f6dcf);
        if (!zf25) 
            goto addr_0x401b92_33;
        if (!sf26) 
            goto addr_0x401c10_35;
        if (sf26) 
            goto addr_0x401bd6_37;
        addr_0x401b86_28:
        if (zf25) 
            goto addr_0x401b89_38;
        __asm__("out dx, al");
        ecx10 = edi6;
        ebx13 = reinterpret_cast<struct s141*>(reinterpret_cast<uint16_t>(ebx13) - 1);
        pf24 = __intrinsic();
        zf25 = reinterpret_cast<uint1_t>(ebx13 == 0);
        sf26 = reinterpret_cast<int16_t>(ebx13) < reinterpret_cast<int16_t>(0);
        esi8 = reinterpret_cast<unsigned char*>(0xa5b3afde);
    }
    g4e3ccbc3 = eax22;
    eax38 = reinterpret_cast<uint16_t>(eax22) - 0xefcefb01;
    if (reinterpret_cast<int16_t>(eax22) <= reinterpret_cast<int16_t>(0xefcefb01)) {
        *reinterpret_cast<signed char*>(&eax38) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax38) - 4);
        *reinterpret_cast<uint32_t*>(eax38 + reinterpret_cast<uint16_t>(ebp35) * 2 + 0xabea995) = *reinterpret_cast<int32_t*>(eax38 + reinterpret_cast<uint16_t>(ebp35) * 2 + 0xabea995) + reinterpret_cast<uint16_t>(edx19);
    } else {
        esp39 = reinterpret_cast<struct s141*>(esp28 - 1);
        *reinterpret_cast<struct s141**>(esp39) = esp39;
        if (reinterpret_cast<uint16_t>(eax22) < reinterpret_cast<uint16_t>(0xefcefb01)) {
            __asm__("ror ah, 0x3a");
        } else {
            if (!0) {
                __asm__("xlatb ");
                __asm__("retf 0xe8f4");
            }
        }
    }
    addr_0x401bf9_49:
    addr_0x401c15_31:
    __asm__("sti ");
    __asm__("iretd ");
    *reinterpret_cast<struct s141**>(esp28 - 1) = ebx13;
    __asm__("out dx, al");
    addr_0x401b92_33:
    addr_0x401c10_35:
    goto addr_0x401c15_31;
    addr_0x401bd6_37:
    __asm__("pushad ");
    __asm__("fsub st7, st0");
    esp40 = reinterpret_cast<struct s141**>(reinterpret_cast<uint32_t>(esp28) - 2);
    *esp40 = ss34;
    *reinterpret_cast<struct s141**>(edx19) = reinterpret_cast<struct s141*>(static_cast<uint32_t>(fs41));
    *reinterpret_cast<struct s141**>(ecx10) = reinterpret_cast<struct s141*>(reinterpret_cast<uint16_t>(*reinterpret_cast<struct s141**>(ecx10)) & reinterpret_cast<uint16_t>(edi6));
    esp42 = reinterpret_cast<int32_t*>(esp40 - 2);
    *esp42 = 0x401be7;
    fun_e0846b08();
    __asm__("das ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(edi6) + reinterpret_cast<uint16_t>(edx19)) = *esi8;
    *(esp42 + 1 - 1) = 0x5e82;
    goto addr_0x401bf9_49;
    addr_0x401b89_38:
    __asm__("outsd ");
    __asm__("rol ah, 1");
    goto addr_0x401b92_33;
    addr_0x401add_15:
    *reinterpret_cast<struct s141**>(esp28 - 1) = ecx10;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(ebx13) + 0xffffff89) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(ebx13) + 0xffffff89) | *reinterpret_cast<unsigned char*>(&edx19));
    addr_0x401ae4_25:
    __asm__("salc ");
    __asm__("hlt ");
    addr_0x401b4b_19:
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx13) + 0x6d) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx13) + 0x6d) | reinterpret_cast<uint32_t>(esi8);
    *reinterpret_cast<struct s141**>(esp28 - 1) = edx19;
    __asm__("wait ");
    __asm__("aam 0xf3");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx13) + *reinterpret_cast<int16_t*>(&esi8)) + 98) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx13) + *reinterpret_cast<int16_t*>(&esi8)) + 98) >> 1;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(edx19) + reinterpret_cast<uint16_t>(edi6)) = static_cast<uint32_t>(ds43);
    *reinterpret_cast<struct s141**>(reinterpret_cast<uint16_t>(eax22) - 4) = edi6;
    addr_0x401b39_23:
    *reinterpret_cast<signed char*>(&eax22) = g321d0a8d;
    less_or_equal44 = reinterpret_cast<signed char>(*(esi8 - 0x14b36f3b)) <= reinterpret_cast<signed char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx32) + 1)));
    *(esi8 - 0x14b36f3b) = reinterpret_cast<unsigned char>(*(esi8 - 0x14b36f3b) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx32) + 1) + reinterpret_cast<uint1_t>(*(esi8 - 0x14b36f3b) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx32) + 1))))));
    esp45 = reinterpret_cast<struct s141**>(reinterpret_cast<uint16_t>(esp33) - 2);
    *esp45 = ss34;
    if (less_or_equal44) {
        esp28 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp45) - 1);
        goto addr_0x401b4b_19;
    }
}

void fun_401b5d() {
    uint32_t* esi1;
    uint32_t* esi2;
    uint32_t esi3;
    signed char* eax4;
    signed char bh5;

    *esi1 = *esi2 ^ esi3;
    *eax4 = bh5;
    return;
}

void fun_401b6b() {
    int1_t zf1;

    __asm__("in al, dx");
    __asm__("out 0x1c, eax");
    if (zf1) 
        goto 0x401b4c;
    __asm__("retf 0x4943");
}

void fun_401b94(int32_t ecx) {
    int32_t edx2;
    int32_t edx3;
    int32_t ebp4;
    void* eax5;
    int16_t ss6;

    __asm__("das ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edx2 * 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edx3 * 4) - ebp4;
    __asm__("daa ");
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(eax5) - 2) = ss6;
    __asm__("enter 0xeff6, 0x97");
    __asm__("fldcw word [ecx+ebp]");
}

void fun_401ba9(int32_t ecx) {
    int32_t ebp2;
    int32_t ebp3;
    int32_t ebx4;
    uint1_t cf5;
    int32_t edx6;

    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebp2 * 2 - 0x4c524a75) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebp3 * 2 - 0x4c524a75) + ebx4 + cf5;
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(edx6 + 1 == 0)) 
        goto 0x401b70;
}

void fun_401bff() {
    int1_t of1;
    int1_t less_or_equal2;

    __asm__("in eax, 0xc3");
    if (!of1) {
        if (!less_or_equal2) 
            goto 0x401bf8;
    }
}

void fun_401c27() {
    int32_t eax1;
    int32_t edx2;
    int32_t edx3;
    int32_t* edi4;

    __asm__("int1 ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax1) + 1) = 69;
    *reinterpret_cast<int32_t*>(edx2 - 0x7c) = *reinterpret_cast<int32_t*>(edx3 - 0x7c) - 0x6e;
    *edi4 = eax1;
    __asm__("wait ");
    __asm__("les ebp, [gs:ebx+0x4774d5fa]");
}

void fun_401c65() {
    __asm__("out dx, al");
}

void fun_4da80a4b();

void fun_401cb3() {
    fun_4da80a4b();
}

struct s146 {
    signed char[39] pad39;
    signed char f39;
};

signed char gf7db896e;

void fun_401cde(int32_t ecx) {
    struct s146* ebx2;
    unsigned char bh3;
    int32_t eax4;
    signed char dl5;
    int32_t esi6;
    int32_t esi7;
    int32_t eax8;
    int32_t ebp9;

    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx2) + 1) = reinterpret_cast<unsigned char>(bh3 | *reinterpret_cast<unsigned char*>(eax4 + 0x3a663605));
    if (1) {
        ebx2->f39 = dl5;
        __asm__("cli ");
        if (reinterpret_cast<int32_t>(__return_address()) - 1) {
            __asm__("sti ");
            __asm__("lds ebp, [eax+0xd66660a2]");
            *reinterpret_cast<int32_t*>(esi6 - 0x17e51fd4) = esi7;
            __asm__("fdiv qword [edx+0x7cf64ed8]");
            __asm__("lodsb ");
            __asm__("arpl [esi], dx");
        }
    } else {
        eax8 = ecx - ebp9;
        __asm__("arpl [ecx-0x26], si");
        gf7db896e = *reinterpret_cast<signed char*>(&eax8);
    }
}

void fun_401cf6() {
    signed char* edi1;
    signed char* esi2;
    int32_t edx3;
    int32_t edx4;
    signed char bh5;

    __asm__("fnstsw word [ecx]");
    __asm__("out 0x80, eax");
    *edi1 = *esi2;
    *reinterpret_cast<signed char*>(edx3 - 0x70) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx4 - 0x70) - bh5);
    __asm__("ds lodsb ");
}

int32_t fun_bb7890a6();

struct s147 {
    signed char[37] pad37;
    signed char f37;
};

struct s148 {
    signed char[37] pad37;
    signed char f37;
};

struct s149 {
    signed char[37] pad37;
    signed char f37;
};

int16_t fun_401d37(int32_t ecx) {
    int32_t eax2;
    int1_t zf3;
    signed char* esi4;
    signed char* edi5;
    int1_t below_or_equal6;
    unsigned char* esi7;
    unsigned char* edi8;
    signed char* edi9;
    signed char* esi10;
    int32_t tmp32_11;
    int32_t* edx12;
    int32_t* edx13;
    int32_t* ebx14;
    int32_t* ebx15;
    int1_t less16;
    struct s147* ebx17;
    struct s148* ebx18;
    struct s149* ebx19;

    eax2 = fun_bb7890a6();
    __asm__("les ebp, [eax+0x96523a5f]");
    zf3 = *esi4 == *edi5;
    below_or_equal6 = *esi7 <= *edi8;
    *edi9 = *esi10;
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!zf3)) {
        addr_0x401d5b_5:
        return *reinterpret_cast<int16_t*>(&eax2);
    } else {
        if (!below_or_equal6) 
            goto 0x401ce1;
        __asm__("in eax, 0x37");
        tmp32_11 = edx12[eax2 * 2];
        edx13[eax2 * 2] = eax2;
        eax2 = tmp32_11;
        if (!below_or_equal6) 
            goto addr_0x401d51_8;
    }
    addr_0x401dab_9:
    __asm__("retf ");
    *ebx14 = *ebx15 >> 1;
    __asm__("iretd ");
    addr_0x401d51_8:
    less16 = ebx17->f37 < -91;
    ebx18->f37 = reinterpret_cast<signed char>(ebx19->f37 + 91);
    if (!less16) {
        __asm__("retf 0x3965");
        goto addr_0x401dab_9;
    } else {
        if (__intrinsic()) 
            goto 0x401cfc; else 
            goto addr_0x401d5b_5;
    }
}

void fun_401d6b(int32_t ecx) {
    int32_t ebp2;
    int32_t ebp3;
    signed char dh4;
    int32_t* edi5;
    int32_t* esi6;
    void* esp7;

    *reinterpret_cast<unsigned char*>(ebp2 + 0x3a5f63ea) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp3 + 0x3a5f63ea) + dh4) + __intrinsic());
    *edi5 = *esi6;
    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 1);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esp7) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(esp7 == 0))) 
        goto 0x401da2;
    if (ecx) 
        goto 0x401d0f;
}

void fun_401d83() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 + 0x27442612) = -*reinterpret_cast<int32_t*>(ebx2 + 0x27442612);
}

void fun_401d8d(uint32_t* ecx) {
    int32_t edi2;
    int32_t edi3;
    uint16_t cs4;

    *reinterpret_cast<signed char*>(edi2 + 0x33fe2128) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi3 + 0x33fe2128) - *reinterpret_cast<signed char*>(&ecx));
    *ecx = static_cast<uint32_t>(cs4);
    __asm__("fisub dword [edi+0x51]");
    if (__intrinsic()) 
        goto "???";
}

void fun_401e01(int32_t ecx) {
    signed char al2;

    __asm__("wait ");
    __asm__("lodsd ");
    *reinterpret_cast<signed char*>(ecx - 0x7429281) = al2;
}

struct s150 {
    signed char[96] pad96;
    unsigned char f96;
};

int32_t fun_dd7334a();

int32_t fun_7fb8d91f();

void fun_401e0f() {
    int32_t* eax1;
    unsigned char al2;
    unsigned char bh3;
    int32_t ecx4;
    int32_t* esi5;
    struct s150* esi6;
    int32_t ebp7;
    int32_t ebp8;
    int32_t* v9;
    int32_t* ds10;
    int32_t eax11;
    int32_t ecx12;
    signed char bh13;
    unsigned char bh14;
    int32_t edi15;
    int32_t edi16;
    int32_t edi17;

    __asm__("fsub dword [edx+0x7a]");
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 & 0x75);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax1) == 0))) {
        __asm__("pushad ");
    }
    __asm__("psllq mm2, mm2");
    *eax1 = *eax1 + reinterpret_cast<int32_t>(__zero_stack_offset());
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__return_address()) + 0x46486b85) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__return_address()) + 0x46486b85) | bh3);
    __asm__("in al, dx");
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__return_address()) + 0x46486b85)) {
        __asm__("popad ");
    }
    ecx4 = reinterpret_cast<int32_t>(__return_address()) - *esi5;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx4) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx4) + 1) ^ esi6->f96);
    __asm__("rcl dword [ebx], cl");
    ebp7 = ebp8 - 1 - 1;
    __asm__("in eax, dx");
    v9 = ds10;
    if (reinterpret_cast<int32_t>(eax1) > 0x52a7d1ea) 
        goto addr_0x401ea9_6;
    addr_0x401ed0_7:
    addr_0x401ed2_8:
    *reinterpret_cast<signed char*>(ebp7 - 72) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp7 - 72) - 39);
    __asm__("fucomp st3");
    eax11 = fun_dd7334a();
    __asm__("sahf ");
    *v9 = eax11;
    addr_0x401ea9_6:
    __asm__("in al, dx");
    ecx12 = ecx4 - 1;
    *reinterpret_cast<unsigned char*>(ecx12 - 0x53697a7d) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx12 - 0x53697a7d) - reinterpret_cast<unsigned char>(bh13 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ecx12 - 0x53697a7d) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(bh14)))));
    fun_7fb8d91f();
    __asm__("into ");
    *reinterpret_cast<int32_t*>(edi15 - 0x4fa17a78) = *reinterpret_cast<int32_t*>(edi16 - 0x4fa17a78) - ebp7;
    if (*reinterpret_cast<int32_t*>(edi17 - 0x4fa17a78) < 0) 
        goto addr_0x401ed2_8;
    __asm__("out 0xc6, eax");
    goto addr_0x401ed0_7;
}

void fun_401e2b(int32_t ecx) {
    int32_t* edi2;
    int32_t eax3;

    *edi2 = eax3;
    __asm__("rol dword [edi], cl");
    __asm__("out 0x63, eax");
}

void fun_401e4a(int32_t ecx) {
    __asm__("rcl dword [ecx+0x5eeaca73], cl");
    __asm__("cli ");
    __asm__("fnsave [edi-0x25]");
    if (ecx - 1) 
        goto 0x401ecb; else 
        goto "???";
}

void fun_401e6d(int32_t ecx) {
    uint32_t eax2;
    uint32_t eax3;
    unsigned char al4;
    signed char* ebx5;
    uint1_t cf6;

    eax2 = eax3 | 0x729904f6;
    __asm__("fmul st0, st7");
    al4 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax2) + *ebx5)));
    cf6 = reinterpret_cast<uint1_t>(al4 < reinterpret_cast<unsigned char>(33 + __intrinsic()));
    if (ecx - 1) 
        goto 0x401e60;
    __asm__("in al, dx");
    __asm__("out dx, eax");
    __asm__("enter 0xab9a, 0x3a");
    __asm__("cmc ");
    __asm__("lodsd ");
    if (al4 - reinterpret_cast<unsigned char>(33 + cf6) != static_cast<uint32_t>(cf6)) {
    }
}

void fun_401ef1() {
    int1_t zf1;
    int32_t esi2;
    int32_t esi3;
    signed char dl4;

    if (zf1) 
        goto 0x401eac;
    __asm__("ror byte [ecx], 0x24");
    *reinterpret_cast<signed char*>(esi2 - 0x9afef19) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi3 - 0x9afef19) + dl4);
    return;
}

unsigned char gaf042931;

signed char fun_19a4f388(int32_t a1);

void fun_401ffb(int32_t ecx, int32_t a2, int32_t a3) {
    int32_t eflags4;
    uint1_t cf5;
    unsigned char al6;
    int32_t eax7;
    int32_t eax8;
    signed char al9;
    int32_t eax10;
    int32_t ebx11;
    int32_t eax12;
    int32_t ebx13;
    int32_t edx14;

    eflags4 = reinterpret_cast<int32_t>(__return_address());
    cf5 = reinterpret_cast<uint1_t>(al6 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax7 - 39) + *reinterpret_cast<uint1_t*>(&eflags4)));
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(al9 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax10 - 39) + cf5));
    ebx11 = eax8;
    eax12 = ebx13;
    gaf042931 = *reinterpret_cast<unsigned char*>(&eax12);
    __asm__("lodsd ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx11) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx11) + 1) + *reinterpret_cast<signed char*>(edx14 - 0x9e359b6)) + cf5);
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx11) + 1))) {
        __asm__("cmc ");
        __asm__("lahf ");
        *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) | 0xda);
        fun_19a4f388(eax12);
        __asm__("packuswb mm3, [esi+0x55edebd3]");
    } else {
        goto a3;
    }
}

void fun_40201e() {
    goto 0x401fdf;
}

int16_t fun_4020e9() {
    int32_t eax1;
    int16_t ax2;
    void* edx3;
    int32_t esi4;
    void* edx5;
    int32_t esi6;

    eax1 = static_cast<int32_t>(ax2);
    __asm__("out dx, al");
    __asm__("out dx, al");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx3) + esi4 * 4 + 5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx5) + esi6 * 4 + 5) >> 1);
    return *reinterpret_cast<int16_t*>(&eax1);
}

void fun_40210c(int32_t a1) {
    __asm__("outsb ");
    __asm__("fld qword [ebx+0xa58fc84e]");
}

struct s151 {
    void* f0;
    void* f2;
};

struct s152 {
    signed char[1] pad1;
    void* f1;
};

struct s153 {
    signed char[4] pad4;
    signed char f4;
};

struct s154 {
    signed char[4] pad4;
    signed char f4;
};

struct s155 {
    signed char[110] pad110;
    signed char f110;
    signed char[27558478] pad27558589;
    unsigned char f27558589;
    signed char[924046409] pad951604999;
    uint32_t f951604999;
};

unsigned char ge52316f1;

int16_t g48c8160e;

signed char g10f55958;

void** g71a21681;

void** fun_60fcdb7c();

void* g51eb9395;

unsigned char g4bbdeebd;

void fun_402187() {
    uint32_t eflags1;
    void* esi2;
    void* esi3;
    void** eax4;
    struct s151* esp5;
    void* eax6;
    void** edi7;
    struct s152* edi8;
    void** esp9;
    struct s153* edi10;
    struct s154* esi11;
    signed char* edi12;
    struct s155* ecx13;
    int32_t ebp14;
    signed char* edx15;
    uint1_t cf16;
    int1_t less17;
    int32_t eax18;
    uint1_t less19;
    uint1_t less_or_equal20;
    uint16_t ds21;
    void** esp22;
    void* cs23;
    void* es24;
    void** esp25;
    void** eax26;
    uint16_t cs27;
    int32_t* esp28;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
    esi2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi3) + 1);
    eax4 = reinterpret_cast<void**>(__zero_stack_offset());
    __asm__("retf 0xe709");
    esp5 = reinterpret_cast<struct s151*>(reinterpret_cast<int32_t>(eax6) - 4);
    esp5->f0 = esi2;
    edi7 = &edi8->f1;
    esp9 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp5) + 2)) + 4 + 4);
    *reinterpret_cast<void**>(&eax4) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax4)) ^ 49);
    __asm__("stc ");
    *edi7 = *reinterpret_cast<void**>(&eax4);
    edi10 = reinterpret_cast<struct s153*>(edi7 + 1);
    esi11 = reinterpret_cast<struct s154*>(reinterpret_cast<int32_t>(esi2) + 1 + 1);
    if (!*reinterpret_cast<void**>(&eax4)) {
        __asm__("into ");
    }
    while (1) {
        edi12 = &edi10->f4;
        __asm__("insd ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx13) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx13) + 0x6e);
        *edi12 = esi11->f4;
        edi10 = reinterpret_cast<struct s153*>(edi12 + 1);
        ++ebp14;
        esi11 = reinterpret_cast<struct s154*>(0xfe817ce0);
        *reinterpret_cast<int16_t*>(&eax4) = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax4)) * *edx15);
        cf16 = __intrinsic();
        less17 = __undefined() != __intrinsic();
        if (__undefined()) {
            __asm__("les esp, [eax+0xbc5bdb94]");
            *reinterpret_cast<void**>(&eax4) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax4)) + 0x9f) + cf16);
            ge52316f1 = reinterpret_cast<unsigned char>(ge52316f1 ^ 0x6b);
            g48c8160e = *reinterpret_cast<int16_t*>(&eax4);
            eax18 = static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax4));
            __asm__("cmc ");
            g10f55958 = *reinterpret_cast<signed char*>(&eax18);
            g71a21681 = reinterpret_cast<void**>(0x402206);
            eax4 = fun_60fcdb7c();
            *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx13) + 0x1a482bd) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx13) + 0x1a482bd) - 0x6d)));
            esp9 = reinterpret_cast<void**>(0x71a21681);
            g71a21681 = reinterpret_cast<void**>(0x71a21681);
            __asm__("cdq ");
            less19 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax4)) & 0xf2) < reinterpret_cast<signed char>(0));
            less_or_equal20 = reinterpret_cast<uint1_t>(less19 | reinterpret_cast<uint1_t>((reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax4)) & 0xf2) == 0));
            g51eb9395 = *reinterpret_cast<void**>(&eax4);
            if (!less19) 
                goto addr_0x402246_18;
            cf16 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(ecx13) < reinterpret_cast<uint32_t>(*reinterpret_cast<struct s155**>(ebp14 + 0x2d1bf58d)));
            --ebp14;
            less17 = ebp14 < 0 != __intrinsic();
        }
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx13) + 0x38b85707) = static_cast<uint32_t>(ds21);
        esp22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp9) - 2);
        *esp22 = cs23;
        if (less17) 
            break;
        __asm__("fild dword [ecx+eax*2-0x6]");
        es24 = *esp22;
        __asm__("aad 0xdc");
        esp9 = eax4;
        __asm__("sahf ");
        __asm__("lodsd ");
        __asm__("sahf ");
        __asm__("lodsb ");
        eax4 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp22 + 1 + 0xd7780b9) + cf16);
    }
    esp25 = reinterpret_cast<void**>(reinterpret_cast<int16_t>(*esp22) + 4 - 2);
    *esp25 = es24;
    __asm__("lock int 0x29");
    eax26 = esp25;
    g4bbdeebd = *reinterpret_cast<unsigned char*>(&eax26);
    __asm__("cli ");
    *reinterpret_cast<unsigned char*>(&eax26) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax26) + 68)));
    less_or_equal20 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax26)) < reinterpret_cast<signed char>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax26) == 0));
    __asm__("outsd ");
    eax4 = reinterpret_cast<void**>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax26)));
    *reinterpret_cast<uint32_t*>(ebp14 - 0x7e) = static_cast<uint32_t>(cs27);
    addr_0x402246_18:
    if (less_or_equal20) {
        *reinterpret_cast<int1_t*>(&eflags1) = 0;
        *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags1) = 0;
        *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
        *reinterpret_cast<int1_t*>(&eflags1) = __undefined();
        __asm__("out 0xd0, al");
        __asm__("fisttp word [edi]");
        esp28 = reinterpret_cast<int32_t*>(eax4 - 1);
        *esp28 = 0xef;
        *reinterpret_cast<uint32_t*>(esp28 - 1) = eflags1 & 0xfcffff;
        __asm__("cdq ");
    }
}

void fun_40219d() {
    __asm__("int 0x25");
}

void fun_4021a3() {
    __asm__("cdq ");
    __asm__("enter 0x8763, 0xa3");
    __asm__("les ecx, [edi+0x46]");
    __asm__("lodsb ");
    __asm__("rcr dword [ebx+0x4f8be341], 0xb2");
}

void fun_402255(int32_t ecx) {
    int32_t ebp2;
    int32_t ebp3;
    int32_t esi4;
    int32_t ebx5;

    __asm__("cli ");
    ebp2 = ebp3 + *reinterpret_cast<int32_t*>(esi4 - 0x7e85e78f);
    __asm__("outsb ");
    __asm__("wait ");
    *reinterpret_cast<signed char*>(&ebx5) = 5;
    __asm__("fld tword [ebx+0x75dad125]");
    __asm__("das ");
    *reinterpret_cast<int32_t*>(ebp2 + 0x33411c39) = *reinterpret_cast<int32_t*>(ebp2 + 0x33411c39) << *reinterpret_cast<unsigned char*>(&ecx);
    __asm__("out 0x97, al");
    *reinterpret_cast<uint32_t*>(ecx - 0x7a) = *reinterpret_cast<uint32_t*>(ecx - 0x7a) + ebx5 + __intrinsic();
}

struct s156 {
    signed char[116] pad116;
    int32_t f116;
};

void fun_402287(int32_t ecx) {
    struct s156* eax2;
    int32_t eax3;

    *reinterpret_cast<unsigned char*>(ecx - 0x66e97f54) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx - 0x66e97f54) ^ 0x9e);
    if (0) 
        goto 0x40223b;
    __asm__("retf ");
    __asm__("retf 0xfea");
    __asm__("cdq ");
    eax2->f116 = eax3;
    __asm__("pushad ");
    __asm__("ficomp word [ecx]");
    __asm__("in eax, 0x8c");
    __asm__("hlt ");
}

struct s157 {
    signed char[4] pad4;
    signed char f4;
};

struct s158 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40231f(int32_t a1, int32_t a2) {
    int32_t* edi3;
    int32_t eax4;
    signed char* edi5;
    struct s157* edi6;
    struct s158* esi7;
    uint32_t edx8;

    *edi3 = eax4;
    edi5 = &edi6->f4;
    *edi5 = esi7->f4;
    __asm__("daa ");
    __asm__("clc ");
    if (reinterpret_cast<uint32_t>(edi5 + 1) ^ edx8) {
        __asm__("hlt ");
    }
}

void fun_40235a(int32_t ecx) {
    int1_t pf2;
    int32_t eax3;

    __asm__("das ");
    if (pf2) {
        __asm__("cmc ");
    }
    goto *reinterpret_cast<int32_t*>(eax3 + 0x1e726f61);
}

void fun_4023e9() {
    __asm__("hlt ");
}

void fun_402411() {
    __asm__("into ");
    __asm__("fnstsw word [eax+0x704400e7]");
}

struct s159 {
    signed char f0;
    unsigned char f1;
};

struct s160 {
    signed char[1] pad1;
    signed char f1;
};

struct s161 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s162 {
    signed char[97] pad97;
    void* f97;
};

struct s163 {
    unsigned char f0;
    signed char f1;
};

int32_t g552f8478;

int32_t g6b1ce909;

void fun_402427(int32_t ecx) {
    signed char* edi2;
    signed char bl3;
    int32_t eax4;
    int32_t eax5;
    struct s159* edi6;
    struct s160* edi7;
    struct s161* esi8;
    struct s162* ebx9;
    struct s163* edi10;
    unsigned char* esi11;
    uint1_t cf12;
    int32_t ebx13;
    signed char dl14;
    void* eax15;

    __asm__("out 0x28, al");
    *edi2 = bl3;
    eax4 = eax5 + 0x135e8311;
    edi6 = reinterpret_cast<struct s159*>(&edi7->f1);
    esi8 = reinterpret_cast<struct s161*>(reinterpret_cast<int32_t>(ebx9->f97) + 1);
    edi6->f0 = *reinterpret_cast<signed char*>(&eax4);
    edi10 = reinterpret_cast<struct s163*>(&edi6->f1);
    esi11 = &esi8->f1;
    __asm__("aad 0x6");
    g552f8478 = eax4;
    cf12 = reinterpret_cast<uint1_t>(*esi11 < edi10->f0);
    edi10->f0 = *esi11;
    *reinterpret_cast<uint32_t*>(eax4 - 0x104f2e7b) = *reinterpret_cast<uint32_t*>(eax4 - 0x104f2e7b) - (78 - reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(eax4 - 0x104f2e7b) < 78 - cf12));
    *reinterpret_cast<signed char*>(ebx13 - 0x566fd7ec) = dl14;
    eax15 = reinterpret_cast<void*>(esi11 + 1);
    edi10->f1 = *reinterpret_cast<signed char*>(&eax15);
    __asm__("out dx, eax");
    __asm__("in al, 0xd0");
    g6b1ce909 = static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax15));
}

struct s164 {
    signed char[75] pad75;
    uint32_t f75;
};

struct s165 {
    signed char[75] pad75;
    uint32_t f75;
};

void fun_40245b(uint32_t ecx) {
    struct s164* ebp2;
    struct s165* ebp3;
    int32_t esi4;
    int32_t esi5;
    unsigned char ah6;

    ebp2->f75 = ebp3->f75 | ecx;
    __asm__("in eax, 0x8");
    *reinterpret_cast<unsigned char*>(esi4 * 4 - 0x37fad497) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi5 * 4 - 0x37fad497) | ah6);
    if (!__intrinsic()) {
        while (1) {
        }
    } else {
        __asm__("into ");
        __asm__("fdivr qword [ecx+0x4a702794]");
    }
}

unsigned char g10ac4edf;

int16_t g89b25b53;

void fun_402483(int32_t ecx) {
    void* esp2;
    uint32_t ebx3;
    int32_t ebx4;
    uint32_t* edx5;
    uint32_t* edx6;
    uint32_t ebx7;
    unsigned char al8;
    unsigned char al9;
    int32_t ecx10;
    int16_t es11;
    int32_t ebp12;
    int16_t ss13;

    esp2 = __zero_stack_offset();
    __asm__("wait ");
    __asm__("lahf ");
    ebx3 = reinterpret_cast<uint32_t>(ebx4 + 1);
    *edx5 = *edx6 & ebx3;
    __asm__("lodsd ");
    ebx7 = ebx3 - 1;
    al8 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al9 | 0xf1) | 0xf3) ^ 0xb4);
    ecx10 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx10) & 1) 
        goto 0x402430;
    __asm__("cmc ");
    do {
        __asm__("cdq ");
        __asm__("iretd ");
        __asm__("rcl ah, 0xa8");
        __asm__("out dx, eax");
        __asm__("fldcw word [ebx-0x8]");
        __asm__("rol dh, 0xb1");
        if (!(ecx10 - 1)) 
            break;
        al8 = g10ac4edf;
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp2) - 2) = es11;
        ecx10 = 0xad365f36;
        __asm__("lahf ");
        __asm__("insb ");
        __asm__("aas ");
        *reinterpret_cast<signed char*>(&ecx10) = *reinterpret_cast<signed char*>(ebp12 - 0x76995381);
        esp2 = reinterpret_cast<void*>(0x89b25b55);
        if (!1) 
            goto addr_0x40250a_8;
    } while (__intrinsic());
    goto addr_0x4024d4_10;
    *reinterpret_cast<unsigned char*>(ebx7 + 0x355f904d) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(al8) <= reinterpret_cast<signed char>(42)));
    addr_0x40250a_8:
    g89b25b53 = ss13;
    addr_0x4024d4_10:
}

void fun_4024d7(signed char cl) {
    int32_t esi2;
    int32_t esi3;
    uint1_t cf4;

    __asm__("iretd ");
    *reinterpret_cast<unsigned char*>(esi2 - 70) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi3 - 70) + cl) + cf4);
    __asm__("stc ");
    __asm__("les edi, [edx-0x59]");
}

void fun_402515() {
    signed char* ecx1;
    void* eax2;
    void* eax3;
    int32_t* edi4;
    int32_t esi5;
    void* esp6;
    signed char* ebp7;
    void** esp8;

    *reinterpret_cast<signed char*>(&ecx1) = 0x9b;
    __asm__("clc ");
    __asm__("salc ");
    eax2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax3) - 1);
    do {
        edi4 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi4) ^ *reinterpret_cast<uint32_t*>(esi5 - 56));
        esp6 = eax2;
        __asm__("cmc ");
        if (edi4) 
            goto 0x4024e0;
        eax2 = reinterpret_cast<void*>(ebp7 - 0x5e60bc3e);
        *edi4 = *edi4 >> 0x67;
        ebp7 = ecx1;
    } while (!__intrinsic());
    *ecx1 = *reinterpret_cast<signed char*>(&eax2);
    __asm__("stc ");
    esp8 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp6) - 4);
    *reinterpret_cast<void***>(esp8) = esp8;
    if (!__intrinsic()) {
        __asm__("out dx, eax");
    } else {
        goto *reinterpret_cast<void***>(esp8);
    }
}

void fun_402577(int32_t ecx) {
    int32_t ecx2;
    uint1_t zf3;
    int1_t zf4;
    int32_t edx5;
    int32_t* eax6;

    __asm__("fisttp dword [eax]");
    ecx2 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx2) & zf3) {
        while (zf4) {
        }
        __asm__("retf 0x145e");
        *reinterpret_cast<int32_t*>(ecx2 - 0x70) = *reinterpret_cast<int32_t*>(ecx2 - 0x70) + edx5;
        goto *eax6;
    } else {
        do {
            __asm__("out 0x62, eax");
        } while (__intrinsic());
        __asm__("aad 0x8e");
    }
}

void fun_40259f() {
    __asm__("hlt ");
}

void fun_4025ad() {
    int32_t eax1;

    goto eax1;
}

struct s166 {
    unsigned char f0;
    signed char[3] pad4;
    signed char f4;
};

struct s167 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s168 {
    unsigned char f0;
    signed char[3] pad4;
    signed char f4;
    signed char[284044035] pad284044040;
    unsigned char f284044040;
};

struct s169 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s170 {
    signed char[93] pad93;
    signed char f93;
};

struct s171 {
    signed char[93] pad93;
    signed char f93;
};

uint32_t fun_61b55d87(int32_t a1);

struct s172 {
    signed char[76] pad76;
    signed char f76;
};

int32_t g1b7dfcb7;

struct s173 {
    int32_t f0;
    uint32_t f4;
};

void fun_e2bac23f();

int32_t fun_34907a2();

int16_t* ga52b58d1;

int32_t g9e7e072a;

void fun_40266b() {
    uint48_t v1;
    void** ebp2;
    int32_t eax3;
    int16_t cs4;
    int16_t eax5;
    int32_t* edi6;
    int32_t* esi7;
    struct s166* edi8;
    struct s167* edi9;
    struct s168* esi10;
    struct s169* esi11;
    signed char tmp8_12;
    struct s170* ebx13;
    struct s171* ebx14;
    signed char dh15;
    int32_t edx16;
    int32_t ecx17;
    int32_t eax18;
    uint32_t eax19;
    void* esp20;
    uint1_t cf21;
    struct s172* ebx22;
    struct s173* esp23;
    uint1_t cf24;
    int16_t* esp25;
    uint1_t cf26;
    void** esp27;
    uint32_t* esp28;
    int32_t* esp29;
    struct s173* esp30;
    uint32_t* esp31;
    uint32_t edx32;
    int32_t ebx33;
    int16_t es34;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2) = reinterpret_cast<int32_t>(__return_address());
    __asm__("daa ");
    ebp2 = reinterpret_cast<void**>(eax3 * 55);
    *reinterpret_cast<int16_t*>(&v1) = cs4;
    eax5 = *reinterpret_cast<int16_t*>(&v1);
    *edi6 = *esi7;
    edi8 = reinterpret_cast<struct s166*>(&edi9->f4);
    esi10 = reinterpret_cast<struct s168*>(&esi11->f4);
    *reinterpret_cast<signed char*>(&eax5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax5) + 22);
    __asm__("repne in eax, 0x83");
    __asm__("fadd dword [fs:edi+ecx*2-0x20]");
    tmp8_12 = ebx13->f93;
    ebx14->f93 = dh15;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx16) + 1) = tmp8_12;
    ecx17 = 0xa6353194;
    eax18 = eax5 - 0x4e2bcad8;
    if (__intrinsic()) {
        eax19 = fun_61b55d87(0x9be4f9f1);
        esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2 + 4 - 4 - 4 + 4);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax19) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax19) + 1) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi10) + 0x10ee2b08));
        cf21 = 0;
        __asm__("in eax, dx");
        if (!1) 
            goto addr_0x4026aa_6;
        while (*reinterpret_cast<unsigned char*>(&ecx17) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx17) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx22) + 1)), ebx22 = reinterpret_cast<struct s172*>(0x12cddc75), edi8 = reinterpret_cast<struct s166*>(reinterpret_cast<int32_t>(edi8) - 1), eax19 = eax19 | 0x35509d51, ++g1b7dfcb7, esp23 = reinterpret_cast<struct s173*>(reinterpret_cast<int32_t>(esp20) - 4), esp23->f0 = 26, *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx17) + 1) = reinterpret_cast<unsigned char>(41 & *reinterpret_cast<unsigned char*>(edx16 - 91)), cf24 = 0, esp25 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp23) - 2), *esp25 = *reinterpret_cast<int16_t*>(&eax19), 1) {
            while (cf26 = reinterpret_cast<uint1_t>(87 < reinterpret_cast<unsigned char>(2 + cf24)), *reinterpret_cast<unsigned char*>(&eax19) = reinterpret_cast<unsigned char>(87 - reinterpret_cast<unsigned char>(2 + cf26)), *reinterpret_cast<unsigned char*>(&edx16) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx16) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax19) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&edx16) < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax19) + cf26)))), esp27 = ebp2, ebp2 = *reinterpret_cast<void***>(esp27), esp28 = reinterpret_cast<uint32_t*>(esp27 + 1 - 1), *esp28 = eax19, esp29 = reinterpret_cast<int32_t*>(esp28 - 1), *esp29 = 88, eax19 = eax19 ^ 0x5554db81, esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) + 2), --edx16, cf21 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax19) < 0x88), --ecx17, reinterpret_cast<uint1_t>(!!ecx17) & reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax19) - reinterpret_cast<unsigned char>(0x78 - cf21) != static_cast<uint32_t>(cf21))) {
                addr_0x4026aa_6:
                *reinterpret_cast<unsigned char*>(&edx16) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx16) + ebx22->f76) + cf21);
                cf24 = __intrinsic();
                __asm__("lds esp, [eax]");
                edi8 = reinterpret_cast<struct s166*>(0x6fa3567c);
                --edx16;
                ebx22 = reinterpret_cast<struct s172*>(0x64b9e8ab);
                __asm__("aaa ");
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp20) + 1 - 4) = 0x4026c3;
                fun_e2bac23f();
            }
            esp30 = reinterpret_cast<struct s173*>(reinterpret_cast<int32_t>(esp20) - 4);
            esp30->f0 = 0x4026e3;
            fun_34907a2();
            esp31 = &esp30->f4;
            __asm__("aaa ");
            eax19 = *esp31;
            esp20 = reinterpret_cast<void*>(esp31 + 1);
            __asm__("fst qword [ebx-0x56]");
        }
        *reinterpret_cast<struct s168**>(esp25 - 2) = esi10;
        __asm__("insd ");
        edi8->f0 = *reinterpret_cast<unsigned char*>(esi10);
        edi8->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi10) + 4);
    }
    edx32 = edx16 - *reinterpret_cast<unsigned char*>(esi10);
    __asm__("iretd ");
    __asm__("cmc ");
    *reinterpret_cast<signed char*>(ebx33 - 0xbba8da4) = *reinterpret_cast<signed char*>(&eax18);
    __asm__("clc ");
    if (__intrinsic()) {
        edi8->f0 = reinterpret_cast<unsigned char>(edi8->f0 & *reinterpret_cast<unsigned char*>(&edx32));
        __asm__("in eax, dx");
    }
    __asm__("xlatb ");
    __asm__("outsd ");
    if (!__intrinsic()) 
        goto addr_0x402647_22;
    addr_0x402647_22:
    ga52b58d1 = reinterpret_cast<int16_t*>(0x9e7e072a);
    __asm__("das ");
    es34 = *reinterpret_cast<int16_t*>(&g9e7e072a);
    *reinterpret_cast<int16_t*>(&g9e7e072a) = es34;
    __asm__("int1 ");
}

struct s175 {
    struct s175* f0;
    struct s175* f1;
};

struct s174 {
    signed char[1872906163] pad1872906163;
    struct s175* f1872906163;
};

struct s176 {
    unsigned char f0;
    signed char[1255968145] pad1255968146;
    int32_t f1255968146;
};

struct s177 {
    struct s175* f0;
    struct s175* f1;
};

struct s178 {
    signed char[4] pad4;
    struct s175* f4;
};

uint32_t g24ef8d40;

struct s175* g12b7825d;

int32_t g2a955e8f;

struct s179 {
    struct s177* f0;
    signed char[2] pad4;
    struct s175* f4;
};

struct s175* g8e2f8404;

uint32_t gd791b338;

void fun_402722() {
    uint32_t ebx1;
    int32_t ebx2;
    int32_t* edi3;
    uint32_t ebx4;
    int32_t* edi5;
    uint1_t cf6;
    struct s174* eax7;
    uint16_t ax8;
    struct s176* ecx9;
    struct s176* esi10;
    struct s175** esp11;
    struct s177* esi12;
    struct s178* esi13;
    uint32_t ebp14;
    uint32_t eflags15;
    struct s175* edi16;
    struct s175* eax17;
    uint1_t cf18;
    uint1_t cf19;
    uint32_t eax20;
    uint32_t ebp21;
    int32_t edx22;
    int1_t zf23;
    struct s179* esp24;
    struct s177* ds25;
    int32_t ebp26;
    int32_t ebp27;
    unsigned char al28;
    struct s177** esp29;
    int1_t sf30;
    struct s177* edi31;
    struct s175* esi32;
    uint32_t eax33;
    uint32_t eax34;

    __asm__("lodsd ");
    ebx1 = ebx2 - (*edi3 + reinterpret_cast<uint1_t>(ebx4 < *edi5 + cf6));
    *reinterpret_cast<uint16_t*>(&eax7) = reinterpret_cast<uint16_t>(ax8 | 0xea52);
    ecx9 = esi10;
    esp11 = reinterpret_cast<struct s175**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    esi12 = reinterpret_cast<struct s177*>(&esi13->f4);
    g24ef8d40 = g24ef8d40 | ebp14;
    do {
        __asm__("aad 0xe1");
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags15) + 1) = 0;
        edi16 = reinterpret_cast<struct s175*>(0x12b7825d);
        __asm__("fist word [ss:edi]");
        __asm__("cmc ");
        eax17 = reinterpret_cast<struct s175*>(reinterpret_cast<uint32_t>(eax7) - 0x905db84d);
        __asm__("repne aas ");
        cf18 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(g12b7825d) < reinterpret_cast<unsigned char>(0x12b7825d));
        g12b7825d = reinterpret_cast<struct s175*>(reinterpret_cast<unsigned char>(g12b7825d) - reinterpret_cast<unsigned char>(0x12b7825d));
        __asm__("lodsd ");
        __asm__("out dx, al");
        *reinterpret_cast<unsigned char*>(&eax17) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax17) + 0xe8) + cf18);
        cf19 = __intrinsic();
        __asm__("cli ");
        if (cf19 | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax17) == 0)) 
            goto 0x402712;
        while (!cf19) {
            while (eax20 = reinterpret_cast<unsigned char>(eax17) ^ ebp21, edx22 = reinterpret_cast<int32_t>(eax20) % g2a955e8f, eax17 = reinterpret_cast<struct s175*>(reinterpret_cast<int32_t>(eax20) / g2a955e8f), zf23 = __undefined(), ecx9 = reinterpret_cast<struct s176*>(reinterpret_cast<int32_t>(ecx9) - 1), reinterpret_cast<uint1_t>(!!ecx9) & reinterpret_cast<uint1_t>(!zf23)) {
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1) = -62;
                *reinterpret_cast<unsigned char*>(esp11 - 0x4663a791) = 0xff;
                esp24 = reinterpret_cast<struct s179*>(esp11 - 2);
                esp24->f0 = ds25;
                esi12 = esp24->f0;
                esp11 = &esp24->f4;
                __asm__("out dx, eax");
                if (1) 
                    goto addr_0x4027e8_9;
                __asm__("lahf ");
                g8e2f8404 = eax17;
                gd791b338 = gd791b338 >> 1;
                cf19 = __intrinsic();
                if (!__undefined()) 
                    goto addr_0x402756_11;
                *reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(esi12) + 0xf635c30b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(esi12) + 0xf635c30b) << reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx9)));
                esp11 = reinterpret_cast<struct s175**>(reinterpret_cast<uint32_t>(*esp11 + 2) - 4);
                *esp11 = reinterpret_cast<struct s175*>(0x12b7825d);
                (esi12 + ebp26)->f0 = reinterpret_cast<struct s175*>(reinterpret_cast<unsigned char>((esi12 + ebp27)->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx9)));
                __asm__("fisttp qword [edi+0x4b9ab142]");
            }
            goto addr_0x4027da_13;
            addr_0x402756_11:
        }
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags15) + 1) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags15) = __intrinsic();
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx9) + 0x4adc8d92) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx9) + 0x4adc8d92) << reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx9));
        *reinterpret_cast<int1_t*>(&eflags15) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags15) = __undefined();
        *reinterpret_cast<int1_t*>(&eflags15) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx9) + 0x4adc8d92) == 0;
        *reinterpret_cast<int1_t*>(&eflags15) = __intrinsic();
        esp11 = esp11 - 4;
        *esp11 = reinterpret_cast<struct s175*>(eflags15 & 0xfcffff);
        g12b7825d = eax17;
        esi12 = esi12 + 2;
        eax7 = reinterpret_cast<struct s174*>(eax17 - 0xf16bd6fa);
        *reinterpret_cast<signed char*>(&eax7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax7) + *reinterpret_cast<signed char*>(&eax7));
        __asm__("fstp9 st5");
    } while (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&eax7) == 0)));
    goto addr_0x402771_18;
    addr_0x4027da_13:
    __asm__("aaa ");
    do {
        if (!ecx9) 
            break;
        ecx9 = reinterpret_cast<struct s176*>(reinterpret_cast<int32_t>(ecx9) - 1);
        *reinterpret_cast<struct s175**>(&edi16->f0) = *reinterpret_cast<struct s175**>(&esi12->f0);
        edi16 = reinterpret_cast<struct s175*>(&edi16->f1);
        esi12 = reinterpret_cast<struct s177*>(&esi12->f1);
    } while (!zf23);
    al28 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax17) + 61);
    *reinterpret_cast<int1_t*>(&eflags15) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags15) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags15) = al28 == 0;
    *reinterpret_cast<int1_t*>(&eflags15) = reinterpret_cast<signed char>(al28) < reinterpret_cast<signed char>(0);
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags15) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags15) = __intrinsic();
    esp29 = reinterpret_cast<struct s177**>(esp11 - 4);
    *esp29 = reinterpret_cast<struct s177*>(eflags15 & 0xfcffff);
    *reinterpret_cast<unsigned char*>(&eax17) = reinterpret_cast<unsigned char>(al28 | 54);
    sf30 = reinterpret_cast<signed char>(*reinterpret_cast<struct s175**>(&esi12->f0)) < reinterpret_cast<signed char>(*reinterpret_cast<struct s175**>(&edi16->f0));
    *reinterpret_cast<struct s175**>(&edi16->f0) = *reinterpret_cast<struct s175**>(&esi12->f0);
    edi31 = reinterpret_cast<struct s177*>(&edi16->f1);
    esi32 = reinterpret_cast<struct s175*>(&esi12->f1);
    if (!sf30) {
        *reinterpret_cast<struct s175**>(&edi31->f0) = reinterpret_cast<struct s175*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s175**>(&edi31->f0)) | *reinterpret_cast<unsigned char*>(&ebx1));
        eax33 = reinterpret_cast<unsigned char>(eax17) & 0xbf68c9f0;
        *reinterpret_cast<unsigned char*>(&eax33) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax33) | ecx9->f0);
        __asm__("iretd ");
        if (0) {
        }
        __asm__("fcmovnu st0, st1");
        *reinterpret_cast<struct s177**>(eax33 + 0x45fc2285) = edi31;
        goto 0x238f3e13;
    } else {
        esp11 = reinterpret_cast<struct s175**>(esp29 + 1 - 2);
        *esp11 = esi32;
        esi12 = reinterpret_cast<struct s177*>(&esi32->f1);
    }
    addr_0x4027e8_9:
    __asm__("repne in eax, 0xf2");
    eax34 = reinterpret_cast<unsigned char>(eax17) - 1;
    *reinterpret_cast<struct s177**>(esp11 - 4) = esi12;
    *reinterpret_cast<unsigned char*>(eax34 - 0x356db196) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax34 - 0x356db196) ^ *reinterpret_cast<unsigned char*>(&edx22));
    addr_0x402771_18:
    goto *esp11;
}

void fun_4027f7(unsigned char cl) {
    int1_t cf2;
    uint32_t ebp3;
    uint32_t* esi4;
    int32_t ebx5;
    int32_t ebx6;
    int32_t ebx7;

    if (cf2) {
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>((ebp3 | *esi4) == 0))) 
            goto 0x4027ea;
        *reinterpret_cast<unsigned char*>(ebx5 + 0x423cd660) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx6 + 0x423cd660) - reinterpret_cast<unsigned char>(cl + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx7 + 0x423cd660) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cl)))));
    }
}

void fun_402848() {
    int32_t ebp1;
    signed char al2;

    *reinterpret_cast<signed char*>(ebp1 + 0x5cb4f3b4) = al2;
}

struct s180 {
    signed char[76] pad76;
    uint32_t f76;
    signed char[100211717] pad100211797;
    int32_t f100211797;
};

uint32_t g6d0086ed;

unsigned char gfe7d349c;

void fun_402851(int32_t ecx) {
    uint80_t v2;
    uint1_t cf3;
    signed char* esi4;
    signed char dl5;
    signed char tmp8_6;
    signed char* esi7;
    signed char* esi8;
    signed char dl9;
    struct s180* edx10;
    int32_t ecx11;
    int32_t eax12;
    int1_t sf13;
    int16_t es14;
    unsigned char bh15;
    uint1_t less_or_equal16;
    uint1_t cf17;
    int16_t edx18;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 6) = reinterpret_cast<int32_t>(__return_address());
    cf3 = __intrinsic();
    if (*esi4 == dl5) {
        tmp8_6 = *esi7;
        *esi8 = dl9;
        *reinterpret_cast<signed char*>(&edx10) = tmp8_6;
    }
    ecx11 = ecx + 1;
    do {
        g6d0086ed = g6d0086ed + ecx11 + cf3;
        __asm__("out 0xf8, eax");
        *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) & 38);
        cf3 = 0;
        sf13 = __intrinsic();
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2) = ecx11;
    } while (ecx11);
    __asm__("out dx, al");
    if (sf13) {
        __asm__("arpl [esi], ax");
        __asm__("retf 0x83a8");
        *reinterpret_cast<int32_t*>(ecx11 + 0x16b4a4f1) = *reinterpret_cast<int32_t*>(ecx11 + 0x16b4a4f1) + 1;
        __asm__("stc ");
        __asm__("out 0xde, al");
        sf13 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax12) & 77) < reinterpret_cast<signed char>(0);
    }
    __asm__("iretd ");
    *reinterpret_cast<int16_t*>(&v2) = es14;
    if (!sf13) {
        __asm__("pushad ");
        *reinterpret_cast<unsigned char*>(eax12 - 10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax12 - 10) ^ bh15);
        less_or_equal16 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(eax12 - 10) == 0));
        do {
            __asm__("out dx, al");
        } while (!less_or_equal16);
        __asm__("lds ebp, [ebx-0x57]");
        edx10->f100211797 = edx10->f100211797 << *reinterpret_cast<unsigned char*>(&ecx11);
        __asm__("iretd ");
        cf17 = __intrinsic();
    } else {
        cf17 = reinterpret_cast<uint1_t>(0x98 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(gfe7d349c)));
        if (!(ecx11 - 1)) {
            edx18 = *reinterpret_cast<int16_t*>(&v2);
            *reinterpret_cast<signed char*>(edx18 - 0xed8ab8e) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx18 - 0xed8ab8e) - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx18) + 1));
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 4);
        }
    }
    __asm__("retf 0xfa1c");
    __asm__("fist dword [eax]");
    edx10->f76 = edx10->f76 + 0x66 + cf17;
}

void fun_4028d9(int32_t ecx) {
    uint1_t zf2;
    int32_t ebx3;
    int32_t* edi4;
    int32_t eax5;

    zf2 = reinterpret_cast<uint1_t>(ebx3 - 1 == 0);
    __asm__("lodsb ");
    *reinterpret_cast<signed char*>(ecx - 72) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
    *edi4 = eax5;
    do {
        --ecx;
    } while (reinterpret_cast<uint1_t>(!!ecx) & zf2);
    __asm__("fcom dword [edx+0x7ff26619]");
}

struct s181 {
    signed char[1] pad1;
    signed char f1;
};

void fun_402933(int32_t ecx) {
    int1_t zf2;
    void* edi3;
    struct s181* esi4;

    if (!zf2) 
        goto 0x40292e;
    __asm__("fcmove st0, st5");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi3) + 1 + 1) = esi4->f1;
    __asm__("in eax, 0x8f");
    __asm__("out 0x29, eax");
}

signed char g37c1ccca;

struct s182 {
    signed char[2054637178] pad2054637178;
    uint32_t f2054637178;
};

struct s183 {
    unsigned char f0;
    int32_t f1;
};

struct s184 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s185 {
    unsigned char f0;
    int32_t f1;
    unsigned char f4;
};

struct s186 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s187 {
    unsigned char f0;
    unsigned char f1;
};

struct s188 {
    unsigned char f0;
    unsigned char f1;
};

struct s189 {
    int32_t f0;
    uint32_t f4;
};

void** fun_d02faf39();

void fun_f389b50a();

void fun_402a11(int16_t a1) {
    int1_t cf2;
    struct s182* ecx3;
    uint32_t ebx4;
    unsigned char* edx5;
    unsigned char* eax6;
    void** eax7;
    void** edx8;
    unsigned char* edi9;
    struct s183* edi10;
    struct s184* edi11;
    struct s185* esi12;
    struct s186* esi13;
    uint32_t* esp14;
    void* ecx15;
    struct s187* esi16;
    struct s188* edi17;
    void* esp18;
    uint1_t cf19;
    int1_t zf20;
    struct s189* esp21;
    uint32_t edi22;
    uint32_t* esp23;
    int16_t* esp24;
    int16_t cs25;

    if (!cf2) {
        addr_0x4029e5_2:
        __asm__("in eax, 0xf1");
        g37c1ccca = reinterpret_cast<signed char>(g37c1ccca + *reinterpret_cast<signed char*>(&ecx3));
    } else {
        ebx4 = reinterpret_cast<uint32_t>(__return_address());
        *reinterpret_cast<signed char*>(&ecx3) = 100;
        edx5 = eax6;
        eax7 = edx8;
        *edi9 = *reinterpret_cast<unsigned char*>(&eax7);
        edi10 = reinterpret_cast<struct s183*>(&edi11->f1);
        esi12 = reinterpret_cast<struct s185*>(&esi13->f1);
        esp14 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 + 2 + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebx4 + 0x6a804a90)));
        do {
            __asm__("insb ");
            ebx4 = ebx4 | *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx3) + 0x7a77467a);
            ecx15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx3) - 1);
            if (!ecx15) 
                goto addr_0x402a28_10;
            if (!ebx4) 
                break;
            __asm__("wait ");
            ebx4 = ebx4 & reinterpret_cast<uint32_t>(esp14 + 1);
            edi10->f0 = esi12->f0;
            esi16 = reinterpret_cast<struct s187*>(reinterpret_cast<uint32_t>(esi12) + 4);
            edi17 = reinterpret_cast<struct s188*>(reinterpret_cast<uint32_t>(edi10) + 4 + reinterpret_cast<int32_t>(ecx15));
            *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) - reinterpret_cast<unsigned char>(10 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax7) < reinterpret_cast<unsigned char>(10 - __intrinsic()))));
            esp18 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*eax7) + 4);
            cf19 = reinterpret_cast<uint1_t>(esi16->f0 < edi17->f0);
            zf20 = esi16->f0 == edi17->f0;
            edi17->f0 = esi16->f0;
            edi10 = reinterpret_cast<struct s183*>(&edi17->f1);
            esi12 = reinterpret_cast<struct s185*>(&esi16->f1);
            esp21 = reinterpret_cast<struct s189*>(reinterpret_cast<int32_t>(esp18) - 4);
            esp21->f0 = 0x4029db;
            eax7 = fun_d02faf39();
            esp14 = &esp21->f4;
            ecx3 = reinterpret_cast<struct s182*>(reinterpret_cast<int32_t>(ecx15) - 1);
        } while (reinterpret_cast<uint1_t>(!!ecx3) & reinterpret_cast<uint1_t>(!zf20));
        goto addr_0x4029dd_20;
    }
    *edx5 = reinterpret_cast<unsigned char>(*edx5 ^ *reinterpret_cast<unsigned char*>(&ebx4));
    edi22 = reinterpret_cast<uint32_t>(edi10) | reinterpret_cast<uint32_t>(esi12);
    __asm__("salc ");
    __asm__("outsb ");
    esi12->f0 = 0xff;
    *reinterpret_cast<unsigned char*>(edi22 + 0x6aef5bcd) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi22 + 0x6aef5bcd) - reinterpret_cast<unsigned char>(0x67 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edi22 + 0x6aef5bcd) < 0x67)));
    addr_0x402a28_10:
    esp23 = esp14 - 1;
    *esp23 = ebx4;
    edi10->f0 = *reinterpret_cast<unsigned char*>(&eax7);
    __asm__("fldz ");
    edi10->f1 = esi12->f1;
    esp24 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp23) - 2);
    *esp24 = cs25;
    *reinterpret_cast<int32_t*>(esp24 - 2) = 0x402a38;
    fun_f389b50a();
    __asm__("enter 0xba0d, 0xc8");
    addr_0x4029dd_20:
    __asm__("into ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx5) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx5) + 1) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&edx5) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx5) + 1) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&edx5) + cf19))));
    esi12 = reinterpret_cast<struct s185*>(0xd1613e44);
    goto addr_0x4029e5_2;
}

void fun_402a3e() {
}

int32_t g97805fb2;

unsigned char gfccf13cb;

void fun_402a55() {
    int32_t ebx1;
    int1_t less2;
    int32_t eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t* edi6;

    __asm__("aaa ");
    __asm__("lds eax, [edx+0x63]");
    ebx1 = 0xb225ac71;
    if (less2) 
        goto 0x402a24;
    g97805fb2 = eax3;
    do {
        *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) | 51) & *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
        *edi6 = *edi6 + eax4;
        *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) | gfccf13cb);
        ++edi6;
        __asm__("wait ");
        __asm__("aas ");
        __asm__("fmul st0, st3");
    } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__undefined() != __intrinsic()) | __undefined()));
    __asm__("enter 0x2bbd, 0x5f");
}

void fun_402aad(int32_t ecx) {
    int32_t eax2;
    int32_t edi3;
    uint16_t ds4;
    int32_t* edi5;
    int32_t* esi6;

    if (eax2 + 0x46b2d7e6 >= 0) {
        *reinterpret_cast<uint32_t*>(edi3 - 0x72) = static_cast<uint32_t>(ds4);
        __asm__("pushad ");
        if (__intrinsic()) 
            goto 0x402a88;
        *edi5 = *esi6;
    }
}

struct s190 {
    int32_t f0;
    signed char f4;
};

struct s191 {
    signed char[1] pad1;
    int32_t f1;
};

struct s192 {
    int32_t* f0;
    void* f4;
};

struct s193 {
    signed char f0;
    unsigned char f1;
};

signed char gae66efc;

struct s194 {
    unsigned char f0;
    signed char[37] pad38;
    uint32_t f38;
    signed char[1203087161] pad1203087203;
    uint32_t f1203087203;
};

struct s195 {
    signed char[4] pad4;
    int16_t f4;
};

unsigned char ge817fa;

int32_t g90f491bd;

void fun_402ac5(int32_t ecx) {
    uint32_t eflags2;
    int1_t pf3;
    signed char* edi4;
    signed char* edi5;
    struct s190* edi6;
    struct s191* edi7;
    void* eax8;
    signed char* edi9;
    signed char al10;
    struct s192* esp11;
    struct s193* edi12;
    int32_t ebx13;
    int32_t ebx14;
    unsigned char al15;
    uint32_t* esp16;
    int16_t* esp17;
    int16_t ds18;
    struct s194* edi19;
    uint32_t ebp20;
    uint32_t ebp21;
    struct s195** esp22;
    unsigned char* edx23;
    uint32_t tmp32_24;
    struct s195* ds25;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    if (pf3) 
        goto 0x402a6a;
    *edi4 = -*edi5;
    edi6 = reinterpret_cast<struct s190*>(&edi7->f1);
    eax8 = reinterpret_cast<void*>(0x7b0cff57);
    if (*edi9 != al10) 
        goto 0x402a8b;
    esp11 = reinterpret_cast<struct s192*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) & *reinterpret_cast<uint32_t*>(ecx - 0x76));
    edi6->f0 = *esp11->f0;
    edi12 = reinterpret_cast<struct s193*>(&edi6->f4);
    __asm__("salc ");
    ebx13 = ebx14 - 1;
    al15 = reinterpret_cast<unsigned char>(87 ^ *reinterpret_cast<unsigned char*>(&ebx13));
    *reinterpret_cast<int1_t*>(&eflags2) = 0;
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = al15 == 0;
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
    esp16 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp11->f4) + 4 - 4);
    *esp16 = eflags2 & 0xfcffff;
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(al15 | 100);
    __asm__("fstp qword [edi+0x33]");
    esp17 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp16) - 2);
    *esp17 = ds18;
    __asm__("wait ");
    edi12->f0 = gae66efc;
    edi19 = reinterpret_cast<struct s194*>(&edi12->f1);
    if (!__intrinsic()) {
        while (1) {
            ebp20 = ebp21 ^ edi19->f38;
            esp22 = reinterpret_cast<struct s195**>(reinterpret_cast<uint32_t>(esp17) ^ edi19->f0);
            *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax8) + ecx * 4 + 27) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax8) + ecx * 4 + 27) | reinterpret_cast<uint32_t>(esp22);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = 0xff;
            addr_0x402b47_14:
            eax8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi19) * 0x73);
            __asm__("insb ");
            __asm__("outsb ");
            __asm__("lodsb ");
            if (__undefined()) 
                break;
            *edx23 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*edx23 + *reinterpret_cast<signed char*>(&ecx)) + __intrinsic());
            __asm__("outsd ");
            esp17 = &(*esp22)->f4;
            *reinterpret_cast<unsigned char*>(&eax8) = ge817fa;
            tmp32_24 = *reinterpret_cast<uint32_t*>(edx23 - 0xe0d8a25);
            *reinterpret_cast<uint32_t*>(edx23 - 0xe0d8a25) = ebp20;
            ebp21 = tmp32_24 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi19) + 0x47b5a763);
            if (!ebp21) 
                goto 0x402ac3;
        }
        edi19->f0 = *reinterpret_cast<unsigned char*>(&eax8);
        __asm__("outsd ");
        __asm__("in eax, 0x61");
        __asm__("aad 0x88");
        __asm__("rcl dh, 0xe2");
        g90f491bd = reinterpret_cast<int32_t>(&edi19->pad38);
        __asm__("aas ");
    } else {
        *reinterpret_cast<signed char*>(&edx23) = -87;
        esp22 = reinterpret_cast<struct s195**>(esp17 + 2 - 1);
        *esp22 = ds25;
        __asm__("cmc ");
        if (__intrinsic()) 
            goto addr_0x402b47_14;
        __asm__("int 0x1b");
        goto *esp22;
    }
}

void fun_402b72() {
    __asm__("in al, dx");
    return;
}

int32_t fun_bc9bddde();

void fun_402c44(uint32_t ecx) {
    int32_t eax2;
    uint32_t eax3;
    uint32_t eax4;
    uint32_t* edi5;
    int32_t edx6;
    unsigned char dh7;
    uint48_t v8;

    eax2 = fun_bc9bddde();
    eax3 = eax2 - 1;
    if (!__intrinsic()) {
        __asm__("psubd mm5, [esi]");
        eax4 = eax3 - 0x8b2ef9e7 + ecx + reinterpret_cast<uint1_t>(eax3 < 0x8b2ef9e7);
        *edi5 = eax4;
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax4) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(eax4 == 0))) 
            goto 0x402b66;
        *reinterpret_cast<unsigned char*>(ecx + 0xffffff93) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 0xffffff93) ^ 43);
        return;
    } else {
        __asm__("int1 ");
        __asm__("stc ");
        __asm__("fimul dword [edx+0x54]");
        __asm__("sahf ");
        __asm__("aas ");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx6) + 1) = reinterpret_cast<unsigned char>(dh7 | *reinterpret_cast<unsigned char*>(0x6c043e9b + (reinterpret_cast<uint32_t>(__return_address()) | 0xb9c78153) * 8));
        *reinterpret_cast<unsigned char*>(edx6 - 35) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx6 - 35) | *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx6) + 1));
        *reinterpret_cast<int32_t*>(&v8) = 0x9e;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 2);
    }
}

void fun_402cdc() {
    __asm__("rol byte [cs:esi+0x54], 1");
    __asm__("outsd ");
}

struct s196 {
    signed char[1] pad1;
    uint16_t f1;
};

void fun_402ce6() {
    uint16_t* edi1;
    struct s196* edi2;
    int32_t ebp3;

    edi1 = &edi2->f1;
    __asm__("lodsb ");
    __asm__("lahf ");
    *edi1 = reinterpret_cast<uint16_t>(*edi1 ^ *reinterpret_cast<uint16_t*>(&edi1));
    if (1) {
        goto *reinterpret_cast<int32_t*>(-ebp3 + 75);
    } else {
        __asm__("rol dword [ebx], cl");
    }
}

void fun_402d25(int32_t ecx) {
    int32_t eax2;

    if (eax2) 
        goto 0x402cde;
    __asm__("fisubr word [eax+0x1b]");
}

void fun_402d33() {
    __asm__("aam 0x9d");
    __asm__("out dx, eax");
}

int32_t gfe56123d;

void fun_402e1d() {
    int32_t eax1;

    gfe56123d = eax1;
    __asm__("aam 0xd8");
    __asm__("hlt ");
}

void fun_402eec(int32_t ecx) {
    int32_t ebx2;
    signed char bh3;
    int32_t eax4;
    signed char al5;
    unsigned char al6;
    int32_t ebx7;
    int32_t ebx8;
    uint32_t edx9;
    uint32_t esi10;

    __asm__("in al, dx");
    if (__intrinsic()) {
        __asm__("daa ");
        __asm__("in al, dx");
        if (!1) {
            __asm__("daa ");
            __asm__("fadd qword [eax-0x2d]");
            __asm__("cmc ");
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx2) + 1) = reinterpret_cast<signed char>(bh3 >> *reinterpret_cast<signed char*>(&ecx));
            __asm__("int 0x4d");
            __asm__("iretd ");
            __asm__("wait ");
            *reinterpret_cast<int32_t*>(ebx2 + 0x79bbbf3f) = *reinterpret_cast<int32_t*>(ebx2 + 0x79bbbf3f) + ecx;
            __asm__("popad ");
            __asm__("int 0x96");
        }
        __asm__("fldcw word [edx]");
        __asm__("xlatb ");
        __asm__("outsb ");
    } else {
        __asm__("fild word [edi+0xb17ae5f6]");
        *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al5 - 94) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) < al6));
        *reinterpret_cast<uint32_t*>(ebx7 + 0x283f86fa) = *reinterpret_cast<uint32_t*>(ebx8 + 0x283f86fa) ^ edx9;
        *reinterpret_cast<uint32_t*>(eax4 - 23) = *reinterpret_cast<uint32_t*>(eax4 - 23) | esi10;
        __asm__("int 0xb6");
    }
}

void fun_402f10() {
    __asm__("aas ");
    goto 0x402ee5;
}

void fun_402f26() {
    __asm__("int 0xf7");
    if (!__intrinsic()) 
        goto 0x402eee;
}

uint56_t gcb3b75e7;

struct s197 {
    signed char[16] pad16;
    unsigned char f16;
};

struct s198 {
    signed char[16] pad16;
    signed char f16;
};

struct s199 {
    signed char[78] pad78;
    unsigned char f78;
};

void fun_402f2d(int32_t ecx) {
    void* eax2;
    int32_t eflags3;
    int32_t ecx4;
    unsigned char* ebx5;
    signed char* ebx6;
    int32_t edx7;
    int32_t edx8;
    int32_t ebx9;
    int16_t es10;
    struct s197* esi11;
    struct s198* esi12;
    signed char bl13;
    unsigned char bl14;
    struct s199* esi15;
    void** edx16;
    int32_t edi17;

    *reinterpret_cast<uint32_t*>(ecx - 8) = *reinterpret_cast<uint32_t*>(ecx - 8) >> 1;
    if (!*reinterpret_cast<uint32_t*>(ecx - 8)) {
        addr_0x402f70_2:
        __asm__("in al, dx");
        __asm__("int 0xba");
        __asm__("daa ");
        __asm__("int1 ");
        __asm__("retf 0x4efe");
        __asm__("insb ");
    } else {
        if (__intrinsic()) 
            goto 0x402f2a;
        __asm__("lds ebx, [eax-0x7c]");
        if (!ecx) 
            goto addr_0x402f46_5;
    }
    __asm__("wait ");
    eax2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 2 - 4 - 2);
    eflags3 = *reinterpret_cast<int32_t*>(&gcb3b75e7);
    ecx4 = ecx - 1;
    if (ecx4) {
        *ebx5 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*ebx6 + *reinterpret_cast<signed char*>(&ecx4)) + *reinterpret_cast<uint1_t*>(&eflags3));
        *reinterpret_cast<uint32_t*>(edx7 + 0x3c2ca644) = *reinterpret_cast<int32_t*>(edx8 + 0x3c2ca644) + ebx9 + __intrinsic();
    } else {
        if (!ecx4) {
            *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&gcb3b75e7) + 2) = es10;
            esi11->f16 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(esi12->f16 + bl13) + reinterpret_cast<uint1_t>(bl14 < esi15->f78));
            __asm__("lodsb ");
            __asm__("out dx, al");
        }
    }
    *edx16 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax2) + 1);
    *reinterpret_cast<unsigned char*>(edi17 - 1 - 80) = 0xff;
    __asm__("xlatb ");
    __asm__("wait ");
    addr_0x402f46_5:
    __asm__("fimul dword [ebx+0x89c8ab4f]");
    if (0) 
        goto 0x402eda;
    if (!__intrinsic()) 
        goto 0x402efc;
    do {
    } while (0);
    goto addr_0x402f70_2;
}

void fun_402f84() {
    int32_t edx1;
    int32_t ebp2;
    int32_t edx3;
    int32_t ebp4;
    signed char bh5;
    int32_t eax6;
    uint32_t eax7;
    uint16_t ss8;

    *reinterpret_cast<signed char*>(edx1 + ebp2 * 4 - 0x70c59f16) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx3 + ebp4 * 4 - 0x70c59f16) + bh5);
    *reinterpret_cast<uint32_t*>(eax6 - (0x25a32a3d + reinterpret_cast<uint1_t>(eax7 < 0x25a32a3d + __intrinsic())) - 0x34518c16 + 0x5a1cf15c) = static_cast<uint32_t>(ss8);
}

struct s200 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_402fd6() {
    struct s200* ebp1;

    __asm__("ror dword [eax+0x19], 1");
    __asm__("lodsd ");
    goto ebp1->f4;
}

int32_t* g33a71544;

int32_t g618b8093;

struct s201 {
    signed char f0;
    int32_t f1;
};

struct s202 {
    signed char[1] pad1;
    signed char f1;
};

struct s203 {
    signed char[1] pad1;
    signed char f1;
};

unsigned char g83b133f2;

void fun_4030a5(uint32_t ecx) {
    uint32_t* edi2;
    uint32_t ebx3;
    uint32_t* edi4;
    uint32_t ebx5;
    int32_t* es6;
    int32_t* edi7;
    int32_t esi8;
    int32_t esi9;
    int16_t cs10;
    int32_t* esi11;
    int32_t ebx12;
    unsigned char bl13;
    int16_t cs14;
    int32_t esi15;
    uint1_t cf16;
    unsigned char* esi17;
    unsigned char* edi18;
    signed char* edi19;
    signed char* esi20;
    struct s201* edi21;
    struct s202* edi22;
    struct s203* esi23;

    __asm__("ficom dword [esp+ecx-0x75]");
    if (reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(*edi2 & ebx3) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>((*edi4 & ebx5) == 0)) {
        __asm__("pushad ");
        __asm__("iretd ");
        g33a71544 = es6;
        edi7 = g33a71544;
        *reinterpret_cast<uint32_t*>(esi8 - 0x28af5c66) = *reinterpret_cast<uint32_t*>(esi9 - 0x28af5c66) & ecx;
        *reinterpret_cast<int16_t*>(&g33a71544 + 1) = cs10;
        __asm__("sahf ");
        __asm__("fmul dword [esi+edx-0x66]");
        *edi7 = *esi11;
    } else {
        __asm__("insb ");
        __asm__("in al, dx");
        *reinterpret_cast<unsigned char*>(&ebx12) = reinterpret_cast<unsigned char>(bl13 >> *reinterpret_cast<signed char*>(&ecx));
        *reinterpret_cast<int32_t*>(ecx + 0x29602cc3) = 0xacf23e18;
        __asm__("les eax, [edx]");
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g618b8093) + 2) = cs14;
        g618b8093 = esi15;
        cf16 = reinterpret_cast<uint1_t>(*esi17 < *edi18);
        *edi19 = *esi20;
        edi21 = reinterpret_cast<struct s201*>(&edi22->f1);
        edi21->f0 = esi23->f1;
        __asm__("aam 0xa");
        __asm__("rol byte [eax-0x5b], 1");
        edi21->f1 = ebx12;
        __asm__("retf ");
        g83b133f2 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(g83b133f2 + 28) + cf16);
    }
}

struct s204 {
    void* f0;
    signed char[33] pad34;
    unsigned char f34;
    signed char[18] pad53;
    signed char f53;
    signed char[16113262] pad16113316;
    uint32_t f16113316;
    signed char[652712473] pad668825793;
    uint32_t f668825793;
    signed char[712409719] pad844364604;
    int32_t f844364604;
    signed char[2168290438] pad1938913222;
    int32_t f1938913222;
    signed char[2219706579] pad2011136157;
    void* f2011136157;
};

struct s205 {
    signed char[234326307] pad234326307;
    void* f234326307;
};

struct s204* gcc549fbf;

struct s206 {
    int32_t f0;
    void* f4;
};

struct s207 {
    void* f0;
    signed char[908957749] pad908957750;
    unsigned char f908957750;
    signed char[1867398798] pad1702614725;
    unsigned char f1702614725;
};

struct s208 {
    signed char[4] pad4;
    void* f4;
};

struct s209 {
    signed char[1] pad1;
    void* f1;
};

unsigned char gb7f30a8f;

int32_t g13a6521;

uint32_t fun_df664ce9();

void** g778fbfc2;

uint32_t g3ab18a34;

struct s210 {
    struct s204* f0;
    int32_t f4;
};

int32_t fun_e30b7610();

struct s211 {
    int32_t f0;
    struct s204* f4;
};

struct s204* fun_a31e2db2();

void fun_403216(void* ecx) {
    struct s204* eflags2;
    struct s204* edx3;
    int32_t v4;
    int16_t es5;
    void** ebx6;
    struct s205* eax7;
    void* ebp8;
    struct s204** esp9;
    struct s204* eax10;
    struct s204* ecx11;
    int32_t* edi12;
    struct s206* v13;
    struct s207* edi14;
    struct s208* edi15;
    struct s204* esi16;
    struct s204* tmp32_17;
    struct s209* eax18;
    struct s204* eax19;
    uint1_t cf20;
    uint1_t less_or_equal21;
    void** ecx22;
    uint32_t eax23;
    struct s204* v24;
    uint32_t ebx25;
    uint1_t cf26;
    uint1_t cf27;
    struct s210* esp28;
    uint1_t less29;
    uint1_t less_or_equal30;
    void* tmp32_31;
    struct s204* tmp32_32;
    void* ecx33;
    uint1_t cf34;
    uint1_t cf35;
    void* tmp32_36;
    void* esi37;
    int1_t zf38;
    struct s211* esp39;

    *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    edx3 = reinterpret_cast<struct s204*>(__return_address());
    *reinterpret_cast<int16_t*>(&v4) = es5;
    __asm__("stc ");
    __asm__("lds ebx, [0x5cd88b8b]");
    __asm__("sahf ");
    ebx6 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax7) - 0xf20876dd);
    __asm__("int 0xa5");
    ebp8 = reinterpret_cast<void*>(0xfbfa8ebf);
    __asm__("fcom st0, st0");
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx3) + 0x3253fb3c) = v4;
    __asm__("xlatb ");
    esp9 = reinterpret_cast<struct s204**>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 - 2 - 4 + 4 + 4 + 4);
    eax10 = gcc549fbf;
    ecx11 = reinterpret_cast<struct s204*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<uint32_t>(ebx6));
    *edi12 = v13->f0;
    edi14 = reinterpret_cast<struct s207*>(&edi15->f4);
    esi16 = reinterpret_cast<struct s204*>(&v13->f4);
    if (!__intrinsic()) 
        goto addr_0x403258_6;
    while (*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax10) + 0xf5dea4) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax10) + 0xf5dea4) | reinterpret_cast<uint32_t>(esi16), tmp32_17 = edx3, edx3 = eax10, eax10 = tmp32_17, reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax10) + 0xf5dea4) == 0))) {
        eax18 = reinterpret_cast<struct s209*>(reinterpret_cast<uint32_t>(eax10) ^ 0x225485d3);
        *reinterpret_cast<unsigned char*>(&eax18) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax18) ^ 0xb8);
        eax19 = reinterpret_cast<struct s204*>(&eax18->f1);
        __asm__("aas ");
        cf20 = reinterpret_cast<uint1_t>(gb7f30a8f < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx3) + 1));
        ecx11 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(ecx11) - 1);
        if (0) 
            goto addr_0x40330d_9;
        *reinterpret_cast<unsigned char*>(&ebx6) = 77;
        __asm__("aaa ");
        g13a6521 = g13a6521 << 31;
        *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(g13a6521 == 0);
        less_or_equal21 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__undefined() != __intrinsic()) | *reinterpret_cast<uint1_t*>(&eflags2));
        *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 1;
        ++esp9;
        if (less_or_equal21) 
            goto addr_0x4032c4_11;
        addr_0x403258_6:
        ecx22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx11) - 1);
        eax23 = fun_df664ce9();
        esp9 = esp9 - 1 + 1;
        __asm__("daa ");
        --ebx6;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi14) + reinterpret_cast<uint32_t>(ecx22) * 2 - 0x599c68b0) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi14) + reinterpret_cast<uint32_t>(ecx22) * 2 - 0x599c68b0) ^ eax23;
        if (*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi14) + reinterpret_cast<uint32_t>(ecx22) * 2 - 0x599c68b0)) 
            goto addr_0x4031f4_13;
        eax10 = reinterpret_cast<struct s204*>(eax23 | *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp9) + reinterpret_cast<uint32_t>(edx3) * 2 - 0x51591683));
        ecx11 = reinterpret_cast<struct s204*>(ecx22 - 1);
        if (reinterpret_cast<uint1_t>(!!ecx11) & reinterpret_cast<uint1_t>(eax10 == 0)) 
            goto addr_0x4032e6_15;
        *reinterpret_cast<void**>(ecx11) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ecx11)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx11) + 1)))));
        eax10 = v24;
        ++esp9;
        ecx11 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(ecx11) - 1);
        if (ecx11) 
            goto addr_0x4032e5_17;
        __asm__("int 0x89");
        edi14 = reinterpret_cast<struct s207*>(reinterpret_cast<uint32_t>(edi14) - 1);
        edx3 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(edx3) - 1);
        *reinterpret_cast<void**>(ecx11) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ecx11)) + reinterpret_cast<uint32_t>(edi14));
    }
    __asm__("fcomp dword [ecx+0x3c39b908]");
    esi16 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(esi16) + 1);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx3) + 0x27dd78c1) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx3) + 0x27dd78c1) | reinterpret_cast<uint32_t>(ecx11);
    __asm__("lodsb ");
    goto addr_0x4032e3_20;
    addr_0x4032c4_11:
    addr_0x4031f4_13:
    __asm__("in al, 0xcb");
    ebx25 = eax23;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi14) + 0x362d9836) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi14) + 0x362d9836) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx25) + 1))));
    *ecx22 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx22) | 0x6d);
    __asm__("int 0x44");
    edi14->f0 = *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi16) - 1);
    g778fbfc2 = ebx6;
    addr_0x4033a3_24:
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi16) + 34) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi16) + 34) ^ *reinterpret_cast<unsigned char*>(&ebx6));
    __asm__("fcomp st0, st2");
    *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi16) + 0xffffff9b) = ebx6;
    cf26 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(esi16)) < reinterpret_cast<unsigned char>(edi14->f0));
    edi14->f0 = *reinterpret_cast<void**>(esi16);
    cf27 = reinterpret_cast<uint1_t>(g3ab18a34 < reinterpret_cast<uint32_t>(edx3) + cf26);
    g3ab18a34 = g3ab18a34 - (reinterpret_cast<uint32_t>(edx3) + cf27);
    esp28 = reinterpret_cast<struct s210*>(esp9 - 1);
    esp28->f0 = reinterpret_cast<struct s204*>(0x4033ba);
    fun_e30b7610();
    goto esp28->f4;
    addr_0x403390_32:
    __asm__("outsd ");
    __asm__("in al, 0x29");
    __asm__("int 0xc7");
    while (1) {
        addr_0x40334e_34:
        ebp8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp8) + reinterpret_cast<uint32_t>(esi16) + __intrinsic());
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax10) + 0x739177c6) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax10) + 0x739177c6) + 0x69;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax10) + 1) = -43;
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx11) + 1) = reinterpret_cast<void*>(84);
        do {
            ebx6[reinterpret_cast<uint32_t>(ebx6) * 4] = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx6[reinterpret_cast<uint32_t>(ebx6) * 4]) - *reinterpret_cast<unsigned char*>(&eax10));
            while (1) {
                addr_0x40335e_36:
                edi14->f0 = *reinterpret_cast<void**>(esi16);
                esi16 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(esi16) + (1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1)));
                __asm__("insb ");
                edi14 = reinterpret_cast<struct s207*>(0x55a71cae);
                __asm__("pushad ");
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp8) - 33) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp8) - 33) >> 80);
                __asm__("fdiv st2, st0");
                while (1) {
                    edx3 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(edx3) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx3) + reinterpret_cast<uint32_t>(eax10))));
                    ecx11 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(ecx11) + 1);
                    *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(ecx11 == 0);
                    less29 = reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx11) < reinterpret_cast<int32_t>(0) != __intrinsic());
                    less_or_equal30 = reinterpret_cast<uint1_t>(less29 | *reinterpret_cast<uint1_t*>(&eflags2));
                    __asm__("lahf ");
                    while (1) {
                        __asm__("popad ");
                        if (!less29) 
                            goto addr_0x40335e_36;
                        do {
                            if (less_or_equal30) 
                                goto addr_0x4033a3_24;
                            __asm__("outsd ");
                            __asm__("sti ");
                            ecx11 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(ecx11) - 1);
                            if (reinterpret_cast<uint1_t>(!!ecx11) & reinterpret_cast<uint1_t>(!*reinterpret_cast<uint1_t*>(&eflags2))) {
                                addr_0x4032e9_44:
                            } else {
                                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi16) + 53) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi16) + 53) + 94);
                                if (!__intrinsic()) {
                                    addr_0x4032e3_20:
                                    __asm__("clc ");
                                    addr_0x4032e5_17:
                                    addr_0x4032e6_15:
                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx3) + 0xd65174b7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx3) + 0xd65174b7) | *reinterpret_cast<unsigned char*>(&ebx6));
                                    goto addr_0x4032e9_44;
                                } else {
                                    __asm__("cli ");
                                    if (__intrinsic()) 
                                        goto addr_0x40334e_34;
                                }
                            }
                            *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax10) ^ 48);
                            cf20 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax10) + 0x77df809d)) < reinterpret_cast<uint32_t>(ebp8));
                            *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax10) + 0x77df809d) = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax10) + 0x77df809d)) - reinterpret_cast<uint32_t>(ebp8));
                            *(esp9 - 1) = edx3;
                            ebp8 = reinterpret_cast<void*>(0x69363184);
                            edi14 = reinterpret_cast<struct s207*>(&edi14->pad908957750);
                            *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(edi14 == 0);
                            less_or_equal30 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edi14) < reinterpret_cast<int32_t>(0) != __intrinsic()) | *reinterpret_cast<uint1_t*>(&eflags2));
                            esp9 = reinterpret_cast<struct s204**>(0xd972f7a7);
                            ebx6 = reinterpret_cast<void**>(0x4b86fb17);
                            __asm__("clc ");
                            __asm__("sti ");
                        } while (!less_or_equal30);
                        tmp32_31 = reinterpret_cast<void*>(1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1));
                        edi14->f0 = *reinterpret_cast<void**>(esi16);
                        edi14 = reinterpret_cast<struct s207*>(reinterpret_cast<uint32_t>(edi14) + reinterpret_cast<uint32_t>(tmp32_31));
                        esi16 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(esi16) + reinterpret_cast<uint32_t>(tmp32_31));
                        tmp32_32 = ecx11;
                        ecx11 = eax10;
                        eax19 = tmp32_32;
                        ebp8 = reinterpret_cast<void*>(0x5165f4a0);
                        addr_0x40330d_9:
                        ecx33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx11) + reinterpret_cast<uint32_t>(ebx6) + cf20);
                        cf34 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx6) + __intrinsic()));
                        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx6) + cf34));
                        cf35 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19) + 0x9672adea) < 0x23ecede1 - cf34);
                        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19) + 0x9672adea) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19) + 0x9672adea) - (0x23ecede1 - cf35);
                        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi14) + 0x657bd6c5) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi14) + 0x657bd6c5) + *reinterpret_cast<signed char*>(&eax19)) + cf35);
                        __asm__("cli ");
                        __asm__("salc ");
                        tmp32_36 = reinterpret_cast<void*>(1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1));
                        edi14->f0 = *reinterpret_cast<void**>(esi16);
                        edi14 = reinterpret_cast<struct s207*>(reinterpret_cast<uint32_t>(edi14) + reinterpret_cast<uint32_t>(tmp32_36));
                        esi37 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi16) + reinterpret_cast<uint32_t>(tmp32_36));
                        __asm__("cdq ");
                        less29 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi37) < reinterpret_cast<signed char>(*ebx6));
                        less_or_equal30 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi37) <= reinterpret_cast<signed char>(*ebx6));
                        zf38 = reinterpret_cast<unsigned char>(esi37) - reinterpret_cast<unsigned char>(*ebx6) == 0;
                        esi16 = *esp9;
                        esp39 = reinterpret_cast<struct s211*>(esp9 + 1 - 1);
                        esp39->f0 = 0x403380;
                        eax10 = fun_a31e2db2();
                        esp9 = &esp39->f4;
                        __asm__("aad 0x64");
                        ecx11 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(ecx33) - 1);
                        if (reinterpret_cast<uint1_t>(!!ecx11) & reinterpret_cast<uint1_t>(!zf38)) 
                            break;
                        eflags2 = *esp9;
                        ++esp9;
                        ebp8 = reinterpret_cast<void*>(0xbbcb3944);
                        __asm__("in eax, 0x3c");
                        if (!*reinterpret_cast<int1_t*>(&eflags2)) 
                            goto addr_0x40338e_58;
                    }
                }
            }
            addr_0x40338e_58:
            ecx11 = reinterpret_cast<struct s204*>(reinterpret_cast<uint32_t>(ecx11) - 1);
        } while (0);
        goto addr_0x403390_32;
    }
}

void fun_4032c9() {
}

void fun_403396(int32_t ecx) {
    int1_t zf2;

    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!zf2)) 
        goto 0x403391;
    __asm__("wait ");
    __asm__("out 0x26, al");
}

unsigned char g7130835a;

void fun_403497() {
    int32_t edx1;
    int32_t edx2;
    int32_t ecx3;
    int32_t edi4;
    int32_t edi5;

    *reinterpret_cast<signed char*>(edx1 - 0x7f356cb0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx2 - 0x7f356cb0) - 94);
    __asm__("in al, 0x12");
    *reinterpret_cast<unsigned char*>(&ecx3) = g7130835a;
    *reinterpret_cast<unsigned char*>(edi4 - 81) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi5 - 81) ^ *reinterpret_cast<unsigned char*>(&ecx3));
    __asm__("in eax, dx");
    __asm__("sahf ");
    __asm__("cdq ");
}

struct s212 {
    unsigned char f0;
    void** f1;
};

struct s213 {
    signed char f0;
    signed char[274562418] pad274562419;
    signed char f274562419;
    signed char[1980656254] pad1718347762;
    uint32_t f1718347762;
};

unsigned char gd1e1ebbd;

struct s214 {
    signed char[1] pad1;
    void** f1;
};

unsigned char g6c3a27d2;

struct s213* fun_895f8405();

void fun_4034c6() {
    uint1_t cf1;
    uint32_t* edi2;
    uint1_t cf3;
    uint32_t* edi4;
    int32_t* edi5;
    int32_t ecx6;
    struct s212* edi7;
    void* edi8;
    uint32_t ebp9;
    int32_t ebp10;
    int32_t edx11;
    int32_t eax12;
    unsigned char al13;
    struct s213** esp14;
    int32_t ebx15;
    uint32_t eax16;
    void*** edx17;
    int1_t zf18;
    unsigned char* esi19;
    int1_t below_or_equal20;
    unsigned char* esi21;
    unsigned char* esi22;
    void** edi23;
    struct s214* esi24;
    struct s213* eax25;
    int1_t pf26;
    int1_t less27;
    void** esp28;
    uint1_t cf29;
    signed char bl30;
    int16_t* esp31;
    int16_t es32;
    signed char bl33;
    void** tmp32_34;
    int32_t* esp35;
    int16_t* esp36;
    int16_t ss37;
    void** tmp8_38;
    int16_t es39;

    cf1 = reinterpret_cast<uint1_t>(*edi2 < reinterpret_cast<int32_t>(__zero_stack_offset()) + cf3);
    *edi4 = *edi5 - (reinterpret_cast<int32_t>(__zero_stack_offset()) + cf1);
    __asm__("daa ");
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&ecx6) + 1) = reinterpret_cast<void**>(0x94);
    edi7 = reinterpret_cast<struct s212*>(reinterpret_cast<int32_t>(edi8) - 1);
    ebp9 = ebp10 + edx11 + cf1;
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(al13 ^ 81);
    *reinterpret_cast<void**>(ebp9 + 0x24a802aa) = __zero_stack_offset();
    esp14 = reinterpret_cast<struct s213**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx15) + 1) = 62;
    *reinterpret_cast<signed char*>(&ecx6) = -47;
    eax16 = reinterpret_cast<uint32_t>(eax12 * reinterpret_cast<int32_t>(edi7));
    edx17 = __intrinsic();
    zf18 = *esi19 == edi7->f0;
    below_or_equal20 = *esi21 <= edi7->f0;
    edi7->f0 = *esi22;
    edi23 = reinterpret_cast<void**>(&edi7->f1);
    if (!zf18) {
        __asm__("insb ");
        if (!below_or_equal20) {
            *reinterpret_cast<unsigned char*>(&eax16) = gd1e1ebbd;
            *reinterpret_cast<signed char*>(&ecx6) = -48;
            *reinterpret_cast<void***>(edi23) = esi24->f1;
            ++edi23;
            *reinterpret_cast<unsigned char*>(edx17 - 58) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx17 - 58) ^ 0xaa);
            eax16 = eax16 - (0x6647b34f + reinterpret_cast<uint1_t>(eax16 < 0x6647b34f));
        }
    }
    *reinterpret_cast<void***>(&eax25) = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(&eax16) & 0xb7);
    pf26 = __intrinsic();
    less27 = __intrinsic();
    while (pf26) {
        while (1) {
            if (less27) 
                goto 0x4033c3;
            *reinterpret_cast<void***>(edi23) = *reinterpret_cast<void***>(&eax25);
            ++edi23;
            __asm__("in al, dx");
            __asm__("daa ");
            esp28 = reinterpret_cast<void**>(esp14 - 1);
            *reinterpret_cast<void***>(esp28) = edi23;
            __asm__("out dx, eax");
            eax25 = reinterpret_cast<struct s213*>(0x1ac857aa);
            cf29 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx15 - 10)) < reinterpret_cast<unsigned char>(esp28));
            *reinterpret_cast<void***>(ebx15 - 10) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx15 - 10)) - reinterpret_cast<unsigned char>(esp28));
            do {
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax25) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax25) + 1) + *reinterpret_cast<signed char*>(ebx15 + ebp9 - 33)) + cf29);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax25) + 0x105d7d73) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax25) + 0x105d7d73) - bl30);
                esp31 = reinterpret_cast<int16_t*>(esp28 - 2);
                *esp31 = es32;
                g6c3a27d2 = reinterpret_cast<unsigned char>(g6c3a27d2 | 56);
                cf29 = 0;
                esp28 = reinterpret_cast<void**>(esp31 - 2);
                *reinterpret_cast<void***>(esp28) = esp28;
                __asm__("fld dword [eax+0x6e]");
                eax25->f0 = bl33;
                if (!__intrinsic()) 
                    break;
                __asm__("in al, dx");
                --ecx6;
                if (ecx6) 
                    goto 0x40349b;
            } while (0);
            break;
            tmp32_34 = *edx17;
            *edx17 = edi23;
            edi23 = tmp32_34;
            __asm__("cmc ");
            __asm__("in eax, dx");
            *reinterpret_cast<uint32_t*>(ecx6 - 0x126ac1a3) = *reinterpret_cast<uint32_t*>(ecx6 - 0x126ac1a3) & 0x1650cae5;
            less27 = __intrinsic();
            esp35 = reinterpret_cast<int32_t*>(esp28 - 4);
            *esp35 = 0x403422;
            eax25 = fun_895f8405();
            esp36 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp35 + 1) - 2);
            *esp36 = ss37;
            esp14 = reinterpret_cast<struct s213**>(esp36 - 2);
            *esp14 = eax25;
            __asm__("clc ");
            __asm__("wait ");
        }
        *reinterpret_cast<void***>(&eax25) = reinterpret_cast<void**>(0xa0);
        esp14 = reinterpret_cast<struct s213**>(0x55f0fba4);
        tmp8_38 = *reinterpret_cast<void***>(edi23);
        *reinterpret_cast<void***>(edi23) = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&ecx6) + 1);
        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&ecx6) + 1) = tmp8_38;
        pf26 = __intrinsic();
        less27 = reinterpret_cast<int32_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax25) + 0x666be7f2) & 0xb263254b) < reinterpret_cast<int32_t>(0);
    }
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp14) - 2) = es39;
}

void fun_403544(int32_t ecx) {
    int32_t edx2;
    int32_t edx3;
    int32_t edi4;

    *reinterpret_cast<int32_t*>(edx2 + 0x2a99f751) = *reinterpret_cast<int32_t*>(edx3 + 0x2a99f751) + edi4;
    __asm__("in eax, dx");
    __asm__("hlt ");
}

struct s215 {
    signed char[95] pad95;
    int32_t f95;
};

struct s216 {
    signed char[95] pad95;
    int32_t f95;
};

uint32_t g5311e0f7;

void fun_40358b() {
    struct s215* ebp1;
    struct s216* ebp2;
    int32_t ecx3;

    ebp1->f95 = ebp2->f95 - 1;
    __asm__("fsub qword [edi+0x75fa6ab5]");
    __asm__("rep daa ");
    __asm__("in al, 0x91");
    __asm__("insd ");
    *reinterpret_cast<signed char*>(&ecx3) = 62;
    __asm__("in eax, dx");
    *reinterpret_cast<signed char*>(ecx3 - 0x69071e0e) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx3 - 0x69071e0e) + 62);
    __asm__("fisttp qword [eax-0x20]");
    __asm__("lodsd ");
    g5311e0f7 = g5311e0f7 | 0x4c7a4a58;
}

void fun_4035cf() {
    int32_t ebx1;

    goto *reinterpret_cast<int32_t*>(ebx1 + 0x7ad21576);
}

struct s217 {
    unsigned char f0;
    unsigned char f1;
    signed char[2] pad4;
    int32_t f4;
    signed char[9] pad17;
    signed char f17;
    signed char[82] pad100;
    void* f100;
    signed char[1139765749] pad1139765853;
    unsigned char* f1139765853;
    signed char[1790893698] pad1856917731;
    uint32_t f1856917731;
};

struct s218 {
    uint32_t f0;
    unsigned char f1;
};

struct s219 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s220 {
    unsigned char f0;
    signed char[106] pad107;
    int32_t f107;
    signed char[48446791] pad48446902;
    uint32_t f48446902;
};

struct s221 {
    signed char[4] pad4;
    unsigned char f4;
};

int32_t fun_9c4e1c97();

struct s222 {
    void* f0;
    signed char[2] pad4;
    unsigned char f4;
};

struct s223 {
    struct s217* f0;
    signed char[2] pad4;
    int32_t f4;
};

struct s224 {
    int32_t f0;
    unsigned char* f4;
};

struct s217* g2469877b;

struct s217* ga16e992;

struct s217* gc314149b;

void fun_4035e8(int16_t cx) {
    struct s217* ecx1;
    int32_t edx2;
    int32_t edx3;
    unsigned char bh4;
    struct s218* ebx5;
    unsigned char bh6;
    int32_t edi7;
    signed char* eax8;
    signed char* eax9;
    int32_t* edi10;
    int32_t eax11;
    unsigned char* edi12;
    struct s219* edi13;
    struct s220* esi14;
    struct s221* esi15;
    int32_t edx16;
    int32_t edx17;
    int32_t edx18;
    int32_t ebp19;
    int32_t* ebp20;
    struct s217** esp21;
    int32_t edx22;
    int32_t eax23;
    struct s217* ebp24;
    int32_t* esp25;
    unsigned char* edi26;
    unsigned char* esi27;
    struct s217* edx28;
    struct s217* edx29;
    void** esp30;
    void* esp31;
    struct s217* eax32;
    struct s222* esp33;
    void* cs34;
    struct s223* esp35;
    struct s217* cs36;
    int1_t zf37;
    unsigned char* edi38;
    struct s224* esp39;
    int32_t eflags40;
    unsigned char** esp41;
    struct s217* ebx42;
    void* esp43;
    int32_t* esp44;
    struct s217* eax45;
    int1_t sf46;
    int1_t of47;
    uint1_t cf48;
    struct s217** esp49;
    struct s217* esi50;
    uint32_t eax51;
    unsigned char* edi52;
    struct s217* edi53;
    uint32_t* eax54;
    uint1_t cf55;
    struct s217* ebp56;
    uint1_t cf57;
    void* ecx58;

    *reinterpret_cast<int16_t*>(&ecx1) = cx;
    __asm__("stc ");
    __asm__("cmc ");
    *reinterpret_cast<unsigned char*>(edx2 + 0x4b85d62f) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx3 + 0x4b85d62f) ^ bh4);
    __asm__("pushad ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1) = reinterpret_cast<unsigned char>(bh6 ^ *reinterpret_cast<unsigned char*>(edi7 + 0x6760b609));
    *eax8 = reinterpret_cast<signed char>(*eax9 + *reinterpret_cast<signed char*>(&ecx1));
    __asm__("lodsb ");
    *edi10 = eax11;
    edi12 = &edi13->f4;
    esi14 = reinterpret_cast<struct s220*>(&esi15->f4);
    *reinterpret_cast<int32_t*>(edx16 - 0x44c23ce4) = *reinterpret_cast<int32_t*>(edx17 - 0x44c23ce4) + edx18;
    esi14->f0 = reinterpret_cast<unsigned char>(esi14->f0 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx1) + 1));
    if (esi14->f0) {
        ebp19 = *ebp20;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx1) + 1) = 0xa1;
        esp21 = reinterpret_cast<struct s217**>(ebp20 + 1 + 1);
        ebx5 = reinterpret_cast<struct s218*>(0xe2245d73);
        esi14->f48446902 = esi14->f48446902 & reinterpret_cast<uint16_t>(ecx1);
        if (1) {
            __asm__("cdq ");
            __asm__("hlt ");
        }
        edx22 = eax23;
        esi14->f107 = esi14->f107 + 83;
        esp21[reinterpret_cast<int32_t>(esi14) * 2] = ecx1;
        __asm__("das ");
        ebp24 = reinterpret_cast<struct s217*>(ebp19 + 0x38094105 - 1);
        if (reinterpret_cast<int16_t>(ebp24) < reinterpret_cast<int16_t>(0) == __intrinsic()) 
            goto addr_0x403698_11;
    }
    esp25 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx5) - 4);
    *esp25 = 0x403640;
    fun_9c4e1c97();
    __asm__("stc ");
    *reinterpret_cast<uint32_t*>(edx22 - 0x1e92684a) = *reinterpret_cast<uint32_t*>(edx22 - 0x1e92684a) >> 1;
    goto (esp25 + 1)[1];
    addr_0x403698_11:
    *edi12 = esi14->f0;
    edi26 = edi12 + 0xfffffffc;
    esi27 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi14) + 0xfffffffc);
    __asm__("clc ");
    __asm__("into ");
    __asm__("salc ");
    edx28 = edx29;
    esp30 = reinterpret_cast<void**>(esp21 - 2);
    *reinterpret_cast<void***>(esp30) = esp30;
    esp31 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp30) + 2);
    __asm__("lodsd ");
    eax32 = reinterpret_cast<struct s217*>(0x73ba7e21);
    while (!ecx1) {
        ebx5 = reinterpret_cast<struct s218*>(reinterpret_cast<int32_t>(ebx5) + 1);
        *reinterpret_cast<signed char*>(&ebx5) = -76;
        esp33 = reinterpret_cast<struct s222*>(reinterpret_cast<uint32_t>(esp31) - 2);
        esp33->f0 = cs34;
        ecx1 = eax32;
        __asm__("retf ");
        eax32 = reinterpret_cast<struct s217*>(&esp33->f4);
        esp35 = reinterpret_cast<struct s223*>(reinterpret_cast<int16_t>(esp33->f0) - 2);
        esp35->f0 = cs36;
        __asm__("clc ");
        __asm__("aam 0x44");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1) ^ esi27[reinterpret_cast<uint32_t>(esi27) * 2]);
        *reinterpret_cast<unsigned char*>(&eax32) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32) + 7)));
        zf37 = *reinterpret_cast<unsigned char*>(&eax32) == 0;
        if (zf37) 
            goto addr_0x4036c8_19;
        *edi26 = *reinterpret_cast<unsigned char*>(&eax32);
        edi38 = edi26 + 0xffffffff;
        --esi27;
        __asm__("int1 ");
        if (!(reinterpret_cast<uint1_t>(!!(reinterpret_cast<uint16_t>(ecx1) - 1)) & reinterpret_cast<uint1_t>(!zf37))) 
            goto addr_0x403676_24;
        ebx5->f0 = ebx5->f0 - (reinterpret_cast<uint16_t>(eax32) + reinterpret_cast<uint1_t>(ebx5->f0 < reinterpret_cast<uint16_t>(eax32) + __intrinsic()));
        *edi38 = reinterpret_cast<unsigned char>(*edi38 - 76);
        ecx1 = esp35->f0;
        esp39 = reinterpret_cast<struct s224*>(&esp35->f4);
        eflags40 = esp39->f0;
        esp41 = &esp39->f4;
        __asm__("salc ");
        edi26 = *esp41;
        esp31 = reinterpret_cast<void*>(esp41 + 1);
        if (*reinterpret_cast<int1_t*>(&eflags40)) 
            goto addr_0x403669_26;
        ebp24 = reinterpret_cast<struct s217*>(reinterpret_cast<uint16_t>(ebp24) | reinterpret_cast<uint16_t>(ecx1));
        __asm__("lodsd ");
    }
    ebx42 = reinterpret_cast<struct s217*>(reinterpret_cast<int32_t>(ebx5) + 1);
    *reinterpret_cast<unsigned char*>(&eax32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32) + 0x69);
    esp43 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp31) + 0x6c + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(*reinterpret_cast<unsigned char**>(reinterpret_cast<uint16_t>(ecx1) + 0x43ef725d)) < reinterpret_cast<uint32_t>(esi27)));
    __asm__("out dx, al");
    __asm__("in al, 0x95");
    g2469877b = eax32;
    esp44 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp43) - 4);
    *esp44 = 0x403723;
    eax45 = reinterpret_cast<struct s217*>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(ebp24) + 0x90b95bf3)());
    __asm__("das ");
    __asm__("les esp, [ecx]");
    __asm__("lodsd ");
    esp35 = reinterpret_cast<struct s223*>(esp44 + 1 + 1);
    if (reinterpret_cast<uint16_t>(eax32) >= reinterpret_cast<uint16_t>(0xb05411ba)) {
        sf46 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx42) - *reinterpret_cast<signed char*>(&edx28)) < 0;
        of47 = __intrinsic();
        *reinterpret_cast<signed char*>(&ebx42) = 0x8b;
        goto addr_0x40372d_30;
    }
    addr_0x403794_31:
    addr_0x4036c8_19:
    __asm__("fisub dword [esi+0x0]");
    __asm__("outsb ");
    ebx42 = reinterpret_cast<struct s217*>(reinterpret_cast<int32_t>(ebx5) + reinterpret_cast<int32_t>(ebp24->f100) + __intrinsic());
    cf48 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx42) + 0xffffffcb) < 0x63481b99 - __intrinsic());
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx42) + 0xffffffcb) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx42) + 0xffffffcb) - (0x63481b99 - cf48);
    sf46 = reinterpret_cast<int32_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx42) + 0xffffffcb)) < reinterpret_cast<int32_t>(static_cast<uint32_t>(cf48));
    addr_0x4036d4_32:
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx42) + 1) = ebx42->f17;
    if (sf46) {
        esp49 = reinterpret_cast<struct s217**>(&esp35->f0->f4 - 1);
        *esp49 = ebx42;
        __asm__("fadd qword [edx+0x81b54e05]");
        __asm__("aas ");
        goto *esp49;
    }
    addr_0x40366a_34:
    addr_0x403676_24:
    *edi38 = *esi27;
    if (!0) {
        __asm__("aaa ");
        esi50 = esp35->f0;
        eax51 = reinterpret_cast<uint16_t>(eax32) - 0x21ccfbca;
        __asm__("out 0xad, eax");
        esp35 = reinterpret_cast<struct s223*>(reinterpret_cast<uint32_t>(&esp35->f4) + 2 - 4);
        esp35->f0 = edx28;
        *reinterpret_cast<uint32_t*>(eax51 - 0x39f8a6d4) = *reinterpret_cast<uint32_t*>(eax51 - 0x39f8a6d4) & reinterpret_cast<uint16_t>(esi50);
    }
    goto esp35->f0;
    addr_0x403669_26:
    goto addr_0x40366a_34;
    addr_0x40379d_40:
    addr_0x4037a2_41:
    *reinterpret_cast<unsigned char**>(reinterpret_cast<uint32_t>(esp35) - 4) = edi52;
    addr_0x4037b4_42:
    __asm__("popad ");
    __asm__("fbstp tword [eax+0x7c9b2bfd]");
    goto ebp24->f4;
    addr_0x4037c9_43:
    __asm__("lodsd ");
    __asm__("retf ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(edi53) + 0xffffffff) = *reinterpret_cast<unsigned char*>(&eax45);
    __asm__("hlt ");
    addr_0x403774_50:
    ga16e992 = ebp24;
    __asm__("int 0x88");
    eax54 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(eax45) - 0x9151af1d);
    __asm__("salc ");
    eax54[reinterpret_cast<uint16_t>(ecx1)] = eax54[reinterpret_cast<uint16_t>(ecx1)] | reinterpret_cast<uint32_t>(eax54);
    *reinterpret_cast<uint32_t*>(edi26 + 0xec3c9c7c) = *reinterpret_cast<uint32_t*>(edi26 + 0xec3c9c7c) + reinterpret_cast<uint16_t>(edx28);
    __asm__("aaa ");
    goto addr_0x403794_31;
    while (*reinterpret_cast<unsigned char*>(&eax45) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) + 29) + cf55), ebp56 = eax45, eax45 = ebp24, !__intrinsic()) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax45) + 1) = 0xff;
        __asm__("enter 0x76a0, 0x84");
        esp35 = reinterpret_cast<struct s223*>(0xa16e992);
        ebx42 = edx28;
        ebp24 = reinterpret_cast<struct s217*>(reinterpret_cast<uint16_t>(ebp56) - 1);
        __asm__("insb ");
        *reinterpret_cast<unsigned char*>(&eax45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) & 0x74);
        cf55 = 0;
        if (ecx1) 
            goto addr_0x4037b4_42;
        ecx1 = reinterpret_cast<struct s217*>(reinterpret_cast<uint16_t>(ecx1) - 1);
        if (!ecx1) {
            __asm__("popad ");
            __asm__("lahf ");
            cf57 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx1) + 1) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ebx42->f0))));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx1) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx1) + 1) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx42->f0) + cf57));
            edi53 = ga16e992;
            esp35 = reinterpret_cast<struct s223*>(0xa16e996);
            __asm__("popad ");
            __asm__("lodsd ");
            if (!cf57) 
                goto addr_0x4037c9_43;
            edi26 = &edi53->f1;
            sf46 = reinterpret_cast<int32_t>(edi26) < reinterpret_cast<int32_t>(0);
            of47 = __intrinsic();
            __asm__("insd ");
            if (!edi26) 
                goto addr_0x403774_50;
            addr_0x40372d_30:
            if (of47) 
                goto addr_0x4036d4_32;
            cf55 = reinterpret_cast<uint1_t>(*edi26 < *reinterpret_cast<unsigned char*>(&eax45));
            edi52 = edi26 + 0xffffffff;
            ecx58 = reinterpret_cast<void*>(reinterpret_cast<uint16_t>(ecx1) - 1 - 1);
            if (cf55) 
                goto addr_0x40379d_40;
            gc314149b = eax45;
            ecx1 = reinterpret_cast<struct s217*>(reinterpret_cast<uint32_t>(ecx58) - 1);
            if (reinterpret_cast<uint1_t>(!!ecx1) & reinterpret_cast<uint1_t>(!!ecx58)) 
                continue;
            esp35 = reinterpret_cast<struct s223*>(&esp35->f4);
            __asm__("sahf ");
            __asm__("into ");
        }
        edx28 = reinterpret_cast<struct s217*>(0x5779c0f3);
    }
    goto addr_0x4037a2_41;
}

void fun_40366e() {
    goto 0x403636;
}

void fun_40379a() {
    int32_t eax1;
    int32_t eax2;
    uint32_t ebx3;

    *reinterpret_cast<uint32_t*>(eax1 + 0x5ccabdb4) = *reinterpret_cast<uint32_t*>(eax2 + 0x5ccabdb4) ^ ebx3;
}

void fun_4037a4(signed char cl) {
}

uint32_t g91a3d022;

unsigned char g4a96b60c;

uint32_t gf157770f;

unsigned char g38beff75;

struct s225 {
    signed char[1] pad1;
    signed char f1;
};

void fun_403894() {
    void* esp1;
    uint32_t* ebx2;
    uint32_t eax3;
    int32_t* edx4;
    int32_t* edx5;
    uint1_t cf6;
    int32_t ecx7;
    int32_t ebp8;
    int32_t ebp9;
    signed char dh10;
    int32_t edi11;
    int32_t edi12;
    int16_t* esp13;
    int16_t ds14;
    int1_t less_or_equal15;
    unsigned char* edx16;
    unsigned char* edx17;
    signed char* edx18;
    int32_t esi19;
    signed char* edi20;
    signed char* eax21;
    void** esp22;
    struct s225* edi23;

    esp1 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) & *ebx2);
    do {
        eax3 = reinterpret_cast<uint32_t>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax3)));
        *edx4 = *edx5 + 1;
        cf6 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx7) + 1) < *reinterpret_cast<unsigned char*>(&ecx7));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx7) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx7) + 1) - *reinterpret_cast<unsigned char*>(&ecx7));
        __asm__("insb ");
        if (cf6) 
            break;
        --ecx7;
        __asm__("int1 ");
        esp1 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp1) - 1);
        *reinterpret_cast<signed char*>(ebp8 - 0x4c78ef79) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp9 - 0x4c78ef79) - dh10);
        __asm__("cmc ");
        *reinterpret_cast<unsigned char*>(&ecx7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx7) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edi11 + ecx7 + 0x7c04febd) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ecx7) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(edi12 + ecx7 + 0x7c04febd))))));
    } while (!__intrinsic());
    goto addr_0x403893_6;
    __asm__("daa ");
    g91a3d022 = eax3;
    esp13 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp1) - 2);
    *esp13 = ds14;
    __asm__("lds ecx, [esi+0xf978e11d]");
    g4a96b60c = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(g4a96b60c + 11) + __intrinsic());
    less_or_equal15 = reinterpret_cast<signed char>(*edx16) <= reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&ecx7));
    *edx17 = reinterpret_cast<unsigned char>(*edx18 - *reinterpret_cast<unsigned char*>(&ecx7));
    gf157770f = esi19 - 1 + 0x5921dcfc + cf6;
    *edi20 = *reinterpret_cast<signed char*>(&eax3);
    if (!less_or_equal15) {
        eax21 = reinterpret_cast<signed char*>(eax3 ^ 0xa55722e5);
        __asm__("outsb ");
        g38beff75 = reinterpret_cast<unsigned char>(g38beff75 | 71);
        __asm__("ror bl, 0xfa");
        esp22 = reinterpret_cast<void**>(esp13 + 2 - 2);
        *reinterpret_cast<void***>(esp22) = esp22;
        *reinterpret_cast<unsigned char*>(&eax21) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax21) - reinterpret_cast<unsigned char>(0x65 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax21) < 0x9b))) + 75);
        __asm__("out 0x58, al");
        edi23->f1 = *eax21;
        __asm__("hlt ");
    }
    addr_0x403893_6:
}

void fun_4038e8() {
    __asm__("clc ");
}

int32_t fun_39c556eb();

struct s226 {
    signed char[84] pad84;
    int32_t f84;
};

void fun_4038f2() {
    int1_t less1;
    int1_t below_or_equal2;
    int32_t edi3;
    int32_t edi4;
    int32_t edi5;
    uint32_t edi6;
    uint32_t esi7;
    struct s226* ebp8;

    if (!less1) {
        if (!below_or_equal2) {
            fun_39c556eb();
            *reinterpret_cast<unsigned char*>(edi3 + 0x6ee7f887) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edi4 + 0x6ee7f887) - reinterpret_cast<unsigned char>(90 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edi5 + 0x6ee7f887) < reinterpret_cast<unsigned char>(90 + reinterpret_cast<uint1_t>(edi6 < esi7)))));
            __asm__("in eax, dx");
            __asm__("salc ");
            __asm__("lds edi, [esi+ecx*4]");
        } else {
            goto *reinterpret_cast<int32_t*>(ebp8->f84 * 0x52c518d8);
        }
    }
}

uint32_t g7e0c828;

void fun_112fc57d();

void fun_403977(int32_t ecx, int16_t a2) {
    uint32_t eax3;
    uint32_t eax4;
    int1_t cf5;
    signed char* edi6;
    void* edi7;
    signed char dl8;

    if (!__intrinsic()) {
        __asm__("in eax, dx");
        eax3 = (eax4 & 0xe28230ac) + 0x159d9393;
        cf5 = __intrinsic();
        __asm__("into ");
        edi6 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi7) + 1 + 4 - 1);
        do {
            g7e0c828 = eax3;
        } while (cf5);
        __asm__("ficomp dword [edi+0xb9beb31]");
        *(edi6 - 0x6e) = dl8;
        *edi6 = -35;
        __asm__("aam 0x66");
    } else {
        __asm__("sahf ");
        __asm__("sysexit ");
        __asm__("retf 0x3246");
        fun_112fc57d();
        __asm__("aad 0x10");
        return;
    }
}

void fun_403a7b() {
    __asm__("in eax, dx");
    __asm__("outsd ");
    __asm__("lahf ");
}

int32_t gb747090c;

int32_t* gfdf72464;

void fun_403a87(int32_t ecx) {
    uint32_t edi2;
    int32_t edi3;
    uint32_t esi4;
    uint32_t esi5;
    int32_t ebp6;
    int32_t* esp7;
    uint1_t cf8;
    int32_t ebx9;
    uint32_t* eax10;
    uint32_t esi11;
    uint1_t cf12;
    uint32_t eax13;
    uint1_t cf14;
    uint32_t esi15;
    void* eax16;
    int16_t ss17;

    __asm__("iretd ");
    __asm__("rcl byte [gs:edi+0xc3879353], 1");
    edi2 = edi3 + 1;
    __asm__("lodsb ");
    esi4 = (esi5 ^ *reinterpret_cast<uint32_t*>(ebp6 - 0x358b50c)) + 1 - 1;
    __asm__("in eax, 0xea");
    esp7 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) - (0x1b80a875 - reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(__zero_stack_offset()) < 0x1b80a875 - cf8)) - 4);
    *esp7 = ebx9 + 1 + *reinterpret_cast<int32_t*>(edi2 - 0x2414b741);
    eax10[ecx] = edi2;
    esi11 = esi4 - 1;
    cf12 = reinterpret_cast<uint1_t>(eax13 < 0x401a22fd + __intrinsic());
    __asm__("insd ");
    cf14 = reinterpret_cast<uint1_t>(esi11 < gb747090c + cf12);
    esi15 = esi11 - (gb747090c + cf14);
    if (reinterpret_cast<int32_t>(esi15) >= reinterpret_cast<int32_t>(static_cast<uint32_t>(cf14))) {
        __asm__("out dx, al");
        __asm__("out dx, al");
        __asm__("cli ");
    } else {
        __asm__("int1 ");
        gfdf72464 = esp7;
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(eax16) - (0x401a22fd + cf12) - 2) = ss17;
        __asm__("hlt ");
    }
}

void fun_403ad5() {
    __asm__("aaa ");
    return;
}

void fun_403b2c() {
    __asm__("paddq mm7, mm6");
}

void fun_403b42(int32_t ecx) {
    __asm__("daa ");
    if (!__intrinsic()) {
        __asm__("rcl byte [ecx], cl");
    } else {
        __asm__("fidivr dword [eax+ebp*8-0x58]");
        __asm__("hlt ");
    }
}

void fun_403b6d() {
    __asm__("aam 0xc4");
    __asm__("sahf ");
}

struct s227 {
    signed char[35] pad35;
    signed char f35;
};

int32_t gfd31949;

void fun_403b7f(signed char cl) {
    struct s227* ecx2;
    int32_t ebx3;
    uint1_t cf4;
    int32_t eax5;
    uint32_t* ecx6;
    uint32_t ebp7;

    __asm__("fcmovu st0, st3");
    *reinterpret_cast<unsigned char*>(&ecx2) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(cl + *reinterpret_cast<signed char*>(ebx3 - 0x1a9b2bee)) + cf4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax5) + 1) = -11;
    __asm__("into ");
    __asm__("lodsd ");
    *reinterpret_cast<unsigned char*>(&ecx6) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx2) + ecx2->f35) + __intrinsic());
    __asm__("insd ");
    __asm__("wait ");
    gfd31949 = eax5;
    __asm__("lodsd ");
    *ecx6 = *ecx6 | ebp7;
    if (!__intrinsic()) 
        goto 0x403b3e;
    __asm__("xlatb ");
    __asm__("int1 ");
}

void fun_403ba4() {
    int32_t eax1;
    int32_t eax2;

    __asm__("in eax, 0x3a");
    __asm__("pushad ");
    __asm__("lodsb ");
    __asm__("rol byte [ebx], 0x40");
    *reinterpret_cast<uint32_t*>(eax1 - 0x6e) = *reinterpret_cast<uint32_t*>(eax2 - 0x6e) & 0x77945e43;
}

struct s228 {
    signed char[114] pad114;
    uint32_t f114;
};

signed char fun_8a0784bb();

signed char g3921346e;

signed char g44327b26;

void fun_403c24(int32_t a1) {
    int1_t pf2;
    int32_t ecx3;
    signed char ch4;
    signed char bl5;
    int32_t edx6;
    int32_t edx7;
    int32_t* eax8;
    struct s228* ebx9;
    int1_t zf10;
    signed char* edi11;
    signed char al12;
    uint32_t edi13;
    int32_t edi14;
    unsigned char ch15;
    unsigned char bl16;
    unsigned char* eax17;
    unsigned char* eax18;
    unsigned char ah19;
    signed char* esi20;
    int32_t esi21;

    if (pf2) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx3) + 1) = reinterpret_cast<signed char>(ch4 - bl5);
        edx6 = edx7 + 1;
        if (!(ecx3 - 1)) {
            __asm__("salc ");
            __asm__("cdq ");
            goto *eax8;
        }
        if (!__intrinsic()) {
        }
        __asm__("out dx, al");
        ebx9 = reinterpret_cast<struct s228*>(__return_address());
        if (!(reinterpret_cast<uint1_t>(edx6 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(edx6 == 0))) 
            goto addr_0x403c60_7;
    } else {
        if (zf10) {
            addr_0x403c6d_9:
            __asm__("aad 0x81");
            __asm__("wait ");
            goto addr_0x403c71_10;
        } else {
            fun_8a0784bb();
            goto addr_0x403c29_12;
        }
    }
    *edi11 = al12;
    edi13 = reinterpret_cast<uint32_t>(edi14 + 1);
    __asm__("arpl [ebx-0x80], bx");
    if (!(reinterpret_cast<uint1_t>(ch15 < bl16) | reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebx9) + 1 == 0))) 
        goto addr_0x403ca7_17;
    addr_0x403c29_12:
    __asm__("daa ");
    addr_0x403ca7_17:
    __asm__("out dx, al");
    ebx9 = reinterpret_cast<struct s228*>(0x3ec02067);
    ebx9->f114 = ebx9->f114 | 31;
    __asm__("rcl dword [ebp+0x74af6567], 1");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx9) - 97) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx9) - 97) - reinterpret_cast<unsigned char>(38 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx9) - 97) < 0xda)));
    if (__intrinsic()) {
        goto *reinterpret_cast<int32_t*>(edi13 - 15);
    }
    addr_0x403c60_7:
    goto addr_0x403c6d_9;
    addr_0x403c71_10:
    __asm__("in al, dx");
    *eax17 = reinterpret_cast<unsigned char>(*eax18 & ah19);
    g3921346e = *esi20;
    g44327b26 = 5;
    edi13 = 0x3921346f & *reinterpret_cast<uint32_t*>(esi21 + 1 + 0x4ce13516);
    if (!(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(edi13 == 0))) {
    }
}

void fun_403c8c() {
    int1_t of1;

    if (!of1) 
        goto 0x403c71;
}

void fun_403c8f() {
    signed char* edx1;
    signed char* edx2;

    __asm__("in eax, dx");
    __asm__("lahf ");
    *edx1 = reinterpret_cast<signed char>(*edx2 + 0x72);
}

void fun_403d17() {
    __asm__("rol ecx, 0x94");
    __asm__("insb ");
}

void fun_403d21() {
    signed char* edi1;
    signed char* esi2;
    int32_t edi3;
    int32_t edi4;

    *edi1 = *esi2;
    edi3 = edi4 + 1;
    __asm__("sti ");
    *reinterpret_cast<signed char*>(edi3 - 0x750c9f0a) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi3 - 0x750c9f0a) - 1);
}

void fun_403d2b() {
    uint32_t eax1;
    int32_t esi2;
    int32_t edi3;

    __asm__("ficomp dword [ebx]");
    eax1 = reinterpret_cast<uint32_t>(esi2 + *reinterpret_cast<int32_t*>(edi3 + 0xd595db4));
    __asm__("in eax, 0xa1");
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) + 47)));
    if (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax1)) < reinterpret_cast<signed char>(0)) {
        __asm__("fxch7 st4");
        __asm__("int1 ");
        __asm__("rcl esi, 1");
        __asm__("lodsw ");
    }
}

void fun_403d5b() {
    __asm__("cmc ");
}

unsigned char g8b4a2c19;

void fun_403d65(int32_t* ecx) {
    uint32_t eax2;
    uint32_t eax3;
    int32_t* esp4;
    unsigned char* ebx5;
    int32_t eax6;
    int32_t ebx7;
    int32_t ebx8;
    unsigned char* eax9;
    signed char dl10;
    uint16_t es11;
    int32_t edx12;
    unsigned char dh13;
    void* esp14;
    unsigned char dl15;
    int32_t* edi16;
    int32_t* esi17;

    __asm__("cli ");
    eax2 = eax3 & 0x416f6650;
    __asm__("salc ");
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(eax2 == 0))) 
        goto 0x403d50;
    __asm__("out 0x78, eax");
    *ecx = reinterpret_cast<int32_t>(__return_address());
    esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4);
    __asm__("in al, 0x52");
    __asm__("in eax, dx");
    ebx5 = reinterpret_cast<unsigned char*>(esp4[(eax2 | 0xe7822de0) * 2] * 0x7923bb47);
    eax6 = ebx7;
    __asm__("fsubp st1, st0");
    if (!__intrinsic()) {
        ebx8 = eax6;
        eax9 = ebx5;
        __asm__("xlatb ");
        __asm__("clc ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax9) + 1) = dl10;
        *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) | 11);
        __asm__("out dx, eax");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx) + ebx8 + 12) = static_cast<uint32_t>(es11);
        *eax9 = reinterpret_cast<unsigned char>(*eax9 >> *reinterpret_cast<signed char*>(&ecx));
        *reinterpret_cast<unsigned char*>(ebx8 - 0x6e) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx8 - 0x6e) + *reinterpret_cast<signed char*>(&ebx8)) + __intrinsic());
    }
    while (1) {
        *reinterpret_cast<unsigned char*>(&eax6) = 0x6d;
        *reinterpret_cast<unsigned char*>(&edx12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx12) ^ dh13);
        esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp4) - 1);
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esp14) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(esp14 == 0))) 
            break;
        eax6 = eax6 + 0x1ff32b9a;
        *reinterpret_cast<uint32_t*>(edx12 - 32) = *reinterpret_cast<uint32_t*>(edx12 - 32) & reinterpret_cast<uint32_t>(esp14);
        esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) - 4);
        __asm__("insd ");
        __asm__("fcmove st0, st7");
        __asm__("in eax, 0x79");
        __asm__("rol dword [edi+0x5a2479f5], 1");
        *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax6) + 0xa1)));
        if (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax6)) < reinterpret_cast<signed char>(0) != __intrinsic()) 
            goto addr_0x403e1a_8;
        eax6 = 0x5965b958;
    }
    addr_0x403e1d_10:
    __asm__("das ");
    dl15 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx12) & g8b4a2c19);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(dl15 == 0))) {
        __asm__("in eax, 0x1e");
        __asm__("hlt ");
    }
    addr_0x403e1a_8:
    *edi16 = *esi17;
    __asm__("aad 0x2b");
    goto addr_0x403e1d_10;
}

int32_t fun_9ad6bde4();

void fun_403dad(signed char cl) {
    int32_t ecx1;
    uint32_t eax2;
    int32_t edx3;
    uint32_t ebx4;
    unsigned char bh5;
    uint32_t edi6;
    int32_t edi7;

    *reinterpret_cast<signed char*>(&ecx1) = cl;
    eax2 = reinterpret_cast<uint32_t>(edx3 - 0x4e1d41cd);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = reinterpret_cast<unsigned char>(bh5 & *reinterpret_cast<unsigned char*>(eax2 - 56));
    __asm__("fldcw word [ecx+eax*8]");
    *reinterpret_cast<signed char*>(&ebx4) = 0;
    *reinterpret_cast<uint32_t*>(ebx4 + 38) = *reinterpret_cast<uint32_t*>(ebx4 + 38) | ebx4;
    __asm__("stc ");
    __asm__("retf ");
    edi6 = reinterpret_cast<uint32_t>(edi7 + 1);
    __asm__("cdq ");
    __asm__("out 0xf4, al");
    if (edi6 >= edi6) 
        goto 0x403dfc;
    *reinterpret_cast<int32_t*>((eax2 & 0x51d0cf9a) - 0x6141ee8 - 4) = 0x403dee;
    fun_9ad6bde4();
}

void fun_403e2d() {
    int32_t ebx1;
    int32_t ebx2;
    uint1_t cf3;

    *reinterpret_cast<unsigned char*>(ebx1 - 25) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx2 - 25) + 84) + cf3);
}

struct s229 {
    signed char[87] pad87;
    unsigned char f87;
};

struct s230 {
    signed char[4] pad4;
    unsigned char f4;
};

unsigned char ge04c244d;

void fun_403ec7(int32_t ecx) {
    uint1_t cf2;
    uint32_t* esi3;
    uint32_t* edi4;
    int32_t* edi5;
    int32_t* esi6;
    struct s229* esi7;
    void* eax8;
    struct s230* esi9;
    unsigned char bl10;
    int16_t v11;
    int16_t cs12;

    __asm__("out dx, eax");
    cf2 = reinterpret_cast<uint1_t>(*esi3 < *edi4);
    *edi5 = *esi6;
    esi7 = reinterpret_cast<struct s229*>(reinterpret_cast<int32_t>(eax8) - 1);
    __asm__("ficomp dword [ebx]");
    if (!reinterpret_cast<uint1_t>(cf2 | reinterpret_cast<uint1_t>(esi7 == 0))) {
        esi9->f4 = reinterpret_cast<unsigned char>(esi9->f4 ^ bl10);
        v11 = cs12;
        *reinterpret_cast<int32_t*>(ecx + 0x2982ff9) = *reinterpret_cast<int32_t*>(ecx + 0x2982ff9) - ecx;
        if (__intrinsic()) {
            goto v11;
        } else {
            ge04c244d = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ge04c244d + 60) + __intrinsic());
        }
    } else {
        esi9->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(esi9->f4) >> *reinterpret_cast<signed char*>(&ecx));
        __asm__("lock cmc ");
        esi7->f87 = reinterpret_cast<unsigned char>(esi7->f87 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx) + reinterpret_cast<uint1_t>(esi7->f87 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx) + __intrinsic()))));
    }
}

void fun_403eed(int32_t ecx) {
    uint32_t* edi2;
    int32_t edx3;
    int32_t* edi4;
    int32_t edx5;
    uint1_t cf6;
    int32_t* eax7;
    int32_t* eax8;

    edi2[edx3] = edi4[edx5] + ecx + cf6;
    __asm__("retf 0xb9ce");
    if (ecx + 1 < 0 == __intrinsic()) 
        goto 0x403ee0;
    *eax7 = *eax8 - 0x74;
}

struct s232 {
    signed char[117] pad117;
    unsigned char f117;
};

struct s231 {
    struct s231* f0;
    struct s232* f4;
};

struct s233 {
    signed char[7] pad7;
    void* f7;
};

int32_t geeb4cf09;

struct s235 {
    signed char[4] pad4;
    void* f4;
};

struct s234 {
    struct s232* f0;
    struct s235* f4;
};

unsigned char gd1ea9b2b;

int32_t g99524f91;

void fun_403feb() {
    unsigned char** esp1;
    unsigned char* eax2;
    void* eax3;
    int32_t eflags4;
    int1_t less5;
    uint32_t esi6;
    unsigned char* ecx7;
    struct s231* ebp8;
    struct s233* edx9;
    int32_t v10;
    unsigned char* tmp32_11;
    unsigned char* esi12;
    unsigned char* v13;
    int1_t less14;
    uint1_t below_or_equal15;
    int32_t* edi16;
    void** esp17;
    int32_t ebx18;
    void* v19;
    uint32_t ecx20;
    void* eflags21;
    struct s231* esp22;
    struct s234* esp23;
    unsigned char cl24;
    int1_t cf25;
    int1_t pf26;
    int1_t sf27;
    uint1_t less_or_equal28;
    struct s232* edx29;
    void** esp30;
    int32_t** esp31;
    unsigned char tmp8_32;

    esp1 = reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax2 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax3) + 0x9dbd7df3);
    *reinterpret_cast<uint1_t*>(&eflags4) = __intrinsic();
    less5 = reinterpret_cast<int32_t>(eax2) < reinterpret_cast<int32_t>(0) != __intrinsic();
    if (!less5) {
        eax2 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax2) & esi6);
        goto addr_0x403ff6_3;
    }
    while (less5) {
        __asm__("lodsd ");
        __asm__("out dx, al");
        *eax2 = reinterpret_cast<unsigned char>(*eax2 & 0x16449a7c);
        __asm__("aad 0xca");
        __asm__("in al, 0x2f");
        ecx7 = reinterpret_cast<unsigned char*>(0x16449a7c);
        ebp8 = reinterpret_cast<struct s231*>(reinterpret_cast<uint32_t>(ebp8) + reinterpret_cast<int32_t>(edx9->f7));
        less5 = __intrinsic();
        eflags4 = v10;
        esp1 = reinterpret_cast<unsigned char**>(reinterpret_cast<uint32_t>(esp1 + 1) + 2 + 4);
        tmp32_11 = esi12;
        esi12 = v13;
        eax2 = tmp32_11;
    }
    while (1) {
        --ecx7;
        __asm__("fistp dword [esi+0x65dd526c]");
        __asm__("aam 0x1d");
        ++eax2;
        less14 = reinterpret_cast<int32_t>(eax2) < reinterpret_cast<int32_t>(0) != __intrinsic();
        below_or_equal15 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint1_t*>(&eflags4) | reinterpret_cast<uint1_t>(eax2 == 0));
        esp1 = reinterpret_cast<unsigned char**>(reinterpret_cast<uint32_t>(esp1 - 1) - 2);
        if (below_or_equal15) {
            if (ecx7) 
                goto addr_0x403f47_9;
            edi16 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp8) - 0x31cef346);
            --eax2;
            less14 = reinterpret_cast<int32_t>(eax2) < reinterpret_cast<int32_t>(0) != __intrinsic();
            below_or_equal15 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint1_t*>(&eflags4) | reinterpret_cast<uint1_t>(eax2 == 0));
        }
        if (!less14) 
            break;
        if (below_or_equal15) 
            goto addr_0x403fb3_13;
    }
    while (--eax2, esp17 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp1 - 1) + 2), *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx18) + 1) = 0xb5, !__intrinsic()) {
        esp1 = reinterpret_cast<unsigned char**>(esp17 + 1);
        if (!ecx7) 
            goto addr_0x404014_17;
        addr_0x403ff6_3:
        __asm__("cli ");
        __asm__("int1 ");
        *edi16 = geeb4cf09;
        ++edi16;
        esp1 = esp1 + 1 + 1;
        esi12 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(v19) - 1);
        __asm__("clc ");
    }
    while (ecx20 = reinterpret_cast<uint32_t>(ecx7 - 1), !(reinterpret_cast<uint1_t>(!!ecx20) & reinterpret_cast<uint1_t>(*eax2 != *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx18) + 1)))) {
        eflags21 = *esp17;
        __asm__("lahf ");
        ++esi12;
        *reinterpret_cast<struct s231**>(esp17 + 1 - 1) = ebp8;
        esp22 = ebp8;
        ebp8 = esp22->f0;
        esp23 = reinterpret_cast<struct s234*>(&esp22->f4);
        __asm__("insd ");
        cl24 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx20) + *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi16) - 51)) + reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eflags21)));
        cf25 = __intrinsic();
        pf26 = __intrinsic();
        sf27 = reinterpret_cast<signed char>(cl24) < reinterpret_cast<signed char>(0);
        less_or_equal28 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf27 != __intrinsic()) | reinterpret_cast<uint1_t>(cl24 == 0));
        edx29 = esp23->f0;
        if (sf27) 
            goto addr_0x404098_23;
        esp30 = &esp23->f4->f4;
        if (!__intrinsic()) 
            goto addr_0x403fdd_25;
        __asm__("rep lahf ");
        *reinterpret_cast<unsigned char*>(&ebx18) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx18) + *reinterpret_cast<signed char*>(eax2 + 0xffffffd8)) + reinterpret_cast<uint1_t>(edx29->f117 < 0x84));
        ecx7 = reinterpret_cast<unsigned char*>(0xd1ea9b2b);
        esp31 = reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(*esp30) + 4 + 4);
        tmp8_32 = gd1ea9b2b;
        gd1ea9b2b = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx18) + 1);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx18) + 1) = tmp8_32;
        edi16 = *esp31;
        esp17 = reinterpret_cast<void**>(0xa577c81f);
        __asm__("aaa ");
        __asm__("les esp, [ebx+0xdd2ebc31]");
        eax2 = reinterpret_cast<unsigned char*>(0x65e116ed);
    }
    *reinterpret_cast<unsigned char**>(esp17 - 1) = esi12;
    addr_0x404098_23:
    do {
        if (!pf26) 
            break;
    } while (cf25);
    goto addr_0x4040a1_30;
    *reinterpret_cast<signed char*>(&ecx20) = -66;
    if (less_or_equal28) {
        *reinterpret_cast<unsigned char*>(ecx20 + 0x1865a7a0) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx20 + 0x1865a7a0) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx29) + 1))));
        __asm__("outsb ");
    } else {
        g99524f91 = g99524f91 >> 18;
    }
    addr_0x4040a1_30:
    addr_0x403fdd_25:
    *reinterpret_cast<int32_t*>(esp30 - 1) = ebx18;
    __asm__("fisttp word [esp+edx*8+0xcb937e94]");
    addr_0x404014_17:
    addr_0x403fb3_13:
    __asm__("hlt ");
    addr_0x403f47_9:
    __asm__("hlt ");
}

int32_t fun_95c30bb7();

void fun_404017(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    signed char* edi4;
    uint32_t* edx5;
    unsigned char al6;
    signed char dh7;

    eax2 = eax3 + 0x343d74ca;
    do {
        ++edi4;
        *reinterpret_cast<signed char*>(&edx5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&edx5) + *edi4);
        al6 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax2) - 33) + __intrinsic());
        __asm__("wait ");
        eax2 = fun_95c30bb7();
    } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(al6) < reinterpret_cast<signed char>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(al6 == 0)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = reinterpret_cast<signed char>(dh7 + 1);
    *reinterpret_cast<signed char*>(ecx - 0x3384ab6b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx - 0x3384ab6b) >> 96);
    __asm__("arpl [edi+eax*8+0xcb4cbd3b], di");
    *edx5 = *edx5 & reinterpret_cast<uint32_t>(edx5);
}

void fun_4040a3() {
    __asm__("les ebx, [edx]");
    __asm__("salc ");
}

int32_t fun_b4ad225e(int32_t a1);

void fun_4040cf() {
    int32_t* edi1;
    int32_t* esi2;
    int32_t edi3;
    int32_t edi4;

    fun_b4ad225e(__return_address());
    *edi1 = *esi2;
    edi3 = edi4 + 4;
    __asm__("cdq ");
    *reinterpret_cast<signed char*>(edi3 - 46) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi3 - 46) + 94);
}

uint32_t gc7c40e09;

void fun_404101(int32_t ecx) {
    uint32_t eax2;
    signed char al3;
    int32_t* edi4;
    int32_t* esi5;
    int32_t edi6;

    *reinterpret_cast<signed char*>(&eax2) = reinterpret_cast<signed char>(al3 + 0x6c);
    __asm__("cdq ");
    *edi4 = *esi5;
    gc7c40e09 = eax2;
    __asm__("lodsd ");
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>((reinterpret_cast<uint32_t>(edi6 + 4) & eax2) == 0))) 
        goto 0x4040b6;
    goto *reinterpret_cast<int32_t*>(ecx * -93 + 39);
}

void fun_40416a(int32_t ecx) {
    int32_t ebx2;
    int32_t ebx3;
    int32_t eax4;
    int32_t edi5;
    int32_t ebx6;
    int32_t ebp7;
    int32_t ebp8;
    signed char* edi9;
    signed char* esi10;

    __asm__("fst qword [esp]");
    __asm__("das ");
    *reinterpret_cast<unsigned char*>(ecx + 0x77459cf0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 0x77459cf0) >> *reinterpret_cast<signed char*>(&ecx));
    ebx2 = ebx3 - *reinterpret_cast<int32_t*>(eax4 - 0x233f8307);
    __asm__("fucomip st0, st5");
    __asm__("daa ");
    *reinterpret_cast<unsigned char*>(edi5 - 45) = 0;
    __asm__("out dx, al");
    __asm__("pushad ");
    __asm__("into ");
    ebx6 = ebx2 - 1;
    *reinterpret_cast<unsigned char*>(ebp7 - 22) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp8 - 22) | *reinterpret_cast<unsigned char*>(&ebx6));
    *edi9 = *esi10;
    __asm__("lahf ");
    __asm__("outsd ");
    __asm__("out dx, al");
    __asm__("enter 0xc7d9, 0x5f");
    __asm__("retf 0x4fe1");
    __asm__("hlt ");
}

uint32_t g35410116;

void fun_4041de() {
    int32_t* edi1;
    int32_t eax2;
    int32_t edi3;
    int32_t edi4;
    uint32_t ebx5;

    *edi1 = eax2;
    edi3 = edi4 + 4;
    g35410116 = g35410116 | ebx5;
    __asm__("in al, dx");
    *reinterpret_cast<int32_t*>(edi3 - 0x7f) = *reinterpret_cast<int32_t*>(edi3 - 0x7f) - 30;
    __asm__("hlt ");
}

signed char gf1febcd4;

struct s236 {
    signed char[118] pad118;
    unsigned char f118;
};

struct s237 {
    signed char[118] pad118;
    signed char f118;
};

void fun_40425e(unsigned char* ecx) {
    int1_t less2;
    uint1_t cf3;
    uint32_t edi4;
    int32_t edi5;
    struct s236* esi6;
    struct s237* esi7;
    signed char dl8;
    uint1_t cf9;
    uint32_t edi10;
    int32_t edx11;
    int32_t edi12;
    int32_t edx13;
    int32_t esi14;
    int32_t esi15;

    less2 = reinterpret_cast<signed char>(0x93) < reinterpret_cast<signed char>(gf1febcd4 + cf3);
    if (!less2) {
        __asm__("aas ");
        __asm__("aaa ");
        __asm__("lds edx, [eax+0x424a5b92]");
        edi4 = reinterpret_cast<uint32_t>(edi5 + 1);
        __asm__("outsb ");
        goto addr_0x4042fb_4;
    }
    *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) | *ecx);
    esi6->f118 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(esi7->f118 + dl8)));
    cf9 = reinterpret_cast<uint1_t>(edi10 < *reinterpret_cast<int32_t*>(edx11 + 0x43bc3115) + __intrinsic());
    edi4 = edi12 - (*reinterpret_cast<int32_t*>(edx13 + 0x43bc3115) + cf9);
    __asm__("fisttp word [eax+0x48]");
    if (edi4 != static_cast<uint32_t>(cf9)) {
        addr_0x4042fb_4:
    } else {
        if (ecx != *reinterpret_cast<unsigned char**>(edi4 - 0x3192d1be)) {
        }
        *reinterpret_cast<int32_t*>(esi14 + 0xa2ed138) = *reinterpret_cast<int32_t*>(esi15 + 0xa2ed138) << 1;
        __asm__("stc ");
        __asm__("ror dword [ebp+0x42], cl");
        if (!__intrinsic()) 
            goto addr_0x40429c_11;
    }
    __asm__("repne lds edi, [ebx]");
    (ecx + edi4 * 4)[51] = reinterpret_cast<unsigned char>((ecx + edi4 * 4)[51] | 22);
    __asm__("out dx, al");
    addr_0x40429c_11:
    __asm__("out 0xb7, al");
    __asm__("in eax, dx");
}

void fun_4042a4() {
    __asm__("ror dword [ebp+0x40], 1");
    __asm__("fmul qword [bx+0x1ced]");
    reinterpret_cast<int32_t>(__zero_stack_offset()) + 2 - 4(0x57075471);
    __asm__("in eax, 0x3a");
    if (!__undefined()) 
        goto 0x404304;
    __asm__("out 0x7, al");
    __asm__("fnstcw word [esi-0x80]");
    __asm__("cmc ");
    __asm__("into ");
    __asm__("fnstsw word [eax]");
}

struct s238 {
    signed char[19] pad19;
    unsigned char f19;
};

struct s239 {
    signed char[19] pad19;
    signed char f19;
};

void fun_404325(int32_t ecx) {
    struct s238* eax2;
    struct s239* eax3;
    signed char bh4;
    uint1_t cf5;

    __asm__("outsb ");
    eax2->f19 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(eax3->f19 + bh4) + cf5);
    __asm__("repne enter 0xb37e, 0x42");
    __asm__("hlt ");
}

void fun_404340(int32_t ecx, int32_t a2) {
    int1_t sf3;
    int32_t edx4;
    int32_t eax5;

    if (!sf3) 
        goto 0x4042ce;
    edx4 = *reinterpret_cast<int32_t*>(eax5 + 0x76bebdfe) * -30;
    __asm__("outsb ");
    __asm__("fxch st0, st2");
    *reinterpret_cast<unsigned char*>(edx4 + 0x74) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx4 + 0x74) & 0x9b);
    __asm__("cdq ");
    __asm__("wait ");
    __asm__("salc ");
    goto 0x4042f8;
}

void fun_4043de(int32_t ecx) {
    __asm__("insb ");
    __asm__("les edi, [ebx-0x5c]");
    if (ecx) {
        __asm__("hlt ");
    }
}

signed char fun_5e0e57d(int32_t a1);

unsigned char ga3e41198;

void fun_4043ec() {
    int32_t v1;
    int32_t eax2;
    uint16_t fs3;

    v1 = reinterpret_cast<int32_t>(__return_address());
    __asm__("out dx, eax");
    do {
        __asm__("sti ");
        --eax2;
        __asm__("das ");
        __asm__("lodsb ");
        __asm__("stc ");
        __asm__("in al, dx");
    } while (eax2 >= 0);
    fun_5e0e57d(v1);
    ga3e41198 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(fs3));
    ga3e41198 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ga3e41198) >> 0x98);
    __asm__("fsub dword [esi]");
}

void fun_40442e(int32_t ecx) {
    int1_t less2;
    int32_t* edi3;
    int32_t* esi4;
    int32_t esi5;
    int32_t esi6;
    int32_t ebx7;

    __asm__("aaa ");
    if (less2) 
        goto 0x404416;
    __asm__("iretd ");
    __asm__("aam 0xe");
    if (!ecx) {
        *edi3 = *esi4;
        esi5 = esi6 + 4;
        *reinterpret_cast<uint32_t*>(ebx7 + 0x1bdeee78) = *reinterpret_cast<uint32_t*>(ebx7 + 0x1bdeee78) - (0x6e - reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx7 + 0x1bdeee78) < 0xffffff92));
        __asm__("out 0x30, eax");
        *reinterpret_cast<int32_t*>(esi5 + 0x15bbe111) = *reinterpret_cast<int32_t*>(esi5 + 0x15bbe111) - (reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 + 4);
    }
}

void fun_40459b(int32_t ecx) {
    uint32_t ebp2;
    uint32_t* ebp3;
    int32_t* esp4;
    int32_t edi5;
    int32_t ecx6;
    uint1_t zf7;
    int1_t of8;
    int32_t esi9;
    uint1_t cf10;
    uint32_t eax11;
    unsigned char al12;
    uint32_t ebp13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t* edi16;
    int32_t eax17;

    __asm__("aad 0x83");
    __asm__("int 0xf9");
    ebp2 = *ebp3;
    esp4 = reinterpret_cast<int32_t*>(ebp3 + 1 - 1);
    *esp4 = edi5;
    __asm__("xlatb ");
    __asm__("cdq ");
    ecx6 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx6) & zf7) {
    }
    if (of8) {
        __asm__("sahf ");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp4 + ecx6 * 2) - 94) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp4 + ecx6 * 2) - 94) + esi9 + cf10;
        if (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp4 + ecx6 * 2) - 94) >= 0) {
            addr_0x40459a_5:
        } else {
            __asm__("rol dword [esi+0x22], 1");
        }
    }
    __asm__("cdq ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax11) + 1) = -62;
    __asm__("aas ");
    __asm__("shufps xmm4, [ecx+0xcf102348], 0xf9");
    *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(al12 ^ 0x85);
    __asm__("out 0x80, al");
    __asm__("daa ");
    ebp13 = eax11 - (0xc562a05 + reinterpret_cast<uint1_t>(eax11 < 0xc562a05));
    eax14 = ebp2;
    do {
        eax14 = eax14 & 0x7526da32;
        if (!__intrinsic()) 
            break;
    } while (1 & reinterpret_cast<uint1_t>(!!eax14));
    goto addr_0x404586_11;
    __asm__("hlt ");
    addr_0x404586_11:
    eax15 = eax14 - 1;
    *edi16 = eax15;
    eax17 = static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax15));
    *reinterpret_cast<unsigned char*>(ebp13 + ebp13 * 4 - 0x476bfb51) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebp13 + ebp13 * 4 - 0x476bfb51) + *reinterpret_cast<signed char*>(&eax17))));
    __asm__("outsb ");
    goto addr_0x40459a_5;
}

signed char g52a8ad9e;

void fun_4045ff() {
    signed char al1;

    __asm__("out dx, eax");
    g52a8ad9e = al1;
    __asm__("popad ");
}

struct s240 {
    unsigned char f0;
    signed char[92] pad93;
    signed char f93;
};

struct s241 {
    signed char[4] pad4;
    int32_t f4;
};

struct s242 {
    signed char[4] pad4;
    int32_t f4;
};

signed char fun_28657a05();

void fun_40460f(void* ecx) {
    int1_t below_or_equal2;
    struct s240* ecx3;
    uint1_t zf4;
    uint1_t cf5;
    void* eax6;
    int32_t eax7;
    int32_t esi8;
    int32_t esi9;
    signed char* edi10;
    signed char* esi11;
    int32_t edi12;
    int32_t* edi13;
    int32_t* esi14;
    struct s241* edi15;
    struct s242* esi16;
    int32_t edx17;
    uint16_t es18;
    void* ebp19;

    if (!below_or_equal2) 
        goto 0x404594;
    __asm__("in eax, 0x65");
    ecx3 = reinterpret_cast<struct s240*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx3) & zf4) {
        ecx3->f0 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ecx3->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx3) + 1)) + cf5);
        __asm__("into ");
        __asm__("insb ");
        eax6 = reinterpret_cast<void*>(eax7 + esi8);
        __asm__("lahf ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax6) + 1) = -55;
        __asm__("in eax, dx");
        *reinterpret_cast<unsigned char*>(esi9 + 0x3d91da48) = 0;
        *edi10 = *esi11;
        __asm__("out 0x28, al");
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax6) - 4) = edi12 + 1;
    }
    *edi13 = *esi14;
    edi15->f4 = esi16->f4;
    *reinterpret_cast<uint32_t*>(edx17 - 0x68e5df97) = static_cast<uint32_t>(es18);
    __asm__("out dx, eax");
    __asm__("lahf ");
    if (__intrinsic()) 
        goto addr_0x404634_15;
    ecx3->f93 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx3) + 1);
    __asm__("out 0x26, eax");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp19) + 4 - 4) = 0x4045f5;
    fun_28657a05();
    addr_0x404634_15:
    __asm__("salc ");
    __asm__("out 0x34, eax");
    ecx3->f0 = reinterpret_cast<unsigned char>(ecx3->f0 & reinterpret_cast<uint32_t>(ecx3));
}

int32_t fun_3c9459dd(int32_t a1);

int32_t g48b9bafb;

void fun_404648(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    unsigned char dl4;
    int32_t eax5;
    int32_t* ebx6;
    int32_t* ebx7;
    int32_t esi8;

    __asm__("outsb ");
    __asm__("sti ");
    *reinterpret_cast<unsigned char*>(eax2 + 0x151d7379) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax3 + 0x151d7379) & dl4);
    __asm__("aam 0x31");
    eax5 = fun_3c9459dd(__return_address());
    *ebx6 = *ebx7 - esi8;
    __asm__("lodsd ");
    g48b9bafb = eax5 - 1;
    __asm__("aas ");
}

void fun_4046a7(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    unsigned char dh4;

    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax2 * 8 - 99) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax3 * 8 - 99) & dh4);
    if (1) 
        goto 0x404625;
    __asm__("clc ");
}

void fun_40473b() {
    __asm__("arpl [eax], si");
    __asm__("aas ");
}

void fun_404742() {
    int32_t edx1;

    goto *reinterpret_cast<int32_t*>(edx1 - 0x4bccc832);
}

void fun_404784(int32_t ecx) {
    uint32_t ecx2;
    uint32_t* ebx3;
    uint32_t* edi4;
    uint32_t* edi5;

    ecx2 = reinterpret_cast<uint32_t>(ecx - 1);
    if (ecx2) {
        *reinterpret_cast<signed char*>(&ebx3) = -12;
        __asm__("wait ");
        *ebx3 = *ebx3 | ecx2;
        __asm__("retf 0x9f59");
    } else {
        __asm__("in al, dx");
        __asm__("fucom st4");
        __asm__("int1 ");
        __asm__("rcr byte [ebx], cl");
        __asm__("lodsd ");
        __asm__("in al, dx");
        __asm__("daa ");
        *edi4 = *edi5 >> -78;
    }
}

void fun_4047b4() {
    int32_t ebx1;
    uint16_t ds2;

    __asm__("pushad ");
    *reinterpret_cast<uint32_t*>(ebx1 + 0x32abb545) = static_cast<uint32_t>(ds2);
    __asm__("das ");
}

int32_t g3dafddd3;

int32_t g6d79bad7;

signed char gcd663d67;

void fun_4047c9(signed char cl) {
    uint1_t cf2;
    uint32_t edx3;
    int32_t ecx4;
    int32_t eip5;
    int16_t es6;
    uint32_t eax7;

    __asm__("out dx, al");
    __asm__("salc ");
    cf2 = reinterpret_cast<uint1_t>(0x134b99dc < g3dafddd3 + __intrinsic());
    edx3 = 0x134b99dc - (g3dafddd3 + cf2);
    __asm__("in eax, dx");
    ecx4 = 0xdd7ccb0c;
    if (1 & reinterpret_cast<uint1_t>(edx3 != static_cast<uint32_t>(cf2))) {
        __asm__("fldenv [edx+0x55]");
        eip5 = g6d79bad7;
        goto eip5;
    } else {
        __asm__("cdq ");
        __asm__("fst dword [esi+eax-0x76]");
        *reinterpret_cast<signed char*>(&ecx4) = reinterpret_cast<signed char>(12 - *reinterpret_cast<signed char*>(&edx3));
        __asm__("int1 ");
        __asm__("fsub st0, st3");
        *reinterpret_cast<int16_t*>(&g6d79bad7) = es6;
        __asm__("ror al, 0x45");
        *reinterpret_cast<signed char*>(ecx4 + 0x93ec065) = reinterpret_cast<signed char>(~*reinterpret_cast<signed char*>(ecx4 + 0x93ec065));
        eax7 = 0x3f9edc8f - cf2 + 1;
        gcd663d67 = *reinterpret_cast<signed char*>(&eax7);
    }
}

void fun_4047fa() {
    unsigned char* esi1;
    uint1_t sf2;

    *esi1 = static_cast<unsigned char>(sf2);
}

void fun_40481c() {
}

void fun_404821() {
    __asm__("wait ");
}

struct s243 {
    int32_t f0;
    signed char[86] pad90;
    unsigned char f90;
};

struct s244 {
    signed char[10] pad10;
    uint32_t f10;
};

struct s245 {
    int32_t f0;
    signed char[30] pad34;
    int32_t f34;
    signed char[619313911] pad619313949;
    uint32_t f619313949;
    signed char[1205216267] pad1287659308;
    signed char f1287659308;
};

struct s246 {
    signed char[1] pad1;
    int32_t f1;
};

struct s247 {
    signed char[1] pad1;
    void* f1;
};

unsigned char g6346db8d;

void fun_404893(int16_t cx) {
    struct s243* ecx1;
    int1_t cf2;
    void* eax3;
    struct s244* esi4;
    uint32_t esi5;
    uint32_t* edi6;
    void* edx7;
    struct s245* eax8;
    struct s246* edi9;
    void* ebp10;
    struct s247* ebp11;
    uint16_t* esp12;
    struct s244* edx13;
    int32_t ebx14;
    int32_t ebx15;
    uint16_t es16;
    struct s245** esp17;
    int16_t ax18;
    struct s245* ss19;
    struct s245** esp20;
    int32_t* esp21;
    uint16_t* esp22;
    int32_t* esp23;

    *reinterpret_cast<int16_t*>(&ecx1) = cx;
    if (cf2) 
        goto 0x40481e;
    __asm__("enter 0x54b7, 0xb4");
    *reinterpret_cast<unsigned char*>(&ecx1) = 0;
    *reinterpret_cast<signed char*>(&eax3) = -91;
    esi4 = reinterpret_cast<struct s244*>((esi5 | *edi6) + 1);
    __asm__("aas ");
    __asm__("cdq ");
    edx7 = eax3;
    *reinterpret_cast<signed char*>(&edx7) = 10;
    __asm__("rol edx, cl");
    eax8 = reinterpret_cast<struct s245*>(&edi9->f1);
    if (reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 - 1 < 0 != __intrinsic()) 
        goto 0x404871;
    ebp10 = ebp11->f1;
    esp12 = reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&ebp11->f1 + 1) + reinterpret_cast<uint16_t>(__return_address()));
    edx13 = reinterpret_cast<struct s244*>(reinterpret_cast<int32_t>(edx7) - *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(eax8) + reinterpret_cast<uint16_t>(eax8) * 4 - 6));
    if (reinterpret_cast<int32_t>(edx7) < reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint16_t>(eax8) + reinterpret_cast<uint16_t>(eax8) * 4 - 6))) {
        edx13 = esi4;
        ebx14 = ebx15;
        __asm__("in eax, dx");
    }
    __asm__("rol esi, 0xdc");
    es16 = *esp12;
    esp17 = reinterpret_cast<struct s245**>(esp12 + 1 - 2);
    *esp17 = reinterpret_cast<struct s245*>(__return_address());
    eax8->f34 = eax8->f34 << 1;
    *reinterpret_cast<signed char*>(&ebx14) = 56;
    *reinterpret_cast<uint32_t*>(ebx14 - 0x72) = *reinterpret_cast<uint32_t*>(ebx14 - 0x72) + reinterpret_cast<uint32_t>(ebp10);
    __asm__("les edi, [esi+0xa207f519]");
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(*reinterpret_cast<uint32_t*>(ebx14 - 0x72)) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx14 - 0x72) == 0))) {
        addr_0x404901_9:
        __asm__("fidivr word [esi]");
        ebp10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp10) - 1);
        g6346db8d = reinterpret_cast<unsigned char>(g6346db8d >> 1);
        __asm__("cli ");
        if (!__undefined()) {
            *reinterpret_cast<uint32_t*>(ebx14 - 0x6655ec65) = *reinterpret_cast<uint32_t*>(ebx14 - 0x6655ec65) + 0x258e607b + __intrinsic();
        }
    } else {
        __asm__("daa ");
        __asm__("insd ");
        ax18 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax8) / *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx14) + 1));
        __asm__("int1 ");
        *reinterpret_cast<int16_t*>(&edx13) = reinterpret_cast<int16_t>(ax18 % *reinterpret_cast<signed char*>(ebx14 - 0x3a755dfa));
        *reinterpret_cast<int16_t*>(&eax8) = reinterpret_cast<int16_t>(ax18 / *reinterpret_cast<signed char*>(ebx14 - 0x3a755dfa));
        if (__undefined()) {
            ecx1->f0 = ecx1->f0 >> 1;
            goto addr_0x404953_13;
        } else {
            if (!__undefined()) {
                ebx14 = *reinterpret_cast<int32_t*>(&eax8->f0);
            }
            __asm__("das ");
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx14) + 1) = 78;
            edx13 = reinterpret_cast<struct s244*>(reinterpret_cast<uint32_t>(edx13) + 1);
            ecx1 = reinterpret_cast<struct s243*>(0);
            eax8 = reinterpret_cast<struct s245*>(reinterpret_cast<uint16_t>(eax8) - 1);
            if (!eax8) 
                goto addr_0x404925_17; else 
                goto addr_0x4048fc_18;
        }
    }
    esi4->f10 = esi4->f10 & reinterpret_cast<uint32_t>(edx13);
    --esp17;
    *esp17 = ss19;
    esi4 = reinterpret_cast<struct s244*>(reinterpret_cast<uint32_t>(esi4) + 1);
    if (reinterpret_cast<int32_t>(esi4) < reinterpret_cast<int32_t>(0)) {
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(__return_address()) - 0x74e6a2cd) = static_cast<uint32_t>(es16);
        __asm__("ficom word [ebx]");
        __asm__("out dx, eax");
    }
    addr_0x404926_22:
    __asm__("aad 0x20");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx1) - 39) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx1) - 39) - *reinterpret_cast<signed char*>(&ebx14));
    *reinterpret_cast<signed char*>(&eax8) = 51;
    ecx1->f90 = reinterpret_cast<unsigned char>(ecx1->f90 | 0xdf);
    esp20 = reinterpret_cast<struct s245**>(reinterpret_cast<uint32_t>(esp17) + reinterpret_cast<uint32_t>(ebp10) - 4);
    *esp20 = eax8;
    esp21 = reinterpret_cast<int32_t*>(esp20 + 2 - 2);
    *esp21 = ebx14;
    __asm__("fcmove st0, st5");
    esp17 = reinterpret_cast<struct s245**>(reinterpret_cast<uint32_t>(esp21) + 1 - 4);
    *esp17 = eax8;
    __asm__("out 0x65, eax");
    ecx1 = reinterpret_cast<struct s243*>(reinterpret_cast<int32_t>(ecx1) - 1);
    if (ecx1) {
        esp22 = reinterpret_cast<uint16_t*>(esp17 - 1);
        *esp22 = es16;
        __asm__("in eax, 0xeb");
        __asm__("fcomip st0, st2");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(__return_address()) + 0x24e9fb1d) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(__return_address()) + 0x24e9fb1d) - 0x3020a02a;
        while (1) {
            __asm__("in al, dx");
            esp23 = reinterpret_cast<int32_t*>(esp22 + 1 - 2);
            *esp23 = 0x6c8739dc;
            __asm__("xlatb ");
            esp22 = reinterpret_cast<uint16_t*>(esp23 - 1);
            *esp22 = reinterpret_cast<uint16_t>(0x83919ba2);
        }
    }
    addr_0x404925_17:
    goto addr_0x404926_22;
    addr_0x4048fc_18:
    if (__intrinsic()) {
        addr_0x404953_13:
        *reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(__return_address()) + 0x4cc01f2c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(__return_address()) + 0x4cc01f2c) + 24);
    } else {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx14) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(eax8) - 0x54e09d26);
        goto addr_0x404901_9;
    }
}

signed char gca0f1160;

int32_t g1476e2b5;

unsigned char ge4b580a5;

struct s248 {
    signed char[210047453] pad210047453;
    int32_t f210047453;
};

unsigned char g4f986ac3;

struct s249 {
    uint32_t f0;
    void* f4;
};

unsigned char g3735f501;

uint32_t gf9b4f85a;

void fun_3feba7(int32_t ecx);

void fun_404974(int32_t ecx) {
    int32_t eax2;
    unsigned char al3;
    int32_t edx4;
    signed char dh5;
    signed char bl6;
    int32_t eflags7;
    void** esp8;
    uint32_t edx9;
    signed char ecx10;
    int32_t ebx11;
    unsigned char* eax12;
    void* tmp32_13;
    signed char* edi14;
    signed char* esi15;
    struct s248* edi16;
    void* edi17;
    signed char* esi18;
    void* esi19;
    uint1_t cf20;
    int1_t below_or_equal21;
    struct s249* esp22;
    void* esp23;
    uint1_t cf24;
    int32_t ebx25;
    signed char** esp26;
    uint32_t eax27;
    void* esp28;
    signed char** esp29;
    signed char* es30;
    int16_t* esp31;
    int16_t cs32;
    void** esp33;
    uint1_t cf34;
    signed char tmp8_35;
    int32_t ecx36;
    void* tmp32_37;
    void* cs38;

    __asm__("fdiv dword [ebp+0x9767e9fb]");
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 & 0xee);
    if (!__intrinsic()) 
        goto 0x404997;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx4) + 1) = dh5;
    gca0f1160 = bl6;
    eflags7 = ecx;
    esp8 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4);
    edx9 = reinterpret_cast<uint32_t>(edx4 + 1);
    if (*reinterpret_cast<int1_t*>(&eflags7)) {
        *reinterpret_cast<unsigned char*>(eax2 - 0x118c9d9f) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax2 - 0x118c9d9f) ^ *reinterpret_cast<unsigned char*>(&eax2));
    }
    g1476e2b5 = eax2;
    __asm__("out dx, eax");
    __asm__("sahf ");
    ecx10 = reinterpret_cast<signed char>(ecx + 1 + 1);
    __asm__("enter 0x8b25, 0x59");
    ebx11 = eax2;
    eax12 = reinterpret_cast<unsigned char*>(0xe4b580a5);
    ge4b580a5 = reinterpret_cast<unsigned char>(ge4b580a5 & *reinterpret_cast<unsigned char*>(&ebx11));
    tmp32_13 = reinterpret_cast<void*>(1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags7) + 1));
    *edi14 = *esi15;
    edi16 = reinterpret_cast<struct s248*>(reinterpret_cast<int32_t>(edi17) + reinterpret_cast<uint32_t>(tmp32_13));
    esi18 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi19) + reinterpret_cast<uint32_t>(tmp32_13));
    cf20 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&edx9) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(g4f986ac3)));
    below_or_equal21 = *reinterpret_cast<unsigned char*>(&edx9) <= reinterpret_cast<unsigned char>(g4f986ac3 + cf20);
    *reinterpret_cast<unsigned char*>(&edx9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx9) - reinterpret_cast<unsigned char>(g4f986ac3 + cf20));
    if (!below_or_equal21) 
        goto addr_0x4049fd_8;
    while (edi16->f210047453 = edi16->f210047453 - 37, esi18 = reinterpret_cast<signed char*>(0x9d385227), *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx11) + 1) = -96, __intrinsic()) {
        addr_0x404a13_10:
        esp22 = reinterpret_cast<struct s249*>(esp8 - 2);
        esp22->f0 = edx9;
        __asm__("int1 ");
        esp8 = &esp22->f4;
    }
    __asm__("retf ");
    esp23 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp8) + 4);
    *reinterpret_cast<unsigned char*>(ecx10 - 0x66) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx10 - 0x66) + *reinterpret_cast<unsigned char*>(&ebx11));
    cf24 = __intrinsic();
    ebx25 = ebx11 + 1;
    *esi18 = ecx10;
    __asm__("lock aam 0x6c");
    *reinterpret_cast<unsigned char*>(&edx9) = 0xac;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = -79;
    __asm__("retf 0x483a");
    __asm__("fmul st0, st7");
    __asm__("das ");
    esp26 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp23) - 4);
    *esp26 = esi18;
    eax27 = edx9;
    esp28 = reinterpret_cast<void*>(esp26 + 1);
    if (cf24 | reinterpret_cast<uint1_t>(ebx25 == 0)) {
        if (__intrinsic()) {
            __asm__("xlatb ");
            esp29 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp28) - 2);
            *esp29 = es30;
            *reinterpret_cast<uint32_t*>(ebx25 - 56) = *reinterpret_cast<uint32_t*>(ebx25 - 56) | reinterpret_cast<uint16_t>(esi18);
            esp31 = reinterpret_cast<int16_t*>(esp29 - 1);
            *esp31 = cs32;
            esp33 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp31) + 1 - 1 - 4);
            *reinterpret_cast<void***>(esp33) = esp33;
            cf34 = reinterpret_cast<uint1_t>(g3735f501 < reinterpret_cast<unsigned char>(66 + __intrinsic()));
            g3735f501 = reinterpret_cast<unsigned char>(g3735f501 - reinterpret_cast<unsigned char>(66 + cf34));
            __asm__("lahf ");
        } else {
            *reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp28) - 2) = *esp26;
        }
    } else {
        tmp8_35 = *reinterpret_cast<signed char*>(esi18 + eax27 * 2);
        *reinterpret_cast<signed char*>(esi18 + eax27 * 2) = -84;
        *reinterpret_cast<signed char*>(&eax27) = tmp8_35;
        ecx36 = *reinterpret_cast<int32_t*>(eax27 + 73) * 0x19b152ee;
        tmp32_37 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp28) + reinterpret_cast<uint16_t>(esi18));
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp28) + reinterpret_cast<uint16_t>(esi18)) = esp28;
        gf9b4f85a = gf9b4f85a - reinterpret_cast<uint16_t>(esi18);
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(tmp32_37) - 4) = 0x404a61;
        fun_3feba7(ecx36);
    }
    addr_0x4049fd_8:
    edx9 = edx9 + *esi18 + cf20;
    esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) + reinterpret_cast<int32_t>(esp8));
    *reinterpret_cast<unsigned char*>(edx9 + 0x5dded515) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx9 + 0x5dded515) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edx9 + 0x5dded515) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1) + __intrinsic()))));
    cf24 = 0;
    __asm__("outsd ");
    if (!0) {
        __asm__("cmc ");
        esp8 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp23) - 2);
        *esp8 = cs38;
        ecx10 = 37;
        __asm__("aad 0x17");
        --edx9;
        goto addr_0x404a13_10;
    }
}

void fun_404a62() {
    __asm__("sti ");
}

void fun_404a90(signed char cl) {
}

struct s250 {
    signed char[38] pad38;
    uint32_t f38;
};

struct s251 {
    signed char f0;
    unsigned char f1;
};

unsigned char gbdba9ac9;

struct s252 {
    signed char[4] pad4;
    void* f4;
};

void* gec996ca4;

struct s253 {
    unsigned char f0;
    signed char[13] pad14;
    unsigned char f14;
};

struct s254 {
    struct s253* f0;
    signed char[2] pad4;
    int32_t f4;
};

struct s255 {
    struct s253* f0;
    signed char[2] pad4;
    unsigned char f4;
};

struct s256 {
    struct s253* f0;
    signed char[52] pad54;
    unsigned char* f54;
};

struct s254* g3408505b;

unsigned char g4330dbc3;

unsigned char g465dcd97;

void fun_404aa7(uint32_t ecx) {
    uint1_t df2;
    int32_t ebx3;
    int32_t eax4;
    int32_t ebp5;
    int32_t ebp6;
    struct s250* eax7;
    struct s251* esi8;
    void* esi9;
    void* edi10;
    unsigned char* esi11;
    void** esp12;
    struct s250* ebx13;
    void* eax14;
    struct s253* eax15;
    struct s254* esp16;
    struct s255* edi17;
    int1_t less18;
    uint1_t cf19;
    struct s256* esp20;
    struct s253* es21;
    struct s253* edi22;
    struct s254* eax23;
    unsigned char* tmp32_24;
    unsigned char* esi25;
    uint1_t zf26;
    struct s253* edx27;
    int32_t* esp28;
    int32_t eax29;
    uint1_t cf30;
    void* tmp32_31;
    signed char* edi32;
    signed char* esi33;
    void* tmp32_34;

    df2 = 0;
    ebx3 = *reinterpret_cast<int32_t*>(eax4 + 0x53d689a);
    ebp5 = ebp6 - 1;
    *reinterpret_cast<unsigned char*>(&eax7) = 0xcb;
    __asm__("cli ");
    esi8 = reinterpret_cast<struct s251*>(reinterpret_cast<int32_t>(esi9) - 1);
    __asm__("lodsd ");
    *reinterpret_cast<signed char*>(__return_address()) = esi8->f0;
    edi10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__return_address()) + 1);
    esi11 = &esi8->f1;
    gbdba9ac9 = 0xcb;
    *reinterpret_cast<uint32_t*>(ebx3 - 44) = *reinterpret_cast<uint32_t*>(ebx3 - 44) ^ ecx;
    do {
        __asm__("aaa ");
    } while (0);
    if (!0) {
        *reinterpret_cast<unsigned char*>(&eax7) = 0xcf;
    }
    esp12 = &(**reinterpret_cast<struct s252***>(esi11 - 0x609a8fb9))->f4;
    __asm__("iretd ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax7) + ebx3 * 8 + 0x52f4510c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax7) + ebx3 * 8 + 0x52f4510c) | *reinterpret_cast<unsigned char*>(&eax7));
    ebx13 = eax7;
    __asm__("popad ");
    eax14 = gec996ca4;
    if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax7) + ebx3 * 8 + 0x52f4510c)) {
        __asm__("fbstp tword [ebx+edi*4]");
        __asm__("into ");
        __asm__("fidivr dword [edx]");
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax14) + 0xfffffff3) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax14) + 0xfffffff3) + 0xf548f0b;
    }
    __asm__("rol byte [0x3490c6d3], 1");
    __asm__("out dx, al");
    __asm__("out 0xce, eax");
    __asm__("int1 ");
    eax15 = reinterpret_cast<struct s253*>(reinterpret_cast<uint32_t>(eax14) - (reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx13) - 0x5a7c40dd)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax14) < reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx13) - 0x5a7c40dd)))));
    esp16 = reinterpret_cast<struct s254*>(reinterpret_cast<int32_t>(*esp12) + 4 - 4);
    esp16->f0 = reinterpret_cast<struct s253*>(0x4330dbe3);
    edi17 = reinterpret_cast<struct s255*>(reinterpret_cast<uint32_t>(edi10) ^ ebx13->f38);
    less18 = reinterpret_cast<int16_t>(*reinterpret_cast<struct s253**>(reinterpret_cast<int32_t>(ebx13) - 0x58987e8d)) < reinterpret_cast<int16_t>(eax15);
    cf19 = reinterpret_cast<uint1_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<struct s253**>(reinterpret_cast<int32_t>(ebx13) - 0x58987e8d)) < reinterpret_cast<uint16_t>(eax15));
    *reinterpret_cast<struct s253**>(reinterpret_cast<int32_t>(ebx13) - 0x58987e8d) = reinterpret_cast<struct s253*>(reinterpret_cast<uint16_t>(*reinterpret_cast<struct s253**>(reinterpret_cast<int32_t>(ebx13) - 0x58987e8d)) - reinterpret_cast<uint16_t>(eax15));
    if (cf19) {
        addr_0x404bb7_14:
        esp20 = reinterpret_cast<struct s256*>(reinterpret_cast<int32_t>(esp16) - 2);
        esp20->f0 = es21;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax15) + 1) = 0x70;
        __asm__("wait ");
        edi22 = eax15;
        if (!less18) {
            __asm__("sahf ");
        } else {
            eax23 = g3408505b;
            __asm__("cmc ");
            __asm__("lodsd ");
            *reinterpret_cast<unsigned char*>(&eax23) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) - reinterpret_cast<unsigned char>(45 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax23) < reinterpret_cast<unsigned char>(45 - cf19))));
            esp16 = eax23;
            tmp32_24 = esp20->f54;
            esp20->f54 = esi11;
            esi25 = tmp32_24;
        }
    } else {
        g4330dbc3 = reinterpret_cast<unsigned char>(g4330dbc3 | 0xda);
        zf26 = reinterpret_cast<uint1_t>(g4330dbc3 == 0);
        edi17->f0 = eax15;
        edi22 = reinterpret_cast<struct s253*>(&edi17->f4);
        esi25 = esi11 + 4;
        __asm__("insd ");
        if (reinterpret_cast<uint1_t>(__intrinsic()) | zf26) 
            goto addr_0x404ba4_23; else 
            goto addr_0x404b87_24;
    }
    addr_0x404bca_25:
    __asm__("pushad ");
    edx27 = esp16->f0;
    esp28 = &esp16->f4;
    __asm__("daa ");
    eax29 = *esp28;
    *reinterpret_cast<unsigned char**>(esp28 + 1 - 1) = esi25;
    cf30 = reinterpret_cast<uint1_t>(edx27->f14 < *reinterpret_cast<unsigned char*>(&ebx13));
    edx27->f14 = reinterpret_cast<unsigned char>(edx27->f14 - *reinterpret_cast<unsigned char*>(&ebx13));
    __asm__("fmul dword [ebp-0x2a]");
    __asm__("in al, dx");
    tmp32_31 = reinterpret_cast<void*>(1 - 2 * df2);
    *reinterpret_cast<unsigned char*>(&edi22->f0) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax29) + 14) + cf30);
    edi32 = reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(edi22) + reinterpret_cast<uint32_t>(tmp32_31));
    esi33 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi25) + reinterpret_cast<uint32_t>(tmp32_31));
    tmp32_34 = reinterpret_cast<void*>(1 - 2 * df2);
    *edi32 = *esi33;
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(tmp32_34)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi33) + reinterpret_cast<uint32_t>(tmp32_34));
    addr_0x404ba4_23:
    *reinterpret_cast<unsigned char*>(&edi22->f0) = *esi25;
    es21 = esp16->f0;
    __asm__("pushad ");
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) ^ 0xf7);
    esp16 = reinterpret_cast<struct s254*>(&esp16->pad4 - 1);
    esp16->f0 = eax15;
    cf19 = 0;
    less18 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi25) + (4 - 8 * df2) - 0x7c) & *reinterpret_cast<unsigned char*>(&ebx13)) < reinterpret_cast<signed char>(0);
    esi11 = reinterpret_cast<unsigned char*>(0x39e653b8);
    __asm__("lodsb ");
    __asm__("out dx, eax");
    goto addr_0x404bb7_14;
    addr_0x404b87_24:
    __asm__("aad 0x53");
    *reinterpret_cast<unsigned char*>(&edi22->f0) = *esi25;
    edi22 = reinterpret_cast<struct s253*>(&edi22->pad14);
    ++esi25;
    df2 = 1;
    *reinterpret_cast<unsigned char*>(&eax15) = g465dcd97;
    __asm__("lodsd ");
    __asm__("xlatb ");
    __asm__("out dx, al");
    __asm__("fild word [eax]");
    esp16 = reinterpret_cast<struct s254*>(&esp16->f4);
    *reinterpret_cast<uint32_t*>(ebp5 - 47) = *reinterpret_cast<uint32_t*>(ebp5 - 47) + reinterpret_cast<uint32_t>(esi25);
    __asm__("ror dword [ebp+0x26], 0x25");
    if (!__intrinsic()) 
        goto addr_0x404bca_25;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax15) + 1) = 64;
    goto addr_0x404ba4_23;
}

struct s257 {
    signed char f0;
    int32_t f1;
};

struct s258 {
    signed char[4] pad4;
    signed char f4;
};

struct s259 {
    signed char[4] pad4;
    signed char f4;
};

struct s260 {
    signed char[59] pad59;
    uint32_t f59;
};

struct s261 {
    signed char[59] pad59;
    int32_t f59;
};

struct s262 {
    int32_t f0;
    uint32_t* f1;
};

struct s263 {
    signed char[1] pad1;
    uint32_t f1;
};

struct s264 {
    signed char[4] pad4;
    struct s264* f4;
};

struct s265 {
    struct s265* f0;
    struct s264* f4;
};

signed char gaaf6e460;

void fun_404be8(int32_t ecx) {
    uint32_t eflags2;
    uint32_t ebx3;
    uint1_t cf4;
    unsigned char bl5;
    int32_t edx6;
    signed char bl7;
    int32_t edx8;
    int32_t* edi9;
    int32_t* esi10;
    struct s257* edi11;
    struct s258* edi12;
    signed char* esi13;
    struct s259* esi14;
    struct s260* edx15;
    struct s261* edx16;
    struct s262* edi17;
    void* esi18;
    uint32_t* eax19;
    struct s263* eax20;
    struct s264** esp21;
    int1_t less_or_equal22;
    struct s264** edx23;
    struct s264** edx24;
    uint32_t edx25;
    int32_t edx26;
    int1_t pf27;
    struct s265* esp28;
    struct s265* ebp29;
    int32_t ecx30;
    uint32_t eax31;
    uint32_t* esp32;
    int32_t edi33;
    uint32_t ebx34;
    void* esi35;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx3) + 1) = 71;
    __asm__("aas ");
    cf4 = reinterpret_cast<uint1_t>(bl5 < *reinterpret_cast<unsigned char*>(edx6 - 89));
    if (bl7 == *reinterpret_cast<signed char*>(edx8 - 89)) 
        goto 0x404bdb;
    *edi9 = *esi10;
    edi11 = reinterpret_cast<struct s257*>(&edi12->f4);
    esi13 = &esi14->f4;
    edx15->f59 = edx16->f59 + reinterpret_cast<int32_t>(esi13) + cf4;
    edi11->f0 = *esi13;
    edi17 = reinterpret_cast<struct s262*>(&edi11->f1);
    esi18 = reinterpret_cast<void*>(esi13 + 1);
    eax19 = &eax20->f1;
    esp21 = reinterpret_cast<struct s264**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2 + edi17->f0 + __intrinsic() - 4);
    *esp21 = reinterpret_cast<struct s264*>(33);
    *reinterpret_cast<unsigned char*>(&eax19) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax19) | 51);
    less_or_equal22 = reinterpret_cast<int32_t>(edx23) <= reinterpret_cast<int32_t>(esp21);
    *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edx24) < reinterpret_cast<uint32_t>(esp21));
    edx25 = edx26 - (reinterpret_cast<uint32_t>(esp21) + *reinterpret_cast<uint1_t*>(&eflags2));
    pf27 = __intrinsic();
    while (less_or_equal22) {
        *reinterpret_cast<uint32_t*>(esp21 - 1) = edx25;
        esp28 = ebp29;
        ebp29 = esp28->f0;
        esp21 = &esp28->f4;
        do {
            if (!*reinterpret_cast<uint1_t*>(&eflags2)) 
                break;
            __asm__("int1 ");
            esp21 = &(*esp21)->f4;
        } while (!pf27);
        goto addr_0x404c67_13;
    }
    __asm__("enter 0x5fb5, 0xe4");
    ecx30 = ecx + 1;
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(ecx30 == 0);
    *reinterpret_cast<int1_t*>(&eflags2) = ecx30 < 0;
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    eax31 = edx25;
    esp32 = reinterpret_cast<uint32_t*>(esp21 - 1);
    *esp32 = eflags2 & 0xfcffff;
    if (!reinterpret_cast<uint1_t>(*reinterpret_cast<uint1_t*>(&eflags2) | *reinterpret_cast<uint1_t*>(&eflags2))) 
        goto 0x404be0;
    __asm__("in al, dx");
    if (*reinterpret_cast<int1_t*>(&eflags2) != *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1)) 
        goto 0x404bc9;
    *reinterpret_cast<signed char*>(&eax31) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax31) - 5);
    edi33 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp29) - 0x40f40d57) * 0xffffff93;
    __asm__("fsub qword [esi+0x5dd9554c]");
    *reinterpret_cast<int32_t*>(esp32 - 1) = 0x98;
    __asm__("pushad ");
    gaaf6e460 = *reinterpret_cast<signed char*>(&eax31);
    __asm__("outsd ");
    __asm__("int1 ");
    if (ecx30 - 1) {
        *reinterpret_cast<uint32_t*>(edi33 + 1) = eax31;
    } else {
        __asm__("das ");
        __asm__("wait ");
        __asm__("in al, 0x8e");
    }
    addr_0x404c67_13:
    ebx34 = ebx3 & *eax19;
    *reinterpret_cast<uint32_t*>(&(ebp29 - 7)->f0) = edx25;
    __asm__("ficom word [ebx]");
    *reinterpret_cast<uint32_t**>(reinterpret_cast<int32_t>(edi17) + 1) = eax19;
    esi35 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi18) + 1 + 4);
    while (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi35) - 0x5665fbb8) = 0, *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax19) - 0x1992e779) = ebx34, __intrinsic()) {
        eax19 = reinterpret_cast<uint32_t*>((reinterpret_cast<uint32_t>(eax19) ^ 0xf6b094be) + 1);
    }
}

void fun_404cb7(int32_t ecx) {
    signed char* edi2;
    signed char* esi3;
    int32_t ebx4;

    __asm__("cmc ");
    *edi2 = *esi3;
    *reinterpret_cast<int32_t*>(ebx4 - 0x68) = 0;
    __asm__("aad 0x81");
    __asm__("sti ");
    __asm__("xlatb ");
    if (__intrinsic()) {
        __asm__("popad ");
        __asm__("out 0xa6, al");
        __asm__("int 0xe7");
    }
}

void fun_404cf5() {
    __asm__("iretd ");
}

void fun_404d05(int32_t ecx) {
    int32_t eax2;
    signed char ah3;
    signed char bl4;
    uint1_t cf5;
    int32_t eax6;
    int32_t ebx7;
    int32_t esi8;
    int32_t esi9;
    int32_t esi10;

    __asm__("in al, 0x92");
    __asm__("fdiv qword [ebp-0x72]");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax2) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ah3 + bl4) + cf5);
    __asm__("das ");
    __asm__("ror byte [ecx+0xb801c7be], 0x4");
    if (!(ecx - 1)) 
        goto 0x404ccb;
    eax6 = ebx7 + 1;
    *reinterpret_cast<unsigned char*>(esi8 + eax2 * 8 - 0x79) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi9 + eax2 * 8 - 0x79) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax6) + 1) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(esi10 + eax2 * 8 - 0x79) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax6) + 1) + __intrinsic()))));
}

void fun_404d28(int32_t ecx) {
    __asm__("out dx, eax");
    __asm__("outsd ");
}

void fun_404d3e() {
    __asm__("lds ecx, [ebx+0x56be2597]");
    __asm__("hlt ");
}

void fun_2672a074(int32_t a1);

void fun_404d5d() {
    fun_2672a074(__return_address());
}

signed char gbd49663;

int32_t g75465c12;

void fun_404d70() {
    uint32_t eax1;
    uint32_t eax2;
    int32_t edi3;
    int32_t* esp4;
    int32_t ecx5;
    int1_t less6;
    unsigned char dl7;
    signed char dl8;
    unsigned char dl9;
    void* esi10;
    int32_t* edx11;
    signed char* esi12;
    int16_t es13;
    uint32_t* edx14;
    int32_t eflags15;
    int16_t* esp16;
    int16_t ss17;

    eax1 = eax2 & *reinterpret_cast<uint32_t*>(edi3 - 46);
    __asm__("fst dword [edx+0x4b6283ce]");
    esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    do {
        --ecx5;
    } while (ecx5);
    less6 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(eax1 + 0x3ab4c0ce)) < reinterpret_cast<signed char>(static_cast<uint32_t>(dl7));
    *reinterpret_cast<unsigned char*>(eax1 + 0x3ab4c0ce) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax1 + 0x3ab4c0ce) - reinterpret_cast<unsigned char>(dl8 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(eax1 + 0x3ab4c0ce) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(dl9)))));
    if (less6) {
        __asm__("les edx, [eax+0x31]");
        __asm__("fdiv st4, st0");
    } else {
        __asm__("stc ");
        __asm__("iretd ");
        __asm__("aad 0xa9");
        esi10 = reinterpret_cast<void*>(*edx11 * 0x2bd971f3);
        esi12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi10) - ((esp4 + ecx5 * 2)[18] + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esi10) < reinterpret_cast<int32_t>(*reinterpret_cast<void**>(esp4 + ecx5 * 2 + 18)) + __intrinsic())));
        do {
            *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp4) + 1 - 2) = es13;
            __asm__("rcl byte [eax+ebx*2+0x69], 1");
            if (!__intrinsic()) 
                goto 0x404d66;
            __asm__("aam 0xda");
            *edx14 = *edx14 & reinterpret_cast<uint32_t>(esi12);
            esp4 = reinterpret_cast<int32_t*>(0x75465c12);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx14) + 1) = 78;
            --ecx5;
            if (ecx5) 
                break;
            gbd49663 = *esi12;
            ++esi12;
            eflags15 = g75465c12;
            esp4 = reinterpret_cast<int32_t*>(0x75465c16);
            __asm__("aad 0x36");
        } while (*reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags15) + 1));
        goto addr_0x404dd9_14;
    }
    esp16 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp4) - 2);
    *esp16 = ss17;
    *reinterpret_cast<int32_t*>(esp16 - 2) = ecx5;
    addr_0x404dd9_14:
}

void fun_404e10() {
    __asm__("wait ");
}

struct s266 {
    unsigned char f0;
    uint32_t f1;
};

uint32_t gaccba00f;

void fun_404e15() {
    uint32_t esi1;
    int1_t less2;
    int1_t sf3;
    uint32_t* edi4;
    uint32_t edx5;
    uint32_t* tmp32_6;
    uint32_t* eax7;
    uint1_t cf8;
    struct s266* edi9;
    int32_t ebp10;
    int32_t ebp11;
    uint32_t ebx12;
    int16_t cx13;

    esi1 = 0xd9feeed9;
    do {
        if (less2) {
            if (sf3) 
                break;
        } else {
            *edi4 = *edi4 - edx5;
            __asm__("xlatb ");
            edx5 = edx5 | esi1;
            __asm__("psubd mm1, mm0");
            tmp32_6 = edi4;
            edi4 = eax7;
            eax7 = tmp32_6;
            cf8 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax7) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(esi1 - 0x64684190))));
            *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi1 - 0x64684190) + cf8));
        }
        __asm__("out dx, eax");
        __asm__("in eax, dx");
        edi9 = reinterpret_cast<struct s266*>(reinterpret_cast<uint32_t>(edi4) - (*reinterpret_cast<int32_t*>(ebp10 + 0x3c2f42d6) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edi4) < *reinterpret_cast<int32_t*>(ebp11 + 0x3c2f42d6) + cf8)));
        ++ebx12;
        cf8 = reinterpret_cast<uint1_t>(edi9->f0 < *reinterpret_cast<unsigned char*>(&eax7));
        edi4 = &edi9->f1;
        esi1 = esi1 + 1 + 1;
        --edx5;
        sf3 = reinterpret_cast<int32_t>(edx5) < reinterpret_cast<int32_t>(0);
        less2 = sf3 != __intrinsic();
        cx13 = reinterpret_cast<int16_t>(cx13 - 1);
    } while (reinterpret_cast<uint1_t>(!!cx13) & reinterpret_cast<uint1_t>(edx5 == 0));
    goto addr_0x404e3d_9;
    __asm__("retf 0x6870");
    if (less2) {
        __asm__("cmc ");
        __asm__("fnstsw word [eax-0x3a]");
        __asm__("stc ");
        gaccba00f = gaccba00f | ebx12;
    }
    addr_0x404e5a_12:
    __asm__("stc ");
    addr_0x404e3d_9:
    __asm__("sti ");
    __asm__("lodsb ");
    __asm__("outsd ");
    goto addr_0x404e5a_12;
}

void fun_404e5e() {
}

void fun_404ea8() {
    __asm__("insb ");
    __asm__("arpl [ebx], sp");
}

void fun_404eb5() {
    __asm__("cmc ");
}

void fun_404eba() {
    int32_t* esp1;
    int32_t ebx2;

    __asm__("das ");
    __asm__("rcr byte [ebx], 1");
    __asm__("ror dword [ecx], 0x1c");
    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 - 4);
    *esp1 = ebx2;
    goto *esp1;
}

void fun_404edb() {
}

signed char g7e1de1b0;

int32_t g117cbd38;

uint32_t fun_ac443454(int32_t a1);

signed char gea02d350;

void fun_404ee1(int32_t* ecx) {
    int16_t v2;
    int1_t cf3;
    signed char bl4;
    int1_t sf5;
    int32_t eax6;
    int32_t edi7;
    int1_t less8;
    int32_t eax9;
    int32_t ebp10;
    int16_t cs11;
    int32_t edx12;
    int32_t edx13;
    uint1_t less14;
    int16_t ecx15;
    uint32_t eax16;
    uint32_t eax17;
    int32_t ebx18;
    int32_t dr1_19;
    signed char bh20;
    int32_t ebp21;
    signed char* edi22;
    signed char* esi23;

    v2 = reinterpret_cast<int16_t>(__return_address());
    if (!cf3) {
        g7e1de1b0 = bl4;
        if (sf5) {
            eax6 = edi7 + 0xfd53752;
            less8 = *reinterpret_cast<signed char*>(&eax6) < 0x91;
            *reinterpret_cast<signed char*>(&eax6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax6) + 0x6f);
            __asm__("das ");
            __asm__("lodsd ");
            __asm__("aad 0x32");
            if (less8) {
                eax9 = eax6 + (reinterpret_cast<int32_t>(__zero_stack_offset()) + 2);
            }
        }
    }
    __asm__("fst st1");
    ebp10 = *ecx * 0x5d544879;
    __asm__("les ebp, [ebp+0xf56a0b48]");
    __asm__("insd ");
    __asm__("daa ");
    *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) | 0x9f);
    g117cbd38 = eax9;
    v2 = cs11;
    edx12 = edx13 + 1;
    less14 = reinterpret_cast<uint1_t>(edx12 < 0 != __intrinsic());
    ecx15 = v2;
    __asm__("fadd st6, st0");
    if (!less14) {
        if (reinterpret_cast<uint1_t>(less14 | reinterpret_cast<uint1_t>(edx12 == 0))) {
            eax16 = fun_ac443454(0x69);
            __asm__("les esi, [eax]");
            __asm__("out dx, eax");
            __asm__("fcmovne st0, st1");
            if (!0) {
            }
            __asm__("daa ");
            *reinterpret_cast<unsigned char*>(&eax16) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax16) - reinterpret_cast<unsigned char>(4 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax16) < 0xfc)));
            eax17 = eax16 | 0x257a2f07;
            *reinterpret_cast<int32_t*>(ebx18 + 0x4403ed6d) = dr1_19;
            gea02d350 = *reinterpret_cast<signed char*>(&eax17);
            do {
                bh20 = reinterpret_cast<signed char>(bh20 + *reinterpret_cast<signed char*>(ecx15 - 0x73142cb1));
            } while (!bh20);
        }
    } else {
        __asm__("sti ");
        ebp21 = ebp10 + 1;
        *edi22 = *esi23;
        __asm__("les edi, [ecx-0x63]");
        *reinterpret_cast<int32_t*>(ebp21 + 0x4a1a1ae4) = *reinterpret_cast<int32_t*>(ebp21 + 0x4a1a1ae4) - ecx15;
    }
}

void fun_404eff() {
}

void fun_404f0c(int32_t ecx) {
    uint1_t zf2;

    __asm__("cdq ");
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & zf2) 
        goto 0x404ec7;
}

void fun_404f19() {
    __asm__("cdq ");
}

void fun_404f20() {
    __asm__("cmc ");
}

void fun_404f27() {
    __asm__("in eax, dx");
}

void fun_404f29(signed char cl) {
    int32_t edx2;

    __asm__("fdecstp ");
    *reinterpret_cast<signed char*>(edx2 + 0x277050a6) = cl;
}

void fun_404f33(uint32_t ecx) {
    uint32_t ecx2;
    uint32_t edx3;
    uint32_t eax4;
    int32_t eax5;
    uint32_t eax6;
    uint1_t cf7;
    int32_t ebx8;
    int32_t ebx9;
    uint32_t* esi10;
    void* esi11;
    signed char* ebx12;
    signed char* ebx13;

    ecx2 = ecx & edx3;
    if (!__intrinsic()) {
        eax4 = eax5 - (0x2f28fa37 - reinterpret_cast<uint1_t>(eax6 < 0x2f28fa37 - cf7)) ^ 0x155cbe9e;
        *reinterpret_cast<uint32_t*>(ebx8 + 0x199f93cb) = *reinterpret_cast<uint32_t*>(ebx9 + 0x199f93cb) ^ eax4;
        esi10 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi11) - 1);
        *esi10 = *esi10 - eax4;
        *ebx12 = reinterpret_cast<signed char>(*ebx13 << *reinterpret_cast<unsigned char*>(&ecx2));
    }
}

struct s267 {
    signed char[73] pad73;
    int32_t f73;
};

void fun_404f96(int32_t ecx) {
    struct s267* esi2;
    void* esi3;
    uint1_t cf4;
    int32_t edx5;
    int32_t edx6;

    esi2 = reinterpret_cast<struct s267*>(reinterpret_cast<int32_t>(esi3) - 1);
    if (cf4 | reinterpret_cast<uint1_t>(esi2 == 0)) {
        __asm__("outsb ");
        __asm__("retf ");
        __asm__("enter 0x21d2, 0xae");
    } else {
        *reinterpret_cast<uint32_t*>(edx5 + 0x4df02ec7) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(edx6 + 0x4df02ec7) - 0x399545d1);
        if (ecx + esi2->f73) 
            goto 0x404ffc; else 
            goto "???";
    }
}

void fun_404fc5() {
    __asm__("aad 0x1e");
    __asm__("clc ");
    if (1) 
        goto 0x404f55;
    __asm__("pushad ");
    if (1) 
        goto 0x404f92;
    __asm__("in al, dx");
}

struct s268 {
    signed char[12] pad12;
    unsigned char f12;
    signed char[1465049919] pad1465049932;
    uint32_t f1465049932;
};

void fun_40500c(int32_t ecx) {
    int1_t pf2;
    struct s268* ebx3;
    signed char dh4;
    int32_t ecx5;
    int32_t esi6;
    int32_t esi7;
    int32_t edx8;
    uint16_t ss9;
    signed char dl10;
    unsigned char dl11;

    if (pf2) {
    }
    __asm__("aaa ");
    __asm__("fdivr qword [esi+0x17cebe52]");
    __asm__("aaa ");
    __asm__("out 0xc7, al");
    __asm__("fsubr qword [ebp+0x2b]");
    __asm__("out 0x5e, al");
    ebx3 = reinterpret_cast<struct s268*>(0x683d8192);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1) + dh4);
    ecx5 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx5) & reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1) == 0)) {
        __asm__("fnstcw word [0xfb9f3c64]");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx3) + 12) < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1)) {
            __asm__("in eax, dx");
            __asm__("into ");
        }
        __asm__("das ");
        __asm__("stc ");
    } else {
        __asm__("rol esi, 0xc3");
        *reinterpret_cast<uint32_t*>(esi6 + 0x45713e0d) = *reinterpret_cast<uint32_t*>(esi7 + 0x45713e0d) >> 71;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = 90;
        if (__undefined()) 
            goto addr_0x405055_9;
    }
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx3) + 0x5752e34c) = static_cast<uint32_t>(ss9);
    __asm__("fld dword [eax+0x70]");
    addr_0x405055_9:
    *reinterpret_cast<unsigned char*>(&edx8) = reinterpret_cast<unsigned char>(dl10 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx5) + reinterpret_cast<uint1_t>(dl11 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx5) + __intrinsic()))));
    __asm__("into ");
    *reinterpret_cast<int32_t*>(edx8 - 70) = 0;
    __asm__("fistp dword [0xbbff92aa]");
    __asm__("int 0xcd");
    __asm__("fnstsw ax");
    __asm__("in al, 0x40");
}

void fun_4050da(unsigned char* ecx) {
    uint32_t eflags2;
    int1_t less3;
    void* eax4;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    if (less3) {
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
        *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
        __asm__("rcr dword [edx], cl");
        *ecx = reinterpret_cast<unsigned char>(*ecx >> *reinterpret_cast<signed char*>(&ecx));
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
        *reinterpret_cast<int1_t*>(&eflags2) = *ecx == 0;
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        __asm__("int1 ");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax4) - 4) = eflags2 & 0xfcffff;
    }
}

struct s269 {
    signed char f0;
    unsigned char f1;
};

signed char gb7493210;

struct s270 {
    signed char[1] pad1;
    signed char f1;
};

struct s271 {
    signed char[1] pad1;
    signed char f1;
};

void fun_4050f6(int16_t cx) {
    int32_t ecx1;
    void* esp2;
    uint48_t v3;
    int1_t zf4;
    struct s269* edx5;
    int32_t ebx6;
    signed char bl7;
    void* esp8;
    signed char* esi9;
    uint1_t cf10;
    int1_t of11;
    uint1_t below_or_equal12;
    signed char* edi13;
    signed char* esi14;
    signed char* edi15;
    struct s270* edi16;
    struct s271* esi17;
    unsigned char* edx18;
    uint16_t cs19;
    int32_t ebp20;
    int32_t ebp21;
    struct s269* ebp22;
    signed char bl23;

    *reinterpret_cast<int16_t*>(&ecx1) = cx;
    esp2 = __zero_stack_offset();
    *reinterpret_cast<int32_t*>(&v3) = reinterpret_cast<int32_t>(__return_address());
    if (!zf4) {
        addr_0x405170_2:
        __asm__("fidivr dword [eax+0xa9117916]");
        *reinterpret_cast<signed char*>(&edx5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&edx5) + gb7493210);
        *reinterpret_cast<signed char*>(&ebx6) = reinterpret_cast<signed char>(bl7 - edx5->f0);
        __asm__("out dx, al");
        esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp2) - 4 - 2);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx5) + 1) = 0;
        *reinterpret_cast<int32_t*>(esi9 + 0x27789446 - 0x58e102dd) = *reinterpret_cast<int32_t*>(esi9 + 0x27789446 - 0x58e102dd) + ebx6;
        cf10 = __intrinsic();
        of11 = __intrinsic();
        below_or_equal12 = reinterpret_cast<uint1_t>(cf10 | reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(esi9 + 0x27789446 - 0x58e102dd) == 0));
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) = 0xff;
        __asm__("rcl ebx, 0x68");
        *edi13 = *esi14;
        edi15 = &edi16->f1;
        esi9 = &esi17->f1;
        if (!__intrinsic()) 
            goto addr_0x405149_7; else 
            goto addr_0x405103_8;
    }
    do {
        if (below_or_equal12) 
            break;
    } while (!of11);
    goto addr_0x4051a4_11;
    edx18 = &edx5->f1;
    *edx18 = reinterpret_cast<unsigned char>(*edx18 | 100);
    __asm__("ffreep st3");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi9) - (reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esi9) < reinterpret_cast<uint32_t>(esi9) + cf10)) + reinterpret_cast<int32_t>(esp8)) = static_cast<uint32_t>(cs19);
    __asm__("rcl dword [ebp+ebx*8+0x61], cl");
    __asm__("lds ebp, [ebp-0x69]");
    addr_0x4051a4_11:
    __asm__("popad ");
    addr_0x405149_7:
    *reinterpret_cast<signed char*>(&ecx1) = *reinterpret_cast<signed char*>(&ecx1);
    __asm__("outsb ");
    *reinterpret_cast<int32_t*>(ebp20 + 0xb45e0d4) = ~*reinterpret_cast<int32_t*>(ebp21 + 0xb45e0d4);
    __asm__("into ");
    __asm__("cdq ");
    __asm__("out dx, eax");
    esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp2) - 4 + 4);
    __asm__("retf 0x9113");
    edx5 = ebp22;
    *edi15 = reinterpret_cast<signed char>(*edi15 + bl23);
    if (reinterpret_cast<uint1_t>(!!(ecx1 - 1)) & reinterpret_cast<uint1_t>(!!*edi15)) {
        __asm__("rcr dword [esi+0x8cf73d21], 1");
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v3) + 2);
    } else {
        __asm__("iretd ");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx5) + 1) = 0;
        goto addr_0x405170_2;
    }
    addr_0x405103_8:
    *edi15 = *esi9;
    __asm__("hlt ");
}

void fun_fee79559();

void fun_4051a8(int32_t ecx) {
    int1_t cf2;
    uint1_t cf3;
    void* ebp4;
    int32_t ebx5;
    int32_t ebx6;
    signed char dl7;
    int32_t ebx8;
    signed char dl9;
    int32_t ebp10;

    __asm__("daa ");
    __asm__("sahf ");
    if (cf2) {
        __asm__("fild word [ebx]");
    }
    __asm__("aad 0xb9");
    cf3 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(__zero_stack_offset()) < reinterpret_cast<uint32_t>(ebp4));
    *reinterpret_cast<unsigned char*>(ebx5 - 43) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx6 - 43) - reinterpret_cast<unsigned char>(dl7 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx8 - 43) < reinterpret_cast<unsigned char>(dl9 + cf3))));
    __asm__("lahf ");
    __asm__("fst qword [edi-0x6e]");
    if (!__intrinsic()) 
        goto addr_0x4051bc_7;
    addr_0x4051bc_7:
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) - (ebp10 + cf3) + 1 - 4) = 0x4051c6;
    fun_fee79559();
}

void fun_4051f6() {
    __asm__("enter 0x1ff4, 0x32");
    __asm__("retf ");
}

void fun_405201() {
    uint1_t less_or_equal1;

    less_or_equal1 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(__intrinsic())));
    if (!1) {
        less_or_equal1 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(__intrinsic())));
    }
    __asm__("rol dword [edi+0x6e], 1");
    if (0) 
        goto 0x4051b4;
    if (!less_or_equal1) 
        goto 0x405219; else 
        goto "???";
}

signed char g948417c4;

void fun_40522f() {
    signed char al1;
    uint32_t eax2;
    int32_t eax3;
    signed char al4;
    int32_t* edi5;

    g948417c4 = al1;
    __asm__("aam 0x67");
    if (reinterpret_cast<int32_t>(eax2 & 0x769a2fac) >= reinterpret_cast<int32_t>(0)) {
        *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al4 + 0x68)));
        *edi5 = eax3;
    } else {
        __asm__("lahf ");
        if (0) 
            goto 0x40521f;
    }
}

void fun_405249() {
}

void fun_405254() {
}

void fun_40525a() {
    goto 0x4051fc;
}

void fun_405289(int32_t ecx) {
    int1_t sf2;
    signed char* edx3;
    signed char* edx4;
    int32_t edx5;
    signed char dh6;
    int32_t edx7;
    uint32_t edx8;
    signed char al9;
    int32_t ebp10;
    int32_t ebp11;
    int32_t ebp12;
    int32_t ebp13;
    int32_t* esi14;

    if (sf2) {
        *edx3 = reinterpret_cast<signed char>(*edx4 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        __asm__("wait ");
        __asm__("outsd ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = reinterpret_cast<signed char>(dh6 + *reinterpret_cast<signed char*>(edx7 + 0x3803d295));
        edx8 = reinterpret_cast<uint32_t>(edx5 + 1);
        *reinterpret_cast<signed char*>(&edx8) = al9;
        __asm__("les esp, [0xb5998e93]");
        *reinterpret_cast<uint32_t*>(ebp10 + ebp11 * 2 - 0x68) = *reinterpret_cast<uint32_t*>(ebp12 + ebp13 * 2 - 0x68) ^ edx8;
        __asm__("fdivr qword [eax]");
        __asm__("in eax, 0x4f");
        __asm__("retf ");
        __asm__("in al, dx");
        __asm__("frstor [edx]");
        __asm__("aaa ");
        __asm__("outsb ");
    } else {
        *esi14 = ecx;
    }
}

struct s272 {
    signed char[52] pad52;
    uint32_t f52;
};

void fun_4052a7() {
    uint64_t v1;
    int32_t ebp2;
    int32_t esi3;
    int32_t ebx4;
    int32_t esi5;
    int32_t ebx6;
    signed char ch7;
    struct s272* edi8;
    void* edi9;
    unsigned char* edi10;
    unsigned char al11;
    int32_t edx12;
    unsigned char ah13;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 4) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int32_t*>(&v1) = ebp2;
    *reinterpret_cast<signed char*>(esi3 + ebx4 * 2 + 0x6541370b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi5 + ebx6 * 2 + 0x6541370b) - ch7);
    edi8 = reinterpret_cast<struct s272*>(reinterpret_cast<int32_t>(edi9) + 1);
    if (*edi10 <= al11) {
        __asm__("fidivr dword [edi+0x7c]");
        edx12 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi8) - 92) * 0x47cc0608;
        if (__undefined()) {
            edi8->f52 = edi8->f52 | 0x4204348b;
            __asm__("int 0x58");
            *reinterpret_cast<unsigned char*>(edx12 + 100) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx12 + 100) ^ ah13);
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2);
        }
    }
}

void fun_4052b8(signed char cl) {
    int32_t eax2;
    int32_t eax3;

    __asm__("fmul dword [esi+0xc4a8663b]");
    __asm__("cli ");
    __asm__("psraw mm7, [esi+0x53955cbf]");
    *reinterpret_cast<unsigned char*>(eax2 - 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax3 - 0x6c) >> cl);
}

struct s273 {
    signed char[97] pad97;
    int32_t f97;
};

void fun_405312() {
    struct s273* eax1;

    eax1->f97();
    return;
}

void fun_405345(int32_t ecx) {
    __asm__("ror ecx, 1");
    __asm__("das ");
    __asm__("fmul qword [esi+0xbf428aad]");
}

void fun_1804a51c(int32_t a1);

void fun_40536b() {
    int32_t eax1;
    int32_t eax2;
    signed char bl3;
    int32_t eax4;
    signed char bl5;
    uint1_t cf6;
    int32_t ebp7;
    signed char ah8;

    *reinterpret_cast<unsigned char*>(eax1 - 0x7c5dd2a5) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax2 - 0x7c5dd2a5) - reinterpret_cast<unsigned char>(bl3 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(eax4 - 0x7c5dd2a5) < reinterpret_cast<unsigned char>(bl5 + cf6))));
    *reinterpret_cast<signed char*>(ebp7 - 0x69845d67) = ah8;
    fun_1804a51c(__return_address());
}

void fun_40538a(int32_t ecx) {
    __asm__("retf ");
}

void fun_405399() {
}

int32_t gcbbc581f;

void fun_40539f(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;

    *reinterpret_cast<int32_t*>(eax2 - 0x6a81b737) = *reinterpret_cast<int32_t*>(eax3 - 0x6a81b737) - 1;
    __asm__("fistp qword [ebp+0xa082ba64]");
    __asm__("fisubr dword [esi+0x435ab906]");
    __asm__("in eax, 0x3e");
    gcbbc581f = ecx;
}

void fun_4053d1() {
    __asm__("hlt ");
}

int32_t g4812a99e;

struct s274 {
    signed char[1] pad1;
    int32_t f1;
};

int32_t fun_986bb2c4();

struct s275 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4053e2() {
    uint64_t v1;
    unsigned char al2;
    signed char al3;
    int32_t edi4;
    int32_t ebp5;
    uint1_t cf6;
    unsigned char al7;
    int32_t eax8;
    int32_t ecx9;
    int32_t* esi10;
    struct s274* esi11;
    uint32_t* edi12;
    uint32_t* edi13;
    int32_t* edi14;
    int32_t* edi15;
    struct s275* edi16;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2) = reinterpret_cast<int32_t>(__return_address());
    al2 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al3 + *reinterpret_cast<signed char*>(edi4 + ebp5 - 0x68)) + cf6);
    __asm__("insd ");
    __asm__("lodsd ");
    __asm__("pushad ");
    al7 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al2 + 0xf1) + __intrinsic());
    eax8 = g4812a99e;
    *reinterpret_cast<signed char*>(&ecx9) = 14;
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(al7) < reinterpret_cast<signed char>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(al7 == 0))) {
        esi10 = &esi11->f1;
        __asm__("fucomi st0, st3");
        __asm__("retf ");
        if (!(reinterpret_cast<uint1_t>(!!(ecx9 - 1)) & reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&eax8) + 93 == 0))) {
            __asm__("outsd ");
            __asm__("lahf ");
            fun_986bb2c4();
            *edi12 = *edi13 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&v1) + 4);
            *edi14 = *esi10;
            edi15 = &edi16->f4;
            ++esi10;
        }
        __asm__("into ");
        *edi15 = *esi10;
        __asm__("in al, 0x44");
    } else {
        __asm__("fcom dword [esi-0x50]");
    }
}

void fun_405407() {
    int1_t less_or_equal1;

    if (!less_or_equal1) 
        goto 0x4053ac;
}

void fun_40540d() {
    __asm__("stc ");
}

void fun_405413(int32_t ecx) {
    int32_t edx2;
    int32_t edx3;
    uint16_t cs4;

    ecx(__return_address());
    *reinterpret_cast<uint32_t*>(edx2 - 0x54529f32) = *reinterpret_cast<int32_t*>(edx3 - 0x54529f32) + cs4;
}

int32_t fun_eb6bb6f6();

struct s276 {
    signed char[122] pad122;
    uint32_t f122;
};

struct s277 {
    signed char[122] pad122;
    uint32_t f122;
};

void fun_40542b(signed char cl) {
    struct s276* edi2;
    struct s277* edi3;
    int1_t less4;
    int32_t* edi5;
    int32_t ebp6;
    int32_t* edi7;
    int32_t* edi8;
    int32_t ebp9;
    int16_t es10;

    fun_eb6bb6f6();
    edi2->f122 = edi3->f122 >> cl;
    less4 = *edi5 < ebp6;
    *edi7 = *edi8 - ebp9;
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 - 2) = es10;
    __asm__("retf 0x7ae2");
    __asm__("in eax, dx");
    if (__intrinsic()) {
        if (less4) {
        }
    }
}

void fun_405478() {
    __asm__("cli ");
    __asm__("hlt ");
}

void fun_405489() {
    int32_t ebp1;
    int32_t ebp2;
    signed char dl3;
    uint1_t cf4;

    *reinterpret_cast<unsigned char*>(ebp1 + 0x7b129b1) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp2 + 0x7b129b1) + dl3) + cf4);
}

void fun_405495(int32_t ecx) {
    signed char* edi2;
    signed char* esi3;
    int32_t ecx4;
    int1_t zf5;
    int1_t zf6;

    __asm__("out 0x1a, eax");
    *edi2 = *esi3;
    ecx4 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx4) & reinterpret_cast<uint1_t>(!zf5)) 
        goto 0x40542e;
    __asm__("insb ");
    if (reinterpret_cast<uint1_t>(!!(ecx4 - 1)) & reinterpret_cast<uint1_t>(!zf6)) 
        goto 0x405447;
}

void fun_4054a8() {
}

void fun_4054b3() {
    int1_t sf1;

    if (sf1) 
        goto 0x40546f;
}

void fun_4054ed() {
    void* edi1;
    signed char al2;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi1) - 1) = al2;
}

void fun_4054f2() {
    int1_t less1;

    if (less1) {
        __asm__("clc ");
    }
}

void fun_4054fe(int16_t cx) {
    signed char* edi2;

    __asm__("rcr ecx, cl");
    __asm__("stc ");
    __asm__("outsb ");
    __asm__("aas ");
    *edi2 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&cx) + 1);
}

void fun_40550b() {
    __asm__("hlt ");
}

struct s278 {
    signed char f0;
    signed char[131163606] pad131163607;
    signed char f131163607;
};

struct s279 {
    unsigned char f0;
    signed char[53] pad54;
    int32_t f54;
};

struct s280 {
    signed char f0;
    signed char[342271898] pad342271899;
    signed char f342271899;
};

unsigned char g60ed0a80;

struct s278* g80defd75;

void fun_405559() {
    struct s278** esp1;
    struct s279* ebx2;
    uint32_t ebx3;
    int32_t ebp4;
    struct s278* eax5;
    int32_t edi6;
    int32_t edi7;
    int32_t edx8;
    struct s278** esp9;
    int32_t eax10;
    int32_t ecx11;
    int1_t less12;
    uint16_t ss13;
    struct s280* esi14;
    struct s278* ecx15;
    uint1_t cf16;

    esp1 = reinterpret_cast<struct s278**>(__zero_stack_offset());
    ebx2 = reinterpret_cast<struct s279*>(ebx3 ^ *reinterpret_cast<uint32_t*>(ebp4 + 0x7fa6efb9));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax5) + 1) = -83;
    edi6 = edi7 + 1;
    __asm__("fcomp qword [eax]");
    do {
        *reinterpret_cast<uint16_t*>(&edx8) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax5) % -83);
        *reinterpret_cast<uint16_t*>(&eax5) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax5) / -83);
        esp9 = reinterpret_cast<struct s278**>(reinterpret_cast<int32_t>(esp1) - ebx2->f54);
        eax10 = edi6;
        __asm__("daa ");
        ebx2->f0 = reinterpret_cast<unsigned char>(ebx2->f0 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx11) + 1));
        if (__intrinsic()) 
            break;
        *reinterpret_cast<signed char*>(&ebx2) = -25;
        less12 = *reinterpret_cast<signed char*>(&eax10) < 75;
        *reinterpret_cast<signed char*>(&eax10) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax10) - 75);
        if (less12) 
            goto addr_0x405578_5;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ebx2) - 45) = static_cast<uint32_t>(ss13);
        if (__intrinsic()) 
            break;
        eax5->f0 = *reinterpret_cast<signed char*>(esi14);
        esi14 = reinterpret_cast<struct s280*>(reinterpret_cast<int32_t>(esi14) + 1);
        __asm__("aam 0xe7");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi14) + 0x1466a79b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi14) + 0x1466a79b) >> *reinterpret_cast<signed char*>(&ecx11));
        __asm__("aad 0x85");
        __asm__("fidiv dword [ebx+0x2e]");
        ecx15 = *esp9;
        edi6 = reinterpret_cast<int32_t>(&eax5->pad131163607) - 1;
        __asm__("stc ");
        esp1 = esp9 + 1 - 1;
        *esp1 = ecx15;
        __asm__("aas ");
        __asm__("clc ");
        __asm__("fisttp dword [ebp+0x7f]");
        if (!__intrinsic()) 
            goto addr_0x405604_11;
        __asm__("fcomp5 st1");
        ecx11 = eax10;
        eax5 = ecx15;
    } while (edi6 < 0);
    goto addr_0x4055dd_13;
    __asm__("out 0x19, eax");
    addr_0x405578_5:
    __asm__("iretd ");
    eax5->f131163607 = reinterpret_cast<signed char>(eax5->f131163607 - 1);
    __asm__("out dx, al");
    __asm__("in al, dx");
    addr_0x405604_11:
    if (!__intrinsic()) {
        cf16 = reinterpret_cast<uint1_t>(g60ed0a80 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) + __intrinsic()));
        g60ed0a80 = reinterpret_cast<unsigned char>(g60ed0a80 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) + cf16));
    }
    __asm__("in eax, 0xa6");
    __asm__("arpl [edi], cx");
    goto *esp1;
    addr_0x4055dd_13:
    __asm__("lds esi, [eax+0x10ce527]");
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) + 4) + __intrinsic());
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax5) - 0x368f07db) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax5) - 0x368f07db) + reinterpret_cast<int32_t>(esp1) + __intrinsic();
    g80defd75 = eax5;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx11) + 1) = 0x75;
    __asm__("outsd ");
    __asm__("cdq ");
    *reinterpret_cast<int32_t*>(esp1 - 1) = ecx11;
    __asm__("aaa ");
}

struct s281 {
    signed char[77] pad77;
    signed char f77;
};

struct s282 {
    signed char[47] pad47;
    signed char f47;
};

void fun_40558b() {
    unsigned char* edi1;
    unsigned char* edi2;
    unsigned char dh3;
    uint1_t below_or_equal4;
    signed char* edi5;
    struct s281* ebp6;
    signed char bh7;
    struct s282* eax8;
    signed char al9;

    *edi1 = reinterpret_cast<unsigned char>(*edi2 & dh3);
    below_or_equal4 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(*edi5 == 0)));
    ebp6->f77 = bh7;
    if (!below_or_equal4) 
        goto 0x40556d;
    __asm__("daa ");
    __asm__("fst dword [ebx+0x5c60adc5]");
    eax8->f47 = al9;
}

void fun_4055a4() {
}

void fun_4055b3() {
    int32_t eax1;
    int32_t eax2;

    *reinterpret_cast<uint32_t*>(eax1 + 0x34b8f438) = *reinterpret_cast<uint32_t*>(eax2 + 0x34b8f438) >> -22;
}

void fun_405601() {
    __asm__("out dx, eax");
}

struct s283 {
    int32_t f0;
    void* f4;
};

void* fun_c852aa76();

struct s284 {
    signed char[50] pad50;
    unsigned char f50;
};

struct s285 {
    signed char[50] pad50;
    signed char f50;
};

struct s286 {
    signed char[50] pad50;
    unsigned char f50;
};

struct s287 {
    signed char f0;
    signed char f1;
};

struct s288 {
    signed char[1] pad1;
    signed char f1;
};

struct s289 {
    signed char[7] pad7;
    unsigned char f7;
};

unsigned char g419e9353;

int32_t g85ef41f0;

int32_t g618387e0;

void fun_405632(int32_t ecx) {
    uint32_t eflags2;
    int32_t edx3;
    struct s283* esp4;
    void* eax5;
    void** esp6;
    struct s284* edi7;
    struct s285* edi8;
    signed char bh9;
    struct s286* edi10;
    signed char bh11;
    uint1_t cf12;
    struct s287* esi13;
    void* esi14;
    int1_t zf15;
    signed char* edi16;
    signed char* edi17;
    signed char* edi18;
    struct s288* edi19;
    signed char* esi20;
    uint32_t ecx21;
    int32_t* esp22;
    int16_t* esp23;
    int16_t ds24;
    int32_t edx25;
    struct s289* eax26;
    int32_t* esp27;
    int32_t ebp28;
    void** esp29;
    void** esp30;
    signed char dh31;
    signed char** esp32;
    int16_t* esp33;
    int16_t es34;
    int32_t* esp35;
    int32_t* esp36;
    void** esp37;
    void* edi38;
    int32_t eax39;
    unsigned char tmp8_40;
    uint32_t eax41;
    uint32_t eax42;
    uint32_t ecx43;
    uint32_t eax44;
    int16_t ss45;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    *reinterpret_cast<unsigned char*>(&edx3) = 0xe8;
    __asm__("int1 ");
    esp4 = reinterpret_cast<struct s283*>((eflags2 & 0xfcffff) + 4 - 4);
    esp4->f0 = 0x40563e;
    eax5 = fun_c852aa76();
    esp6 = &esp4->f4;
    edi7->f50 = reinterpret_cast<unsigned char>(edi8->f50 - reinterpret_cast<unsigned char>(bh9 + reinterpret_cast<uint1_t>(edi10->f50 < reinterpret_cast<unsigned char>(bh11 + cf12))));
    esi13 = reinterpret_cast<struct s287*>(reinterpret_cast<int32_t>(esi14) - 1);
    __asm__("xlatb ");
    __asm__("int 0x8");
    zf15 = esi13->f0 == *edi16;
    *edi17 = esi13->f0;
    edi18 = &edi19->f1;
    esi20 = &esi13->f1;
    ecx21 = reinterpret_cast<uint32_t>(ecx - 1);
    if (!(reinterpret_cast<uint1_t>(!!ecx21) & reinterpret_cast<uint1_t>(!zf15))) {
        esp22 = reinterpret_cast<int32_t*>(esp6 - 1);
        *esp22 = 0x9b;
        esp23 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp22) - 2);
        *esp23 = ds24;
        *reinterpret_cast<unsigned char*>(&edx25) = 0x74;
        if (ecx21) {
            eax26 = reinterpret_cast<struct s289*>(reinterpret_cast<int32_t>(eax5) - 1);
            __asm__("retf 0xad4");
            __asm__("fdivr qword [edx]");
            __asm__("outsd ");
            eax26->f7 = reinterpret_cast<unsigned char>(eax26->f7 & 0xc1);
            __asm__("in eax, dx");
        } else {
            esp27 = reinterpret_cast<int32_t*>(esp23 - 2);
            *esp27 = ebp28;
            if (!__intrinsic()) {
                esp29 = reinterpret_cast<void**>(esp27 - 1);
                *esp29 = eax5;
                *reinterpret_cast<signed char**>(esi20 - 0x10edd9a) = edi18;
                esp30 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp29) - 1 - 1 - 4);
                *reinterpret_cast<void***>(esp30) = esp30;
                __asm__("sahf ");
                __asm__("int1 ");
                __asm__("outsd ");
                *esi20 = dh31;
                esp32 = reinterpret_cast<signed char**>(reinterpret_cast<uint32_t>(esp30) - 1 - 4);
                *esp32 = esi20;
                __asm__("aas ");
                __asm__("xlatb ");
                *reinterpret_cast<unsigned char*>(edi18 - 0x7607ea1d) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi18 - 0x7607ea1d) & 0x74);
                esp33 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp32) - 2);
                *esp33 = es34;
                esp35 = reinterpret_cast<int32_t*>(esp33 - 2);
                *esp35 = reinterpret_cast<int32_t>(eax5) + 1;
                __asm__("out dx, eax");
                esp36 = esp35 - 1;
                *esp36 = edx25;
                esp37 = reinterpret_cast<void**>(esp36 - 1);
                *reinterpret_cast<void***>(esp37) = esp37;
                *reinterpret_cast<uint32_t*>(esp37 - 1) = ecx21 - 1;
                __asm__("out dx, al");
            }
        }
    }
    if (__intrinsic()) {
        g419e9353 = 0xff;
        __asm__("hlt ");
    }
    *edi18 = *esi20;
    edi38 = reinterpret_cast<void*>(edi18 + 4);
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(*esp6) + 4 - 4) = eax5;
    eax39 = g85ef41f0;
    tmp8_40 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi38) - 99);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi38) - 99) = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx21) + 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx21) + 1) = tmp8_40;
    eax41 = reinterpret_cast<uint32_t>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax39)));
    eax42 = eax41 - 0x32bd2a9f;
    *reinterpret_cast<unsigned char*>(&eax42) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax42) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx3 - 0x74) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax42) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx3 - 0x74) + reinterpret_cast<uint1_t>(eax41 < 0x32bd2a9f)))));
    ecx43 = eax42;
    __asm__("outsb ");
    eax44 = ecx21 | 0x5a279ae7;
    do {
        __asm__("salc ");
        __asm__("enter 0x88b3, 0xb5");
        if (ecx43) 
            break;
    } while (ecx43);
    goto addr_0x40572f_28;
    __asm__("int1 ");
    *reinterpret_cast<signed char*>(&eax44) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax44) + 72);
    __asm__("in eax, 0xb4");
    if (*reinterpret_cast<signed char*>(&eax44) >= 0) {
        __asm__("clc ");
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g618387e0) + 2) = ss45;
        __asm__("xlatb ");
        __asm__("cmc ");
        __asm__("int1 ");
    }
    __asm__("rol dword [edx+0x5e368708], cl");
    __asm__("lodsd ");
    addr_0x40572f_28:
}

void fun_405689() {
    int1_t below_or_equal1;

    __asm__("cli ");
    __asm__("out dx, eax");
    if (!below_or_equal1) 
        goto 0x405700; else 
        goto "???";
}

int32_t g46ad551f;

void fun_81bea604();

void fun_4056dd(int32_t a1, int32_t a2) {
    __asm__("int1 ");
    __asm__("repne arpl [esi], ax");
    g46ad551f = 0x4056fc;
    fun_81bea604();
}

void fun_405733(int32_t ecx) {
    uint48_t v2;
    int16_t es3;
    int32_t eax4;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int16_t*>(&v2) = es3;
    if (eax4) {
        goto *reinterpret_cast<int16_t*>(&v2);
    } else {
        __asm__("enter 0x49da, 0x13");
        __asm__("lahf ");
        __asm__("salc ");
    }
}

void fun_405868() {
}

void fun_40586e(int32_t ecx) {
}

struct s290 {
    signed char[23] pad23;
    unsigned char f23;
};

struct s291 {
    signed char[23] pad23;
    signed char f23;
};

struct s292 {
    signed char[13] pad13;
    unsigned char f13;
};

signed char g9de44ca1;

struct s293 {
    signed char[67] pad67;
    unsigned char f67;
};

struct s294 {
    signed char[67] pad67;
    unsigned char f67;
};

signed char g5645027c;

struct s295 {
    signed char[120] pad120;
    unsigned char f120;
};

struct s296 {
    signed char[120] pad120;
    unsigned char f120;
};

void fun_40587c(unsigned char cl) {
    uint40_t v2;
    struct s290* ebp3;
    struct s291* ebp4;
    uint1_t cf5;
    struct s292** esp6;
    signed char al7;
    int32_t edi8;
    struct s293* ebp9;
    struct s294* ebp10;
    uint1_t cf11;
    unsigned char al12;
    int32_t* eax13;
    signed char al14;
    int32_t tmp32_15;
    int32_t ebx16;
    int32_t ebx17;
    uint16_t fs18;
    struct s295* esi19;
    unsigned char bh20;
    struct s296* esi21;
    unsigned char bh22;
    int32_t eax23;
    int32_t ebx24;
    int32_t eax25;
    int32_t ebx26;
    int32_t edx27;

    *reinterpret_cast<int32_t*>(&v2) = reinterpret_cast<int32_t>(__return_address());
    ebp3->f23 = reinterpret_cast<unsigned char>(ebp4->f23 + cl);
    cf5 = __intrinsic();
    if (__intrinsic()) {
        esp6 = reinterpret_cast<struct s292**>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 1);
        __asm__("aas ");
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esp6) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(esp6 == 0))) {
            __asm__("fst qword [ebp+ebp*4+0x3ab2875]");
            __asm__("fild dword [edx]");
            __asm__("cli ");
        } else {
            g9de44ca1 = al7;
            __asm__("cdq ");
            __asm__("sahf ");
            if (edi8 - 1) {
                ebp9->f67 = reinterpret_cast<unsigned char>(ebp10->f67 >> 1);
                __asm__("daa ");
                __asm__("out dx, eax");
                if (__intrinsic()) {
                    __asm__("fisttp dword [eax+0x36]");
                    cf11 = reinterpret_cast<uint1_t>(al12 < reinterpret_cast<unsigned char>(96 + reinterpret_cast<uint1_t>(cl < (*reinterpret_cast<struct s292**>(reinterpret_cast<int32_t>(&v2) + 1))->f13)));
                    *reinterpret_cast<unsigned char*>(&eax13) = reinterpret_cast<unsigned char>(al14 - reinterpret_cast<unsigned char>(96 + cf11));
                    tmp32_15 = *eax13;
                    *eax13 = ebx16;
                    ebx17 = tmp32_15;
                    *reinterpret_cast<uint32_t*>(ebx17 - 65) = static_cast<uint32_t>(fs18);
                    if (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax13)) >= reinterpret_cast<signed char>(static_cast<uint32_t>(cf11))) {
                        __asm__("out dx, al");
                        __asm__("clc ");
                        g5645027c = reinterpret_cast<signed char>(g5645027c + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx17) + 1));
                        __asm__("les ecx, [edx+esi*2]");
                    }
                }
            } else {
                cf5 = reinterpret_cast<uint1_t>(esi19->f120 < bh20);
                if (esi21->f120 > bh22) {
                }
            }
        }
    }
    __asm__("repne stc ");
    __asm__("out 0xc9, eax");
    *reinterpret_cast<uint32_t*>(eax23 + ebx24 * 4 - 0x688311e) = *reinterpret_cast<int32_t*>(eax25 + ebx26 * 4 - 0x688311e) + edx27 + cf5;
    __asm__("les esp, [0x877d644e]");
}

void fun_40589e(int32_t ecx) {
    __asm__("sti ");
}

void fun_4058b6(signed char cl) {
    __asm__("ficomp dword [edx+edi*2+0x5a1f01d5]");
    __asm__("fmul qword [eax]");
    __asm__("lahf ");
    __asm__("pushad ");
}

void fun_4058e5() {
}

signed char g48cbf6ee;

void fun_4058ee() {
    signed char al1;

    __asm__("fild qword [esi+0x44]");
    g48cbf6ee = al1;
    __asm__("lodsd ");
}

struct s297 {
    signed char[120] pad120;
    int32_t f120;
};

void fun_4058fe() {
    struct s297* ebx1;

    __asm__("sti ");
    __asm__("rol dword [ecx+0x7c], 1");
    __asm__("clc ");
    goto ebx1->f120;
}

signed char gb9e8d0a7;

struct s298 {
    signed char[20] pad20;
    int32_t f20;
};

void fun_7a57ae4();

int32_t gbe3d7801;

struct s299 {
    signed char[1] pad1;
    signed char f1;
};

void fun_40591c(int32_t ecx) {
    int32_t eax2;
    int32_t edi3;
    unsigned char* ebx4;
    signed char* ebx5;
    signed char dh6;
    uint1_t cf7;
    signed char* ebx8;
    signed char* ebx9;
    int32_t ebx10;
    struct s298* ebp11;
    int32_t edx12;
    int32_t edx13;
    struct s299* eax14;

    eax2 = edi3;
    gb9e8d0a7 = *reinterpret_cast<signed char*>(&eax2);
    __asm__("clc ");
    __asm__("out 0x39, eax");
    *ebx4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*ebx5 + dh6) + cf7);
    if (reinterpret_cast<uint1_t>(*ebx8 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(*ebx9 == 0)) {
        __asm__("out dx, al");
        *reinterpret_cast<signed char*>(&ebx10) = -28;
        __asm__("aam 0x36");
        ebp11->f20 = ebx10;
        __asm__("fcom dword [eax+0x73]");
        __asm__("iretd ");
    } else {
        __asm__("into ");
        __asm__("cmc ");
        edx12 = edx13 + 1;
        fun_7a57ae4();
        __asm__("cdq ");
        gbe3d7801 = ecx;
        *reinterpret_cast<uint32_t*>(edx12 - 9) = *reinterpret_cast<uint32_t*>(edx12 - 9) >> 1;
        __asm__("fimul dword [ecx+0xcfa31f02]");
        eax14->f1 = *reinterpret_cast<signed char*>(__return_address());
    }
}

void fun_40596d() {
    int32_t ebx1;
    int32_t ebx2;
    signed char ch3;
    int32_t ebx4;
    unsigned char ch5;

    *reinterpret_cast<unsigned char*>(ebx1 - 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx2 - 4) - reinterpret_cast<unsigned char>(ch3 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx4 - 4) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(ch5)))));
}

signed char gea55852c;

void fun_4059b6(signed char cl) {
    int32_t eax2;
    int32_t eax3;

    eax2 = eax3 - 0x15b5023f;
    gea55852c = *reinterpret_cast<signed char*>(&eax2);
    __asm__("hlt ");
}

void fun_4059fa() {
    __asm__("out dx, eax");
    __asm__("wait ");
    __asm__("aaa ");
}

int32_t fun_4ae36ac8();

void fun_405a01(int32_t a1) {
    int32_t ebp2;
    int32_t ebp3;

    __asm__("sti ");
    fun_4ae36ac8();
    *reinterpret_cast<uint32_t*>(ebp2 + 0xd88f46f) = *reinterpret_cast<uint32_t*>(ebp3 + 0xd88f46f) & reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4);
    __asm__("daa ");
    if (1) {
        __asm__("xlatb ");
    }
}

void fun_405a26(int32_t ecx) {
    uint32_t ebx2;
    int32_t v3;
    int32_t ebp4;

    __asm__("rol dword [ebp-0x2f], 0x2b");
    *reinterpret_cast<uint32_t*>(__return_address()) = *reinterpret_cast<uint32_t*>(__return_address()) ^ ebx2;
    v3 = *reinterpret_cast<int32_t*>(ebp4 - 66);
    __asm__("cmc ");
    __asm__("ror dh, cl");
    goto v3;
}

void fun_405a53() {
    __asm__("enter 0x9db7, 0xea");
    __asm__("sti ");
}

void fun_405a5b(int32_t ecx) {
    int1_t pf2;
    signed char* edi3;
    signed char al4;

    if (pf2) 
        goto 0x405a59;
    *edi3 = al4;
}

void fun_405a67() {
    int1_t less1;
    int1_t cf2;

    if (!less1) 
        goto 0x405a30;
    if (cf2) {
        __asm__("fstp1 st2");
        __asm__("cdq ");
        __asm__("aad 0xff");
        __asm__("stc ");
        __asm__("daa ");
        __asm__("fdivr dword [ecx+eax*2+0xff62edc9]");
    }
}

struct s300 {
    signed char[108] pad108;
    signed char f108;
};

struct s301 {
    signed char[108] pad108;
    signed char f108;
};

struct s302 {
    signed char[1] pad1;
    uint32_t f1;
};

struct s303 {
    signed char[1] pad1;
    int32_t f1;
    signed char[83] pad88;
    signed char f88;
};

struct s304 {
    struct s303* f0;
    signed char[2] pad4;
    uint32_t f4;
};

struct s305 {
    uint32_t f0;
    struct s303* f4;
};

void fun_405a84() {
    uint32_t eflags1;
    struct s300* edx2;
    struct s301* edx3;
    signed char al4;
    signed char* edi5;
    void* edi6;
    int32_t ebx7;
    uint32_t* edx8;
    struct s302* edx9;
    struct s303* ebx10;
    struct s303* eax11;
    uint32_t eax12;
    uint32_t ebx13;
    struct s304* esp14;
    int32_t ebp15;
    signed char** esp16;
    signed char** esp17;
    struct s303* esi18;
    int32_t ecx19;
    uint16_t gs20;
    struct s305* esp21;
    struct s303* ds22;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
    edx2->f108 = reinterpret_cast<signed char>(edx3->f108 + al4);
    __asm__("aas ");
    edi5 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi6) - *reinterpret_cast<int32_t*>(ebx7 - 39));
    edx8 = &edx9->f1;
    ebx10 = eax11;
    eax12 = ebx13;
    if (!__intrinsic()) {
        esp14 = reinterpret_cast<struct s304*>(ebp15 + 0x47ecbeec);
        goto addr_0x405ae8_3;
    }
    addr_0x405b4d_5:
    *reinterpret_cast<struct s303**>(esp16 - 1) = ebx10;
    addr_0x405b13_6:
    __asm__("out dx, al");
    __asm__("aas ");
    __asm__("lfs edx, [eax]");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(ebx10) - 0x2e092bde) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(ebx10) - 0x2e092bde))))));
    __asm__("outsd ");
    __asm__("sti ");
    __asm__("outsb ");
    __asm__("into ");
    *edi5 = *reinterpret_cast<signed char*>(&eax12);
    *reinterpret_cast<unsigned char*>(eax12 + 0xffffffba) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax12 + 0xffffffba) >> 1);
    __asm__("retf ");
    if (!__intrinsic()) {
    }
    addr_0x405aba_13:
    esp17 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp14) - 4);
    *esp17 = edi5;
    *reinterpret_cast<struct s303**>(esp17 - 1) = reinterpret_cast<struct s303*>(0x405ac5);
    esi18->f1();
    while (1) {
        addr_0x405b04_14:
        __asm__("xlatb ");
        while (esp16 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp14) - 4), *esp16 = edi5, !*reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1)) {
            *reinterpret_cast<signed char*>(&eax12) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax12) - 93);
            *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags1) = *reinterpret_cast<signed char*>(&eax12) == 0;
            *reinterpret_cast<int1_t*>(&eflags1) = *reinterpret_cast<signed char*>(&eax12) < 0;
            *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
            esp14 = reinterpret_cast<struct s304*>(esp16 - 1);
            esp14->f0 = reinterpret_cast<struct s303*>(eflags1 & 0xfcffff);
            while (1) {
                if (*reinterpret_cast<int1_t*>(&eflags1)) 
                    break;
                ++eax12;
                --ecx19;
                if (!ecx19) 
                    goto addr_0x405b11_19;
                addr_0x405ae8_3:
                ++edi5;
                *reinterpret_cast<unsigned char*>(&edx8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx8) ^ 14);
                if (!*reinterpret_cast<unsigned char*>(&edx8)) 
                    goto addr_0x405af4_20;
                esp14 = reinterpret_cast<struct s304*>(reinterpret_cast<int32_t>(esp14) - 1);
                *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = __intrinsic();
                *edx8 = static_cast<uint32_t>(gs20);
                __asm__("fmul dword [ecx+eax*2+0x7e5e2240]");
                if (reinterpret_cast<int32_t>(esp14) < 0) 
                    goto addr_0x405b04_14;
                edx8 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx8) - 1);
                esi18 = esp14->f0;
                esp21 = reinterpret_cast<struct s305*>(&esp14->f4);
                eflags1 = esp21->f0;
                esp14 = reinterpret_cast<struct s304*>(&esp21->f4);
                __asm__("cli ");
                if (*reinterpret_cast<int1_t*>(&eflags1)) 
                    goto addr_0x405aba_13;
            }
        }
        goto addr_0x405b4d_5;
        addr_0x405b11_19:
        if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax12) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(eax12 == 0))) 
            goto addr_0x405b13_6;
        addr_0x405b02_23:
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1) + 32);
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = __intrinsic();
        continue;
        addr_0x405af4_20:
        esp14 = reinterpret_cast<struct s304*>(reinterpret_cast<int32_t>(esp14) - 2);
        esp14->f0 = ds22;
        eax12 = eax12 + 0x3cb388be + 0xa92ba3bb + __intrinsic();
        *reinterpret_cast<unsigned char*>(&edx8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx8) - esi18->f88);
        goto addr_0x405b02_23;
    }
}

void fun_405a9e() {
    signed char* eax1;
    signed char* eax2;
    signed char dl3;

    __asm__("aad 0xf9");
    *eax1 = reinterpret_cast<signed char>(*eax2 - dl3);
}

void fun_405ac6() {
    __asm__("fild dword [eax+0x378857d5]");
}

void fun_405ad7() {
}

struct s306 {
    signed char[2] pad2;
    unsigned char f2;
    signed char[224894651] pad224894654;
    int32_t f224894654;
};

struct s307 {
    signed char[43] pad43;
    uint32_t f43;
};

struct s308 {
    signed char[43] pad43;
    uint32_t f43;
};

uint32_t g288e3029;

void fun_cc56cc18(int32_t ecx, int32_t a2);

void fun_405b31(uint32_t ecx) {
    int32_t* edi2;
    int32_t* esi3;
    struct s306* edi4;
    void* edi5;
    int32_t eax6;
    unsigned char al7;
    struct s307* ebx8;
    struct s308* ebx9;
    uint32_t ebp10;
    unsigned char dh11;

    *edi2 = *esi3;
    edi4 = reinterpret_cast<struct s306*>(reinterpret_cast<int32_t>(edi5) + 4);
    edi4->f224894654 = edi4->f224894654 >> 0xffffff82;
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(al7 ^ 0xb8);
    __asm__("aaa ");
    __asm__("wait ");
    ebx8->f43 = ebx9->f43 | ebp10;
    if (dh11 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(edi4->f2))) {
        __asm__("retf ");
        __asm__("lodsb ");
        g288e3029 = g288e3029 ^ ecx;
        __asm__("fdiv st0, st0");
        __asm__("fstp1 st7");
        fun_cc56cc18(eax6, __return_address());
    }
}

unsigned char* gf517fa0e;

void fun_405b53(unsigned char* ecx, int32_t a2) {
    unsigned char dh3;
    uint1_t cf4;
    int1_t below_or_equal5;
    int32_t edi6;
    int32_t edi7;

    *ecx = reinterpret_cast<unsigned char>(*ecx ^ dh3);
    cf4 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(gf517fa0e) < reinterpret_cast<uint32_t>(ecx));
    below_or_equal5 = reinterpret_cast<uint32_t>(gf517fa0e) <= reinterpret_cast<uint32_t>(ecx) + cf4;
    gf517fa0e = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(gf517fa0e) - (reinterpret_cast<uint32_t>(ecx) + cf4));
    __asm__("enter 0x8f3, 0x73");
    if (!below_or_equal5) 
        goto 0x405bc1;
    *reinterpret_cast<signed char*>(edi6 - 3) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi7 - 3) >> *reinterpret_cast<signed char*>(&ecx));
    __asm__("int 0xd0");
}

void fun_405b83() {
    __asm__("clc ");
    __asm__("in eax, 0xaa");
}

int32_t g690fd10f;

int32_t g696;

void fun_405b8c() {
    int32_t edx1;
    int1_t zf2;
    int1_t zf3;
    int32_t eax4;

    g690fd10f = edx1;
    __asm__("int 0x4e");
    if (!zf2) 
        goto 0x405b21;
    if (zf3) {
        g696 = eax4;
    }
}

void fun_405ba0(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    signed char* edi4;
    signed char al5;

    __asm__("into ");
    *reinterpret_cast<unsigned char*>(eax2 - 45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax3 - 45) & *reinterpret_cast<unsigned char*>(&ecx));
    __asm__("xlatb ");
    __asm__("outsd ");
    __asm__("iretd ");
    *edi4 = al5;
    __asm__("wait ");
    __asm__("outsb ");
    __asm__("into ");
}

struct s309 {
    signed char[32] pad32;
    unsigned char f32;
};

void fun_405bd8(uint32_t ecx) {
    int32_t ebp2;
    uint32_t eax3;
    uint32_t* ebx4;
    signed char bl5;
    signed char* ebx6;
    uint1_t cf7;
    int32_t edi8;
    int32_t edi9;
    struct s309* esi10;
    void* esi11;
    uint32_t edx12;
    int32_t edx13;
    uint1_t zf14;

    __asm__("cmc ");
    ebp2 = reinterpret_cast<int32_t>(__return_address());
    eax3 = ecx;
    *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(bl5 + *ebx6) + cf7);
    __asm__("retf 0xe455");
    do {
        --ecx;
    } while (ecx);
    edi8 = edi9 - 4;
    esi10 = reinterpret_cast<struct s309*>(reinterpret_cast<int32_t>(esi11) - 4);
    __asm__("fidiv word [edx+ebx*2+0x2]");
    edx12 = reinterpret_cast<uint32_t>(edx13 + 1);
    __asm__("fmul dword [eax+0x7e]");
    do {
        edx12 = edx12 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx4) + ebp2 * 2);
        esi10->f32 = reinterpret_cast<unsigned char>(esi10->f32 - *reinterpret_cast<unsigned char*>(&ebx4));
        __asm__("pushad ");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx4) - 61) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx4) - 61) | edx12;
        zf14 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx4) - 61) == 0);
        if (1) 
            goto 0x405bc1;
        __asm__("fsubr dword [eax+0x429792b7]");
    } while (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf14)));
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | zf14)) {
        __asm__("aam 0x36");
        *reinterpret_cast<uint32_t*>(edi8 + 0x118a87f5) = *reinterpret_cast<uint32_t*>(edi8 + 0x118a87f5) + edi8 + reinterpret_cast<uint1_t>(eax3 < 0x4285d89e);
    }
}

void fun_405c25(int32_t* ecx) {
    int32_t ebx2;
    int32_t ebx3;
    uint32_t edx4;

    __asm__("fdivr dword [esi-0xe]");
    *reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - *ecx - 4) = ecx;
    *reinterpret_cast<uint32_t*>(ebx2 - 0x5e4c2560) = *reinterpret_cast<uint32_t*>(ebx3 - 0x5e4c2560) ^ edx4;
    __asm__("aas ");
    __asm__("hlt ");
}

void fun_405c63() {
}

void fun_405c68() {
    int32_t eax1;
    signed char bl2;

    *reinterpret_cast<signed char*>(eax1 - 0x1fcaeadb) = bl2;
    goto 0x405c02;
}

void fun_405c73() {
    __asm__("enter 0x865d, 0x39");
    __asm__("hlt ");
}

void fun_405cd0(int32_t ecx) {
}

uint32_t g28defceb;

void fun_405cd6() {
    int32_t eax1;
    int32_t ebp2;
    unsigned char al3;
    uint1_t cf4;
    unsigned char ch5;
    int32_t edi6;

    __asm__("sahf ");
    eax1 = ebp2;
    __asm__("das ");
    al3 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) ^ 0x7b);
    cf4 = reinterpret_cast<uint1_t>(al3 < reinterpret_cast<unsigned char>(95 + reinterpret_cast<uint1_t>(ch5 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(edi6 - 91))))));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al3 - reinterpret_cast<unsigned char>(95 + cf4));
    g28defceb = eax1 - 0x2984bf34 + cf4;
    __asm__("fadd dword [esi-0x64]");
}

void fun_405cf6(int32_t a1) {
    int1_t of2;
    int32_t esi3;
    int32_t esi4;
    uint1_t cf5;
    int32_t ebx6;
    unsigned char* edi7;
    unsigned char al8;
    int32_t ebx9;
    int32_t ebx10;

    if (!of2) {
        __asm__("aaa ");
    } else {
        __asm__("enter 0x4a93, 0x4b");
        __asm__("outsb ");
        __asm__("enter 0x1f5b, 0x78");
        __asm__("fucomi st0, st0");
        esi3 = esi4 + 1;
        __asm__("arpl [edx-0x1a], cx");
        __asm__("ror dword [edi+0x66], 0xa5");
        cf5 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(0xe0745b6 - esi3 * 8) < ebx6 + reinterpret_cast<uint1_t>(*edi7 < al8));
        *reinterpret_cast<uint32_t*>(0xe0745b6 - esi3 * 8) = *reinterpret_cast<uint32_t*>(0xe0745b6 - esi3 * 8) - (ebx9 + cf5);
        __asm__("into ");
        if (__intrinsic()) 
            goto 0x405cec;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__return_address()) - 0x6a) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__return_address()) - 0x6a) + ebx10 + cf5;
        __asm__("lds ecx, [ebp+0x6]");
    }
}

void fun_405d04() {
    int32_t* ebx1;

    __asm__("outsb ");
    __asm__("aas ");
    if (reinterpret_cast<uint1_t>(!!(*ebx1 * 0x7b - 1)) & reinterpret_cast<uint1_t>(!__undefined())) 
        goto 0x405d2a;
}

void fun_405d3d(signed char cl) {
    int1_t zf2;

    if (!zf2) {
        __asm__("out 0x6b, eax");
        if (__undefined() != __intrinsic()) 
            goto 0x405d24;
        __asm__("lds edx, [eax]");
        if (!__intrinsic()) 
            goto 0x405cde;
        if (__undefined()) 
            goto 0x405d21;
    }
}

void fun_405d5a() {
}

void fun_405d64(int32_t ecx) {
}

void fun_405d86() {
    unsigned char al1;

    __asm__("out dx, al");
    __asm__("in al, dx");
    if (al1 < 19) 
        goto 0x405d36;
    __asm__("in al, 0x28");
}

void fun_405de1(int32_t ecx) {
    if (ecx - 1) {
        __asm__("outsd ");
    }
}

void fun_405dec(uint32_t ecx) {
    void* eax2;
    void* eax3;
    int32_t edi4;
    int32_t edi5;

    eax2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax3) - 0x4f5e8c24);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax2) + edi4 * 2 + 80) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax2) + edi5 * 2 + 80) & ecx;
    __asm__("in eax, 0x2a");
}

void fun_405df9() {
    __asm__("aam 0x32");
    __asm__("lahf ");
}

void fun_405e16() {
    __asm__("aaa ");
}

struct s310 {
    signed char[26] pad26;
    uint32_t f26;
    signed char[1523111499] pad1523111529;
    unsigned char f1523111529;
};

void* g236bb463;

int16_t g236bb461;

signed char* g236bb45d;

unsigned char g8f4fdc4;

void fun_405e1b(signed char* ecx) {
    struct s310* ebx2;
    signed char* eax3;
    int32_t edi4;
    void* eax5;
    int1_t zf6;
    signed char* edi7;
    void* edi8;
    int32_t eax9;
    int32_t edi10;
    signed char** esp11;
    uint1_t cf12;
    unsigned char bl13;
    signed char bl14;
    int1_t pf15;
    unsigned char bl16;
    void* esi17;
    void* esi18;
    int16_t ds19;
    int32_t edx20;
    int32_t edx21;
    int32_t edx22;
    int32_t edx23;
    uint1_t cf24;
    uint32_t edx25;
    void* edx26;
    uint32_t edx27;
    int32_t edx28;
    void* edx29;
    uint1_t cf30;
    uint32_t ebx31;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx2) + 1) = eax3[edi4 * 2];
    __asm__("pushad ");
    *reinterpret_cast<signed char*>(&eax5) = 0x85;
    if (zf6) {
        *edi7 = 0x85;
        __asm__("insb ");
        edi8 = eax5;
        eax9 = edi10;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx2) + 0x5ac8d669) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx2) + 0x5ac8d669) & 75);
        __asm__("shrd edi, esi, 0x6");
        esp11 = reinterpret_cast<signed char**>(0x236bb467);
        cf12 = reinterpret_cast<uint1_t>(bl13 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi8) - 0x1b4663ba))));
        *reinterpret_cast<unsigned char*>(&ebx2) = reinterpret_cast<unsigned char>(bl14 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi8) - 0x1b4663ba) + cf12));
        pf15 = __intrinsic();
        if (bl16 <= reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi8) - 0x1b4663ba) + cf12)) {
            __asm__("int1 ");
            __asm__("lahf ");
            --ecx;
            if (!(reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>(!!(*reinterpret_cast<unsigned char*>(&eax9) & 70)))) {
                edi8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi8) + 1);
                esi17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi18) + 1);
                __asm__("out 0x3c, eax");
                g236bb463 = esi17;
                g236bb461 = ds19;
                esp11 = reinterpret_cast<signed char**>(0x236bb45d);
                g236bb45d = ecx;
                __asm__("daa ");
                __asm__("das ");
            }
            *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp11) + edx20 * 2 + 38) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp11) + edx21 * 2 + 38) & reinterpret_cast<uint32_t>(ebx2);
            *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx2) - 50) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx2) - 50) + eax9;
            cf12 = __intrinsic();
            pf15 = __intrinsic();
        }
        __asm__("retf 0xd48");
        if (pf15) 
            goto 0x405dfc;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ebx2) + 26) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ebx2) + 26) - (edx22 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ebx2) + 26) < edx23 + cf12));
        __asm__("sti ");
        __asm__("das ");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi8) - 0x3ec55803) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi8) - 0x3ec55803) ^ 0x7327e378;
        eax5 = reinterpret_cast<void*>(0x3883eb4b);
        --ecx;
        if (ecx) 
            goto 0x405dfb;
        __asm__("aam 0xfd");
        cf24 = reinterpret_cast<uint1_t>(edx25 < *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi17) + reinterpret_cast<int32_t>(edx26) - 0x7c));
        edx27 = edx28 - (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi17) + reinterpret_cast<int32_t>(edx29) - 0x7c) + cf24);
        __asm__("rcl byte [ebx], 0x18");
        *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) + *(ecx - 0x1df052d4 - 0x1e584c83)) + cf24);
        *reinterpret_cast<uint32_t*>(*esp11 + 4 - 4) = edx27;
        __asm__("fxch4 st5");
        __asm__("aam 0xc");
        g8f4fdc4 = reinterpret_cast<unsigned char>(g8f4fdc4 | 0x95);
        *reinterpret_cast<uint32_t*>(edx27 - 0x58dc5c22) = *reinterpret_cast<uint32_t*>(edx27 - 0x58dc5c22) + reinterpret_cast<uint32_t>(ebx2);
        cf30 = __intrinsic();
    }
    __asm__("iretd ");
    __asm__("rol bl, 1");
    __asm__("pushad ");
    __asm__("insd ");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(eax5) + 0x7c03b475) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(eax5) + 0x7c03b475) - (0x7c - reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(eax5) + 0x7c03b475) < 0x7c - cf30));
    ebx31 = reinterpret_cast<uint32_t>(ebx2) - 1;
    *ecx = reinterpret_cast<signed char>(*ecx - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx31) + 1));
    __asm__("cdq ");
}

struct s311 {
    int32_t f0;
    signed char[1655429684] pad1655429688;
    int32_t f1655429688;
};

struct s312 {
    signed char[25] pad25;
    signed char f25;
};

void fun_405eb1() {
    struct s311* ecx1;
    struct s312* eax2;

    __asm__("ficom word [ss:eax+0x5b65b081]");
    do {
        __asm__("out 0xd6, al");
        __asm__("cmc ");
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx1) + 0x62abda38) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx1) + 0x62abda38) - 67;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1) = eax2->f25;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1) = 0x6b;
        *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) - reinterpret_cast<unsigned char>(79 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax2) < 0xb1)));
        ecx1 = reinterpret_cast<struct s311*>(reinterpret_cast<int32_t>(ecx1) - 1);
    } while (ecx1);
}

int32_t fun_590087d7();

signed char g8edc674e;

void fun_405f97(int32_t ecx) {
    int32_t ebp2;
    int32_t v3;
    int16_t ds4;
    int32_t eax5;

    __asm__("in eax, dx");
    __asm__("rcr al, 0xf9");
    if (ecx) {
        *reinterpret_cast<int32_t*>(ebp2 + 0x7be07306)(-25);
        __asm__("outsd ");
    } else {
        __asm__("aam 0x75");
        *reinterpret_cast<int16_t*>(&v3) = ds4;
        eax5 = fun_590087d7();
        g8edc674e = *reinterpret_cast<signed char*>(&eax5);
        __asm__("outsb ");
        __asm__("out 0xe0, eax");
        __asm__("fcom dword [ebx+0x3317130]");
        goto v3;
    }
}

struct s313 {
    unsigned char f0;
    signed char[3] pad4;
    signed char f4;
    signed char[802890905] pad802890910;
    signed char f802890910;
};

struct s314 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s315 {
    unsigned char f0;
    signed char[3] pad4;
    signed char f4;
};

struct s316 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s317 {
    unsigned char f0;
    signed char[1207205340] pad1207205341;
    uint32_t f1207205341;
};

struct s318 {
    signed char[47] pad47;
    signed char* f47;
    signed char[1739811751] pad1739811802;
    uint32_t f1739811802;
};

struct s319 {
    struct s318* f0;
    struct s315* f4;
};

signed char g10528003;

struct s320 {
    signed char[16] pad16;
    unsigned char f16;
};

struct s320* g2c0ccf69;

unsigned char g9dfe0b6d;

int32_t g816b135f;

struct s321 {
    signed char[76] pad76;
    unsigned char f76;
};

struct s322 {
    signed char[76] pad76;
    signed char f76;
};

struct s323 {
    signed char[76] pad76;
    unsigned char f76;
};

unsigned char g23455aab;

struct s320* gd407a641;

uint32_t g83c9d536;

void fun_4060c3(int32_t ecx) {
    uint32_t eflags2;
    void* esp3;
    int32_t ecx4;
    int32_t* edi5;
    int32_t* esi6;
    struct s313* edi7;
    struct s314* edi8;
    struct s315* esi9;
    struct s316* esi10;
    struct s315** esp11;
    int32_t edx12;
    unsigned char ah13;
    int32_t eax14;
    signed char ah15;
    int32_t eax16;
    signed char ah17;
    int32_t eax18;
    struct s315** esp19;
    struct s313* edx20;
    struct s317* ebx21;
    struct s315** esp22;
    struct s315* ebp23;
    struct s313** esp24;
    int16_t* esp25;
    int16_t ss26;
    struct s313** esp27;
    void* ebx28;
    struct s318* ebp29;
    struct s319* ebp30;
    signed char dl31;
    signed char dl32;
    int32_t eax33;
    uint32_t edx34;
    uint1_t zf35;
    signed char* edi36;
    struct s320* eax37;
    struct s317* eax38;
    signed char* edx39;
    struct s315** esp40;
    struct s315* es41;
    int32_t eax42;
    struct s321* edx43;
    struct s322* edx44;
    struct s323* edx45;
    struct s315** esp46;
    struct s315* edx47;
    uint1_t cf48;
    signed char dh49;
    signed char dh50;
    struct s320* edi51;
    struct s320* eax52;
    uint1_t cf53;
    int1_t less_or_equal54;
    struct s320* tmp32_55;
    unsigned char al56;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    ecx4 = ecx + 1;
    *edi5 = *esi6;
    edi7 = reinterpret_cast<struct s313*>(&edi8->f4);
    esi9 = reinterpret_cast<struct s315*>(&esi10->f4);
    esp11 = reinterpret_cast<struct s315**>(reinterpret_cast<int32_t>(esp3) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp3) + edx12 * 2 + 41)));
    __asm__("lodsd ");
    if (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(esp11 == 0))) {
        __asm__("aas ");
        *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(ah13 < *reinterpret_cast<unsigned char*>(eax14 - 0x1954b4e2));
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = ah15 == *reinterpret_cast<signed char*>(eax16 - 0x1954b4e2);
        *reinterpret_cast<int1_t*>(&eflags2) = ah17 < *reinterpret_cast<signed char*>(eax18 - 0x1954b4e2);
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        if (*reinterpret_cast<int1_t*>(&eflags2)) {
            addr_0x406010_6:
            esp19 = esp11 - 2;
            *esp19 = reinterpret_cast<struct s315*>(eflags2 & 0xfcffff);
            *reinterpret_cast<signed char*>(&edx20) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx21) + 1);
            *reinterpret_cast<struct s313**>(esp19 - 2) = edx20;
            __asm__("fsub qword [cs:ecx-0xb]");
            __asm__("hlt ");
        } else {
            esp22 = esp11 - 2;
            *esp22 = ebp23;
            edi7->f0 = *reinterpret_cast<unsigned char*>(&esi9->f0);
            edi7 = reinterpret_cast<struct s313*>(&edi7->pad4);
            esp24 = reinterpret_cast<struct s313**>(esp22 - 2);
            *esp24 = edi7;
            __asm__("out 0x68, al");
            esp25 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp24) - 2);
            *esp25 = ss26;
            ebx21 = reinterpret_cast<struct s317*>(0xdb58f4b0);
            esp27 = reinterpret_cast<struct s313**>(esp25 + 1 - 2);
            *esp27 = edi7;
            if (!ecx4) 
                goto addr_0x40607e_11;
        }
    } else {
        ebx21 = reinterpret_cast<struct s317*>(reinterpret_cast<int32_t>(ebx28) - 1);
        if (reinterpret_cast<int32_t>(ebx21) >= 0) {
            addr_0x406102_13:
            __asm__("insb ");
            __asm__("retf 0x7d61");
            goto addr_0x406111_14;
        } else {
            --ecx4;
            if (reinterpret_cast<uint1_t>(!!ecx4) & reinterpret_cast<uint1_t>(ebx21 == 0)) {
                addr_0x40609d_16:
                goto label_17;
            } else {
                *(esp11 - 2) = esi9;
                ebp29 = ebp30->f0;
                esp11 = &ebp30->f4;
                dl31 = reinterpret_cast<signed char>(dl32 + g10528003);
                __asm__("wait ");
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp29) + (eax33 + 0x9ade1c8) * 8 + 66) = *reinterpret_cast<signed char*>(&ecx4);
                --ecx4;
                if (ecx4) {
                    goto *esp11;
                }
                *reinterpret_cast<unsigned char*>(ecx4 - 0x781a7a24) = 0;
                *reinterpret_cast<unsigned char*>(&edx34) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(dl31 + *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi7) + 0x2fdb249e))));
                zf35 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&edx34) == 0);
                edi7->f0 = *reinterpret_cast<unsigned char*>(&esi9->f0);
                edi36 = &edi7->f4;
                eax37 = g2c0ccf69;
                __asm__("out 0x3c, eax");
                eax38 = ebx21;
                __asm__("lodsb ");
                __asm__("retf ");
                if (zf35) 
                    goto addr_0x40611f_25; else 
                    goto addr_0x406100_26;
            }
        }
    }
    g9dfe0b6d = 0xc8;
    esp11 = reinterpret_cast<struct s315**>(reinterpret_cast<uint32_t>(esp27) - 2);
    *esp11 = *reinterpret_cast<struct s315**>(&esp11);
    *edx39 = -80;
    __asm__("lodsd ");
    *reinterpret_cast<uint1_t*>(&eflags2) = 0;
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = 0;
    *reinterpret_cast<int1_t*>(&eflags2) = 1;
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    goto addr_0x406010_6;
    addr_0x40607e_11:
    esi9 = reinterpret_cast<struct s315*>(reinterpret_cast<uint32_t>(&esi9->pad4) & 0xdfb1abc8);
    esp40 = reinterpret_cast<struct s315**>(reinterpret_cast<uint32_t>(esp27) - 2);
    *esp40 = es41;
    *reinterpret_cast<unsigned char*>(&esi9->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&esi9->f0) & 0xdfb1abc8);
    eax42 = g816b135f;
    __asm__("clc ");
    esp11 = esp40 - 2;
    *esp11 = esi9;
    if (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(static_cast<uint32_t>(eax42 + 0x5b148549) == 0))) {
        addr_0x406111_14:
    } else {
        edx43->f76 = reinterpret_cast<unsigned char>(edx44->f76 - reinterpret_cast<unsigned char>(79 + reinterpret_cast<uint1_t>(edx45->f76 < reinterpret_cast<unsigned char>(79 + __intrinsic()))));
        goto addr_0x40609d_16;
    }
    label_17:
    __asm__("insb ");
    __asm__("sti ");
    __asm__("stc ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx21) - 0x74009188) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx21) - 0x74009188) - 0x341f8f20;
    __asm__("lahf ");
    esp46 = esp11 - 2;
    *esp46 = edx47;
    *reinterpret_cast<struct s313**>(esp46 - 2) = reinterpret_cast<struct s313*>(0x50442856);
    addr_0x40611f_25:
    __asm__("fnstsw word [ebx-0x1c]");
    __asm__("salc ");
    if (!reinterpret_cast<uint1_t>(__intrinsic() | zf35)) {
        __asm__("retf 0x9113");
        eax38->f0 = reinterpret_cast<unsigned char>(eax38->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax38) + 1) + reinterpret_cast<uint1_t>(eax38->f0 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax38) + 1) + __intrinsic()))));
        *edi36 = esi9->f4;
        *reinterpret_cast<unsigned char*>(&eax38) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax38) & 0xd3);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax38) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax38) + 1) ^ eax37->f16);
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax38) + 0x47f47ddd) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax38) + 0x47f47ddd) | reinterpret_cast<uint32_t>(esp11);
        cf48 = reinterpret_cast<uint1_t>(g23455aab < reinterpret_cast<unsigned char>(dh49 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp29) + 0x67b36bda) < edx34)));
        g23455aab = reinterpret_cast<unsigned char>(g23455aab - reinterpret_cast<unsigned char>(dh50 + cf48));
        __asm__("retf 0x33d3");
        *(esp11 - 2) = reinterpret_cast<struct s315*>(0xc3282b3f);
        __asm__("salc ");
        __asm__("int1 ");
    } else {
        edi51 = reinterpret_cast<struct s320*>(reinterpret_cast<uint32_t>(edi36) - reinterpret_cast<uint32_t>(ebp29->f47));
        eax52 = eax37;
        if (reinterpret_cast<uint32_t>(edi36) >= reinterpret_cast<uint32_t>(ebp29->f47)) {
            __asm__("les esp, [0x6b6056d1]");
            __asm__("retf 0xd234");
            gd407a641 = eax52;
            do {
                cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax52) < 0xbd5cccaa);
                less_or_equal54 = reinterpret_cast<int32_t>(eax52) <= reinterpret_cast<int32_t>(0xbd5cccaa);
                tmp32_55 = edi51;
                edi51 = eax52;
                eax52 = tmp32_55;
                __asm__("int1 ");
            } while (less_or_equal54);
            *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax52) < reinterpret_cast<unsigned char>(53 + cf53));
            al56 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax52) - reinterpret_cast<unsigned char>(53 + *reinterpret_cast<uint1_t*>(&eflags2)));
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags2) = al56 == static_cast<uint32_t>(*reinterpret_cast<uint1_t*>(&eflags2));
            *reinterpret_cast<int1_t*>(&eflags2) = reinterpret_cast<signed char>(al56) < reinterpret_cast<signed char>(static_cast<uint32_t>(*reinterpret_cast<uint1_t*>(&eflags2)));
            *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            __asm__("aam 0x7");
            g83c9d536 = eflags2 & 0xfcffff;
        } else {
            __asm__("hlt ");
        }
    }
    addr_0x406100_26:
    __asm__("salc ");
    goto addr_0x406102_13;
}

void fun_406116() {
}

void fun_40617e(int32_t ecx) {
    int1_t less_or_equal2;
    signed char* edi3;
    signed char* esi4;

    __asm__("salc ");
    if (!less_or_equal2) {
        __asm__("cli ");
        __asm__("insb ");
        __asm__("arpl [ecx+esi+0xa1b40401], di");
        __asm__("wait ");
        __asm__("cdq ");
    } else {
        __asm__("in eax, dx");
        *edi3 = *esi4;
    }
}

void fun_a3210022();

struct s324 {
    signed char[24] pad24;
    unsigned char f24;
};

struct s325 {
    signed char[24] pad24;
    signed char f24;
};

void fun_4061c1(signed char cl, int32_t a2) {
    int32_t eax3;
    int32_t eax4;
    int32_t edx5;
    int32_t edx6;
    uint32_t ebx7;
    struct s324* ebx8;
    struct s325* ebx9;

    __asm__("outsd ");
    eax3 = reinterpret_cast<int32_t>(__return_address()) - 1;
    __asm__("aam 0xdb");
    if (!__intrinsic()) {
        __asm__("fnstcw word [esi+ecx*8+0x59]");
        *reinterpret_cast<signed char*>(eax4 - 0x6caf7476) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax4 - 0x6caf7476) + *reinterpret_cast<signed char*>(&eax3));
        *reinterpret_cast<uint32_t*>(edx5 - 0x72) = *reinterpret_cast<uint32_t*>(edx6 - 0x72) ^ ebx7;
        __asm__("arpl [eax+0x5f317463], bp");
        __asm__("out 0x6a, al");
    } else {
        __asm__("popad ");
        __asm__("out dx, al");
        fun_a3210022();
        __asm__("retf 0xdd55");
        ebx8->f24 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(ebx9->f24 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1))));
    }
}

void fun_4061fb(signed char cl) {
    int1_t of2;
    int32_t edx3;
    int32_t eax4;
    int32_t edx5;
    int32_t eax6;

    if (of2) {
        __asm__("fyl2xp1 ");
        __asm__("clc ");
        *reinterpret_cast<signed char*>(edx3 + eax4 * 8 + 0x3b439ecc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx5 + eax6 * 8 + 0x3b439ecc) - cl);
    }
}

void fun_406200() {
    return;
}

void fun_40622c() {
    uint32_t eax1;
    uint32_t eax2;
    uint32_t eax3;

    eax1 = eax2 & 0xef03a158;
    eax3 = eax1 - (0x4ae33ac2 + reinterpret_cast<uint1_t>(eax1 < 0x4ae33ac2));
    *reinterpret_cast<signed char*>(&g0) = *reinterpret_cast<signed char*>(&eax3);
    __asm__("ror dword [edi+0x35fae06e], 0xe8");
    __asm__("lds esi, [ebx+0x6e]");
}

void fun_d8aff4e3(int32_t a1);

void fun_40624b(int32_t ecx) {
    signed char* edi2;
    signed char* esi3;
    int32_t* eax4;
    unsigned char al5;

    __asm__("xlatb ");
    *edi2 = *esi3;
    __asm__("enter 0x62e, 0x3b");
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xb3);
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & 1) {
        __asm__("rol dword [ecx+0x8bcc6b77], cl");
        __asm__("rcl dword [ecx+ebx+0x4c424249], 1");
        __asm__("fiadd dword [ebp-0x60]");
        fun_d8aff4e3(__return_address());
    } else {
        __asm__("das ");
        goto *eax4;
    }
}

void fun_4063b7(int32_t ecx) {
    __asm__("fadd st0, st1");
    __asm__("aad 0xb0");
    __asm__("fisttp word [edx+eax*2]");
    __asm__("enter 0x1607, 0xeb");
    __asm__("insb ");
}

signed char g1f51ec4e;

void** ga31a32c0;

struct s326 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s327 {
    signed char[1] pad1;
    void** f1;
};

int32_t ge7307ac6;

signed char g6fb3618;

int32_t ga31a32bc;

int32_t g7643ff83;

void fun_406443(uint32_t ecx) {
    void* esp2;
    int16_t ss3;
    int32_t* edi4;
    int32_t* esi5;
    void** ebp6;
    struct s326* esp7;
    signed char* edi8;
    signed char* esi9;
    void** edi10;
    struct s327* edi11;
    int32_t esi12;
    int32_t esi13;
    int32_t eax14;
    int32_t eax15;
    int1_t sf16;
    int32_t edx17;
    uint32_t ecx18;
    int32_t eax19;
    int32_t tmp32_20;
    int32_t eax21;
    int32_t eax22;
    void*** esp23;
    void** esp24;
    unsigned char* edi25;
    unsigned char* esi26;
    int16_t ds27;
    uint32_t ebx28;
    int32_t ebx29;
    uint32_t ebx30;
    unsigned char** esp31;
    signed char al32;
    int32_t esi33;
    int32_t ebp34;
    int32_t ebp35;
    unsigned char bl36;
    int32_t* edi37;
    int32_t* esi38;
    int32_t eip39;

    __asm__("sti ");
    __asm__("fcmovnbe st0, st6");
    esp2 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) ^ ecx);
    __asm__("iretd ");
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp2) - 2) = ss3;
    if (0) {
        __asm__("wait ");
        if (reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(esp2 == 0)))) 
            goto addr_0x40641b_4;
    } else {
        __asm__("repne cli ");
        __asm__("outsd ");
        *edi4 = *esi5;
        g1f51ec4e = 0x7f;
        __asm__("fisttp qword [edi+0xec174f4c]");
        __asm__("xlatb ");
        __asm__("rcl dl, 1");
        __asm__("sti ");
        __asm__("fcmovb st0, st6");
        __asm__("fcom dword [esi+edi+0x2]");
        __asm__("clc ");
        __asm__("in eax, dx");
        if (0) 
            goto addr_0x4064d7_10; else 
            goto addr_0x406483_11;
    }
    ebp6 = ga31a32c0;
    esp7 = reinterpret_cast<struct s326*>(0xa31a32c4);
    *edi8 = *esi9;
    edi10 = reinterpret_cast<void**>(&edi11->f1);
    esi12 = esi13 + 1;
    eax14 = eax15 + 0x1f0db8f1;
    sf16 = eax14 < 0;
    __asm__("cmc ");
    __asm__("in eax, dx");
    edx17 = eax14;
    ecx18 = ecx - 1;
    if (!ecx18) 
        goto addr_0x4063b5_16;
    while (eax19 = ge7307ac6, tmp32_20 = edx17, edx17 = eax19, eax21 = tmp32_20, !sf16) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax21) + 1) = 0xff;
        eax22 = eax21 + 0x31af9345;
        ecx18 = ecx18 - reinterpret_cast<int32_t>(edi10);
        __asm__("rcl byte [eax+0x53e18eb7], 1");
        __asm__("fidivr word [ecx-0xa]");
        *reinterpret_cast<unsigned char*>(&eax22) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax22) | *reinterpret_cast<unsigned char*>(eax22 - 0x778d8587)) + 0x72);
        esp23 = reinterpret_cast<void***>(&(esp7 - 2)->pad1);
        *esp23 = edi10;
        esp24 = reinterpret_cast<void**>(esp23 - 1);
        *reinterpret_cast<void***>(esp24) = esp24;
        sf16 = eax22 + 1 < 0;
        edi10 = ebp6;
        ebp6 = *reinterpret_cast<void***>(esp24);
        esp7 = reinterpret_cast<struct s326*>(esp24 + 1);
    }
    __asm__("arpl [edi], cx");
    edi25 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi10 + 1) + 1);
    esi26 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi12 + 4) >> 1);
    *edi25 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*edi25 - 62) + __intrinsic());
    *reinterpret_cast<unsigned char*>(ecx18 - 0x1ac5c835) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx18 - 0x1ac5c835) | 98);
    *reinterpret_cast<int16_t*>(&(esp7 - 1)->pad1) = ds27;
    ebx28 = ebx29 - (*reinterpret_cast<uint32_t*>(edx17 - 0x63cddb31) + reinterpret_cast<uint1_t>(ebx30 < *reinterpret_cast<uint32_t*>(edx17 - 0x63cddb31)));
    __asm__("fisubr word [ecx-0x46]");
    esp31 = reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ecx18 + reinterpret_cast<int32_t>(ebp6) + 0x6b)) - 4);
    *esp31 = esi26;
    __asm__("in al, 0x62");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx28) + 1) = 0;
    *reinterpret_cast<uint32_t*>(edx17 + edx17 * 4 - 45) = *reinterpret_cast<int32_t*>(edx17 + edx17 * 4 - 45) - (ecx18 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edx17 + edx17 * 4 - 45) < ecx18));
    *reinterpret_cast<uint32_t*>(esp31 + 1 - 1) = ebx28;
    *edi25 = *esi26;
    __asm__("wait ");
    addr_0x4063b5_16:
    __asm__("cdq ");
    addr_0x40641b_4:
    g6fb3618 = al32;
    if (ecx - 1) 
        goto 0x4063ba;
    __asm__("insd ");
    *reinterpret_cast<signed char*>(esi33 + 0x289f2b70) = 0;
    __asm__("clc ");
    *reinterpret_cast<unsigned char*>(ebp34 - 0x71bd4cc5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp35 - 0x71bd4cc5) ^ bl36);
    ga31a32bc = 0x9b;
    *edi37 = *esi38;
    eip39 = ga31a32bc;
    goto eip39;
    addr_0x4064d7_10:
    addr_0x406483_11:
    g7643ff83 = 0xa9c23214;
    __asm__("salc ");
}

struct s328 {
    signed char[68] pad68;
    int32_t* f68;
};

struct s329 {
    signed char[14] pad14;
    signed char f14;
};

struct s330 {
    signed char[14] pad14;
    unsigned char f14;
};

void fun_4064c8(uint32_t ecx) {
    int32_t eax2;
    unsigned char al3;
    struct s328* edx4;
    signed char dl5;
    struct s329* edx6;
    unsigned char dl7;
    struct s330* edx8;
    int32_t* tmp32_9;

    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 & 0xf1);
    *reinterpret_cast<uint32_t*>(eax2 - 0x42c8e9c6) = *reinterpret_cast<uint32_t*>(eax2 - 0x42c8e9c6) & ecx;
    *reinterpret_cast<unsigned char*>(&edx4) = reinterpret_cast<unsigned char>(dl5 - reinterpret_cast<unsigned char>(edx6->f14 + reinterpret_cast<uint1_t>(dl7 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(edx8->f14)))));
    tmp32_9 = edx4->f68;
    edx4->f68 = reinterpret_cast<int32_t*>(__zero_stack_offset());
    goto *tmp32_9;
}

struct s331 {
    signed char[80] pad80;
    unsigned char f80;
};

struct s332 {
    signed char[1] pad1;
    int32_t f1;
};

uint32_t gdd1a2d6e;

void fun_4064e5(struct s331* ecx) {
    void* eax2;
    int32_t edi3;
    int32_t* ebx4;
    struct s332* ebx5;
    int32_t edx6;
    int32_t ebp7;

    __asm__("fdivr qword [ebx+0x8]");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax2) + edi3 * 4 + 75)(__return_address());
    ebx4 = &ebx5->f1;
    if (reinterpret_cast<int32_t>(ebx4) >= 0) {
        __asm__("int 0x44");
    } else {
        edx6 = 0x5468b6bf;
        *reinterpret_cast<unsigned char*>(&edx6) = reinterpret_cast<unsigned char>(0xbf ^ ecx->f80);
        __asm__("pushad ");
        *ebx4 = *ebx4 + reinterpret_cast<int32_t>(ebx4);
        gdd1a2d6e = gdd1a2d6e + ebp7 + __intrinsic();
        *reinterpret_cast<uint32_t*>(edx6 - 0x78) = *reinterpret_cast<uint32_t*>(edx6 - 0x78) ^ 60;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 29) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 29) & 49);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 0x678a2b38) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 0x678a2b38) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx6) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 0x678a2b38) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx6))))));
        __asm__("lds eax, [ebx]");
    }
}

void fun_406524() {
    uint32_t eflags1;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
    __asm__("aas ");
    __asm__("enter 0x921c, 0x24");
    goto eflags1 & 0xfcffff;
}

struct s333 {
    unsigned char f0;
    signed char[1001963810] pad1001963811;
    unsigned char f1001963811;
};

unsigned char g1da3d951;

void fun_40653c() {
    uint64_t v1;
    void** edi2;
    void** edx3;
    int32_t ecx4;
    void** eax5;
    int1_t less_or_equal6;
    struct s333* ecx7;
    int32_t esi8;
    uint32_t edx9;
    void** esi10;
    void** edi11;
    void** esi12;
    int16_t cs13;
    uint32_t eax14;
    struct s333* eax15;
    uint32_t esi16;
    unsigned char bl17;
    void** ecx18;
    unsigned char ah19;
    int32_t ebp20;
    void** bl21;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2) = reinterpret_cast<int32_t>(__return_address());
    edi2 = edx3;
    __asm__("iretd ");
    __asm__("out 0x3e, eax");
    *reinterpret_cast<void***>(&ecx4) = reinterpret_cast<void**>(0xc3);
    if (1) 
        goto 0x4064f1;
    eax5 = reinterpret_cast<void**>(0xfffffd26);
    if (!less_or_equal6) {
        *reinterpret_cast<unsigned char*>(&ecx7) = reinterpret_cast<unsigned char>(0xc3 & *reinterpret_cast<unsigned char*>(esi8 - 0x63dbd769));
        while (1) {
            addr_0x406594_5:
            edx9 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(eax5 + 33) * 0xb58eb229);
            *reinterpret_cast<void***>(edi2) = *reinterpret_cast<void***>(esi10);
            edi11 = edi2 + 4;
            esi12 = esi10 + 4;
            __asm__("cmc ");
            eax5 = reinterpret_cast<void**>(78);
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx7) - 0x2128ffe7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx7) - 0x2128ffe7) + *reinterpret_cast<signed char*>(&edx9));
            *reinterpret_cast<signed char*>(&eax5 + 1) = 28;
            *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v1) + 4) = cs13;
            __asm__("retf ");
            *reinterpret_cast<void***>(eax5) = *reinterpret_cast<void***>(eax5) - 1;
            do {
                __asm__("lahf ");
                __asm__("salc ");
                __asm__("salc ");
                __asm__("out dx, al");
                --eax5;
                eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax5) | *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx7) + 0x3bb8c123));
                *reinterpret_cast<uint32_t*>(esi12 + 0x13707a65) = *reinterpret_cast<uint32_t*>(esi12 + 0x13707a65) ^ edx9;
                *reinterpret_cast<void***>(edi11) = eax5;
                edi2 = edi11 + 1;
                esi10 = esi12 + 1;
                if (1) 
                    break;
                *reinterpret_cast<void***>(edi2) = eax5;
                __asm__("lodsb ");
                *reinterpret_cast<int16_t*>(&eax5) = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(eax5) * *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx7) - 89));
                edi11 = eax5;
                eax5 = edi2 + 4 + 1;
                __asm__("rol dword [ecx], cl");
                *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx7) - 0x3fedd094) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx7) - 0x3fedd094) ^ 0xa9);
                esi12 = reinterpret_cast<void**>(0xee00a939);
            } while (!*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx7) - 0x3fedd094));
            break;
        }
        *reinterpret_cast<int16_t*>(&eax5) = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(eax5) * *reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v1) + 4) + 0x49c75d75));
        __asm__("lodsd ");
        __asm__("aas ");
        eax14 = reinterpret_cast<unsigned char>(eax5) & 0xb74c58ef;
        __asm__("lahf ");
        __asm__("wait ");
        g1da3d951 = reinterpret_cast<unsigned char>(g1da3d951 ^ *reinterpret_cast<unsigned char*>(&eax14));
    } else {
        __asm__("in al, dx");
        esi10 = reinterpret_cast<void**>(0xfffffd26);
        eax15 = reinterpret_cast<struct s333*>(esi16 ^ 0x3415d891);
        __asm__("aad 0x93");
        *reinterpret_cast<unsigned char*>(eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax15) | bl17);
        *reinterpret_cast<unsigned char*>(&ecx18) = reinterpret_cast<unsigned char>(0xc3 - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(reinterpret_cast<unsigned char>(0xfffffd26) + ecx4 * 2)) + reinterpret_cast<uint1_t>(0xc3 < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(reinterpret_cast<unsigned char>(0xfffffd26) + ecx4 * 2)))));
        ah19 = *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx18 + ebp20 * 8) - 79);
        *reinterpret_cast<void***>(edi2) = bl21;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax15) + 1) = reinterpret_cast<unsigned char>(ah19 ^ 83);
        ecx7 = eax15;
        eax5 = ecx18;
        if (__intrinsic()) 
            goto addr_0x406594_5;
        __asm__("daa ");
        __asm__("aam 0xda");
    }
}

void fun_406589() {
}

void fun_406602() {
    __asm__("in al, 0xeb");
}

void fun_406606() {
    int1_t zf1;
    uint32_t eax2;
    int32_t eax3;
    uint1_t cf4;
    signed char* edi5;

    __asm__("fsubr st0, st0");
    if (!zf1) 
        goto 0x4065cb;
    __asm__("das ");
    eax2 = eax3 + 0x5235b047 + cf4;
    *edi5 = *reinterpret_cast<signed char*>(&eax2);
    __asm__("salc ");
}

void fun_406625(int32_t ecx) {
    int32_t* edi2;
    int32_t eax3;
    int32_t ebp4;
    int32_t ebp5;
    signed char ah6;

    if (!ecx) {
        *edi2 = eax3;
        __asm__("aam 0x23");
        *reinterpret_cast<signed char*>(ebp4 + 0x5968dcc1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp5 + 0x5968dcc1) - ah6);
    }
    __asm__("insb ");
}

struct s334 {
    signed char[4] pad4;
    signed char f4;
};

void fun_a4b185a3(int32_t ecx, int32_t a2);

void fun_4066b0() {
    int32_t* edi1;
    int32_t eax2;
    struct s334* edi3;
    signed char al4;

    __asm__("fdiv st0, st5");
    __asm__("das ");
    *edi1 = eax2;
    edi3->f4 = al4;
    __asm__("xlatb ");
    fun_a4b185a3(__return_address(), 0x3db7cbe6);
}

void fun_4066fb() {
    signed char* edi1;
    signed char* esi2;

    *edi1 = *esi2;
    return;
}

void fun_40672c() {
    return;
}

struct s335 {
    signed char[126] pad126;
    uint32_t f126;
};

struct s336 {
    signed char[126] pad126;
    uint32_t f126;
};

void fun_4067a9(signed char cl) {
    struct s335* edx2;
    struct s336* edx3;

    __asm__("int1 ");
    __asm__("fs lodsd ");
    __asm__("rep in ax, 0x59");
    __asm__("retf ");
    edx2->f126 = edx3->f126 >> cl;
    __asm__("fld dword [eax+esi*2+0x61]");
    __asm__("wait ");
}

struct s337 {
    signed char[4] pad4;
    uint32_t f4;
};

int32_t fun_f6712a91();

void fun_4067c4(struct s337* ecx) {
    uint16_t cs2;

    __asm__("in eax, dx");
    ecx->f4 = static_cast<uint32_t>(cs2);
    fun_f6712a91();
    __asm__("aas ");
    __asm__("wait ");
    __asm__("out dx, eax");
    __asm__("fbld tword [edi+0x469bd4ed]");
    __asm__("lodsd ");
}

uint32_t gc9c2ef98;

void fun_4067eb(int32_t ecx, int32_t a2) {
    int32_t ebp3;

    __asm__("insd ");
    __asm__("daa ");
    __asm__("iretd ");
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(ebp3 + 1 == 0)) 
        goto 0x4067cb;
    gc9c2ef98 = gc9c2ef98 ^ reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 + 4 - 4);
    __asm__("hlt ");
}

void fun_406847() {
    int1_t zf1;

    __asm__("f2xm1 ");
    if (!zf1) 
        goto 0x406801;
}

void fun_80eb22b5();

void fun_40684d(int32_t ecx) {
    int32_t* esp2;
    unsigned char* esi3;
    unsigned char* esi4;
    unsigned char bh5;

    __asm__("insb ");
    __asm__("out dx, al");
    esp2 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 - 1 - 4);
    *esp2 = ecx;
    *(esp2 - 1) = 0x40686b;
    fun_80eb22b5();
    *esi3 = reinterpret_cast<unsigned char>(*esi4 | bh5);
    __asm__("retf ");
    __asm__("out dx, al");
}

struct s338 {
    signed char[80] pad80;
    int32_t f80;
};

void fun_406872(uint32_t* ecx) {
    struct s338* eax2;
    int1_t zf3;
    uint16_t es4;
    int32_t edi5;
    int32_t ebp6;
    int32_t ebp7;
    int32_t eax8;
    int32_t esi9;
    int32_t esi10;

    __asm__("fcomp st0, st2");
    if (!ecx) {
        goto eax2->f80;
    }
    __asm__("clc ");
    if (!zf3) 
        goto addr_0x40688d_5;
    addr_0x406892_6:
    *ecx = static_cast<uint32_t>(es4);
    __asm__("arpl [0x9f26ea2a], ax");
    *reinterpret_cast<uint32_t*>(edi5 + ebp6 * 4 - 0x78cde4d4) = *reinterpret_cast<uint32_t*>(edi5 + ebp7 * 4 - 0x78cde4d4) & 0xbf5e250;
    *reinterpret_cast<unsigned char*>(edi5 - 23) = 0xff;
    __asm__("ficom word [eax]");
    addr_0x40688d_5:
    edi5 = eax8;
    *reinterpret_cast<uint32_t*>(esi9 + edi5 - 3) = *reinterpret_cast<uint32_t*>(esi10 + edi5 - 3) ^ 0x6a;
    goto addr_0x406892_6;
}

signed char g8a2753c5;

void fun_4068c2(signed char cl, int32_t a2) {
    int32_t ecx3;
    uint1_t cf4;
    int32_t ecx5;
    int32_t edx6;
    int1_t below_or_equal7;
    unsigned char* edi8;
    unsigned char al9;
    int32_t eflags10;
    int32_t edx11;

    __asm__("outsb ");
    __asm__("popad ");
    *reinterpret_cast<unsigned char*>(&ecx3) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(cl + g8a2753c5) + cf4);
    ecx5 = ecx3 - 1;
    if (!ecx5) {
        __asm__("out 0xe8, eax");
        __asm__("fldcw word [0xcb0e618c]");
        *reinterpret_cast<signed char*>(&edx6) = 0x94;
        __asm__("fdiv st7, st0");
        below_or_equal7 = *edi8 <= al9;
        eflags10 = reinterpret_cast<int32_t>(__return_address());
        if (!*reinterpret_cast<int1_t*>(&eflags10)) 
            goto addr_0x4068c0_7; else 
            goto addr_0x4068e4_8;
    }
    *reinterpret_cast<signed char*>(&ecx5) = 0x83;
    *reinterpret_cast<int32_t*>(ecx5 + 0x446bcd74) = *reinterpret_cast<int32_t*>(ecx5 + 0x446bcd74) - 0x4bc49839;
    __asm__("iretd ");
    addr_0x4068c0_7:
    addr_0x4068e4_8:
    *reinterpret_cast<unsigned char*>(edx6 + 0x24fc327a) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ecx5 + edx11 * 2 - 52)));
    if (below_or_equal7) {
        __asm__("out dx, eax");
    }
}

struct s339 {
    signed char[59] pad59;
    uint32_t f59;
};

struct s340 {
    signed char[59] pad59;
    uint32_t f59;
};

void fun_4068f2(signed char cl) {
    struct s339* ebp2;
    struct s340* ebp3;

    __asm__("lds esi, [ebx+0x79de5310]");
    ebp2->f59 = ebp3->f59 >> 1;
    __asm__("retf 0x47b5");
}

void fun_4069a1(int32_t ecx) {
    int1_t of2;
    int32_t* eax3;
    uint32_t eax4;
    signed char* edi5;
    signed char* esi6;

    if (of2) {
        eax3 = reinterpret_cast<int32_t*>(eax4 ^ 0x65571530);
        __asm__("cmc ");
        if (reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(eax3 == 0)) {
            __asm__("rcl byte [ecx], 0x2f");
            __asm__("cmc ");
            __asm__("insb ");
            __asm__("fstp dword [edx+0x46]");
            __asm__("fnstcw word [esi-0x4f]");
            __asm__("fidiv word [esi+0x3f]");
            __asm__("in al, dx");
        } else {
            if (!__intrinsic()) {
                __asm__("in al, 0x17");
                *eax3 = ~*eax3;
                __asm__("wait ");
                __asm__("insd ");
            } else {
                __asm__("aas ");
                __asm__("into ");
            }
        }
    } else {
        __asm__("insd ");
        __asm__("stc ");
        *edi5 = *esi6;
    }
}

void fun_4069af(int32_t ecx) {
    int32_t ecx2;
    uint1_t zf3;
    uint1_t cf4;
    uint32_t eax5;
    void* edi6;
    int32_t ebp7;
    uint1_t cf8;
    int32_t eax9;
    void* edi10;
    int32_t ebp11;
    int32_t edx12;
    uint1_t cf13;
    int32_t ebx14;
    int1_t zf15;
    int1_t less16;
    int32_t esi17;
    int32_t esi18;
    int32_t ebp19;
    uint32_t* eax20;
    int32_t edi21;
    uint1_t cf22;
    int32_t edi23;
    uint1_t cf24;
    int32_t edi25;

    ecx2 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx2) & zf3) {
        cf4 = reinterpret_cast<uint1_t>(eax5 < *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi6) + ebp7 * 4 + 22) + cf8);
        if (eax9 - (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi10) + ebp11 * 4 + 22) + cf4) != static_cast<uint32_t>(cf4)) {
            while (1) {
                --ecx2;
                if (ecx2) 
                    goto 0x406987;
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx2) + 1) ^ *reinterpret_cast<unsigned char*>(edx12 + 0x730c8730));
                cf13 = 0;
                __asm__("outsd ");
                __asm__("insb ");
                --ebx14;
                zf15 = ebx14 == 0;
                less16 = ebx14 < 0 != __intrinsic();
                addr_0x4069b8_6:
                if (!zf15) 
                    goto 0x40698e;
                if (less16) 
                    break;
                *reinterpret_cast<uint32_t*>(esi17 - 0x3820181f) = *reinterpret_cast<int32_t*>(esi18 - 0x3820181f) - 70 + cf13;
            }
        } else {
            __asm__("into ");
            *reinterpret_cast<unsigned char*>(ebp19 + 0xcbbcdd0) = 0;
        }
    } else {
        __asm__("salc ");
        less16 = reinterpret_cast<int32_t>(*eax20) < reinterpret_cast<int32_t>(edi21 + cf22);
        cf13 = reinterpret_cast<uint1_t>(*eax20 < edi23 + cf24);
        zf15 = *eax20 - (edi25 + cf13) == static_cast<uint32_t>(cf13);
        --ecx2;
        if (ecx2) 
            goto 0x4069ad; else 
            goto addr_0x4069b8_6;
    }
}

void fun_4069e8() {
    int16_t v1;
    int16_t es2;
    int16_t es3;
    int32_t edi4;
    int32_t ebp5;

    __asm__("out 0xd0, eax");
    (&v1)[1] = es2;
    v1 = es3;
    __asm__("cdq ");
    *reinterpret_cast<int32_t*>(edi4 + 0x62a7fc86) = ebp5;
    __asm__("lodsd ");
    goto v1;
}

void fun_406a78(void* ecx) {
    int32_t ebx2;
    unsigned char bl3;
    int32_t ebp4;
    unsigned char dl5;
    unsigned char dl6;
    signed char* edi7;
    signed char* esi8;
    int32_t eax9;
    int32_t eax10;

    *reinterpret_cast<unsigned char*>(&ebx2) = reinterpret_cast<unsigned char>(bl3 & *reinterpret_cast<unsigned char*>(ebp4 - 0x50272d1a));
    if (__intrinsic()) {
        dl5 = reinterpret_cast<unsigned char>(dl6 & *reinterpret_cast<unsigned char*>(ebx2 - 67));
        *edi7 = *esi8;
        *reinterpret_cast<unsigned char*>(eax9 + 0x6946be03) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax9 + 0x6946be03) + dl5);
        __asm__("hlt ");
    } else {
        __asm__("out 0x85, al");
        __asm__("in eax, 0x57");
        __asm__("salc ");
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) + ebx2 * 4 + 99) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) + ebx2 * 4 + 99) + ebx2;
        __asm__("retf ");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx) + ebx2 * 8 + 0x69) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) + ebx2 * 8 + 0x69) + eax10 + __intrinsic();
    }
}

void fun_406a93() {
    __asm__("rcr byte [edi+edi*4+0x6b], 1");
}

uint32_t gd3674479;

int32_t gf4520f5;

int32_t g28a7af68;

uint32_t* fun_f075fb11();

void fun_406a98() {
    uint32_t edx1;
    int32_t eax2;
    int32_t edx3;
    uint32_t* eax4;
    uint32_t ebp5;
    int32_t edi6;
    int32_t esi7;
    int32_t ecx8;
    int32_t ebx9;
    int32_t ebx10;

    edx1 = reinterpret_cast<uint32_t>(__intrinsic() - 1);
    __asm__("insb ");
    gd3674479 = gd3674479 ^ edx1;
    gf4520f5 = eax2 * edx3;
    g28a7af68 = 0x406ab9;
    eax4 = fun_f075fb11();
    __asm__("stc ");
    __asm__("daa ");
    *eax4 = *eax4 | ebp5;
    __asm__("lds edx, [ebx-0x49]");
    if (1) {
        g28a7af68 = edi6;
        *reinterpret_cast<int32_t*>(esi7 + 0x6c72d24f) = g28a7af68;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx8) + 1) = *reinterpret_cast<signed char*>(&edx1);
        __asm__("into ");
        *reinterpret_cast<uint32_t*>(0x28a7af6c + ebx9 - 0x6b) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(0x28a7af6c + ebx10 - 0x6b) + ecx8);
        __asm__("sti ");
        __asm__("in eax, 0x9e");
    } else {
        __asm__("lds edi, [ecx+0xd3e1b9f2]");
    }
}

struct s341 {
    signed char[46] pad46;
    int32_t f46;
};

struct s342 {
    signed char[46] pad46;
    int32_t f46;
};

void fun_406ad5(int32_t ecx) {
    struct s341* ebp2;
    struct s342* ebp3;
    int32_t ebp4;

    __asm__("fist word [ebx+ecx+0xa3de6a50]");
    ebp2->f46 = ebp3->f46 + ebp4;
    __asm__("fistp dword [eax]");
}

int32_t g3dfbfaf1;

struct s343 {
    signed char[1] pad1;
    signed char f1;
};

void fun_4de53405();

void fun_406b10(int32_t ecx) {
    int1_t cf2;
    uint32_t eax3;
    int32_t eax4;
    int32_t ebx5;
    int32_t eax6;
    int32_t ebx7;
    struct s343* edx8;
    void* edx9;
    int32_t* edi10;
    int32_t eflags11;
    int32_t ecx12;
    int32_t ebp13;
    uint1_t cf14;

    if (cf2) {
        if (eax3 >= 0x3ff15429) 
            goto 0x406ac2;
        if (eax4 - 0x3ff15429 < 0) 
            goto 0x406af9;
        __asm__("insb ");
    }
    ebx5 = eax6;
    g3dfbfaf1 = ebx7;
    __asm__("stc ");
    edx8 = reinterpret_cast<struct s343*>(reinterpret_cast<int32_t>(edx9) - 1);
    __asm__("into ");
    *edi10 = ebx7;
    *reinterpret_cast<unsigned char*>(&edx8) = 0xff;
    if (!1) 
        goto addr_0x406b45_10;
    eflags11 = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<unsigned char*>(ebx7 + 0x197a2fce) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx7 + 0x197a2fce) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx7 + 0x197a2fce) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1) < reinterpret_cast<unsigned char>(edx8->f1 + *reinterpret_cast<uint1_t*>(&eflags11)))))));
    __asm__("int1 ");
    *reinterpret_cast<unsigned char*>(ecx - 0x78) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx - 0x78) + *reinterpret_cast<signed char*>(&ecx))));
    __asm__("lodsd ");
    __asm__("insd ");
    while (1) {
    }
    addr_0x406b45_10:
    ecx12 = *reinterpret_cast<int32_t*>(ebp13 - 94) * -2;
    fun_4de53405();
    cf14 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&(edx8 - 0x1e7879a7)->pad1) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx12))));
    *reinterpret_cast<unsigned char*>(&(edx8 - 0x1e7879a7)->pad1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&(edx8 - 0x1e7879a7)->pad1) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx12) + cf14));
    __asm__("fadd dword [bx+0xb8c3]");
    __asm__("fmul dword [edi+0x77]");
    if (*reinterpret_cast<unsigned char*>(&(edx8 - 0x1e7879a7)->pad1) != static_cast<uint32_t>(cf14)) {
    }
}

void fun_406b21(int32_t ecx) {
    int32_t eax2;
    unsigned char al3;
    int32_t* edi4;

    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 ^ 0xcd);
    *edi4 = eax2;
}

void fun_406b66() {
    __asm__("out dx, al");
}

void fun_406b68() {
    __asm__("int 0x31");
}

void fun_406bef() {
    uint32_t edi1;

    __asm__("aam 0xd3");
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) & edi1);
}

void fun_fc3db97();

void fun_406bfb() {
    void* eax1;
    void** edi2;
    int16_t* esp3;
    void* eax4;
    int16_t cs5;

    eax1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4);
    *edi2 = *reinterpret_cast<void**>(&eax1);
    __asm__("aam 0x13");
    esp3 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(eax4) - 2);
    *esp3 = cs5;
    *reinterpret_cast<int32_t*>(esp3 - 2) = 0x406c16;
    fun_fc3db97();
    __asm__("aam 0xab");
}

void fun_406c1b(signed char* ecx) {
    int32_t ebx2;
    int32_t ebp3;

    *reinterpret_cast<signed char*>(&ebx2) = -56;
    do {
        *ecx = reinterpret_cast<signed char>(*ecx + 17);
    } while (*ecx >= 0);
    __asm__("out 0x61, eax");
    __asm__("fld qword [eax-0x66]");
    __asm__("lodsd ");
    __asm__("outsb ");
    *reinterpret_cast<int32_t*>(ebx2 - 0x492be459) = *reinterpret_cast<int32_t*>(ebx2 - 0x492be459) + ebp3;
}

void fun_d22526c1();

struct s344 {
    signed char[6] pad6;
    int32_t f6;
};

struct s345 {
    signed char f0;
    signed char[3] pad4;
    signed char f4;
};

struct s346 {
    signed char[4] pad4;
    signed char f4;
};

signed char gcf60920a;

struct s347 {
    signed char f0;
    signed char[3] pad4;
    signed char f4;
};

struct s348 {
    signed char[4] pad4;
    signed char f4;
};

struct s349 {
    signed char[46746017] pad46746017;
    struct s349* f46746017;
};

signed char geb1a06d4;

void fun_e2c6369d();

void fun_406c36(int32_t ecx) {
    uint48_t v2;
    struct s344* edx3;
    void* edx4;
    uint32_t eax5;
    void* v6;
    int32_t eax7;
    struct s345* eax8;
    struct s346* esi9;
    struct s347* edi10;
    struct s345* edi11;
    signed char* esi12;
    signed char* edi13;
    struct s348* edi14;
    signed char* esi15;
    struct s349* esi16;

    *reinterpret_cast<int32_t*>(&v2) = reinterpret_cast<int32_t>(__return_address());
    fun_d22526c1();
    edx3 = reinterpret_cast<struct s344*>(reinterpret_cast<int32_t>(edx4) + 1);
    *reinterpret_cast<signed char*>(&eax5) = 12;
    __asm__("retf ");
    if (!__intrinsic()) {
        addr_0x406c59_2:
        __asm__("in eax, 0x25");
        *reinterpret_cast<int32_t*>(reinterpret_cast<int16_t>(v6) + 4 - 4) = 0x406c61;
        eax7 = reinterpret_cast<int32_t>(edx3->f6());
        *reinterpret_cast<signed char*>(eax7 + 0x6e6fd0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax7 + 0x6e6fd0) + *reinterpret_cast<signed char*>(&ecx));
    } else {
        __asm__("retf ");
        __asm__("sti ");
        eax8 = reinterpret_cast<struct s345*>(eax5 | reinterpret_cast<uint32_t>(edx3));
        esi9 = *reinterpret_cast<struct s346**>(reinterpret_cast<int32_t>(&v2) + 2);
        __asm__("outsd ");
        __asm__("fstp st5");
        if (__intrinsic()) {
            __asm__("cdq ");
            __asm__("outsd ");
            *reinterpret_cast<int16_t*>(&edx3) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax8) % *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1));
            *reinterpret_cast<int16_t*>(&eax8) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax8) / *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1));
            *reinterpret_cast<signed char*>(0x68da52a7 + reinterpret_cast<int32_t>(esi9) * 2) = *reinterpret_cast<signed char*>(&ecx);
            do {
                gcf60920a = *reinterpret_cast<signed char*>(&eax8);
                __asm__("fdiv st0, st2");
                __asm__("sahf ");
                if (!ecx) 
                    goto addr_0x406ce4_6;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi9) - 0xb3b6cb5) = *reinterpret_cast<signed char*>(&ecx);
                edi10 = reinterpret_cast<struct s347*>(&edi11->f4);
                esi12 = &esi9->f4;
                edi10->f0 = *esi12;
                esi9 = reinterpret_cast<struct s346*>(esi12 + 4);
                edx3 = reinterpret_cast<struct s344*>(reinterpret_cast<uint32_t>(edx3) + 1);
                edi11 = eax8;
                eax8 = reinterpret_cast<struct s345*>(&edi10->f4);
            } while (edx3);
            goto addr_0x406ca2_15;
        } else {
            edi13 = &edi14->f4;
            esi15 = &esi9->f4;
            v6 = *reinterpret_cast<void**>(&v2);
            __asm__("enter 0xf91b, 0xa9");
            goto addr_0x406c59_2;
        }
    }
    __asm__("lodsb ");
    __asm__("outsd ");
    *edi13 = *esi15;
    esi16 = reinterpret_cast<struct s349*>(esi15 + 1);
    __asm__("pushad ");
    __asm__("les edi, [edi-0x6d]");
    __asm__("rcr byte [ebx], 0x76");
    esi16->f46746017 = esi16;
    __asm__("stc ");
    __asm__("retf 0xb60d");
    addr_0x406ce4_6:
    edi11->f0 = *reinterpret_cast<signed char*>(&eax8);
    geb1a06d4 = *reinterpret_cast<signed char*>(&eax8);
    fun_e2c6369d();
    addr_0x406ca2_15:
}

int32_t gcf0486eb;

signed char gb62e6031;

void fun_406ca3(int32_t* ecx, uint32_t a2, int16_t a3) {
    uint48_t v4;
    int1_t pf5;
    int32_t ebp6;
    int32_t ebp7;
    uint16_t fs8;
    int32_t ebx9;
    int32_t esi10;
    int32_t esi11;
    int32_t* eax12;
    void* esp13;
    int32_t edx14;
    int32_t edx15;
    uint1_t zf16;
    int32_t edx17;
    int32_t edi18;
    unsigned char bl19;
    uint32_t ecx20;
    int32_t* esp21;
    int32_t edx22;
    int16_t* esp23;
    int16_t ds24;
    uint32_t eax25;
    uint32_t* es26;
    uint32_t* edi27;
    signed char* edx28;
    signed char* edx29;
    uint32_t eax30;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v4) + 2) = reinterpret_cast<int32_t>(__return_address());
    if (!pf5) {
        __asm__("das ");
    }
    ebp6 = ebp7 - 1;
    fs8 = static_cast<uint16_t>(ebx9);
    esi10 = esi11 - 1;
    if (1) 
        goto 0x406c62;
    if (!(reinterpret_cast<uint1_t>(esi10 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(esi10 == 0))) 
        goto addr_0x406cb6_6;
    eax12 = ecx;
    esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4);
    if (__intrinsic()) {
        *reinterpret_cast<uint32_t*>(edx14 - 63) = *reinterpret_cast<uint32_t*>(edx15 - 63) ^ reinterpret_cast<uint32_t>(ecx);
        zf16 = reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(edx17 - 63) == 0);
        __asm__("retf 0xeef3");
        esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4);
        __asm__("aam 0xb5");
    } else {
        zf16 = reinterpret_cast<uint1_t>((*reinterpret_cast<unsigned char*>(edi18 - 0x5f976562) & bl19) == 0);
        if (!0) 
            goto addr_0x406d44_11;
    }
    __asm__("clc ");
    ecx20 = reinterpret_cast<uint32_t>(ecx) - 1;
    if (reinterpret_cast<uint1_t>(!!ecx20) & zf16) {
        esp21 = eax12;
        eax12 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) * *reinterpret_cast<int32_t*>(esi10 + 0x18de500d));
        edx22 = __intrinsic();
        zf16 = __undefined();
        __asm__("in eax, dx");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx22) + 1) = 81;
        __asm__("retf 0xd41b");
        *reinterpret_cast<signed char*>(&ecx20) = 0x8c;
        goto addr_0x406df7_15;
    } else {
        ecx20 = a2;
        esp21 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) + 4 + 4);
        if (zf16) {
            addr_0x406df7_15:
            --ecx20;
            if (reinterpret_cast<uint1_t>(!!ecx20) & zf16) {
                addr_0x406dd1_17:
            } else {
                --esp21;
                *esp21 = ebp6;
                __asm__("in eax, 0x9c");
                *reinterpret_cast<signed char*>(edx22 - 46) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx22 - 46) >> *reinterpret_cast<signed char*>(&ecx20));
                __asm__("outsb ");
                if (__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(edx22 - 46) == 0)) {
                    goto addr_0x406dbf_20;
                } else {
                    esp23 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp21) - 2);
                    *esp23 = static_cast<int16_t>(reinterpret_cast<uint32_t>(ecx));
                    __asm__("int 0xbf");
                    __asm__("cli ");
                    *(esp23 + 2 - 1) = ds24;
                }
            }
        } else {
            addr_0x406dbf_20:
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax12) - 0x7bce44df) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax12) - 0x7bce44df) & ecx20;
            __asm__("cmc ");
            goto addr_0x406dd1_17;
        }
    }
    addr_0x406d44_11:
    eax25 = reinterpret_cast<uint32_t>(eax12) ^ 0x5b51d48e;
    __asm__("aaa ");
    __asm__("out 0x86, eax");
    __asm__("out 0x6, eax");
    *reinterpret_cast<uint32_t**>(&v4) = es26;
    edi27 = *reinterpret_cast<uint32_t**>(&v4);
    gcf0486eb = gcf0486eb >> *reinterpret_cast<signed char*>(&ecx);
    *reinterpret_cast<signed char*>(&eax25) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax25) - 10);
    *edx28 = reinterpret_cast<signed char>(*edx29 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    do {
        if (!ecx) 
            break;
        ecx = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx) - 1);
        ++edi27;
        esi10 = esi10 + 4;
    } while (*edi27 == eax25);
    eax30 = eax25 + 1;
    __asm__("out 0x8d, al");
    *reinterpret_cast<unsigned char*>(esi10 - 25) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(esi10 - 25)));
    __asm__("daa ");
    gb62e6031 = *reinterpret_cast<signed char*>(&eax30);
    *reinterpret_cast<uint32_t*>(ebp6 + 0x6976a1e0) = static_cast<uint32_t>(fs8);
    __asm__("rcl dword [esi+0x33], 0xc3");
    __asm__("das ");
    addr_0x406cb6_6:
}

signed char fun_406cf9(int32_t ecx) {
    int1_t of2;
    int1_t zf3;
    signed char bl4;

    if (of2) {
        if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!zf3)) 
            goto 0x406d40;
    } else {
        return bl4;
    }
}

void fun_406d2a() {
}

void fun_406d33() {
}

signed char g83ba76cb;

void fun_406d85(int32_t a1) {
    signed char al2;
    int1_t below_or_equal3;
    unsigned char* edi4;
    unsigned char al5;
    int32_t eax6;
    int16_t ax7;
    unsigned char ch8;

    __asm__("ror dword [0x1c9ff7dc], cl");
    g83ba76cb = al2;
    below_or_equal3 = *edi4 <= al5;
    __asm__("outsb ");
    __asm__("wait ");
    if (!below_or_equal3) 
        goto 0x406db1;
    eax6 = static_cast<int32_t>(ax7);
    *reinterpret_cast<unsigned char*>(eax6 - 0x80) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax6 - 0x80) ^ ch8);
}

struct s350 {
    signed char[44] pad44;
    signed char f44;
};

struct s351 {
    signed char[44] pad44;
    signed char f44;
};

void fun_406ddb(unsigned char cl) {
    int1_t of2;
    struct s350* ebp3;
    struct s351* ebp4;

    if (of2) 
        goto 0x406e04;
    __asm__("fcomp dword [edi-0x56]");
    ebp3->f44 = reinterpret_cast<signed char>(ebp4->f44 << cl);
}

struct s352 {
    unsigned char f0;
    signed char[3] pad4;
    unsigned char f4;
    signed char[6] pad11;
    int32_t f11;
};

struct s353 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s354 {
    unsigned char f0;
    signed char[3] pad4;
    uint32_t f4;
    signed char[68] pad76;
    unsigned char f76;
    signed char[1206500339] pad1206500416;
    uint32_t f1206500416;
};

struct s355 {
    signed char[4] pad4;
    unsigned char f4;
};

int32_t g6e5f1b0f;

struct s356 {
    unsigned char f0;
    signed char f1;
};

struct s357 {
    signed char f0;
    unsigned char f1;
    signed char[1525711994] pad1525711996;
    int32_t f1525711996;
};

struct s358 {
    signed char f0;
    unsigned char f1;
};

int32_t g30f4a7e6;

void fun_79f6a7b8();

struct s359 {
    uint32_t f0;
    signed char f1;
};

void fun_406e16(int32_t ecx) {
    struct s352* edi2;
    struct s353* eax3;
    struct s354* esi4;
    struct s355* esi5;
    void** esp6;
    void** ebp7;
    uint1_t cf8;
    int32_t eax9;
    unsigned char dh10;
    struct s356* edi11;
    void* esp12;
    struct s357* edi13;
    struct s358* esi14;
    void* esp15;
    struct s359* esi16;

    __asm__("clc ");
    edi2 = reinterpret_cast<struct s352*>(&eax3->f4);
    esi4 = reinterpret_cast<struct s354*>(&esi5->f4);
    esp6 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 + 2);
    __asm__("les ebp, [ebp+eax+0x51c0a55d]");
    __asm__("fsubr qword [esi]");
    __asm__("popad ");
    if (ebp7 == esp6) {
        addr_0x406e6d_5:
    } else {
        __asm__("fsub qword [edi]");
        cf8 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi4) + 0x47e9bc40) < 0xfcf3f867);
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi4) + 0x47e9bc40) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi4) + 0x47e9bc40) + 0x30c0799;
        g6e5f1b0f = eax9;
        esi4->f0 = reinterpret_cast<unsigned char>(esi4->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx) + reinterpret_cast<uint1_t>(esi4->f0 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx) + cf8))));
        if (!__intrinsic()) {
            addr_0x406ea1_7:
            esi4->f76 = reinterpret_cast<unsigned char>(esi4->f76 ^ dh10);
            goto label_8;
        } else {
            edi2->f11 = -edi2->f11;
            __asm__("aaa ");
            __asm__("into ");
            edi11 = reinterpret_cast<struct s356*>(&edi2->f4);
            __asm__("cmc ");
            __asm__("fiadd word [ebx+0xbc550faa]");
            esp12 = reinterpret_cast<void*>(esp6 - 1 - 1);
            edi13 = reinterpret_cast<struct s357*>(&edi11->f1);
            esi14 = reinterpret_cast<struct s358*>(reinterpret_cast<int32_t>(&esi4->f4) + 1);
            __asm__("outsb ");
            esp15 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp12) - (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi13) + 0x5af0847c) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esp12) < *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi13) + 0x5af0847c) + reinterpret_cast<uint1_t>(edi11->f0 < 0x95))));
            g30f4a7e6 = 0x8a954895;
            __asm__("out 0x80, al");
            *reinterpret_cast<signed char*>(edi13) = esi14->f0;
            edi2 = reinterpret_cast<struct s352*>(reinterpret_cast<int32_t>(edi13) + 1);
            esi4 = reinterpret_cast<struct s354*>(&esi14->f1);
            esp6 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp15) - 4);
            *reinterpret_cast<void***>(esp6) = esp6;
            __asm__("rep salc ");
            goto addr_0x406e6d_5;
        }
    }
    __asm__("into ");
    *reinterpret_cast<int32_t*>(esp6 - 1) = 0x406ea1;
    fun_79f6a7b8();
    goto addr_0x406ea1_7;
    label_8:
    edi2->f0 = esi4->f0;
    esi16 = reinterpret_cast<struct s359*>(&esi4->f4);
    __asm__("rcr byte [eax+0x57f96f60], 1");
    __asm__("int 0xa7");
    esi16->f0 = esi16->f0 - (0x1055d3e - reinterpret_cast<uint1_t>(esi16->f0 < 0xfefaa2c2));
}

signed char fun_325dc753(int32_t a1);

void fun_f8edd144(int32_t a1);

void fun_406e7f() {
    uint32_t eax1;

    if (eax1 & 0xba5bd41f) {
        fun_325dc753(__return_address());
        __asm__("out dx, eax");
        __asm__("outsd ");
        __asm__("fucomip st0, st4");
        fun_f8edd144(__return_address());
    }
}

void fun_406ec4() {
    __asm__("in al, 0x5a");
    __asm__("fistp dword [0x99b47cb4]");
}

struct s360 {
    int32_t f0;
    signed char[203050570] pad203050574;
    signed char f203050574;
};

signed char gd9ac27d8;

void fun_406ed0(int16_t cx) {
    struct s360* ecx1;
    int1_t below_or_equal2;
    signed char al3;
    int32_t ebp4;
    int32_t esi5;
    int32_t esi6;
    int32_t ebx7;

    *reinterpret_cast<int16_t*>(&ecx1) = cx;
    __asm__("aas ");
    if (!below_or_equal2) {
        gd9ac27d8 = al3;
        __asm__("out dx, eax");
    }
    *reinterpret_cast<unsigned char*>(&ecx1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx1) + *reinterpret_cast<signed char*>(ebp4 - 0x270772cf))));
    if (!__intrinsic()) 
        goto 0x406ec7;
    __asm__("aas ");
    __asm__("out 0x17, eax");
    ecx1->f203050574 = reinterpret_cast<signed char>(ecx1->f203050574 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1));
    __asm__("cmc ");
    *reinterpret_cast<int32_t*>(esi5 - 0x73) = *reinterpret_cast<int32_t*>(esi6 - 0x73) << 1;
    __asm__("outsb ");
    if (!1) 
        goto addr_0x406f12_8;
    addr_0x406f12_8:
    ecx1->f0 = ebx7;
}

void fun_406ee1() {
    int32_t edx1;
    int32_t edi2;

    if (*reinterpret_cast<int32_t*>(edx1 - 0x211214a6) == edi2) {
    }
}

void fun_406f19() {
    __asm__("insb ");
}

void fun_406f25(int16_t cx) {
    int32_t ecx1;
    uint1_t cf2;
    int32_t edx3;
    uint32_t ebx4;
    int32_t edx5;
    int32_t edx6;
    int32_t ebx7;
    int32_t* edi8;
    int32_t eax9;
    uint32_t edx10;
    signed char dh11;
    int32_t edx12;
    unsigned char dh13;
    int32_t edx14;
    uint32_t eax15;
    signed char* esi16;
    void* esi17;
    signed char bl18;
    signed char bl19;
    signed char* eax20;
    int32_t ecx21;
    int1_t less22;
    int32_t v23;

    *reinterpret_cast<int16_t*>(&ecx1) = cx;
    cf2 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edx3 - 0x2a9626b4) < ebx4);
    *reinterpret_cast<int32_t*>(edx5 - 0x2a9626b4) = *reinterpret_cast<int32_t*>(edx6 - 0x2a9626b4) - ebx7;
    *edi8 = eax9;
    __asm__("das ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx10) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(dh11 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx12 + 0x5b5de009) + reinterpret_cast<uint1_t>(dh13 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx14 + 0x5b5de009) + cf2)))) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1));
    eax15 = edx10;
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) ^ 0x88);
    esi16 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi17) + 4 - 1);
    bl18 = reinterpret_cast<signed char>(bl19 - *reinterpret_cast<signed char*>(eax15 - 53));
    *reinterpret_cast<signed char*>(&ecx1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx1) - *eax20);
    ecx21 = ecx1 - 1;
    __asm__("insd ");
    less22 = reinterpret_cast<int32_t>(eax15 & 0x9b3433df) < reinterpret_cast<int32_t>(0x4e85b843);
    __asm__("into ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 2 + reinterpret_cast<int32_t>(eax20)) = *reinterpret_cast<signed char*>(&ecx21);
    do {
        __asm__("int 0x61");
        __asm__("fisubr word [eax+0x24]");
        if (!less22) 
            break;
        __asm__("insd ");
        __asm__("outsb ");
        if (less22) 
            goto addr_0x406eef_7;
        less22 = bl18 < *esi16;
        bl18 = reinterpret_cast<signed char>(bl18 - *esi16);
        __asm__("aas ");
        --ecx21;
    } while (reinterpret_cast<uint1_t>(!!ecx21) & reinterpret_cast<uint1_t>(bl18 == 0));
    goto addr_0x406f64_9;
    goto v23;
    addr_0x406eef_7:
    addr_0x406f64_9:
}

void fun_406f6e() {
    signed char* edi1;
    signed char al2;

    *edi1 = al2;
    __asm__("in eax, 0x11");
    __asm__("pushad ");
}

void fun_406f87(int32_t ecx) {
    int32_t edi2;
    int32_t* edi3;
    uint32_t esi4;
    int32_t ebp5;

    if (ecx) {
        *reinterpret_cast<signed char*>(edi2 - 22) = *reinterpret_cast<signed char*>(&ecx);
        __asm__("out dx, eax");
        __asm__("aam 0xed");
        __asm__("hlt ");
    } else {
        __asm__("cdq ");
        __asm__("rol byte [esi-0x2e], cl");
        *edi3 = *reinterpret_cast<int32_t*>(esi4 & *reinterpret_cast<uint32_t*>(ebp5 + 0x1b00aad));
        __asm__("fidiv word [ebp+0xd1b1b018]");
        __asm__("syscall ");
    }
}

void fun_406fa4() {
    int32_t ecx1;
    signed char* edi2;
    signed char al3;
    int1_t zf4;

    __asm__("out 0xcb, al");
    do {
        if (!ecx1) 
            break;
        --ecx1;
        *edi2 = al3;
        ++edi2;
    } while (!zf4);
    __asm__("cli ");
}

void fun_406fba() {
    __asm__("fprem1 ");
    __asm__("in eax, dx");
    return;
}

void fun_407008() {
    int32_t ecx1;
    signed char* edi2;
    signed char al3;
    int1_t zf4;
    int32_t eax5;

    do {
        if (!ecx1) 
            break;
        --ecx1;
        *edi2 = al3;
        ++edi2;
    } while (!zf4);
    __asm__("in eax, 0x98");
    if (eax5 + 1 == 0xc32f6e95) {
        __asm__("enter 0x5d00, 0x85");
        __asm__("popad ");
    }
}

void fun_407037(unsigned char* ecx) {
    int32_t ebx2;
    int32_t ebx3;
    signed char bl4;
    uint1_t cf5;
    int32_t ebp6;
    int32_t ebp7;
    uint32_t edx8;

    ecx[ebx2 * 4] = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ecx[ebx3 * 4] + bl4) + cf5);
    *reinterpret_cast<uint32_t*>(ebp6 - 0x11ca79a8 - 0x7703914e) = *reinterpret_cast<uint32_t*>(ebp7 - 0x11ca79a8 - 0x7703914e) ^ edx8;
    __asm__("salc ");
}

struct s361 {
    signed char[1] pad1;
    int32_t f1;
};

struct s362 {
    int32_t f0;
    signed char[72] pad76;
    signed char f76;
};

struct s363 {
    signed char[1] pad1;
    int32_t f1;
};

void* g66e9aa9a;

struct s364 {
    signed char[769329808] pad769329808;
    signed char f769329808;
};

struct s365 {
    signed char[98] pad98;
    unsigned char f98;
};

int32_t fun_24747bc5();

void fun_40704e(uint32_t* ecx) {
    signed char* edi2;
    signed char* esi3;
    int32_t* edi4;
    struct s361* edi5;
    struct s362* esi6;
    struct s363* esi7;
    unsigned char dl8;
    void* ecx9;
    signed char ah10;
    signed char v11;
    uint64_t v12;
    void* ecx13;
    signed char al14;
    void* eax15;
    void* eax16;
    struct s364* eax17;
    struct s365* ecx18;
    int32_t eax19;
    int1_t below_or_equal20;
    int1_t sf21;
    uint1_t less_or_equal22;

    *ecx = *ecx & 39;
    __asm__("rol byte [ebp+0x65c182f], 0x77");
    *edi2 = *esi3;
    edi4 = &edi5->f1;
    esi6 = reinterpret_cast<struct s362*>(&esi7->f1);
    __asm__("popad ");
    if (reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>((dl8 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi4) - 0x75996aeb)) == 0)) {
    }
    ecx9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx9) & reinterpret_cast<uint1_t>(!!reinterpret_cast<unsigned char>(ah10 + v11))) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1) = -89;
        *reinterpret_cast<void***>(&v12) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
        ecx13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx9) - 1);
        if (!(reinterpret_cast<uint1_t>(!!ecx13) & reinterpret_cast<uint1_t>((reinterpret_cast<unsigned char>(al14 + 22) ^ 0x9f) == 0))) {
            __asm__("fild dword [esi+0xa0248779]");
        }
        eax15 = ecx9;
        __asm__("daa ");
        *reinterpret_cast<void***>(&eax15) = *reinterpret_cast<void***>(&v12);
        __asm__("aam 0xbb");
        __asm__("pause ");
        eax16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax15) + 0x48ce5df6);
        __asm__("aas ");
        g66e9aa9a = *reinterpret_cast<void**>(&eax16);
        eax17 = reinterpret_cast<struct s364*>(reinterpret_cast<int32_t>(eax16) + 0x464d0afb + __intrinsic());
        __asm__("enter 0xca5d, 0x77");
        ecx18 = reinterpret_cast<struct s365*>(reinterpret_cast<int32_t>(ecx13) - 1);
        if (!0) 
            goto addr_0x407144_14;
    } else {
        __asm__("fld st0");
        eax19 = fun_24747bc5();
        below_or_equal20 = *reinterpret_cast<unsigned char*>(&eax19) <= 0xee;
        if (!below_or_equal20) 
            goto addr_0x4070b4_17; else 
            goto addr_0x407074_18;
    }
    sf21 = __intrinsic();
    less_or_equal22 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf21) | reinterpret_cast<uint1_t>((reinterpret_cast<uint32_t>(eax17) ^ 0x532c0f37) == 0));
    do {
        if (!less_or_equal22) 
            break;
    } while (!sf21);
    goto addr_0x407183_22;
    __asm__("in eax, dx");
    __asm__("retf ");
    __asm__("pushad ");
    addr_0x407183_22:
    __asm__("cdq ");
    addr_0x407144_14:
    ecx18->f98 = reinterpret_cast<unsigned char>(ecx18->f98 ^ 16);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax17) + 0x2ddb0a90) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx18) + 1);
    addr_0x4070b4_17:
    __asm__("aam 0x9f");
    __asm__("insb ");
    if (!__intrinsic()) 
        goto addr_0x4070c4_28;
    esi6->f76 = reinterpret_cast<signed char>(esi6->f76 + 1);
    addr_0x4070c4_28:
    addr_0x407074_18:
    *edi4 = esi6->f0;
    if (!__intrinsic()) 
        goto 0x407042;
}

void fun_40707c() {
    __asm__("xlatb ");
}

void fun_407089() {
    signed char* edi1;
    signed char al2;

    *edi1 = al2;
}

void fun_4070a5() {
    __asm__("o16 in al, 0x96");
}

void fun_4070c5(int32_t ecx) {
    if (ecx - 1) 
        goto 0x407072; else 
        goto "???";
}

struct s366 {
    signed char[38] pad38;
    uint32_t f38;
};

struct s367 {
    signed char[38] pad38;
    int32_t f38;
};

struct s368 {
    signed char[38] pad38;
    uint32_t f38;
};

void fun_40715b() {
    int32_t ebx1;
    int32_t ebx2;
    struct s366* edx3;
    struct s367* edx4;
    struct s368* edx5;

    __asm__("lds eax, [esi+0x72]");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebx1 * 2 + 0x3c186f08) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebx2 * 2 + 0x3c186f08) >> 1;
    edx3->f38 = edx4->f38 - (reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<uint1_t>(edx5->f38 < reinterpret_cast<int32_t>(__zero_stack_offset()) + __intrinsic()));
    __asm__("lodsd ");
}

void fun_40716c() {
    int1_t pf1;

    pf1 = __intrinsic();
    do {
        __asm__("outsd ");
    } while (!pf1);
}

void fun_4071b2() {
    int1_t sf1;
    int32_t* edi2;
    int32_t* esi3;

    if (sf1) 
        goto 0x4071a7;
    *edi2 = *esi3;
}

void fun_407214() {
    signed char* edi1;
    signed char al2;

    *edi1 = al2;
}

uint32_t g2364497d;

void fun_40729b(int32_t ecx) {
    uint32_t ebx2;
    uint32_t ebx3;
    int32_t edi4;
    int32_t edi5;

    ebx2 = ebx3 ^ g2364497d;
    *reinterpret_cast<unsigned char*>(edi4 - 0x13696399) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edi5 - 0x13696399) + *reinterpret_cast<signed char*>(&ebx2))));
    __asm__("out dx, al");
}

struct s369 {
    signed char[4] pad4;
    signed char f4;
};

struct s370 {
    signed char f0;
    int32_t f1;
};

struct s371 {
    signed char[4] pad4;
    signed char f4;
};

int32_t g442e827f;

signed char g741f0077;

struct s372 {
    signed char[68] pad68;
    uint32_t f68;
};

struct s373 {
    signed char[68] pad68;
    uint32_t f68;
};

void fun_4072fe() {
    int32_t* edi1;
    int32_t* esi2;
    signed char* edi3;
    struct s369* edi4;
    struct s370* esi5;
    struct s371* esi6;
    int32_t eax7;
    int32_t* esi8;
    int32_t* edi9;
    signed char al10;
    struct s372* ebx11;
    struct s373* ebx12;
    uint32_t* eax13;
    uint32_t* eax14;
    uint32_t ebx15;

    *edi1 = *esi2;
    edi3 = &edi4->f4;
    esi5 = reinterpret_cast<struct s370*>(&esi6->f4);
    g442e827f = eax7;
    __asm__("arpl [ebx], bx");
    *edi3 = esi5->f0;
    esi8 = &esi5->f1;
    __asm__("clc ");
    __asm__("fisttp dword [edi]");
    edi9 = reinterpret_cast<int32_t*>(edi3 + 1 - 1);
    __asm__("in al, dx");
    if (reinterpret_cast<int32_t>(edi9) < reinterpret_cast<int32_t>(0)) {
        g741f0077 = al10;
        __asm__("outsb ");
        __asm__("rol ebx, 0x18");
        __asm__("pushad ");
        __asm__("salc ");
    } else {
        ebx11->f68 = ebx12->f68 & reinterpret_cast<uint32_t>(esi8);
        *edi9 = *esi8;
        *eax13 = *eax14 & ebx15;
    }
}

struct s374 {
    signed char f0;
    unsigned char f1;
};

signed char gc1e829d;

struct s375 {
    signed char[559616851] pad559616851;
    signed char f559616851;
};

struct s376 {
    signed char f0;
    unsigned char f1;
    signed char[453313015] pad453313017;
    int32_t f453313017;
};

struct s377 {
    unsigned char f0;
    signed char f1;
};

struct s378 {
    unsigned char f0;
    signed char f1;
};

void fun_407323(int32_t ecx, struct s374* a2, int16_t a3) {
    signed char al4;
    uint32_t* edx5;
    uint32_t* edx6;
    uint32_t edi7;
    signed char* edi8;
    signed char al9;
    struct s375* edi10;
    void* edi11;
    struct s376* edi12;
    uint32_t ebp13;
    int32_t ebp14;
    int32_t ebp15;
    int1_t sf16;
    struct s377* edi17;
    struct s378* esi18;
    int32_t edx19;
    uint16_t fs20;

    gc1e829d = al4;
    *edx5 = *edx6 & edi7;
    __asm__("clc ");
    *edi8 = al9;
    edi10 = reinterpret_cast<struct s375*>(reinterpret_cast<int32_t>(edi11) + 1);
    edi12 = reinterpret_cast<struct s376*>(reinterpret_cast<uint32_t>(edi10) + 0x215b1353);
    if (ecx) {
    }
    ebp13 = ebp14 + ebp15 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edi10) < 0xdea4ecad);
    sf16 = reinterpret_cast<int32_t>(ebp13) < reinterpret_cast<int32_t>(0);
    if (sf16 != __intrinsic()) 
        goto 0x407308;
    (a2 + static_cast<int32_t>(a2))->f0 = *reinterpret_cast<signed char*>(&ecx);
    __asm__("daa ");
    if (!sf16) 
        goto 0x407301;
    if (ebp13) 
        goto addr_0x407350_13;
    *reinterpret_cast<signed char*>(edi12) = a2->f0;
    edi17 = reinterpret_cast<struct s377*>(reinterpret_cast<uint32_t>(edi12) + 1);
    esi18 = reinterpret_cast<struct s378*>(&a2->f1);
    __asm__("arpl [ebx+0xb], sp");
    __asm__("out dx, al");
    (esi18 + edx19 * 4)->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(fs20));
    edi17->f0 = esi18->f0;
    edi17->f1 = esi18->f1;
    addr_0x407350_13:
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi12) + 0x1b0501f9) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi12) + 0x1b0501f9) + 0x282a803c;
}

void fun_40736d(int32_t ecx) {
    int1_t below_or_equal2;
    int32_t eax3;
    int32_t eax4;
    int32_t ebx5;
    int32_t ebx6;
    int1_t pf7;
    uint1_t below_or_equal8;
    int32_t ebx9;
    signed char* edi10;
    int32_t ebp11;

    if (below_or_equal2) 
        goto 0x4073ee;
    __asm__("wait ");
    eax3 = eax4 - 1;
    *reinterpret_cast<uint32_t*>(ebx5 + 0x68162a77) = *reinterpret_cast<uint32_t*>(ebx6 + 0x68162a77) ^ reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    pf7 = __intrinsic();
    below_or_equal8 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(ebx9 + 0x68162a77) == 0)));
    do {
        __asm__("daa ");
        if (below_or_equal8) 
            goto 0x40734b;
        if (!pf7) 
            goto 0x40730c;
        __asm__("fnstcw word [edx-0x4b]");
        __asm__("fsubr dword [esi-0x39]");
        *edi10 = *reinterpret_cast<signed char*>(&eax3);
        ++edi10;
    } while (1);
    __asm__("aas ");
    *reinterpret_cast<int32_t*>(edi10 - 0x6b22a01) = *reinterpret_cast<int32_t*>(edi10 - 0x6b22a01) - ebp11;
}

void fun_40739e() {
    __asm__("salc ");
}

void fun_4073c0(unsigned char cl) {
    unsigned char dh2;
    uint32_t* ebx3;
    uint32_t* ebx4;
    uint32_t eax5;
    int32_t* ebx6;
    int32_t edx7;

    if (dh2 > cl) {
        *ebx3 = *ebx4 ^ eax5;
        __asm__("wait ");
        if (!*ebx6) {
            goto edx7;
        }
    }
}

struct s379 {
    signed char[123] pad123;
    unsigned char f123;
};

signed char g4de468f3;

void fun_4073ff(struct s379* ecx) {
    int32_t eax2;
    int32_t esi3;
    uint1_t cf4;
    int32_t ebx5;
    int32_t ebx6;
    int32_t ebx7;
    int32_t edx8;
    int32_t edx9;
    int32_t ebx10;
    int32_t ebx11;
    int32_t ebx12;
    int32_t ebx13;
    unsigned char bh14;

    eax2 = esi3;
    cf4 = reinterpret_cast<uint1_t>(!!*reinterpret_cast<signed char*>(ebx5 - 37));
    *reinterpret_cast<signed char*>(ebx6 - 37) = -*reinterpret_cast<signed char*>(ebx7 - 37);
    __asm__("xlatb ");
    __asm__("fmul st0, st5");
    if (!cf4) {
        eax2 = eax2 + 0x14a40753;
        cf4 = 0;
    }
    edx8 = edx9 + 1;
    ecx->f123 = reinterpret_cast<unsigned char>(ecx->f123 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + reinterpret_cast<uint1_t>(ecx->f123 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + cf4))));
    g4de468f3 = *reinterpret_cast<signed char*>(&eax2);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2 + ebx10 * 4) = ebx11;
    __asm__("rcl dword [eax], cl");
    __asm__("les ebx, [ebp+0x22adf08b]");
    *reinterpret_cast<unsigned char*>(edx8 - 99) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx8 - 99) & 99);
    *reinterpret_cast<unsigned char*>(ebx12 - 14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx13 - 14) ^ bh14);
    __asm__("lodsb ");
    __asm__("aaa ");
    __asm__("out dx, eax");
}

void fun_40743e() {
}

struct s380 {
    signed char[98] pad98;
    int32_t f98;
};

struct s381 {
    signed char[98] pad98;
    int32_t f98;
};

int32_t fun_cc491a4();

void fun_407483(int32_t ecx) {
    int32_t ecx2;
    int1_t zf3;
    int1_t sf4;
    int32_t edi5;
    int32_t eax6;
    int32_t ebx7;
    int32_t eax8;
    struct s380* ebp9;
    struct s381* ebp10;
    signed char* edi11;
    signed char al12;
    int32_t edi13;
    int32_t ebx14;
    int32_t ebx15;
    uint1_t cf16;
    signed char tmp8_17;
    int32_t eax18;
    int32_t esi19;
    signed char dh20;
    uint32_t eax21;
    int32_t eax22;
    signed char dl23;

    ecx2 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx2) & reinterpret_cast<uint1_t>(!zf3)) {
        while (sf4) {
            __asm__("lahf ");
            *reinterpret_cast<int32_t*>(ecx2 + 0x6005133e) = *reinterpret_cast<int32_t*>(ecx2 + 0x6005133e) + edi5;
            __asm__("fnstenv [edx]");
            eax6 = ebx7;
            __asm__("fsubr qword [ebx+0xabd9b08a]");
            ebx7 = (eax8 - 1) * ecx2 + 1;
            eax8 = eax6 + 0x6ee706b2;
            sf4 = eax8 < 0;
        }
    }
    ebp9->f98 = ebp10->f98 + reinterpret_cast<int32_t>(__zero_stack_offset());
    *edi11 = al12;
    edi13 = *reinterpret_cast<int32_t*>(ebx14 - 52) * 0x646d88cc;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx15) + 1) = -8;
    if (!__undefined()) 
        goto addr_0x40749a_10;
    cf16 = 0;
    tmp8_17 = *reinterpret_cast<signed char*>(ecx2 + 0x2eb6e1b4);
    *reinterpret_cast<signed char*>(ecx2 + 0x2eb6e1b4) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = tmp8_17;
    fun_cc491a4();
    eax18 = esi19 + 1;
    __asm__("insb ");
    *reinterpret_cast<signed char*>(ebx15 - 4) = dh20;
    *reinterpret_cast<unsigned char*>(ebx15 - 49) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx15 - 49) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1)) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax18) < reinterpret_cast<unsigned char>(81 - cf16)));
    __asm__("xlatb ");
    __asm__("int1 ");
    addr_0x40749a_10:
    cf16 = reinterpret_cast<uint1_t>(eax21 < 0x9b0933);
    if (eax22 <= 0x9b0933) {
        *reinterpret_cast<signed char*>(edi13 + 72) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi13 + 72) - dl23);
        __asm__("ror cl, cl");
        __asm__("outsd ");
        __asm__("aam 0xfe");
        __asm__("cmc ");
    }
}

void fun_4074c8() {
    int1_t sf1;

    if (!sf1) {
        __asm__("out 0xa5, al");
    }
}

void fun_4074ef(int32_t ecx) {
    int1_t sf2;
    signed char* esi3;
    int32_t edx4;
    uint32_t eax5;
    uint32_t eax6;
    uint32_t ebx7;
    int32_t ebx8;
    uint32_t eax9;
    int1_t less_or_equal10;
    signed char* edi11;
    signed char* edi12;
    int32_t edi13;

    __asm__("in al, 0x88");
    __asm__("iretd ");
    if (sf2) {
    }
    esi3 = reinterpret_cast<signed char*>(edx4 * 0x5d53d272);
    __asm__("insb ");
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__undefined() != __intrinsic()) | __undefined())) {
        addr_0x407503_4:
        eax5 = eax6 + 0x37645e60;
        __asm__("out dx, al");
        if (ecx) {
            *reinterpret_cast<uint32_t*>(eax5 + 0x33547563) = *reinterpret_cast<uint32_t*>(eax5 + 0x33547563) & ebx7;
            __asm__("hlt ");
        }
    } else {
        eax9 = reinterpret_cast<uint32_t>(ebx8(__return_address()));
        less_or_equal10 = *esi3 <= *edi11;
        *edi12 = *esi3;
        if (less_or_equal10) 
            goto addr_0x407502_12;
    }
    __asm__("in al, dx");
    __asm__("sti ");
    __asm__("lodsd ");
    __asm__("repne hlt ");
    addr_0x407502_12:
    eax6 = eax9 ^ *reinterpret_cast<uint32_t*>(edi13 + 1 - 0x2951a581);
    goto addr_0x407503_4;
}

signed char g69efcce6;

void fun_40753f(unsigned char* ecx) {
    uint1_t cf2;
    signed char dh3;
    uint1_t cf4;
    signed char dh5;
    int1_t cf6;
    uint32_t edx7;
    int32_t eax8;
    signed char al9;

    cf2 = reinterpret_cast<uint1_t>(*ecx < reinterpret_cast<unsigned char>(dh3 + cf4));
    *ecx = reinterpret_cast<unsigned char>(*ecx - reinterpret_cast<unsigned char>(dh5 + cf2));
    cf6 = edx7 < *reinterpret_cast<int32_t*>(eax8 - 0x5930da02) + cf2;
    __asm__("clc ");
    if (!cf6) 
        goto 0x4074dd;
    g69efcce6 = al9;
    __asm__("aaa ");
    if (__intrinsic()) 
        goto 0x407518;
    __asm__("outsd ");
    __asm__("rdtsc ");
}

void fun_407573(int32_t ecx) {
}

void fun_4075c4() {
    signed char* edx1;
    signed char* edx2;
    int32_t eax3;
    int32_t esi4;
    uint32_t ecx5;
    signed char ch6;
    signed char* edx7;
    signed char* edx8;
    int32_t edi9;
    int32_t edx10;
    int32_t edi11;
    int32_t edx12;

    __asm__("fiadd word [esi]");
    __asm__("in al, 0x51");
    __asm__("retf 0xa170");
    *edx1 = reinterpret_cast<signed char>(*edx2 >> 0x72);
    __asm__("arpl [eax-0x60], bx");
    __asm__("ror byte [ebx], 0x62");
    eax3 = esi4;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx5) + 1) = reinterpret_cast<signed char>(ch6 + *reinterpret_cast<signed char*>(&eax3));
    if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx5) + 1) < 0 != __intrinsic()) {
        *edx7 = reinterpret_cast<signed char>(*edx8 - 21);
        if (__intrinsic()) 
            goto 0x407580;
        __asm__("xlatb ");
        __asm__("insb ");
        if (!reinterpret_cast<uint1_t>(__intrinsic() | __undefined())) 
            goto 0x407586;
        __asm__("in eax, 0xd7");
        *reinterpret_cast<uint32_t*>(edi9 + edx10 * 4 - 90) = *reinterpret_cast<uint32_t*>(edi11 + edx12 * 4 - 90) & ecx5;
    }
}

void fun_40760d() {
    signed char* edi1;
    signed char* esi2;

    __asm__("aam 0xad");
    *edi1 = *esi2;
}

void fun_40766d() {
    __asm__("insb ");
    __asm__("rol dword [esi+0xb6a83cec], 1");
}

void fun_407676() {
    __asm__("out dx, eax");
    __asm__("insb ");
    __asm__("out 0xc0, al");
    __asm__("das ");
}

void fun_407682() {
    int32_t esi1;
    int32_t esi2;
    uint32_t eax3;
    unsigned char* eax4;
    signed char* eax5;
    signed char dh6;

    *reinterpret_cast<uint32_t*>(esi1 - 4) = *reinterpret_cast<uint32_t*>(esi2 - 4) | eax3;
    *eax4 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax5 + dh6)));
}

unsigned char g16d26159;

int16_t fun_40768c() {
    int32_t eax1;
    int32_t eax2;
    signed char dh3;

    __asm__("out dx, al");
    eax1 = eax2;
    __asm__("iretd ");
    g16d26159 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(g16d26159 + dh3) + __intrinsic());
    return *reinterpret_cast<int16_t*>(&eax1);
}

void fun_4076e2() {
    int32_t* edi1;
    int32_t* esi2;

    __asm__("aaa ");
    *edi1 = *esi2;
    __asm__("rep sahf ");
    __asm__("fsubr qword [edx]");
    __asm__("aam 0x9a");
    __asm__("bswap esi");
}

uint32_t ga1d910d0;

struct s382 {
    unsigned char f0;
    signed char[57] pad58;
    uint32_t f58;
};

struct s383 {
    unsigned char f0;
    unsigned char f1;
};

unsigned char g84324a7b;

uint32_t g49b21f80;

void fun_4076ff() {
    unsigned char** esp1;
    uint1_t cf2;
    uint1_t cf3;
    unsigned char* edi4;
    unsigned char* esi5;
    int32_t* esp6;
    unsigned char bl7;
    int1_t sf8;
    signed char* ebx9;
    signed char* ebx10;
    struct s382* ecx11;
    struct s382* eax12;
    void* edx13;
    unsigned char* edi14;
    uint1_t zf15;
    uint1_t less_or_equal16;
    uint1_t cf17;
    int32_t ebx18;
    int32_t ebx19;
    int32_t ebx20;
    uint1_t cf21;
    int1_t less22;
    struct s383* edi23;
    uint1_t cf24;
    uint1_t cf25;
    unsigned char* v26;
    unsigned char* ds27;
    int1_t zf28;
    uint32_t ecx29;
    int32_t ebx30;
    int32_t ebx31;

    esp1 = reinterpret_cast<unsigned char**>(__zero_stack_offset());
    goto addr_0x407707_2;
    addr_0x4077d5_3:
    __asm__("enter 0x5424, 0xac");
    cf2 = reinterpret_cast<uint1_t>(ga1d910d0 < reinterpret_cast<uint32_t>(esp1) + cf3);
    ga1d910d0 = ga1d910d0 - (reinterpret_cast<uint32_t>(esp1) + cf2);
    *edi4 = *esi5;
    esp6 = reinterpret_cast<int32_t*>(esp1 - 2);
    *esp6 = 0x87;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esp6) - 0x7bcdb53f + 32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esp6) - 0x7bcdb53f + 32) ^ bl7);
    addr_0x4077e5_8:
    addr_0x40781b_9:
    do {
    } while (sf8);
    *ebx9 = reinterpret_cast<signed char>(*ebx10 << *reinterpret_cast<unsigned char*>(&ecx11));
    addr_0x4077aa_13:
    __asm__("outsb ");
    __asm__("hlt ");
    addr_0x4077ce_14:
    esp1 = reinterpret_cast<unsigned char**>(reinterpret_cast<uint32_t>(esp1) ^ eax12->f58);
    __asm__("retf ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) + 0xffffffc8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) + 0xffffffc8) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx13) + 1));
    cf3 = 0;
    goto addr_0x4077d5_3;
    while (1) {
        addr_0x4077c5_15:
        edi4 = edi14 - 1;
        zf15 = reinterpret_cast<uint1_t>(edi4 == 0);
        less_or_equal16 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edi4) < reinterpret_cast<int32_t>(0) != __intrinsic()) | zf15);
        **reinterpret_cast<signed char**>(&edi4) = **reinterpret_cast<signed char**>(&esi5);
        *reinterpret_cast<signed char**>(&edi4) = *reinterpret_cast<signed char**>(&edi4) + 1;
        *reinterpret_cast<signed char**>(&esi5) = *reinterpret_cast<signed char**>(&esi5) + 1;
        if (!less_or_equal16) 
            goto addr_0x4077d5_3;
        if (!(cf3 | zf15)) 
            goto addr_0x4077ce_14;
        while (1) {
            cf17 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx18 - 93) < 0xffffffe6);
            *reinterpret_cast<int32_t*>(ebx19 - 93) = *reinterpret_cast<int32_t*>(ebx20 - 93) + 26;
            eax12 = reinterpret_cast<struct s382*>(reinterpret_cast<uint32_t>(eax12) + 0x73d71e69 + cf17);
            ++esp1;
            edi14 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) * 0x1682b175);
            cf21 = __intrinsic();
            less22 = __undefined() != __intrinsic();
            do {
                if (less22) 
                    break;
                edi23 = reinterpret_cast<struct s383*>(reinterpret_cast<uint32_t>(edi14) + reinterpret_cast<uint16_t>(esi5) + cf21);
                __asm__("sti ");
                cf24 = reinterpret_cast<uint1_t>(*esi5 < edi23->f0);
                edi23->f0 = *esi5;
                edi14 = &edi23->f1;
                ++esi5;
                cf25 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax12) < 0x4cec9630 + cf24);
                eax12 = reinterpret_cast<struct s382*>(reinterpret_cast<uint32_t>(eax12) - (0x4cec9630 + cf25));
                --esp1;
                v26 = ds27;
                if (reinterpret_cast<int32_t>(eax12) < reinterpret_cast<int32_t>(static_cast<uint32_t>(cf25))) 
                    goto addr_0x4077e5_8;
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx13) - 0x756301b4) = 0;
                sf8 = __undefined();
                ecx11 = reinterpret_cast<struct s382*>(reinterpret_cast<uint32_t>(ecx11) - 1);
                if (ecx11) 
                    goto addr_0x40781b_9;
                __asm__("repne cmc ");
                *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) & 0xfc);
                eax12 = reinterpret_cast<struct s382*>(&eax12->pad58);
                __asm__("wait ");
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1) = 0xa7;
                *reinterpret_cast<unsigned char*>(&ecx11) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx11) | 0xa7);
                if (__intrinsic()) 
                    goto addr_0x4077aa_13;
                if (__intrinsic()) 
                    goto addr_0x407765_31;
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx11) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx11) + 1) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx11) + 0xc1e753ba));
                cf21 = 0;
                zf28 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx11) + 1) == 0;
                less22 = __intrinsic();
                esi5 = v26;
                esp1 = esp1 + 2;
                ecx11 = reinterpret_cast<struct s382*>(reinterpret_cast<uint32_t>(ecx11) - 1);
                if (0) 
                    goto addr_0x4077aa_13;
            } while (zf28);
            break;
            while (*reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) + 87), !__intrinsic()) {
                while (*reinterpret_cast<unsigned char*>(&edx13) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx13) & g84324a7b), __intrinsic()) {
                    while (1) {
                        edx13 = reinterpret_cast<void*>(0x84324ac1);
                        *reinterpret_cast<unsigned char*>(&edx13) = reinterpret_cast<unsigned char>(0xc1 - *reinterpret_cast<unsigned char*>(&ecx11));
                        __asm__("lds ebp, [esi-0x77]");
                        do {
                            esp1 = esp1 - 2 - 2;
                            ++edi14;
                            ecx11 = reinterpret_cast<struct s382*>(reinterpret_cast<uint32_t>(ecx11) - 1);
                        } while (ecx11);
                        if (!__undefined()) 
                            break;
                        addr_0x407707_2:
                        __asm__("rol byte [ebx+0xa6fc314], 1");
                    }
                }
                ++edi14;
                eax12 = ecx11;
                g49b21f80 = g49b21f80 >> -53;
                ecx29 = reinterpret_cast<uint32_t>(ebx30 * -47);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx29) + 1) = 82;
                ecx11 = reinterpret_cast<struct s382*>(ecx29 >> 0xffffff92);
                esi5 = reinterpret_cast<unsigned char*>(*reinterpret_cast<int32_t*>(ebx31 + 0x72e3e5fc) * 0xf70c1690);
                cf3 = __intrinsic();
                __asm__("daa ");
                if (!__undefined()) 
                    goto addr_0x4077c5_15;
                esp1 = reinterpret_cast<unsigned char**>(reinterpret_cast<uint32_t>(esp1) + 1);
                __asm__("fst qword [eax+0x71]");
                __asm__("fidiv word [esi+0x252589fc]");
                addr_0x407765_31:
                ecx11->f0 = reinterpret_cast<unsigned char>(ecx11->f0 | 0xa7);
            }
        }
        *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) | 0xd2);
        *edi14 = *esi5;
        edi14 = edi14 + 4;
        esi5 = esi5 + 4;
        eax12 = reinterpret_cast<struct s382*>(reinterpret_cast<uint32_t>(eax12) + 0x4d1a92e7);
        cf3 = __intrinsic();
    }
}

void fun_4077ef(int32_t ecx) {
    int32_t* edi2;
    int32_t ebp3;
    uint32_t edx4;
    uint32_t eax5;
    signed char tmp8_6;
    uint32_t ebx7;
    uint32_t eax8;
    uint1_t below_or_equal9;

    *edi2 = ebp3;
    *reinterpret_cast<signed char*>(&edx4) = 36;
    eax5 = edx4;
    tmp8_6 = *reinterpret_cast<signed char*>(ebp3 - 0x4d882ab6 - 13);
    *reinterpret_cast<signed char*>(ebp3 - 0x4d882ab6 - 13) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax5) + 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax5) + 1) = tmp8_6;
    *reinterpret_cast<uint32_t*>(ecx - 0xe04c437) = *reinterpret_cast<uint32_t*>(ecx - 0xe04c437) ^ ebx7;
    eax8 = (eax5 ^ 0x58e33337) + 1;
    __asm__("in eax, dx");
    __asm__("stc ");
    *reinterpret_cast<signed char*>(&eax8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax8) + 0x6a);
    below_or_equal9 = reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&eax8) == 0));
    if (below_or_equal9) 
        goto 0x407798;
    if (below_or_equal9) {
        __asm__("rol dword [eax], 1");
    }
}

void fun_407846() {
    uint32_t eax1;
    uint32_t eax2;
    int32_t ebp3;

    eax1 = eax2 ^ 0x47446674;
    *reinterpret_cast<uint32_t*>(eax1 - 81) = *reinterpret_cast<uint32_t*>(eax1 - 81) + ebp3;
    return;
}

void fun_407856(int32_t ecx) {
    __asm__("retf ");
    __asm__("pushad ");
    __asm__("cmc ");
    __asm__("outsb ");
    if (!(ecx - 1)) {
        __asm__("hlt ");
    }
}

unsigned char gfd13b6a9;

void fun_4078a0(int32_t ecx) {
    int1_t below_or_equal2;
    unsigned char al3;
    int32_t esi4;
    int32_t esi5;
    int32_t ebp6;
    int32_t esi7;

    __asm__("ror bh, 0x97");
    if (!below_or_equal2) {
        al3 = gfd13b6a9;
        *reinterpret_cast<uint32_t*>(esi4 - 0x229291f1) = *reinterpret_cast<int32_t*>(esi5 - 0x229291f1) + ebp6 + reinterpret_cast<uint1_t>(al3 < 0xc3);
        if (*reinterpret_cast<int32_t*>(esi7 - 0x229291f1) < 0 != __intrinsic()) {
        }
    }
}

void fun_4078c4() {
    int32_t edx1;
    int32_t edx2;
    uint1_t cf3;

    __asm__("into ");
    *reinterpret_cast<uint32_t*>(edx1 - 62) = *reinterpret_cast<int32_t*>(edx2 - 62) + reinterpret_cast<int32_t>(__zero_stack_offset()) + cf3;
}

void fun_4078ca(int32_t ecx) {
    uint48_t v2;
    int32_t ecx3;
    int1_t zf4;
    uint1_t cf5;
    unsigned char al6;
    uint1_t cf7;
    uint32_t eax8;
    signed char al9;
    void* cs10;
    int16_t ss11;
    uint32_t ecx12;
    signed char bh13;
    int32_t ebx14;
    int32_t esi15;
    int32_t ebx16;
    int32_t esi17;
    uint32_t edx18;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2) = reinterpret_cast<int32_t>(__return_address());
    ecx3 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx3) & reinterpret_cast<uint1_t>(!zf4)) 
        goto 0x4078a2;
    cf5 = reinterpret_cast<uint1_t>(al6 < reinterpret_cast<unsigned char>(28 + cf7));
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(al9 - reinterpret_cast<unsigned char>(28 + cf5));
    *reinterpret_cast<void**>(&v2) = cs10;
    *reinterpret_cast<int16_t*>(reinterpret_cast<int16_t>(*reinterpret_cast<void**>(&v2)) + 4 - 2) = ss11;
    ecx12 = eax8 - (0x15c33eff + reinterpret_cast<uint1_t>(eax8 < 0x15c33eff + cf5));
    __asm__("rep rol byte [edi-0x4f], cl");
    __asm__("aam 0xa3");
    *reinterpret_cast<int32_t*>(ecx12 - 0x172caa9e) = *reinterpret_cast<int32_t*>(ecx12 - 0x172caa9e) << *reinterpret_cast<unsigned char*>(&ecx12);
    *reinterpret_cast<signed char*>(ecx3 - 67) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx3 - 67) + bh13);
    *reinterpret_cast<uint32_t*>(ebx14 + esi15 + 0x5976ed51) = *reinterpret_cast<uint32_t*>(ebx16 + esi17 + 0x5976ed51) | edx18;
    __asm__("int 0xa4");
    __asm__("clc ");
    __asm__("fidivr word [edx+0xb7bd182c]");
}

struct s384 {
    int32_t f0;
    int32_t f4;
};

struct s385 {
    unsigned char f0;
    int32_t f1;
};

unsigned char gb1fc7bc0;

uint32_t g6fca;

void fun_40793e(int32_t ecx) {
    struct s384* esi2;
    void* esi3;
    int1_t zf4;
    int32_t* edi5;
    int32_t* edi6;
    int32_t* esi7;
    int32_t eax8;
    int16_t ax9;
    uint1_t cf10;
    struct s385* ebp11;
    uint16_t gs12;

    esi2 = reinterpret_cast<struct s384*>(reinterpret_cast<int32_t>(esi3) - 1);
    if (ecx) 
        goto 0x4078e4;
    zf4 = esi2->f0 == *edi5;
    *edi6 = esi2->f0;
    esi7 = &esi2->f4;
    __asm__("cmc ");
    eax8 = static_cast<int32_t>(ax9);
    if (!zf4) {
        __asm__("ror dword [esi+0x55], 1");
        cf10 = reinterpret_cast<uint1_t>(ebp11->f0 < gb1fc7bc0);
        gb1fc7bc0 = ebp11->f0;
        esi7 = &ebp11->f1;
        g6fca = g6fca + 0x6fca + cf10;
        __asm__("ficom dword [edx]");
        eax8 = ecx + 1 + 0xcb3d1b3;
    }
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax8) ^ 14);
    __asm__("daa ");
    *esi7 = eax8;
    __asm__("fcom2 st2");
    *reinterpret_cast<uint32_t*>(eax8 - 0x5d7e1712) = static_cast<uint32_t>(gs12);
    __asm__("sahf ");
    __asm__("cdq ");
}

signed char g88c067b7;

signed char gb84c36a7;

uint32_t g2cc3072;

void fun_407983(int32_t ecx) {
    int1_t pf2;
    uint32_t ecx3;
    signed char al4;
    uint32_t* esi5;
    uint32_t* esi6;
    int32_t eax7;
    int32_t ebx8;
    uint32_t esi9;

    if (!pf2) {
        __asm__("fistp dword [ebp+0x72fa892]");
        ecx3 = reinterpret_cast<uint32_t>(ecx + 1);
        g88c067b7 = al4;
        *esi5 = *esi6 ^ ecx3;
        if (!0) {
            eax7 = ebx8;
            gb84c36a7 = *reinterpret_cast<signed char*>(&eax7);
            if (!__intrinsic()) {
                __asm__("insd ");
                __asm__("int 0x1a");
            } else {
                __asm__("lodsb ");
                *reinterpret_cast<uint32_t*>(ecx3 + 0x250ba67b) = *reinterpret_cast<uint32_t*>(ecx3 + 0x250ba67b) & esi9;
                g2cc3072 = g2cc3072 | reinterpret_cast<uint32_t>(__return_address());
            }
        }
        if (1) {
        }
    }
}

void fun_4079cc(int32_t ecx) {
    int32_t edx2;
    int32_t edx3;
    unsigned char* ebx4;
    unsigned char* ebx5;
    int32_t esi6;

    __asm__("fstp qword [esi+ebp*8+0xc00fa6fd]");
    __asm__("lodsb ");
    __asm__("fldenv [edx]");
    __asm__("fsub qword [edx+0xe613b305]");
    edx2 = edx3 - 1;
    __asm__("fstp1 st6");
    *ebx4 = reinterpret_cast<unsigned char>(*ebx5 & *reinterpret_cast<unsigned char*>(&edx2));
    *reinterpret_cast<int32_t*>(esi6 + 1 - 0x1e5482d4)(__return_address());
    __asm__("aaa ");
}

void fun_407a1f(int32_t ecx) {
    uint32_t esi2;
    uint32_t esi3;
    int32_t ebp4;
    signed char bl5;
    uint32_t* edi6;
    uint32_t* edi7;
    uint32_t edx8;

    esi2 = esi3 & *reinterpret_cast<uint32_t*>(ebp4 - 0x1eb4f421);
    __asm__("prefetch [edx+0xbf9a5fdc]");
    *reinterpret_cast<signed char*>(esi2 - 62) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi2 - 62) - bl5);
    if (!__intrinsic()) 
        goto 0x4079f4;
    __asm__("popad ");
    edi6[ecx * 2] = edi7[ecx * 2] ^ edx8;
}

void fun_407a5e(int32_t ecx) {
    signed char al2;
    int32_t edx3;
    int32_t edx4;
    signed char ah5;

    if (al2 >= 8) 
        goto 0x4079e6;
    __asm__("clc ");
    *reinterpret_cast<signed char*>(edx3 - 0x63c5de2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx4 - 0x63c5de2) + ah5);
    __asm__("retf 0xe52c");
}

int32_t gf23cc9ec;

int32_t fun_6f837a99();

signed char g1dc455f8;

void fun_407a75(int32_t ecx) {
    int32_t eax2;

    gf23cc9ec = ecx;
    __asm__("insb ");
    __asm__("rcl dword [ecx+0x93934e7d], cl");
    __asm__("insb ");
    fun_6f837a99();
    __asm__("fld qword [edx+esi*8+0x56]");
    __asm__("out 0x9, al");
    __asm__("retf 0x4806");
    __asm__("rcl byte [ebx-0x2], cl");
    __asm__("fdiv qword [esi]");
    *reinterpret_cast<int32_t*>(__return_address()) = eax2;
    __asm__("int1 ");
    g1dc455f8 = reinterpret_cast<signed char>(g1dc455f8 - 72);
    __asm__("int1 ");
}

void fun_407ace() {
    int32_t* esp1;
    uint32_t* esi2;
    int32_t ecx3;
    void* edx4;
    void* edx5;
    int32_t ebp6;
    int32_t edx7;
    int32_t* ebx8;
    void* ebx9;
    int32_t* esp10;
    int32_t edi11;
    signed char* edx12;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) | *esi2);
    if (!__intrinsic()) {
        ecx3 = *esp1;
        edx4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx5) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp6 + edx7 * 2 - 46)));
        ebx8 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx9) - 1);
        esp10 = esp1 + 1 - 1;
        *esp10 = edi11;
        edx12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx4) - (reinterpret_cast<int32_t>(ebx8) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edx4) < reinterpret_cast<int32_t>(ebx8) + __intrinsic())));
        *ebx8 = *ebx8 + 24;
        *edx12 = reinterpret_cast<signed char>(*edx12 << *reinterpret_cast<unsigned char*>(&ecx3));
        goto *esp10;
    }
}

struct s386 {
    unsigned char f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s387 {
    uint32_t f0;
    int32_t f4;
};

void fun_407ad4(int32_t ecx) {
    int32_t ecx2;
    uint32_t ebx3;
    int32_t ebx4;
    struct s386* esi5;
    int32_t ebp6;
    void* eax7;
    void* eax8;
    signed char dl9;
    struct s387* edi10;
    void* edi11;
    unsigned char edi12;

    ecx2 = ecx - 1;
    if (ecx2) 
        goto 0x407b19;
    ebx3 = reinterpret_cast<uint32_t>(ebx4 - 1);
    __asm__("aas ");
    if (reinterpret_cast<uint1_t>(!!(ecx2 - 1)) & reinterpret_cast<uint1_t>(!!ebx3)) 
        goto 0x407abe;
    esi5 = *reinterpret_cast<struct s386**>(ebp6 - 0x6b);
    __asm__("outsb ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax7) + reinterpret_cast<int32_t>(esi5) * 2 + 76) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax8) + reinterpret_cast<int32_t>(esi5) * 2 + 76) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1));
    esi5->f0 = reinterpret_cast<unsigned char>(esi5->f0 - dl9);
    edi10 = reinterpret_cast<struct s387*>(reinterpret_cast<int32_t>(edi11) - esi5->f0);
    __asm__("clc ");
    edi10->f0 = ebx3 - (0x5898d361 + reinterpret_cast<uint1_t>(ebx3 < 0x5898d361 + reinterpret_cast<uint1_t>(edi12 < esi5->f0)));
    edi10->f4 = esi5->f4;
}

struct s388 {
    signed char[1] pad1;
    signed char f1;
};

struct s389 {
    signed char f0;
    signed char f1;
};

unsigned char g5c4b7c84;

void fun_407b02(signed char cl) {
    int1_t below_or_equal2;
    uint32_t* ebx3;
    void* esp4;
    signed char* edi5;
    signed char* esi6;
    signed char* esi7;
    struct s388* esi8;
    struct s389* edi9;
    void* edi10;
    uint32_t eax11;
    uint32_t eax12;
    int1_t sf13;
    int1_t below_or_equal14;
    uint16_t ss15;
    uint32_t* edx16;
    uint32_t* edx17;
    int32_t ebx18;
    uint32_t eax19;
    int32_t ebp20;
    uint32_t ebp21;
    unsigned char* edx22;
    signed char dh23;
    int32_t edx24;
    unsigned char dh25;
    int32_t edx26;

    if (!below_or_equal2) {
        __asm__("in al, dx");
        *reinterpret_cast<signed char*>(&ebx3) = 0x6c;
        esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 1);
        *edi5 = *esi6;
        esi7 = &esi8->f1;
        edi9 = reinterpret_cast<struct s389*>(reinterpret_cast<int32_t>(edi10) + 1 - 1);
        eax11 = eax12 & 0xff78d8dd;
        do {
        } while (__intrinsic());
        if (!__intrinsic()) 
            goto addr_0x407b69_8;
    } else {
        __asm__("fidivr word [ebx]");
        if (sf13) {
            goto addr_0x407b69_8;
        } else {
            if (!below_or_equal14) 
                goto 0x407aca;
        }
    }
    *ebx3 = static_cast<uint32_t>(ss15);
    __asm__("popad ");
    *edx16 = *edx17 >> 68;
    g5c4b7c84 = 0xff;
    ebx18 = reinterpret_cast<int32_t>(ebx3) - 1;
    eax19 = eax11 + *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp4) + 1 + eax11 * 2 + 0x64b84e22);
    __asm__("fisttp qword [ecx-0x52]");
    ebp20 = *reinterpret_cast<int32_t*>(ebp21 >> cl);
    if (!eax19) 
        goto addr_0x407bc6_16;
    __asm__("into ");
    edi9->f1 = *esi7;
    __asm__("in eax, 0x3");
    __asm__("rcr dword [eax+0x4c7f155b], 0x26");
    addr_0x407bc6_16:
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx22) + 1) = reinterpret_cast<unsigned char>(dh23 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx24 + 0x667bf959) + reinterpret_cast<uint1_t>(dh25 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx26 + 0x667bf959) + __intrinsic()))));
    edi9->f0 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax19) + 1);
    __asm__("in al, 0x10");
    *edx22 = reinterpret_cast<unsigned char>(*edx22 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ebx18) + reinterpret_cast<uint1_t>(*edx22 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ebx18) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(*reinterpret_cast<unsigned char**>(ebp20 + 1 - 47)) < reinterpret_cast<uint32_t>(edx22))))));
    __asm__("in eax, 0x35");
    addr_0x407b69_8:
    __asm__("rcr edx, cl");
    __asm__("fnstcw word [ebx+0x1a599e04]");
    if (reinterpret_cast<int32_t>(eax11 & 0xe0a01dd4) >= reinterpret_cast<int32_t>(0)) {
    }
}

struct s390 {
    signed char[6] pad6;
    unsigned char f6;
};

void fun_407b3e(struct s390* ecx) {
    int32_t edx2;
    int32_t eax3;
    int32_t esi4;
    int32_t esi5;
    int32_t esi6;
    int32_t esi7;
    signed char* edi8;
    signed char* esi9;
    int1_t less_or_equal10;
    uint1_t cf11;
    signed char bl12;
    signed char bl13;

    __asm__("int 0xfd");
    edx2 = eax3;
    *reinterpret_cast<int32_t*>(esi4 - 34) = *reinterpret_cast<int32_t*>(esi5 - 34) + 1;
    if (reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(esi6 - 34) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(esi7 - 34) == 0)) 
        goto 0x407bbb;
    *edi8 = *esi9;
    less_or_equal10 = reinterpret_cast<signed char>(ecx->f6) <= reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx2) + 1));
    cf11 = reinterpret_cast<uint1_t>(ecx->f6 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx2) + 1));
    ecx->f6 = reinterpret_cast<unsigned char>(ecx->f6 - *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx2) + 1));
    __asm__("aaa ");
    if (ecx) 
        goto 0x407b04;
    if (less_or_equal10) 
        goto "???";
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 0x5a1b103) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 0x5a1b103) - reinterpret_cast<unsigned char>(bl12 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 0x5a1b103) < reinterpret_cast<unsigned char>(bl13 + cf11))));
    __asm__("int1 ");
}

void fun_407b7e(int32_t ecx) {
    uint32_t ecx2;
    uint1_t cf3;
    uint32_t edx4;

    __asm__("cmc ");
    if (ecx) 
        goto 0x407baf;
    __asm__("frstor [0x951e0be6]");
    __asm__("o16 sti ");
    __asm__("cli ");
    ecx2 = ecx + ecx + cf3;
    *reinterpret_cast<uint32_t*>(ecx2 - 0x66bead5c) = *reinterpret_cast<uint32_t*>(ecx2 - 0x66bead5c) & edx4;
}

unsigned char g185bce76;

void fun_407be6(int32_t ecx) {
    int32_t ebp2;
    int32_t ebp3;
    uint1_t zf4;
    uint32_t* eax5;
    uint32_t eax6;
    uint32_t* edi7;
    uint32_t esi8;
    uint32_t esi9;
    int32_t ebx10;

    ebp2 = ebp3 - 1;
    zf4 = reinterpret_cast<uint1_t>(ebp2 == 0);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(*eax5 < 0xffffff8c) | zf4)) {
        while (1) {
            if (!zf4) 
                goto 0x407c07;
            eax6 = eax6 & 0x17488722;
            addr_0x407c3b_4:
            ++edi7;
            __asm__("cli ");
            esi8 = esi9 + ebx10 + reinterpret_cast<uint1_t>(*edi7 < eax6);
            *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax6) + *reinterpret_cast<signed char*>(esi8 + 0x19044101)) + __intrinsic());
            zf4 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax6) == 0);
            if (!ecx) 
                break;
        }
        if (!__intrinsic()) 
            goto 0x407c17;
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi7) - 82) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi7) - 82) << 1;
    } else {
        *reinterpret_cast<unsigned char*>(&eax6) = g185bce76;
        __asm__("salc ");
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(ebp2 < 0 != __intrinsic()) | zf4)) 
            goto addr_0x407c3b_4;
    }
}

struct s391 {
    signed char[100] pad100;
    signed char f100;
};

struct s392 {
    signed char[100] pad100;
    signed char f100;
};

void fun_407bf5() {
    struct s391* edx1;
    struct s392* edx2;
    signed char ah3;

    __asm__("enter 0x1e44, 0x55");
    edx1->f100 = reinterpret_cast<signed char>(edx2->f100 + ah3);
}

void fun_407c25() {
    int32_t eax1;

    if (eax1 + 1 < 0 == __intrinsic()) 
        goto 0x407bc6;
    __asm__("fistp dword [edx]");
}

void fun_407c2b() {
    __asm__("retf 0x6c68");
}

struct s393 {
    signed char[98] pad98;
    uint32_t f98;
};

void fun_407c4f(signed char* ecx) {
    struct s393* eax2;
    uint32_t edx3;
    int32_t eax4;
    int32_t ebx5;
    int32_t ebx6;
    signed char bh7;
    uint32_t* esi8;
    int32_t* esi9;
    int32_t esi10;
    uint32_t* esi11;
    int32_t esi12;
    uint32_t edx13;

    eax2->f98 = eax2->f98 ^ edx3;
    eax4 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax2) - 0x423dd526) * 0xafd0bc32;
    *reinterpret_cast<signed char*>(ebx5 + 0x69458554) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx6 + 0x69458554) - bh7);
    __asm__("fcom dword [ebx+0x8baa888f]");
    *ecx = *reinterpret_cast<signed char*>(&eax4);
    __asm__("das ");
    *esi8 = *esi9 - (esi10 + reinterpret_cast<uint1_t>(*esi11 < esi12 + reinterpret_cast<uint1_t>(edx13 < 0x8c325911)));
}

void fun_407c99(int32_t ecx) {
    int32_t ebx2;
    signed char bl3;
    uint32_t edi4;

    __asm__("lodsd ");
    *reinterpret_cast<signed char*>(ebx2 + ecx * 8 + 0x416a1455) = bl3;
    __asm__("in al, 0xd5");
    __asm__("arpl [edi-0x5a], sp");
    __asm__("daa ");
    if (reinterpret_cast<uint32_t>(__return_address()) <= edi4 || ecx - 1) {
    }
}

void fun_407cb8() {
    signed char* edi1;
    signed char* esi2;

    *edi1 = *esi2;
}

struct s394 {
    signed char[4] pad4;
    signed char f4;
};

void fun_407ccf(int32_t ecx) {
    int1_t zf2;
    int32_t* esi3;
    int32_t* edi4;
    int32_t* edi5;
    int32_t* esi6;
    struct s394* edi7;
    signed char al8;

    zf2 = *esi3 == *edi4;
    *edi5 = *esi6;
    if (!zf2) {
        __asm__("iretd ");
        __asm__("fs lodsd ");
        if (!__intrinsic()) {
            __asm__("salc ");
            __asm__("wait ");
            edi7->f4 = al8;
            __asm__("arpl dx, cx");
            __asm__("frstor [0xe93]");
        }
    }
}

int32_t g548d9053;

signed char g6c34674;

void fun_407cf0(int32_t ecx) {
    int1_t less_or_equal2;
    int32_t eax3;
    int32_t* edi4;
    int32_t* esi5;
    signed char al6;
    unsigned char* ebx7;
    unsigned char* ebx8;
    unsigned char ah9;
    signed char* ebx10;
    int32_t ebx11;
    int32_t ebx12;
    uint32_t ebp13;

    if (!less_or_equal2) {
        __asm__("rol dword [gs:esi-0xd], 0x78");
        g548d9053 = eax3;
        *edi4 = *esi5;
        __asm__("fldcw word [edx]");
        g6c34674 = al6;
        __asm__("cmc ");
        *ebx7 = reinterpret_cast<unsigned char>(*ebx8 & ah9);
        __asm__("das ");
        if (reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*ebx10 == 0)) 
            goto 0x407d63;
    } else {
        __asm__("int1 ");
        *reinterpret_cast<uint32_t*>(ebx11 - 0x53497764) = *reinterpret_cast<uint32_t*>(ebx12 - 0x53497764) & ebp13;
        if (ecx - 1) {
        }
    }
}

void fun_407d01(int32_t ecx) {
    uint32_t eax2;

    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>((eax2 ^ 0xc49fe3d7) == 0)) 
        goto 0x407cda;
    return;
}

void fun_407d6d() {
    __asm__("lodsd ");
}

void fun_407d72() {
    int32_t* edi1;
    int32_t* esi2;

    *edi1 = *esi2;
}

void fun_407d99() {
}

void fun_407da3() {
    __asm__("cmc ");
}

void fun_407da8() {
    __asm__("into ");
    __asm__("arpl [eax-0x6c], ax");
}

void fun_407db4() {
    __asm__("rcl byte [edx+edx*8+0x1d76b7d6], cl");
    __asm__("into ");
}

void fun_407dcd() {
}

void fun_407dd5() {
}

struct s395 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_407dd8() {
    uint1_t cf1;
    uint32_t* esi2;
    uint32_t* edi3;
    int32_t* edi4;
    int32_t* esi5;
    unsigned char* edi6;
    struct s395* edi7;
    int32_t ebp8;
    uint16_t ss9;

    __asm__("outsd ");
    __asm__("ror byte [ebp-0x2a], cl");
    cf1 = reinterpret_cast<uint1_t>(*esi2 < *edi3);
    *edi4 = *esi5;
    edi6 = &edi7->f4;
    __asm__("fmul st0, st4");
    *edi6 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*edi6 + 13) + cf1);
    *reinterpret_cast<uint32_t*>(ebp8 - 0xdccba2e) = static_cast<uint32_t>(ss9);
}

void fun_407df2() {
    __asm__("fmul dword [ebp+0x32f1a699]");
}

void fun_407dff() {
    __asm__("aas ");
}

void fun_407e0b(signed char* ecx) {
    signed char al2;

    __asm__("cdq ");
    *ecx = reinterpret_cast<signed char>(*ecx + al2);
}

void fun_407e17(int32_t ecx) {
    if (!__intrinsic()) {
    }
}

void fun_407e1f() {
    int32_t* edx1;

    goto *edx1;
}

void fun_407e50(int32_t ecx) {
    int32_t edi2;
    int32_t eax3;
    int32_t ebx4;
    uint1_t cf5;

    __asm__("fdiv st0, st5");
    if (edi2 + 1) {
        if (!(reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(eax3 == 0xee2cea44))) {
            __asm__("clc ");
        }
    } else {
        __asm__("lodsd ");
        *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(0xd4 - reinterpret_cast<unsigned char>(0xd4 + reinterpret_cast<uint1_t>(0xd4 < reinterpret_cast<unsigned char>(0xd4 + cf5))));
        __asm__("fistp word [ecx+edi*4]");
        *reinterpret_cast<int32_t*>(ebx4 - 0x460694c2) = *reinterpret_cast<int32_t*>(ebx4 - 0x460694c2) << 1;
    }
}

void fun_407e69() {
    int32_t* edi1;
    int32_t eax2;

    *edi1 = eax2;
}

void fun_407e8b() {
    __asm__("out 0x4d, al");
}

void fun_407e93() {
}

void fun_407eab() {
    __asm__("fistp qword [edx]");
}

struct s396 {
    signed char[94] pad94;
    uint32_t f94;
};

struct s397 {
    signed char[94] pad94;
    uint32_t f94;
};

void fun_407eb3() {
    struct s396* esi1;
    struct s397* esi2;
    int32_t* edx3;
    int32_t* edx4;
    int32_t edx5;

    __asm__("in al, 0x41");
    esi1->f94 = esi2->f94 & 1;
    *edx3 = *edx4 - edx5;
}

void fun_407ec8() {
}

void fun_407ed6() {
    __asm__("cdq ");
}

void fun_407ee2() {
    int32_t ebp1;
    int32_t ebp2;
    signed char ch3;
    uint1_t cf4;

    *reinterpret_cast<unsigned char*>(ebp1 + 0x3770accf) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp2 + 0x3770accf) + ch3) + cf4);
}

struct s398 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_407ef4(uint32_t* ecx) {
    struct s398* edi2;
    int32_t* esi3;

    __asm__("rol byte [edx+0xaa2b4dd9], cl");
    __asm__("das ");
    __asm__("fstp tword [esi]");
    edi2->f1 = *esi3;
    *ecx = *ecx ^ 0xffffff8d;
}

void fun_407f1f() {
    __asm__("aam 0xf8");
    __asm__("fbld tword [ebx+0x22]");
}

uint32_t* fun_64cea9f4();

void fun_407f2c(int32_t ecx, int32_t a2) {
    uint32_t eax3;
    signed char al4;
    uint32_t edx5;
    uint32_t* eax6;

    *reinterpret_cast<signed char*>(&eax3) = reinterpret_cast<signed char>(al4 - 77);
    __asm__("fidiv word [esi+0xd5871e9]");
    __asm__("retf ");
    __asm__("clc ");
    edx5 = eax3 | 0xc3398c64;
    __asm__("aaa ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = -97;
    eax6 = fun_64cea9f4();
    __asm__("arpl [ecx], ax");
    __asm__("fst qword [ebx-0x3b]");
    *reinterpret_cast<uint32_t*>(edx5 - 0x49521800) = *reinterpret_cast<uint32_t*>(edx5 - 0x49521800) ^ reinterpret_cast<uint32_t>(__return_address());
    *eax6 = *eax6 - reinterpret_cast<uint32_t>(__return_address());
    goto a2;
}

struct s399 {
    signed char[37] pad37;
    uint32_t f37;
};

int32_t fun_1d3f0d28();

int32_t gf7dafeea;

void fun_407f7e(int32_t ecx) {
    int1_t pf2;
    struct s399* edi3;
    uint32_t ebp4;
    uint32_t eax5;
    uint1_t cf6;
    uint1_t below_or_equal7;
    int32_t esi8;
    int32_t ebx9;
    int32_t edx10;
    uint1_t cf11;
    int32_t eax12;
    uint32_t eax13;
    int32_t* edi14;
    int32_t edi15;
    int32_t* esi16;
    uint32_t* edi17;

    if (pf2) {
        __asm__("aam 0xa6");
    }
    __asm__("out dx, eax");
    if (!(edi3->f37 & ebp4)) {
        addr_0x407fb7_4:
        __asm__("in al, 0x3d");
        eax5 = eax5 ^ 0x503299cb;
        cf6 = 0;
        below_or_equal7 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(eax5 == 0)));
    } else {
        esi8 = *reinterpret_cast<int32_t*>(ebx9 - 0x553fcfb8) * 0x65;
        __asm__("retf ");
        __asm__("out 0xd0, al");
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + *reinterpret_cast<int32_t*>(ecx + *reinterpret_cast<int32_t*>(edx10 - 7) + cf11 - 0x7ddf3495) - 4) = 0x407fa9;
        eax12 = fun_1d3f0d28();
        gf7dafeea = eax12;
        eax13 = reinterpret_cast<uint32_t>(eax12 + 1);
        edi14 = reinterpret_cast<int32_t*>(edi15 + 4);
        esi16 = reinterpret_cast<int32_t*>(esi8 + 4);
        cf6 = reinterpret_cast<uint1_t>(eax13 < 0x6f910ee5 - reinterpret_cast<uint1_t>(*edi17 < eax13));
        below_or_equal7 = reinterpret_cast<uint1_t>(eax13 <= 0x6f910ee5 - cf6);
        eax5 = eax13 - (0x6f910ee5 - cf6);
        if (!below_or_equal7) 
            goto addr_0x407fb7_4;
    }
    if (below_or_equal7) {
        if (!cf6) {
            __asm__("int1 ");
        } else {
            *edi14 = *esi16;
            __asm__("retf ");
            __asm__("clc ");
        }
    }
}

void fun_407fdb(signed char cl) {
}

void fun_407fdf(int32_t ecx) {
    int32_t* ebx2;
    int32_t* ebx3;
    int32_t esi4;
    int32_t esi5;
    int32_t ebx6;
    int32_t esi7;
    int32_t ebx8;
    signed char* edi9;
    signed char* esi10;

    __asm__("wait ");
    *ebx2 = *ebx3 - esi4;
    __asm__("lds edx, [ecx+0x539ced8f]");
    *reinterpret_cast<signed char*>(esi5 + ebx6 + 0x4595ea63) = reinterpret_cast<signed char>(~*reinterpret_cast<signed char*>(esi7 + ebx8 + 0x4595ea63));
    __asm__("int 0xc9");
    __asm__("cdq ");
    *edi9 = *esi10;
}

void fun_40800d() {
    __asm__("stc ");
}

struct s400 {
    uint32_t f0;
    signed char[100] pad104;
    unsigned char f104;
    signed char[569089879] pad569089984;
    signed char* f569089984;
};

struct s401 {
    signed char[124] pad124;
    unsigned char f124;
};

struct s402 {
    signed char[124] pad124;
    unsigned char f124;
};

signed char g7752b68e;

void fun_408011(void** ecx) {
    struct s400* edx2;
    int32_t ebx3;
    struct s401* ebp4;
    struct s402* ebp5;
    void** eax6;
    int32_t ebp7;
    int32_t ebp8;
    uint32_t edi9;
    int32_t ebp10;
    int1_t less11;
    void** ebx12;
    int1_t pf13;
    uint16_t fs14;
    void** tmp32_15;
    int1_t sf16;
    signed char* v17;
    int1_t less18;
    signed char* esi19;
    signed char* v20;
    int1_t sf21;
    signed char dh22;
    signed char dh23;
    int1_t less_or_equal24;
    signed char dh25;
    unsigned char dh26;
    signed char dh27;

    *reinterpret_cast<signed char*>(&edx2) = 27;
    if (0) {
        goto addr_0x40807b_3;
    } else {
        if (ebx3 + 1 < 0) 
            goto 0x407ffc;
    }
    addr_0x4080b0_6:
    ebp4->f124 = reinterpret_cast<unsigned char>(ebp5->f124 ^ *reinterpret_cast<unsigned char*>(&eax6));
    *reinterpret_cast<uint32_t*>(ebp7 + 0xe4bbda5) = *reinterpret_cast<uint32_t*>(ebp8 + 0xe4bbda5) | edi9;
    addr_0x408090_7:
    ebp10();
    __asm__("outsd ");
    while (1) {
        __asm__("int 0x13");
        __asm__("in al, 0xf4");
        if (!less11) {
            addr_0x40806c_10:
            ebx12 = ecx;
            if (pf13) 
                goto addr_0x4080b0_6;
        } else {
            addr_0x40807b_3:
            *reinterpret_cast<uint32_t*>(ebx12 - 31) = static_cast<uint32_t>(fs14);
            ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx) - 1);
            tmp32_15 = ebx12;
            ebx12 = eax6;
            eax6 = tmp32_15;
            pf13 = __intrinsic();
            sf16 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax6) & 0x89) < reinterpret_cast<signed char>(0);
            less11 = sf16;
            *reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(edx2) + 0x21eb9fc0) = v17;
            if (sf16) 
                continue;
            less18 = reinterpret_cast<int32_t>(edx2->f0) < reinterpret_cast<int32_t>(edi9);
            ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx) - 1);
            if (reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>(edx2->f0 != edi9)) 
                goto addr_0x408090_7;
            esi19 = v20;
            do {
                if (less18) 
                    goto addr_0x40803c_15;
                sf21 = g7752b68e < dh22;
                less18 = g7752b68e < dh23;
                less_or_equal24 = g7752b68e <= dh25;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) = 62;
            } while (!less_or_equal24);
            goto addr_0x40804f_17;
        }
        --edi9;
        pf13 = __intrinsic();
        less11 = reinterpret_cast<signed char>(dh26) < reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax6));
        continue;
        addr_0x40803c_15:
        __asm__("insd ");
        ++edi9;
        ++esi19;
        eax6 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax6) | *reinterpret_cast<uint32_t*>(edi9 + 0xfc30385c));
        goto addr_0x408041_22;
        addr_0x40804f_17:
        while (sf21) {
            addr_0x408041_22:
            sf21 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax6)) < reinterpret_cast<signed char>(0x9c);
            __asm__("salc ");
            __asm__("das ");
            __asm__("out dx, eax");
            ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx) - 1);
            if (reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax6) == 0x9c)) 
                goto 0x407fe4;
            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(*ebx12) - 4) = ebx12;
        }
        edx2->f104 = reinterpret_cast<unsigned char>(edx2->f104 & *reinterpret_cast<unsigned char*>(&ecx));
        __asm__("cdq ");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx2) + reinterpret_cast<uint32_t>(eax6) * 8) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx2) + reinterpret_cast<uint32_t>(eax6) * 8) - (0x7d + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx2) + reinterpret_cast<uint32_t>(eax6) * 8) < 0x7d));
        *reinterpret_cast<unsigned char*>(&eax6) = 0xc2;
        *esi19 = dh27;
        pf13 = __intrinsic();
        goto addr_0x40806c_10;
    }
}

void fun_40801f(unsigned char* ecx) {
    uint1_t cf2;
    unsigned char* esi3;
    signed char* esi4;
    signed char ah5;
    signed char ah6;

    if (ecx) 
        goto 0x407fa5;
    cf2 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ecx) < *esi3);
    *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) - *esi4);
    __asm__("outsb ");
    *ecx = reinterpret_cast<unsigned char>(*ecx - reinterpret_cast<unsigned char>(ah5 + reinterpret_cast<uint1_t>(*ecx < reinterpret_cast<unsigned char>(ah6 + cf2))));
    __asm__("fucomi st0, st5");
}

void fun_40809a(int32_t ecx) {
    int32_t* edi2;
    void* esi3;

    __asm__("out 0x29, eax");
    *edi2 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi3) - 1);
}

struct s403 {
    signed char[18] pad18;
    signed char f18;
};

struct s404 {
    signed char[18] pad18;
    signed char f18;
};

void fun_40810c(unsigned char cl) {
    struct s403* ebp2;
    struct s404* ebp3;

    ebp2->f18 = reinterpret_cast<signed char>(ebp3->f18 << cl);
    __asm__("daa ");
}

void fun_408120() {
    int1_t less1;

    if (!less1) 
        goto 0x4080ca;
}

void fun_408123() {
    uint32_t* eax1;
    uint32_t esi2;

    *reinterpret_cast<signed char*>(&eax1) = 65;
    __asm__("fdivr qword [edi]");
    *eax1 = *eax1 ^ esi2;
    __asm__("wait ");
    __asm__("daa ");
}

void fun_40813c() {
}

struct s405 {
    signed char[1] pad1;
    signed char f1;
};

struct s406 {
    signed char[1] pad1;
    signed char f1;
};

struct s407 {
    signed char[28] pad28;
    uint32_t f28;
};

struct s408 {
    signed char[28] pad28;
    void* f28;
};

int32_t fun_dad3aa47(int32_t a1, int32_t a2, int32_t a3);

void fun_40815a(unsigned char* ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t ebx4;
    int32_t edx5;
    uint32_t esi6;
    signed char* edi7;
    struct s405* edi8;
    signed char* esi9;
    struct s406* esi10;
    void* edi11;
    int32_t ebx12;
    int32_t ebx13;
    uint32_t tmp32_14;
    struct s407* ebx15;
    struct s408* ebx16;
    int32_t ebx17;

    *reinterpret_cast<signed char*>(&eax2) = -37;
    __asm__("clc ");
    if (ecx) {
        addr_0x408179_2:
        __asm__("aaa ");
        eax3 = ebx4;
        __asm__("in eax, dx");
        __asm__("iretd ");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax3) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax3) + 1) - reinterpret_cast<unsigned char>(*ecx + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax3) + 1) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*ecx)))));
        __asm__("fnsave [ecx+0xa0f9efcc]");
        __asm__("wait ");
        *ecx = reinterpret_cast<unsigned char>(*ecx - *reinterpret_cast<signed char*>(&ecx));
        *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax3) ^ 0xd2);
        *reinterpret_cast<uint32_t*>(edx5 + 0x6f7613d7) = *reinterpret_cast<uint32_t*>(edx5 + 0x6f7613d7) - (esi6 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edx5 + 0x6f7613d7) < esi6));
    } else {
        edi7 = &edi8->f1;
        esi9 = &esi10->f1;
        edx5 = 0xdb7a1167;
        *edi7 = *esi9;
        edi11 = reinterpret_cast<void*>(edi7 + 1);
        __asm__("stc ");
        ecx = ecx - 1 - 1;
        if (ecx) 
            goto addr_0x40812f_10; else 
            goto addr_0x40816d_11;
    }
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi11) + eax3 * 4 + 0x5c0ab578) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi11) + eax3 * 4 + 0x5c0ab578) & 67;
    __asm__("fstp9 st4");
    addr_0x40812f_10:
    *reinterpret_cast<int32_t*>(ebx12 - 0x264eec3c) = ebx13;
    addr_0x40816d_11:
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx5) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx5) + 1) ^ 0x67);
    tmp32_14 = ebx15->f28;
    ebx16->f28 = reinterpret_cast<void*>(esi9 + 1);
    esi6 = tmp32_14;
    fun_dad3aa47(ebx17, eax2, __return_address());
    goto addr_0x408179_2;
}

void fun_4081a1() {
    __asm__("outsd ");
    __asm__("ror ah, 1");
    __asm__("retf 0xa6ed");
}

struct s409 {
    signed char[1] pad1;
    int32_t f1;
    signed char[1401144467] pad1401144472;
    uint32_t f1401144472;
};

struct s410 {
    signed char[61] pad61;
    unsigned char f61;
};

struct s411 {
    int32_t f0;
    void* f4;
};

int32_t fun_154a56cf();

signed char g1a239aed;

struct s412 {
    signed char[1307916703] pad1307916703;
    int32_t f1307916703;
};

unsigned char g6881cfe4;

int32_t fun_e82f546();

void fun_4081af(int32_t ecx) {
    int32_t* edi2;
    int32_t* esi3;
    struct s409* esi4;
    void* esi5;
    int32_t eax6;
    struct s410* edx7;
    void* edi8;
    uint32_t ecx9;
    uint32_t* esp10;
    uint32_t ebx11;
    struct s411* esp12;
    void** esp13;
    int32_t* edi14;
    struct s410** esp15;
    struct s410** esp16;
    uint32_t tmp32_17;
    int32_t ebp18;
    uint32_t ecx19;
    struct s412* edi20;
    void* esp21;
    uint1_t cf22;
    uint32_t ebx23;
    int32_t* esi24;
    int32_t* esp25;
    uint32_t eax26;

    *reinterpret_cast<signed char*>(ecx + 0xef1d166) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx + 0xef1d166) - 1);
    *edi2 = *esi3;
    esi4 = reinterpret_cast<struct s409*>(reinterpret_cast<int32_t>(esi5) + 4);
    if (!__intrinsic()) 
        goto 0x40818f;
    *reinterpret_cast<unsigned char*>(&eax6) = 0x73;
    __asm__("wait ");
    edx7 = reinterpret_cast<struct s410*>(reinterpret_cast<int32_t>(edi8) + 4 - 47);
    if (__intrinsic()) 
        goto 0x408173;
    while (1) {
        *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax6) - 35);
        __asm__("aam 0x14");
        ecx9 = reinterpret_cast<uint32_t>(eax6 * 0x6e);
        esp10 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx7) * 0xffffff84 - 4);
        *esp10 = ebx11;
        esp12 = reinterpret_cast<struct s411*>(esp10 - 1);
        esp12->f0 = 0x4081d8;
        eax6 = fun_154a56cf();
        esp13 = &esp12->f4;
        __asm__("aad 0xd2");
        __asm__("fcomp qword [ecx]");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1) = 68;
        __asm__("repne popa ");
        edi14 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*esp13) - 1 + 1);
        esp15 = reinterpret_cast<struct s410**>(esp13 + 1 - 1);
        *esp15 = edx7;
        g1a239aed = reinterpret_cast<signed char>(g1a239aed << 1);
        esp16 = esp15 - 1;
        *esp16 = edx7;
        tmp32_17 = *reinterpret_cast<uint32_t*>(ebp18 - 0x12e5b81a);
        *reinterpret_cast<uint32_t*>(ebp18 - 0x12e5b81a) = ecx9;
        ecx19 = tmp32_17;
        *edi14 = eax6;
        edi20 = reinterpret_cast<struct s412*>(edi14 + 1);
        esi4 = reinterpret_cast<struct s409*>(reinterpret_cast<int32_t>(esi4) + 1 + 4);
        *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax6) | 100);
        --ebp18;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx11) + 1) = 44;
        __asm__("xlatb ");
        --ebx11;
        g6881cfe4 = *reinterpret_cast<unsigned char*>(&eax6);
        esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp16) + 4);
        if (!__intrinsic()) 
            break;
    }
    cf22 = reinterpret_cast<uint1_t>(ebx11 < *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx7) + reinterpret_cast<int32_t>(edx7) * 2 + 0x307b3165));
    ebx23 = ebx11 - (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx7) + reinterpret_cast<int32_t>(edx7) * 2 + 0x307b3165) + cf22);
    __asm__("fdivr dword [ecx+eax+0x2f]");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi4) + 0x5383c498) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi4) + 0x5383c498) - 0x274a3836 + cf22;
    __asm__("ror bl, 1");
    esi24 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi4) + 1);
    if (!(__intrinsic() | reinterpret_cast<uint1_t>(esi24 == 0))) {
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi20) + 0x4df5399f) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi20) + 0x4df5399f) - reinterpret_cast<int32_t>(edx7);
        *reinterpret_cast<signed char*>(&ebx23) = 23;
        ebp18 = 0;
        do {
            esp25 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp21) - 4);
            *esp25 = 0x408234;
            eax6 = fun_e82f546();
            esp21 = reinterpret_cast<void*>(esp25 + 1);
            ecx19 = 0xaf57ce41;
            __asm__("cdq ");
            esi24 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi24) - 1);
            __asm__("lodsd ");
            ++ebx23;
            __asm__("aas ");
            __asm__("retf ");
        } while (reinterpret_cast<int32_t>(ebx23) < reinterpret_cast<int32_t>(0));
        esi24 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi24) + 1);
        *reinterpret_cast<unsigned char*>(&ecx19) = reinterpret_cast<unsigned char>(0xf4 | edx7->f61);
        __asm__("aas ");
        *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax6) - reinterpret_cast<unsigned char>(64 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax6) < 64)));
        __asm__("fcmovnb st0, st6");
        *esi24 = *esi24 + 0x41ca38e8;
    }
    eax26 = reinterpret_cast<uint32_t>(eax6 + 0x75efcf96) ^ 0xaf917e62;
    __asm__("arpl [edx+0x93f5ffad], sp");
    __asm__("aam 0xc8");
    *reinterpret_cast<uint32_t*>(eax26 + 0x2e7935c5) = *reinterpret_cast<uint32_t*>(eax26 + 0x2e7935c5) + ebp18 + reinterpret_cast<uint1_t>(ecx19 < *reinterpret_cast<uint32_t*>(ecx19 + eax26 * 4 + 0x12c1e162));
    __asm__("outsb ");
}

struct s413 {
    uint32_t f0;
    signed char[928275031] pad928275035;
    struct s413* f928275035;
};

unsigned char g5b5fe863;

struct s414 {
    signed char[30] pad30;
    signed char f30;
};

struct s415 {
    signed char[30] pad30;
    signed char f30;
};

struct s416 {
    signed char[30] pad30;
    signed char f30;
};

signed char* g4085b8f6;

unsigned char gcc9c0550;

struct s417 {
    unsigned char f0;
    unsigned char f1;
};

struct s418 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s419 {
    int16_t f0;
    void* f2;
};

struct s420 {
    int16_t f0;
    uint32_t f2;
};

signed char g6e31293f;

signed char g187b7846;

void fun_408286(signed char cl) {
    struct s413* ecx1;
    void** esp2;
    uint32_t* eax3;
    struct s414* edi4;
    struct s415* edi5;
    struct s416* edi6;
    signed char* eax7;
    signed char* edi8;
    signed char* esi9;
    int32_t edi10;
    int32_t edi11;
    uint32_t edx12;
    signed char* ecx13;
    signed char* tmp32_14;
    int1_t zf15;
    void* ebx16;
    void* v17;
    uint1_t cf18;
    uint32_t ebp19;
    int1_t less20;
    uint32_t ebp21;
    unsigned char* edi22;
    struct s417* edi23;
    unsigned char* esi24;
    unsigned char dl25;
    unsigned char dl26;
    unsigned char* ebx27;
    uint1_t zf28;
    struct s413** edx29;
    uint1_t cf30;
    struct s413** eax31;
    uint32_t* esp32;
    void* eax33;
    void* eax34;
    int1_t less35;
    uint32_t edx36;
    struct s419* esp37;
    int16_t ds38;
    uint1_t cf39;
    struct s420* esp40;
    uint32_t* eax41;
    unsigned char* edx42;
    uint1_t less_or_equal43;
    void* ebx44;

    *reinterpret_cast<signed char*>(&ecx1) = cl;
    esp2 = reinterpret_cast<void**>(__zero_stack_offset());
    *reinterpret_cast<unsigned char*>(&eax3) = g5b5fe863;
    __asm__("int 0xe3");
    __asm__("insd ");
    __asm__("retf 0x32c9");
    __asm__("lds esp, [ecx-0x5f]");
    edi4->f30 = reinterpret_cast<signed char>(edi5->f30 + 31);
    if (edi6->f30 < 0) {
        eax7 = reinterpret_cast<signed char*>(0x8bb8e2a3);
        *edi8 = *esi9;
        edi10 = edi11 - 1;
        __asm__("fldenv [ecx]");
        __asm__("out 0x80, eax");
        __asm__("unpcklps xmm2, [ebp+0x77e886e]");
        do {
            do {
                __asm__("aaa ");
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx12) + 1) = 63;
                ecx13 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(edx12 + 0xc157f67) * 0x874baa13 - 1);
            } while (reinterpret_cast<uint1_t>(!!ecx13) & reinterpret_cast<uint1_t>(!__undefined()));
            __asm__("arpl [edi], bx");
            edx12 = 0;
            *reinterpret_cast<unsigned char*>(edi10 - 86) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi10 - 86) | 0xb7);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx12) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx12) + 1) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx12) + 1) < 0))));
            do {
                *ecx13 = reinterpret_cast<signed char>(*ecx13 + *reinterpret_cast<signed char*>(&ecx13));
                tmp32_14 = ecx13;
                ecx13 = eax7;
                eax7 = tmp32_14;
                *reinterpret_cast<uint32_t*>(ecx13 - 0x4ec42c19) = *reinterpret_cast<uint32_t*>(ecx13 - 0x4ec42c19) | edx12;
                zf15 = *reinterpret_cast<uint32_t*>(ecx13 - 0x4ec42c19) == 0;
                g4085b8f6 = eax7;
            } while (zf15);
        } while (!__intrinsic());
    }
    do {
        ebx16 = v17;
        ++esp2;
        do {
        } while (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax3) & 71) < reinterpret_cast<signed char>(0));
        cf18 = reinterpret_cast<uint1_t>(*eax3 < ebp19);
        less20 = reinterpret_cast<int32_t>(*eax3) < reinterpret_cast<int32_t>(ebp21);
        __asm__("int 0x44");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1) = -33;
        gcc9c0550 = *reinterpret_cast<unsigned char*>(&eax3);
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx16) + 1) = 5;
        } while (less20);
        edi22 = &edi23->f1;
        __asm__("int 0xb5");
        eax3 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax3) - (0x4423d41 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax3) < 0x4423d41 + cf18)));
        __asm__("outsb ");
        *edi22 = *reinterpret_cast<unsigned char*>(&eax3);
        edi23 = reinterpret_cast<struct s417*>(edi22 - 1);
        --esi24;
        dl25 = *reinterpret_cast<unsigned char*>(&ebx16);
        *reinterpret_cast<unsigned char*>(&ebx16) = dl26;
        dl26 = reinterpret_cast<unsigned char>(dl25 | *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax3) - 0x6dbccd87));
        ebx27 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx16) - 1);
        zf28 = reinterpret_cast<uint1_t>(ebx27 == 0);
        __asm__("fist word [ebx]");
    } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebx27) < 0 != __intrinsic()) | zf28));
    if (!zf28) 
        goto addr_0x408331_23;
    while (*reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax3))), edx29 = reinterpret_cast<struct s413**>(reinterpret_cast<uint32_t>(ecx1) + 0x37545a5b), ecx1 = *edx29, cf30 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx29) + 1) < ebx27[reinterpret_cast<uint32_t>(eax3) * 4]), *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx29) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx29) + 1) - ebx27[reinterpret_cast<uint32_t>(eax3) * 4]), eax31 = edx29, esi24 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax3) - 1), esp32 = &(*reinterpret_cast<struct s418**>(reinterpret_cast<int32_t>(esp2) - 1))->f4, *reinterpret_cast<signed char*>(&ecx1) = -79, eax33 = reinterpret_cast<void*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax31))), eax34 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax33) - (0x55ff522c + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax33) < 0x55ff522c + cf30))), *ebx27 = reinterpret_cast<unsigned char>(*ebx27 ^ *reinterpret_cast<unsigned char*>(&eax34)), less35 = __intrinsic(), edx36 = *esp32, esp37 = reinterpret_cast<struct s419*>(reinterpret_cast<int32_t>(esp32 + 1) + 2), 1) {
        while (less35) {
            ecx1 = reinterpret_cast<struct s413*>(edi23->f0 * 0x46c8ac82);
            __asm__("das ");
            esp37 = reinterpret_cast<struct s419*>(&esp37->f2);
            less35 = reinterpret_cast<signed char>(*esi24) < reinterpret_cast<signed char>(edi23->f0);
            edi23->f0 = *esi24;
            edi23 = edi23 - 2;
            esi24 = esi24 - 4;
            __asm__("ror byte [ebx+0x55], 0x3c");
        }
        ds38 = esp37->f0;
        esp2 = &esp37->f2;
        *reinterpret_cast<signed char*>(&ebx27) = -68;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx27) + 1) = 0;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax34) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax34) + 1) + 1);
        edi23 = reinterpret_cast<struct s417*>(0xc113ab56);
        cf39 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(*reinterpret_cast<struct s417**>(esi24 - 0x5db642b0)) < 0xc113ab56);
        *reinterpret_cast<struct s417**>(esi24 - 0x5db642b0) = reinterpret_cast<struct s417*>(reinterpret_cast<uint32_t>(*reinterpret_cast<struct s417**>(esi24 - 0x5db642b0)) - (0xc113ab56 + cf39));
        *reinterpret_cast<uint32_t*>(ecx1) = *reinterpret_cast<uint32_t*>(ecx1) - (reinterpret_cast<uint32_t>(ecx1) + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ecx1) < reinterpret_cast<uint32_t>(ecx1) + cf39));
        eax3 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax34) + 0xdf77310f);
        esi24[reinterpret_cast<uint32_t>(esi24) * 2] = reinterpret_cast<unsigned char>(esi24[reinterpret_cast<uint32_t>(esi24) * 2] ^ 0xc113ab56);
    }
    edi23->f0 = *reinterpret_cast<unsigned char*>(&eax34);
    *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edi23) - 1) = eax34;
    esp40 = reinterpret_cast<struct s420*>(reinterpret_cast<int32_t>(esp37) - 2);
    esp40->f0 = ds38;
    eax41 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax34) >> 0x67);
    __asm__("daa ");
    __asm__("aas ");
    __asm__("clc ");
    __asm__("retf ");
    __asm__("aaa ");
    __asm__("cvtpi2ps xmm5, qword [edi+0x69a7adf2]");
    edx42 = reinterpret_cast<unsigned char*>(edx36 & *(&esp40->f2 - 0xf090e96));
    less_or_equal43 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(edx42 == 0));
    do {
    } while (less_or_equal43);
    g6e31293f = *reinterpret_cast<signed char*>(&eax41);
    *reinterpret_cast<signed char*>(edx42 - 0x41862c1a) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx42 - 0x41862c1a) << 1);
    __asm__("fsubr st3, st0");
    ebx44 = reinterpret_cast<void*>(ebx27 + 1);
    *reinterpret_cast<unsigned char*>(&edx42) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx42) + g187b7846) + __intrinsic());
    *edx42 = reinterpret_cast<unsigned char>(*edx42 >> 35);
    __asm__("arpl cx, cx");
    __asm__("popad ");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax41) + reinterpret_cast<int32_t>(ebx44) * 2) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax41) + reinterpret_cast<int32_t>(ebx44) * 2) ^ 23;
    addr_0x408331_23:
    __asm__("daa ");
    edi23->f0 = *esi24;
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi23) - 1 + 0x7f);
}

void fun_4082f8() {
    __asm__("arpl [edi+esi*2+0xce13d353], bp");
}

int32_t fun_b15d21b8();

struct s421 {
    signed char[17] pad17;
    uint32_t f17;
};

struct s422 {
    signed char[125] pad125;
    struct s421* f125;
};

void fun_40844f(int32_t ecx, void* a2, void* a3) {
    uint1_t below_or_equal4;
    unsigned char bh5;
    void* edx6;
    int32_t eax7;
    struct s421* edi8;
    void* edi9;
    int32_t ecx10;
    struct s422* edx11;
    unsigned char* esp12;

    below_or_equal4 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>((bh5 ^ *reinterpret_cast<unsigned char*>(ecx - 51)) == 0)));
    if (!below_or_equal4) 
        goto 0x4083e5;
    __asm__("insb ");
    __asm__("fbstp tword [ebx+edx]");
    __asm__("fcomp qword [edx+0x26]");
    if (reinterpret_cast<int32_t>(edx6) - 1) {
        eax7 = fun_b15d21b8();
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = 0;
        edi8 = reinterpret_cast<struct s421*>(reinterpret_cast<int32_t>(edi9) + 1);
        __asm__("in al, dx");
        if (0) {
            if (!ecx) {
                __asm__("in eax, 0xdf");
                __asm__("punpckhwd mm4, [esi+0x83c4d03f]");
                edi8->f17 = edi8->f17 | reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 + 4 + 4 - 4 + 2 - 4);
                __asm__("pushad ");
                ecx10 = 0x7aeb877b;
                edx11 = reinterpret_cast<struct s422*>(reinterpret_cast<int32_t>(a2) - 1);
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi8) + reinterpret_cast<int32_t>(edi8) * 4 + 0x6067322b) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi8) + reinterpret_cast<int32_t>(edi8) * 4 + 0x6067322b) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1))));
                do {
                } while (1);
                __asm__("out 0x46, al");
                __asm__("fsub dword [0xe1a098b3]");
                edx11->f125 = edi8;
            }
        }
    }
    __asm__("salc ");
    __asm__("stc ");
    esp12 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(a3) + 4 + 2 + 4);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) ^ 0xaa) - 0x71);
    esp12[eax7 * 2] = reinterpret_cast<unsigned char>(esp12[eax7 * 2] | 86);
    goto *esp12;
}

struct s423 {
    int32_t f0;
    unsigned char f4;
};

void fun_40854b(int32_t ecx) {
    struct s423* edi2;
    void* edi3;
    unsigned char* edi4;

    __asm__("fisub dword [edx+0x78]");
    edi2 = reinterpret_cast<struct s423*>(reinterpret_cast<int32_t>(edi3) - 1);
    if (!__intrinsic()) 
        goto 0x408548;
    __asm__("o16 in al, dx");
    __asm__("cdq ");
    edi2->f0 = *reinterpret_cast<int32_t*>(__return_address());
    edi4 = &edi2->f4;
    *edi4 = 0xff;
    *reinterpret_cast<signed char*>(edi4 - 0x1e2c7585) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi4 - 0x1e2c7585) + 100);
    if (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(edi4 - 0x1e2c7585) == 0))) 
        goto 0x408500;
    *edi4 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__return_address()) + 4);
}

struct s424 {
    signed char[4] pad4;
    signed char f4;
};

struct s425 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s426 {
    signed char[1] pad1;
    signed char f1;
};

void fun_408571() {
    uint32_t eax1;
    int32_t eax2;
    uint1_t cf3;
    uint32_t* edi4;
    struct s424* edi5;
    struct s425* ebp6;
    struct s426* ebp7;
    signed char bh8;

    __asm__("int 0x6e");
    eax1 = eax2 + 0x30aa8ce6 + cf3;
    *edi4 = eax1;
    edi5->f4 = *reinterpret_cast<signed char*>(&eax1);
    ebp6->f1 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebp7->f1 + bh8) + __intrinsic());
    __asm__("hlt ");
}

struct s427 {
    signed char[88] pad88;
    unsigned char f88;
};

signed char g61774e35;

struct s428 {
    signed char[1] pad1;
    signed char f1;
};

struct s429 {
    signed char[1] pad1;
    signed char f1;
};

int32_t fun_d022df31();

void fun_4085ae() {
    int1_t less1;
    struct s427* ebp2;
    void* eax3;
    int32_t edi4;
    int32_t edi5;
    int32_t edi6;
    int32_t edi7;
    signed char* edi8;
    struct s428* edi9;
    signed char* esi10;
    struct s429* esi11;
    int32_t* edx12;
    int32_t* esp13;
    void* eax14;
    int32_t eax15;
    signed char** esp16;
    int16_t* esp17;
    int16_t ss18;
    int32_t esi19;
    int16_t* esp20;
    int16_t ss21;
    unsigned char* eax22;
    int16_t* esp23;
    int16_t cs24;

    __asm__("clc ");
    if (!less1) 
        goto 0x408567;
    ebp2->f88 = 0;
    eax3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax3)) + g61774e35);
    *reinterpret_cast<signed char*>(edi4 + edi5 + 0x7609fc16) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi6 + edi7 + 0x7609fc16) + 84);
    __asm__("fist word [0x2eb96114]");
    __asm__("fld tword [edi+0xf0de6ed5]");
    __asm__("aam 0xf9");
    edi8 = &edi9->f1;
    esi10 = &esi11->f1;
    *edx12 = -*edx12;
    esp13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax14) - 4);
    *esp13 = 0x4085ef;
    eax15 = fun_d022df31();
    __asm__("in eax, 0xdf");
    esp16 = reinterpret_cast<signed char**>(esp13 + 1 - 1);
    *esp16 = esi10;
    if (__intrinsic() == __intrinsic()) {
        __asm__("cdq ");
        if (!__intrinsic()) {
            esp17 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp16) - 2);
            *esp17 = ss18;
            esi19 = reinterpret_cast<int32_t>(edi8) * 39;
            *reinterpret_cast<uint32_t*>(esi19 - 58) = *reinterpret_cast<uint32_t*>(esi19 - 58) ^ reinterpret_cast<uint32_t>(esp17);
        } else {
            __asm__("out 0x46, eax");
            *edi8 = *esi10;
            esp20 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp16) - 1 - 2);
            *esp20 = ss21;
            __asm__("in al, dx");
            eax22 = reinterpret_cast<unsigned char*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax15)));
            esp23 = esp20 - 1;
            *esp23 = cs24;
            *eax22 = reinterpret_cast<unsigned char>(*eax22 & 0xa8);
            *reinterpret_cast<void**>(esp23 - 2) = eax3;
        }
    } else {
        if (!1) {
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp16) + 2 + 1);
        }
    }
}

void fun_408621() {
    return;
}

struct s430 {
    signed char[1] pad1;
    signed char f1;
};

struct s431 {
    signed char[1] pad1;
    signed char f1;
};

void fun_408676(int32_t ecx) {
    signed char* edi2;
    signed char* edi3;
    struct s430* edi4;
    signed char* esi5;
    struct s431* esi6;
    int32_t ebx7;
    int32_t ebx8;

    *edi2 = 26;
    edi3 = &edi4->f1;
    esi5 = &esi6->f1;
    *edi3 = *esi5;
    __asm__("wait ");
    *(edi3 - 1) = *(esi5 - 1);
    *reinterpret_cast<signed char*>(ebx7 - 0x227767bf) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx8 - 0x227767bf) >> *reinterpret_cast<signed char*>(&ecx));
    __asm__("retf 0x2cce");
    if (!__intrinsic()) 
        goto 0x40864a;
}

struct s432 {
    signed char[1] pad1;
    uint32_t f1;
};

struct s433 {
    signed char[1] pad1;
    int32_t f1;
};

int32_t gbb69f6f9;

unsigned char gbb69f6d1;

uint32_t g39ffdee;

void fun_40869a() {
    int16_t si1;
    int16_t si2;
    signed char bl3;
    struct s432* edx4;
    struct s433* edx5;
    uint32_t esi6;
    int32_t edx7;
    int32_t eax8;
    uint1_t cf9;
    unsigned char al10;
    int32_t ebx11;
    uint16_t gs12;
    uint1_t cf13;
    int32_t edx14;

    *reinterpret_cast<signed char*>(si1 - 0x66ba) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(si2 - 0x66ba) + bl3);
    __asm__("outsb ");
    edx4->f1 = edx5->f1 + 0x660027f7 + reinterpret_cast<uint1_t>(esi6 < *reinterpret_cast<uint32_t*>(edx7 - 1));
    gbb69f6f9 = eax8;
    cf9 = reinterpret_cast<uint1_t>(gbb69f6d1 < reinterpret_cast<unsigned char>(al10 ^ 0xc6));
    *reinterpret_cast<uint32_t*>(ebx11 + 0x13ab868) = static_cast<uint32_t>(gs12);
    cf13 = reinterpret_cast<uint1_t>(g39ffdee < 0x44960902 - cf9);
    g39ffdee = g39ffdee - (0x44960902 - cf13);
    __asm__("aad 0x7f");
    goto edx14;
}

struct s434 {
    signed char[79] pad79;
    int32_t f79;
};

struct s435 {
    signed char[79] pad79;
    int32_t f79;
};

struct s436 {
    signed char[79] pad79;
    int32_t f79;
};

struct s437 {
    signed char[55] pad55;
    uint32_t f55;
};

struct s438 {
    signed char[98] pad98;
    struct s438* f98;
};

struct s439 {
    signed char[52] pad52;
    signed char f52;
};

struct s440 {
    signed char[52] pad52;
    signed char f52;
};

void fun_4086e2(int32_t ecx) {
    uint32_t eflags2;
    struct s434* ebx3;
    struct s435* ebx4;
    int32_t eax5;
    struct s436* ebx6;
    int32_t ebx7;
    struct s437* ebx8;
    uint16_t gs9;
    int32_t eax10;
    int32_t esi11;
    signed char dh12;
    struct s439* edi13;
    struct s440* edi14;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    ebx3->f79 = ebx4->f79 - eax5;
    if (ebx6->f79 >= 0) {
        __asm__("ror dword [ss:0x48e56b6c], 1");
        __asm__("iretd ");
        __asm__("in eax, 0xad");
        *reinterpret_cast<int1_t*>(&eflags2) = 0;
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = 0;
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
        *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
        *reinterpret_cast<uint32_t*>((reinterpret_cast<uint32_t>(__zero_stack_offset()) & *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) + ebx7 * 8 - 63)) - 4) = eflags2 & 0xfcffff;
        __asm__("out 0xe, eax");
    }
    __asm__("in al, 0xcf");
    ebx8->f55 = static_cast<uint32_t>(gs9);
    eax10 = esi11 + 0x43d5d3b6;
    *reinterpret_cast<signed char*>(eax10 + 0x2efd961e) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax10 + 0x2efd961e) + dh12);
    if (reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(eax10 + 0x2efd961e) == 0))) 
        goto addr_0x40878a_5;
    __asm__("aas ");
    addr_0x40878a_5:
    __asm__("cmc ");
    __asm__("in al, 0x67");
    *reinterpret_cast<struct s438**>(reinterpret_cast<uint32_t>(__return_address()) + 98) = reinterpret_cast<struct s438*>(reinterpret_cast<uint32_t>(*reinterpret_cast<struct s438**>(reinterpret_cast<uint32_t>(__return_address()) + 98)) - (reinterpret_cast<uint32_t>(__return_address()) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(*reinterpret_cast<struct s438**>(reinterpret_cast<uint32_t>(__return_address()) + 98)) < reinterpret_cast<uint32_t>(__return_address()))));
    edi13->f52 = reinterpret_cast<signed char>(edi14->f52 >> *reinterpret_cast<signed char*>(&ecx));
}

struct s441 {
    signed char[103] pad103;
    int32_t f103;
};

struct s442 {
    signed char[103] pad103;
    int32_t f103;
};

struct s443 {
    signed char[1] pad1;
    signed char f1;
};

void fun_408702(int32_t ecx) {
    int32_t ecx2;
    uint1_t zf3;
    signed char dl4;
    struct s441* ebp5;
    struct s442* ebp6;
    int32_t esi7;
    signed char* eax8;
    signed char* ebp9;
    struct s443* edi10;
    signed char* esi11;
    int1_t zf12;

    ecx2 = ecx - 1;
    if (!(reinterpret_cast<uint1_t>(!!ecx2) & zf3)) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = dl4;
        ebp5->f103 = ebp6->f103 + esi7;
        eax8 = ebp9;
        __asm__("in eax, 0x76");
        __asm__("in al, 0xe");
    }
    __asm__("das ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1) = 11;
    edi10->f1 = *esi11;
    __asm__("lock insd ");
    *reinterpret_cast<signed char*>(&eax8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax8) - 35);
    __asm__("insd ");
    __asm__("lds ebx, [edx]");
    *eax8 = reinterpret_cast<signed char>(*eax8 + 16);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + 0x6d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + 0x6d) - 80);
    zf12 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + 0x6d) == 0;
    __asm__("stc ");
    do {
        --ecx2;
    } while (reinterpret_cast<uint1_t>(!!ecx2) & reinterpret_cast<uint1_t>(!zf12));
}

void fun_40876d() {
    int1_t sf1;

    if (sf1) 
        goto 0x408723;
}

void fun_408776() {
    __asm__("out dx, al");
}

uint32_t g1e685a65;

void fun_40879b(int32_t ecx) {
    int1_t of2;
    int32_t eax3;
    uint32_t esi4;
    uint32_t esi5;

    if (of2) 
        goto 0x40877c;
    __asm__("xlatb ");
    g1e685a65 = eax3 - 0x5ab0a1cc + reinterpret_cast<uint1_t>(esi4 < esi5);
    __asm__("in al, 0x38");
}

void fun_4087bf() {
    __asm__("in al, dx");
}

void fun_4087c8(int32_t ecx) {
    int1_t of2;
    int32_t ebx3;
    int32_t ebx4;

    __asm__("fadd dword [ebx+0xc44b167]");
    if (of2) 
        goto 0x4087f2;
    __asm__("popad ");
    __asm__("int1 ");
    *reinterpret_cast<signed char*>(ebx3 - 71) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx4 - 71) - 0x69);
    __asm__("rcl dword [edx], cl");
}

void fun_40882a() {
}

void fun_408830(signed char* ecx) {
    *ecx = reinterpret_cast<signed char>(*ecx << 1);
    __asm__("insd ");
    __asm__("hlt ");
}

uint32_t g65bb5fc2;

unsigned char gde56538f;

void fun_408842(int32_t ecx) {
    unsigned char al2;
    unsigned char al3;
    uint32_t* esi4;
    uint32_t* esi5;
    int32_t ecx6;
    uint32_t edx7;
    int32_t* esp8;
    int32_t ebx9;
    void* eax10;
    signed char ah11;
    unsigned char ah12;
    unsigned char al13;
    signed char* esi14;
    unsigned char* edx15;
    int32_t* eax16;
    uint32_t ebx17;
    int32_t ebx18;
    uint32_t ebx19;
    uint32_t eax20;
    uint32_t eax21;
    unsigned char dl22;
    int32_t ebp23;
    uint1_t cf24;
    uint32_t tmp32_25;
    int32_t* ebp26;
    uint16_t cs27;

    al2 = reinterpret_cast<unsigned char>(al3 & *reinterpret_cast<unsigned char*>(&ecx));
    __asm__("out dx, al");
    *esi4 = *esi5 >> *reinterpret_cast<unsigned char*>(&ecx);
    ecx6 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx6) & reinterpret_cast<uint1_t>(al2 == 61)) {
        addr_0x4088af_2:
        __asm__("out dx, al");
        g65bb5fc2 = edx7;
    } else {
        esp8 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 1);
        esp8[ecx6] = esp8[ecx6] + ebx9;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax10) + 1) = reinterpret_cast<unsigned char>(ah11 - reinterpret_cast<unsigned char>(al2 + reinterpret_cast<uint1_t>(ah12 < reinterpret_cast<unsigned char>(al2 + __intrinsic()))));
        al13 = reinterpret_cast<unsigned char>(al2 - *esi14);
        __asm__("cdq ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx15) + 1) = -54;
        *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al13 - 54) + __intrinsic());
        eax16 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax10) - 1);
        __asm__("lds esi, [ebp+0x809f144c]");
        __asm__("out dx, eax");
        __asm__("aaa ");
        ebx17 = ebx18 - (*eax16 + reinterpret_cast<uint1_t>(ebx19 < *eax16 + __intrinsic()));
        eax20 = reinterpret_cast<uint32_t>(eax16) - 0x2dbb6f6f;
        *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax20) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax20 - 0x6611b59a) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax20) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax20 - 0x6611b59a) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax16) < 0x2dbb6f6f))))) + 58);
        __asm__("lodsb ");
        eax21 = eax20 & 0x98793650;
        *reinterpret_cast<unsigned char*>(&edx15) = reinterpret_cast<unsigned char>(dl22 & *reinterpret_cast<unsigned char*>(ebp23 + 0x66ed06cf));
        cf24 = 0;
        if (__intrinsic()) 
            goto addr_0x408895_6;
        __asm__("fisubr dword [ecx+0xf]");
        *edx15 = reinterpret_cast<unsigned char>(*edx15 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx17) + 1));
        cf24 = 0;
        if (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(*edx15 == 0)))) 
            goto addr_0x408895_6; else 
            goto addr_0x408894_8;
    }
    addr_0x408895_6:
    __asm__("rcr ecx, 1");
    __asm__("rcl byte [edi], 1");
    tmp32_25 = *reinterpret_cast<uint32_t*>(*ebp26 - 0x5767d47d);
    *reinterpret_cast<uint32_t*>(*ebp26 - 0x5767d47d) = static_cast<uint32_t>(cs27);
    edx7 = tmp32_25;
    gde56538f = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(gde56538f - 54) + cf24);
    goto addr_0x4088af_2;
    addr_0x408894_8:
    cf24 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax21) < 0x69);
    goto addr_0x408895_6;
}

struct s444 {
    signed char[29] pad29;
    uint16_t f29;
};

struct s445 {
    signed char[4] pad4;
    int32_t f4;
};

struct s446 {
    signed char[1] pad1;
    uint32_t f1;
};

int32_t g35c29eb0;

struct s447 {
    signed char f0;
    signed char f1;
    signed char[1571129015] pad1571129017;
    unsigned char f1571129017;
};

struct s448 {
    signed char[4] pad4;
    signed char f4;
};

struct s449 {
    signed char f0;
    signed char f1;
};

struct s450 {
    signed char[4] pad4;
    signed char f4;
};

int32_t ge68fe519;

void fun_408919() {
    uint32_t ecx1;
    struct s444* ebp2;
    struct s445* esp3;
    int32_t ebx4;
    int32_t edx5;
    signed char dh6;
    int32_t ebp7;
    int32_t ebp8;
    unsigned char dh9;
    uint32_t* ebx10;
    struct s446* ebx11;
    int32_t eax12;
    void* esp13;
    uint32_t ecx14;
    signed char* esi15;
    int32_t tmp32_16;
    int32_t eax17;
    int32_t esi18;
    int32_t esi19;
    signed char dl20;
    signed char* edi21;
    signed char* edi22;
    int32_t* edi23;
    int32_t* esi24;
    struct s447* edi25;
    struct s448* edi26;
    struct s449* esi27;
    struct s450* esi28;
    int1_t less_or_equal29;
    int32_t* esp30;
    signed char** esp31;
    int32_t edi32;
    int32_t edi33;
    int16_t cs34;
    int32_t ebx35;
    int32_t edi36;
    int32_t edi37;
    int32_t eax38;

    ecx1 = static_cast<uint32_t>(ebp2->f29);
    esp3 = reinterpret_cast<struct s445*>((reinterpret_cast<uint32_t>(__zero_stack_offset()) | *reinterpret_cast<uint32_t*>(ebx4 + 0x6f5f9a64)) + 2);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = reinterpret_cast<signed char>(dh6 - 28);
    ebp7 = ebp8 - 1;
    if (reinterpret_cast<uint1_t>(dh9 < 28) | reinterpret_cast<uint1_t>(ebp7 == 0)) {
        ebx10 = &ebx11->f1;
        eax12 = g35c29eb0;
        esp13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(&esp3->f4) - 1);
        __asm__("int 0x1c");
        if (0) {
            addr_0x40896b_3:
        } else {
            esp3 = reinterpret_cast<struct s445*>(reinterpret_cast<uint32_t>(esp13) + 2);
            __asm__("fsubr st0, st6");
            if (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(esp13 == 0)))) 
                goto 0x408889;
            __asm__("cmc ");
            __asm__("cmc ");
            ecx14 = ecx1 + 1;
            if (reinterpret_cast<int32_t>(ecx14) < reinterpret_cast<int32_t>(0) == __intrinsic()) 
                goto addr_0x408941_6; else 
                goto addr_0x408905_7;
        }
    } else {
        __asm__("lodsd ");
        *reinterpret_cast<int32_t*>(edx5 - 0x4dd23d0e) = edx5;
        ecx14 = ecx1 - 1;
        if (ecx14) {
            __asm__("fbld tword [ebp+0xd27c0f7a]");
            esi15 = reinterpret_cast<signed char*>(0xc190d48);
            __asm__("repne fild word [edx]");
            if (ebp7 < 0 == __intrinsic()) 
                goto addr_0x4089d9_11; else 
                goto addr_0x4089b3_12;
        } else {
            tmp32_16 = ebp7;
            ebp7 = eax17;
            eax12 = tmp32_16;
            __asm__("iretd ");
            *reinterpret_cast<uint32_t*>(esi18 + 0x382c92b0) = *reinterpret_cast<int32_t*>(esi19 + 0x382c92b0) + ebp7 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ecx14 + 0x26705e63) < reinterpret_cast<unsigned char>(dl20 - *edi21));
            goto addr_0x408941_6;
        }
    }
    *edi22 = *esi15;
    addr_0x408941_6:
    esp3 = reinterpret_cast<struct s445*>(reinterpret_cast<uint32_t>(esp3) + 2);
    *edi23 = *esi24;
    edi25 = reinterpret_cast<struct s447*>(&edi26->f4);
    esi27 = reinterpret_cast<struct s449*>(&esi28->f4);
    *reinterpret_cast<uint32_t*>(eax12 - 16) = *reinterpret_cast<uint32_t*>(eax12 - 16) + ecx14;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi25) + 0x5da586b9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi25) + 0x5da586b9) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx14) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi25) + 0x5da586b9) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx14) + __intrinsic()))));
    *reinterpret_cast<signed char*>(&ecx14) = -14;
    *reinterpret_cast<unsigned char*>(ecx14 + 0x3e4edd65) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx14 + 0x3e4edd65) ^ *reinterpret_cast<unsigned char*>(&ebx10));
    less_or_equal29 = esi27->f0 <= *reinterpret_cast<signed char*>(edi25);
    *reinterpret_cast<signed char*>(edi25) = esi27->f0;
    edi22 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi25) + 1);
    esi15 = &esi27->f1;
    esp30 = &esp3->f4;
    if (less_or_equal29) {
        addr_0x4089de_25:
        __asm__("xlatb ");
        esp31 = reinterpret_cast<signed char**>(esp30 - 1);
        *esp31 = edi22;
        __asm__("in eax, 0xa");
        __asm__("salc ");
    } else {
        __asm__("fisub word [edi]");
        __asm__("outsd ");
        __asm__("fbstp tword [eax+0x73b6a5d0]");
        goto addr_0x40896b_3;
    }
    *edi22 = *esi15;
    __asm__("cli ");
    *ebx10 = *ebx10 ^ ecx14;
    __asm__("clc ");
    *reinterpret_cast<int32_t*>(esp31 - 1) = ebp7;
    addr_0x408905_7:
    __asm__("insb ");
    __asm__("fld dword [ebx+0xb9706d3f]");
    if (__intrinsic()) {
        *reinterpret_cast<int32_t*>(edi32 + 0x446a4364) = edi33;
        __asm__("out 0x1f, eax");
        *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp3) - 2) = cs34;
    }
    addr_0x4089d9_11:
    esp30 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp3) + 2 - 4);
    *esp30 = ebx35;
    goto addr_0x4089de_25;
    addr_0x4089b3_12:
    __asm__("popad ");
    __asm__("fiadd word [esi+0xc9f77354]");
    *reinterpret_cast<int32_t*>(edi36 - 0x52c9683a) = *reinterpret_cast<int32_t*>(edi37 - 0x52c9683a) + ebp7;
    ge68fe519 = eax38;
    __asm__("pmulhw mm2, [edx+ecx*4+0x463a9214]");
}

void fun_408978() {
    int1_t zf1;

    if (zf1) 
        goto 0x4089f0;
}

void fun_40897b(uint32_t ecx) {
    uint32_t edx2;
    int32_t edx3;
    int32_t eflags4;
    int16_t ax5;
    uint32_t edx6;
    int32_t v7;
    int32_t v8;
    int32_t* esp9;
    int32_t ebx10;
    int32_t v11;
    unsigned char* ecx12;
    int32_t edi13;
    void** edi14;

    __asm__("lodsd ");
    __asm__("int1 ");
    edx2 = edx3 + 1;
    eflags4 = *reinterpret_cast<int32_t*>(static_cast<int32_t>(ax5));
    edx6 = edx2 - (v7 + reinterpret_cast<uint1_t>(edx2 < v8 + *reinterpret_cast<uint1_t*>(&eflags4)));
    esp9 = reinterpret_cast<int32_t*>(ax5 + 4 - 4);
    *esp9 = ebx10;
    __asm__("clc ");
    if (reinterpret_cast<int32_t>(edx2) > reinterpret_cast<int32_t>(v11 + *reinterpret_cast<uint1_t*>(&eflags4))) {
        ecx12 = reinterpret_cast<unsigned char*>(ecx & *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp9) + edi13 * 2 - 0x867847d));
        *ecx12 = reinterpret_cast<unsigned char>(*ecx12 ^ *reinterpret_cast<unsigned char*>(&edx6));
        *edi14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    }
}

void fun_408990() {
    int1_t zf1;

    __asm__("fidiv dword [esi+0x66]");
    if (zf1) 
        goto 0x408953;
}

void fun_4089d8() {
}

struct s451 {
    unsigned char f0;
    signed char[22] pad23;
    void* f23;
};

unsigned char g6dd59cf;

int32_t g73bb8c5e;

int32_t fun_f3d82b1();

int32_t g384a20;

struct s451* fun_cfdb6127();

unsigned char g9;

struct s452 {
    struct s452* f0;
    void* f4;
};

struct s451* g523b97e;

struct s451* fun_786900a3();

unsigned char gc9c38cbd;

void fun_4089f8(struct s451* ecx) {
    void* esp2;
    uint32_t eflags3;
    void* eax4;
    int32_t edi5;
    unsigned char edx6;
    uint32_t* edx7;
    uint32_t* esp8;
    void** esp9;
    void* ss10;
    int32_t* esp11;
    int32_t eax12;
    int16_t es13;
    uint32_t eax14;
    struct s451* eax15;
    unsigned char tmp8_16;
    int32_t esi17;
    int32_t esi18;
    struct s451* ebx19;
    void* tmp32_20;
    uint1_t zf21;
    int1_t sf22;
    uint1_t less23;
    uint1_t less_or_equal24;
    void* ecx25;
    int32_t* esi26;
    int32_t* esi27;
    struct s451* ecx28;
    struct s452* esp29;
    struct s452* ebp30;
    uint1_t cf31;
    struct s451* tmp32_32;
    uint1_t cf33;
    uint32_t* esp34;

    esp2 = __zero_stack_offset();
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = 0;
    __asm__("cli ");
    __asm__("lahf ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax4) + reinterpret_cast<uint32_t>(ecx) + 0x6394f23f) = edi5;
    goto addr_0x408a00_2;
    addr_0x408a45_3:
    addr_0x408aba_4:
    *reinterpret_cast<signed char*>(&edx6 + 1) = 0x98;
    edx6 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx7) | g6dd59cf);
    __asm__("out dx, eax");
    __asm__("out 0x1b, eax");
    g73bb8c5e = ~g73bb8c5e;
    __asm__("insd ");
    esp8 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp2) - 4);
    *esp8 = edx6 - (ecx->f0 + reinterpret_cast<uint1_t>(edx6 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(ecx->f0))));
    __asm__("fist dword [edi+0x7db07d05]");
    esp9 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp8) - 2);
    *esp9 = ss10;
    __asm__("fidivr dword [edi+eax*4]");
    esp11 = reinterpret_cast<int32_t*>(reinterpret_cast<int16_t>(*esp9) + 4 - 4);
    *esp11 = 0x408ae3;
    eax12 = fun_f3d82b1();
    g384a20 = eax12;
    __asm__("aaa ");
    __asm__("aam 0x95");
    __asm__("stc ");
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp11 + 1) - 2) = es13;
    addr_0x408a28_6:
    eax14 = reinterpret_cast<uint32_t>(&eax15->pad23);
    *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags3) = eax14 == 0;
    *reinterpret_cast<int1_t*>(&eflags3) = reinterpret_cast<int32_t>(eax14) < reinterpret_cast<int32_t>(0);
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
    __asm__("out 0x5e, al");
    __asm__("out 0x3b, eax");
    *reinterpret_cast<struct s451**>(reinterpret_cast<uint32_t>(ecx) + reinterpret_cast<int32_t>(edx7) * 4 - 0x50a92c86) = ecx;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp2) - 4) = eflags3 & 0xfcffff;
    goto addr_0x408a45_3;
    while (1) {
        __asm__("cdq ");
        eax15 = fun_cfdb6127();
        __asm__("fimul word [eax+eax*2+0x75eee7d8]");
        __asm__("cdq ");
        tmp8_16 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx7) + esi17 * 2 - 19);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx7) + esi18 * 2 - 19) = *reinterpret_cast<unsigned char*>(&edx7);
        *reinterpret_cast<unsigned char*>(&edx7) = tmp8_16;
        *edx7 = *edx7 - reinterpret_cast<uint32_t>(eax15);
        ebx19 = reinterpret_cast<struct s451*>(9);
        __asm__("xlatb ");
        __asm__("cdq ");
        __asm__("lahf ");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax15) + reinterpret_cast<uint32_t>(ecx) * 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax15) + reinterpret_cast<uint32_t>(ecx) * 2) & *reinterpret_cast<unsigned char*>(&ecx));
        tmp32_20 = ecx->f23;
        ecx->f23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp2) - 4 - 4 + 4 + 4 - 4);
        __asm__("fsincos ");
        __asm__("in eax, dx");
        esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(tmp32_20) + 2);
        g9 = reinterpret_cast<unsigned char>(g9 + 0xffffffa4);
        zf21 = reinterpret_cast<uint1_t>(g9 == 0);
        sf22 = reinterpret_cast<signed char>(g9) < reinterpret_cast<signed char>(0);
        less23 = reinterpret_cast<uint1_t>(sf22 != __intrinsic());
        less_or_equal24 = reinterpret_cast<uint1_t>(less23 | zf21);
        if (less23) 
            goto addr_0x408aba_4;
        while (1) {
            if (!less_or_equal24) {
                addr_0x408a00_2:
                ecx25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx) - 1);
                if (reinterpret_cast<uint1_t>(!!ecx25) & zf21) 
                    goto addr_0x408a45_3;
                __asm__("daa ");
                __asm__("in al, dx");
                *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + 17);
                ecx = reinterpret_cast<struct s451*>(reinterpret_cast<uint32_t>(ecx25) - 1);
                *esi26 = *esi27 << *reinterpret_cast<unsigned char*>(&ecx);
                __asm__("outsd ");
                if (__undefined() == __intrinsic()) 
                    break;
                ecx28 = eax15;
                eax15 = ecx;
                ecx = reinterpret_cast<struct s451*>(reinterpret_cast<uint32_t>(ecx28) - 1);
                *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + 0xb0) + __intrinsic());
                __asm__("cli ");
                ebx19 = ecx28;
                esp29 = ebp30;
                ebp30 = esp29->f0;
                __asm__("fmul st0, st2");
                g523b97e = eax15;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx19) + 1) = 0x70;
                *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax15) + 1)) + __intrinsic());
                *reinterpret_cast<uint1_t*>(&eflags3) = __intrinsic();
                zf21 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax15) == 0);
                less_or_equal24 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax15)) < reinterpret_cast<signed char>(0) != __intrinsic()) | zf21);
                esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29->f4) + 4 + 4);
                if (reinterpret_cast<uint1_t>(*reinterpret_cast<uint1_t*>(&eflags3) | zf21)) 
                    goto addr_0x408a28_6;
            } else {
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx) + 0xefad7535) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx) + 0xefad7535) | reinterpret_cast<uint32_t>(eax15);
                __asm__("cli ");
                __asm__("rcl dword [eax], 1");
                __asm__("int1 ");
                cf31 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax15) < 0x776b5285);
                __asm__("aam 0x27");
                ebp30 = reinterpret_cast<struct s452*>(0x5f077891);
                tmp32_32 = ebx19;
                ebx19 = eax15;
                ecx = reinterpret_cast<struct s451*>(reinterpret_cast<uint32_t>(ecx) - 1);
                if (!(reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>(eax15 == 0x776b5285))) 
                    break;
                less_or_equal24 = reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(tmp32_32) <= reinterpret_cast<int32_t>(0x6d23ed27 + cf31));
                cf33 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_32) < 0x6d23ed27 + cf31);
                zf21 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_32) - (0x6d23ed27 + cf33) == static_cast<uint32_t>(cf33));
                esp34 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp2) - 4);
                *esp34 = 0x408a61;
                eax15 = fun_786900a3();
                esp2 = reinterpret_cast<void*>(esp34 + 1);
            }
            gc9c38cbd = *reinterpret_cast<unsigned char*>(&eax15);
        }
    }
}

void fun_408a4c() {
    int1_t less_or_equal1;

    __asm__("insd ");
    if (less_or_equal1) 
        goto 0x408a0f;
}

void fun_408b05() {
    int32_t edi1;
    int32_t edi2;

    *reinterpret_cast<int32_t*>(edi1 - 0x314de7ee) = *reinterpret_cast<int32_t*>(edi2 - 0x314de7ee) - 0x36e3b2b8;
    __asm__("lodsd ");
    return;
}

signed char g75ec;

struct s453 {
    signed char[110] pad110;
    unsigned char f110;
};

struct s454 {
    signed char[110] pad110;
    unsigned char f110;
};

struct s455 {
    signed char[99] pad99;
    signed char f99;
};

int32_t gf44de65;

void fun_408b86(int16_t cx) {
    uint32_t ecx1;
    int32_t eflags2;
    void* esp3;
    struct s453* eax4;
    struct s454* eax5;
    unsigned char bh6;
    struct s455* eax7;
    uint32_t* ebx8;
    uint32_t* ebx9;
    uint32_t tmp32_10;
    int32_t edi11;
    int32_t esi12;
    int32_t eax13;
    int32_t eax14;
    void* esp15;
    int32_t ebx16;
    int32_t ebx17;
    int32_t ebx18;
    int32_t ebx19;
    unsigned char dl20;
    int1_t pf21;
    uint1_t zf22;
    int32_t ebx23;
    int32_t ebx24;
    int32_t eax25;
    int32_t ebx26;
    int32_t ebx27;
    uint32_t* ebx28;
    int32_t* ebx29;
    uint32_t* ebx30;
    int32_t ebx31;
    int32_t ebx32;
    int32_t edx33;
    int32_t edx34;
    int32_t edx35;
    int32_t edx36;
    uint32_t ebp37;
    uint32_t* ebx38;

    *reinterpret_cast<int16_t*>(&ecx1) = cx;
    __asm__("outsb ");
    g75ec = reinterpret_cast<signed char>(g75ec + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1));
    eflags2 = reinterpret_cast<int32_t>(__return_address());
    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 - 4);
    if (*reinterpret_cast<int1_t*>(&eflags2)) {
        __asm__("fimul word [ecx]");
        eax4->f110 = reinterpret_cast<unsigned char>(eax5->f110 ^ bh6);
        __asm__("insb ");
        eax7->f99 = *reinterpret_cast<signed char*>(&ecx1);
        *ebx8 = *ebx9 ^ 7;
        tmp32_10 = 1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1);
        *reinterpret_cast<signed char*>(edi11 + tmp32_10) = *reinterpret_cast<signed char*>(esi12 + tmp32_10);
    }
    while (1) {
        eax13 = eax14 + 1;
        __asm__("retf 0x9d2c");
        __asm__("iretd ");
        __asm__("lodsd ");
        __asm__("aad 0x22");
        __asm__("fcmovu st0, st2");
        esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp3) - 2);
        gf44de65 = eax13;
        __asm__("fsub dword [ecx+0x24]");
        *reinterpret_cast<unsigned char*>(ebx16 + ebx17 * 4 - 0x4cf11cac) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx18 + ebx19 * 4 - 0x4cf11cac) & dl20);
        pf21 = __intrinsic();
        zf22 = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(ebx23 + ebx24 * 4 - 0x4cf11cac) == 0);
        __asm__("pushad ");
        do {
            esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp15) + 2);
            __asm__("aas ");
            if (pf21) 
                goto addr_0x408c61_11;
            __asm__("cdq ");
            if (!pf21) 
                goto addr_0x408bfb_13;
            --ecx1;
            if (!(reinterpret_cast<uint1_t>(!!ecx1) & zf22)) 
                break;
            eax25 = eax13 + 1;
            pf21 = __intrinsic();
            zf22 = reinterpret_cast<uint1_t>(0x49f3b7be == *reinterpret_cast<uint32_t*>(ebx26 - 56));
            eax13 = static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax25));
        } while (0x49f3b7be >= *reinterpret_cast<uint32_t*>(ebx27 - 56));
        goto addr_0x408b85_16;
        __asm__("in eax, dx");
        __asm__("out 0x99, eax");
        __asm__("into ");
        __asm__("in al, dx");
        eax14 = eax13 - 0x662e38dc;
        esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp15) - 4 + 4);
        __asm__("insb ");
    }
    addr_0x408c61_11:
    __asm__("out 0xe2, al");
    *ebx28 = *ebx29 - (0x612072d0 + reinterpret_cast<uint1_t>(*ebx30 < 0x612072d0));
    __asm__("in eax, 0x4f");
    *reinterpret_cast<int32_t*>(ebx31 + 0x1db60155) = *reinterpret_cast<int32_t*>(ebx32 + 0x1db60155) - reinterpret_cast<int32_t>(esp15);
    *reinterpret_cast<uint32_t*>(eax13 + 0x4d8e4ca9) = *reinterpret_cast<uint32_t*>(eax13 + 0x4d8e4ca9) & ecx1;
    __asm__("in eax, 0xb");
    if (!__intrinsic()) {
        __asm__("aas ");
        __asm__("retf ");
        if (__intrinsic()) {
            *reinterpret_cast<int32_t*>(edx33 - 0x5b3735ba) = *reinterpret_cast<int32_t*>(edx34 - 0x5b3735ba) - edx35;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx36) + 1) = -82;
            *reinterpret_cast<signed char*>(edx36 + 0x27fcb0b9) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx36 + 0x27fcb0b9) + 82);
            ebp37 = ecx1 - 0x72e13fb9 & *ebx38;
            __asm__("in al, dx");
            *reinterpret_cast<uint32_t*>(ebp37 + 0x78f356f7) = *reinterpret_cast<uint32_t*>(ebp37 + 0x78f356f7) ^ 0x49f3b7be;
        }
    }
    addr_0x408bfb_13:
    __asm__("ror dword [ebp+0x62387401], 0x3f");
    addr_0x408b85_16:
}

void fun_408bae(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t edi4;

    __asm__("out 0xbe, al");
    __asm__("fisubr word [ebp+0x5b]");
    __asm__("aad 0xf4");
    eax2 = eax3 + edi4;
    if (eax2 < 0 != __intrinsic()) 
        goto "???";
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!!eax2)) 
        goto 0x408bf8;
    __asm__("fisttp word [edx]");
}

void fun_408c12(int32_t a1) {
    unsigned char* ebx2;
    unsigned char bl3;
    void* edx4;
    void* edx5;
    int32_t eax6;
    uint1_t less_or_equal7;
    void* edx8;
    void* edx9;
    signed char* edi10;
    signed char al11;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx2) + 1) = 35;
    *ebx2 = reinterpret_cast<unsigned char>(*ebx2 ^ bl3);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(edx4) + 0xaaa3a8) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(edx5) + 0xaaa3a8) + eax6;
    less_or_equal7 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(edx8) + 0xaaa3a8) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(edx9) + 0xaaa3a8) == 0));
    *edi10 = al11;
    if (less_or_equal7) 
        goto 0x408bfb;
    __asm__("outsb ");
    goto a1;
}

void fun_408cda(signed char cl) {
    int1_t sf2;

    if (sf2) {
    }
}

signed char g121f74c8;

void fun_408cde() {
    int32_t* edi1;
    int32_t* esi2;
    int32_t edi3;
    int32_t ebx4;
    signed char tmp8_5;
    signed char bl6;

    __asm__("das ");
    *edi1 = *esi2;
    if (edi3 + 4 + 1 < 0 != __intrinsic()) {
        __asm__("les ebx, [edx+0x66f55c07]");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = 1;
        __asm__("aas ");
        __asm__("int1 ");
        __asm__("aas ");
        __asm__("int1 ");
        __asm__("into ");
        tmp8_5 = g121f74c8;
        g121f74c8 = bl6;
        *reinterpret_cast<signed char*>(&ebx4) = tmp8_5;
        __asm__("sahf ");
        *reinterpret_cast<unsigned char*>(ebx4 - 0x344a8e23) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx4 - 0x344a8e23) | 61);
        __asm__("sti ");
        __asm__("aad 0x4a");
        __asm__("salc ");
        __asm__("out 0x26, eax");
        __asm__("out dx, al");
    }
}

struct s458 {
    uint32_t f0;
    signed char[1140299123] pad1140299127;
    int32_t f1140299127;
};

struct s457 {
    struct s458* f0;
    signed char[78] pad82;
    signed char f82;
};

struct s456 {
    unsigned char f0;
    struct s457* f1;
    int32_t f4;
    signed char[92] pad101;
    signed char f101;
    signed char[2] pad104;
    unsigned char f104;
    signed char[334606298] pad334606403;
    uint32_t f334606403;
};

unsigned char g5a464fdb;

struct s459 {
    struct s457* f0;
    unsigned char f4;
};

struct s460 {
    unsigned char f0;
    signed char[1078370254] pad1078370255;
    unsigned char f1078370255;
};

int32_t ge1;

uint32_t fun_bb6f275f(int32_t a1, int32_t a2);

struct s457* geec5ead8;

uint32_t g2b88b394;

void fun_408d2f(struct s456* ecx) {
    int32_t v2;
    struct s456* edi3;
    struct s456* eax4;
    struct s457* eax5;
    struct s457* edi6;
    int32_t v7;
    struct s456* cs8;
    int1_t zf9;
    struct s456* ds10;
    uint32_t edx11;
    unsigned char dh12;
    struct s459* edi13;
    struct s460* esi14;
    struct s458* ebx15;
    struct s460* edx16;
    uint1_t cf17;
    uint32_t ebp18;
    int1_t sf19;
    uint1_t cf20;
    uint32_t eax21;
    uint1_t cf22;

    v2 = reinterpret_cast<int32_t>(__return_address());
    __asm__("daa ");
    edi3 = eax4;
    eax5 = edi6;
    __asm__("ffree st4");
    *reinterpret_cast<struct s456**>(reinterpret_cast<int32_t>(&v7) + 2) = cs8;
    eax5->f82 = reinterpret_cast<signed char>(eax5->f82 + *reinterpret_cast<signed char*>(&ecx));
    zf9 = eax5->f82 == 0;
    do {
        *reinterpret_cast<struct s456**>(&v7) = ds10;
        if (!zf9) 
            break;
        *reinterpret_cast<unsigned char*>(&eax5) = g5a464fdb;
        if (__intrinsic()) 
            goto 0x408d03;
        *reinterpret_cast<unsigned char*>(&edx11) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx11) ^ dh12);
        __asm__("arpl [0x6778212a], si");
        __asm__("fucomip st0, st0");
        __asm__("int1 ");
        if (__intrinsic()) 
            goto addr_0x408da8_6;
        edi13 = reinterpret_cast<struct s459*>(reinterpret_cast<int16_t>(edi3) + 1);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(ecx) + 0x68) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(ecx) + 0x68) >> -25);
        zf9 = edi13->f0 == eax5;
        edi3 = reinterpret_cast<struct s456*>(&edi13->f4);
        esi14 = reinterpret_cast<struct s460*>(&esi14->pad1078370255 + 1);
        *reinterpret_cast<signed char*>(&ebx15) = 73;
    } while (reinterpret_cast<int32_t>(edi13->f0) >= reinterpret_cast<int32_t>(eax5));
    goto addr_0x408d8d_14;
    __asm__("retf ");
    __asm__("int 0xbc");
    *reinterpret_cast<unsigned char*>(edi3) = esi14->f0;
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx15) + 0x43f79577) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx15) + 0x43f79577) - 0x76ed1ad;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int16_t>(edi3) + 4) = ge1;
    addr_0x408d5f_22:
    addr_0x408da8_6:
    __asm__("ror byte [edx+0x4523302], cl");
    addr_0x408d8d_14:
    __asm__("aas ");
    edx16 = reinterpret_cast<struct s460*>(edx11 & *reinterpret_cast<uint32_t*>(reinterpret_cast<int16_t>(edi3) + 0x13f1b043));
    addr_0x408d93_24:
    while (eax5 = reinterpret_cast<struct s457*>(reinterpret_cast<uint32_t>(eax5) ^ 0xc7eee8b), edi3 = reinterpret_cast<struct s456*>(reinterpret_cast<int16_t>(edi3) - 1), *reinterpret_cast<unsigned char*>(edi3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi3) | 0xffffffc1), cf17 = reinterpret_cast<uint1_t>(ebp18 < ebx15->f0), ebp18 = ebp18 - (ebx15->f0 + cf17), sf19 = reinterpret_cast<int32_t>(ebp18) < reinterpret_cast<int32_t>(static_cast<uint32_t>(cf17)), !__intrinsic()) {
        while (sf19) {
            cf20 = __intrinsic();
            do {
                edx16 = reinterpret_cast<struct s460*>(&edx16->pad1078370255);
                eax21 = fun_bb6f275f(v7, v2);
                edx16->f0 = reinterpret_cast<unsigned char>(edx16->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&edx16) + reinterpret_cast<uint1_t>(edx16->f0 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&edx16) + cf20))));
                eax5 = reinterpret_cast<struct s457*>(eax21 & 0x6e3147f2);
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = 0xff;
                if (0) 
                    break;
                __asm__("stc ");
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx16) + 1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx16) + 1) + esi14->f0)));
                __asm__("out dx, eax");
                cf20 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(ebx15) < reinterpret_cast<uint32_t>(*reinterpret_cast<struct s458**>(reinterpret_cast<uint32_t>(edx16) + reinterpret_cast<uint32_t>(edx16) * 4 + 0x4a5e1077)));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax5) + 1) = 0x7f;
            } while (!cf20);
            goto addr_0x408df2_29;
            addr_0x408e13_30:
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1) - *reinterpret_cast<signed char*>(reinterpret_cast<int16_t>(edi3) + 0x65));
            cf22 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax5->f0) < reinterpret_cast<uint32_t>(ebx15));
            __asm__("aad 0x28");
            --ebp18;
            esi14 = edx16;
            ecx = reinterpret_cast<struct s456*>(reinterpret_cast<int16_t>(ecx) - 1);
            if (!ecx) 
                goto addr_0x408e23_31;
            if (!__intrinsic()) 
                goto addr_0x408d93_24;
            __asm__("popad ");
            __asm__("insd ");
            __asm__("in eax, 0x73");
            __asm__("ror dword [ecx], cl");
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax5) + 0x8720cf14) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax5) + 0x8720cf14) - (reinterpret_cast<uint32_t>(esi14) + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax5) + 0x8720cf14) < reinterpret_cast<uint32_t>(esi14) + cf22));
            sf19 = 0;
            continue;
            addr_0x408df2_29:
            *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) & 93);
            ecx = edi3;
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx15) - 0x4362d208) = reinterpret_cast<signed char>(~*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx15) - 0x4362d208));
            eax5 = reinterpret_cast<struct s457*>(reinterpret_cast<uint32_t>(eax5) + 0x2c1272c2);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = 0xaa;
            __asm__("cdq ");
            if (__intrinsic()) 
                goto addr_0x408e81_34;
            __asm__("lahf ");
            __asm__("iretd ");
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1) - 1);
            __asm__("out dx, eax");
            geec5ead8 = eax5;
            goto addr_0x408e13_30;
        }
        goto addr_0x408d5f_22;
    }
    __asm__("ror dh, cl");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi14) + 0x40469fcf) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi14) + 0x40469fcf) | *reinterpret_cast<unsigned char*>(&eax5));
    goto addr_0x408da8_6;
    addr_0x408e23_31:
    __asm__("hlt ");
    addr_0x408e81_34:
    g2b88b394 = reinterpret_cast<uint32_t>(eax5) - *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(edx16) + 0x7eec3909);
    __asm__("out dx, eax");
}

void fun_408db1() {
    __asm__("cmc ");
}

struct s461 {
    unsigned char f0;
    signed char[1825600135] pad1825600136;
    unsigned char f1825600136;
};

uint32_t gbdc716dc;

int32_t fun_9cce4ab7();

struct s462 {
    signed char[29] pad29;
    signed char f29;
};

struct s463 {
    signed char f0;
    unsigned char f1;
};

struct s464 {
    signed char[1] pad1;
    signed char f1;
};

int32_t g232eb7da;

void fun_408e57() {
    struct s461* ebx1;
    uint1_t cf2;
    uint32_t edx3;
    uint32_t edx4;
    int32_t edx5;
    int32_t* esp6;
    int32_t eax7;
    signed char* esp8;
    struct s462* edi9;
    struct s463* edi10;
    struct s464* edi11;
    void* esi12;
    int32_t eip13;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) = 0x65;
    __asm__("fist word [edx+0x31]");
    cf2 = reinterpret_cast<uint1_t>(edx3 < gbdc716dc);
    edx4 = edx5 - gbdc716dc;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx1) + 0x6cd07288) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx1) + 0x6cd07288) + 97) + cf2);
    if (__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx1) + 0x6cd07288) == 0)) {
        esp6 = reinterpret_cast<int32_t*>(edx4 * 0xffffffaa - 4);
        *esp6 = 0x408eae;
        eax7 = fun_9cce4ab7();
        esp8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp6 + 1) - 1);
        if (reinterpret_cast<int32_t>(esp8) < reinterpret_cast<int32_t>(0) == __intrinsic()) {
            __asm__("int1 ");
            edi9->f29 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1);
            edi10 = reinterpret_cast<struct s463*>(&edi11->f1);
            *esp8 = reinterpret_cast<signed char>(~*esp8);
            __asm__("clc ");
            edi10->f0 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi12) + 1 + 1);
            __asm__("salc ");
            edi10->f1 = *reinterpret_cast<unsigned char*>(&eax7);
            *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) ^ 0xec);
            g232eb7da = eax7;
            eip13 = g232eb7da;
            goto eip13;
        } else {
            ebx1->f0 = reinterpret_cast<unsigned char>(ebx1->f0 | 0x6a);
        }
    } else {
        __asm__("in eax, 0x94");
        __asm__("pushad ");
        __asm__("rcr dword [edi+0x7f], cl");
    }
}

void fun_408e98(int32_t ecx) {
}

void fun_408e9d() {
    __asm__("fnsave [edi+0x6b]");
    __asm__("int1 ");
    __asm__("pushad ");
}

struct s465 {
    signed char[103] pad103;
    unsigned char f103;
};

struct s466 {
    signed char[103] pad103;
    unsigned char f103;
};

struct s467 {
    signed char[4] pad4;
    signed char f4;
};

struct s468 {
    signed char[4] pad4;
    signed char f4;
};

void* g9b0c6b45;

void fun_408edb(int32_t ecx) {
    void* eax2;
    struct s465* edx3;
    struct s466* edx4;
    unsigned char dh5;
    void* eax6;
    int32_t ebp7;
    int32_t ebp8;
    int32_t edx9;
    signed char* edi10;
    struct s467* edi11;
    signed char* esi12;
    struct s468* esi13;
    void** edi14;
    uint32_t* ebx15;
    uint32_t* ebx16;
    int32_t edi17;
    int32_t* esp18;

    __asm__("into ");
    eax2 = __zero_stack_offset();
    edx3->f103 = reinterpret_cast<unsigned char>(edx4->f103 ^ dh5);
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax2) + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax2) + 1)) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax6) + ecx * 8 - 0x6a));
    *reinterpret_cast<int32_t*>(ebp7 + 0x5d389d19) = *reinterpret_cast<int32_t*>(ebp8 + 0x5d389d19) - edx9;
    edi10 = &edi11->f4;
    esi12 = &esi13->f4;
    if (reinterpret_cast<int32_t>(*edi14) < reinterpret_cast<int32_t>(eax2)) 
        goto 0x408f1c;
    *ebx15 = *ebx16 & reinterpret_cast<uint32_t>(esi12);
    *edi10 = *esi12;
    edi17 = reinterpret_cast<int32_t>(edi10 + 1);
    __asm__("retf 0xbb65");
    esp18 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax6) - 4);
    *esp18 = edi17;
    *(esp18 - 1) = edi17;
    if (ecx - 1) 
        goto 0x408f0f;
    __asm__("arpl [ebx], si");
    g9b0c6b45 = eax2;
    __asm__("cdq ");
}

struct s469 {
    signed char[85] pad85;
    int32_t f85;
};

struct s470 {
    signed char[85] pad85;
    int32_t f85;
};

struct s471 {
    signed char[85] pad85;
    int32_t f85;
};

void fun_8e2287cb();

struct s472 {
    int32_t f0;
    uint32_t f4;
};

struct s473 {
    signed char[63] pad63;
    unsigned char f63;
};

struct s474 {
    signed char[63] pad63;
    unsigned char f63;
};

void* fun_d16a44d6();

struct s475 {
    signed char[4] pad4;
    int32_t f4;
};

struct s476 {
    signed char[74] pad74;
    unsigned char f74;
};

uint32_t g81fbaa88;

void fun_408f05(int32_t ecx) {
    int1_t less_or_equal2;
    struct s469* edi3;
    struct s470* edi4;
    struct s471* edi5;
    int32_t edx6;
    int32_t* esi7;
    int32_t esi8;
    signed char* edi9;
    signed char* ebx10;
    int32_t ebp11;
    int32_t ebp12;
    uint1_t cf13;
    signed char* eax14;
    signed char* ebp15;
    int32_t edx16;
    int32_t ecx17;
    int32_t eax18;
    uint1_t zf19;
    int32_t ebp20;
    struct s472* ebp21;
    uint32_t* esp22;
    uint32_t esi23;
    int1_t less_or_equal24;
    signed char* edi25;
    uint32_t ecx26;
    struct s473* ebx27;
    struct s474* ebx28;
    void* eax29;
    int32_t ebp30;
    uint1_t cf31;
    struct s475* esp32;
    struct s476* eax33;
    uint1_t cf34;

    __asm__("daa ");
    less_or_equal2 = edi3->f85 <= ecx;
    edi4->f85 = edi5->f85 - ecx;
    if (!less_or_equal2) 
        goto "???";
    *reinterpret_cast<signed char*>(&edx6) = 0x8b;
    __asm__("aad 0xca");
    __asm__("fdiv dword [edx+ebx*4-0x64]");
    *esi7 = esi8;
    edi9 = ebx10;
    fun_8e2287cb();
    *reinterpret_cast<uint32_t*>(ebp11 - 0x55d11c42) = *reinterpret_cast<uint32_t*>(ebp12 - 0x55d11c42) ^ 0xffffffa5;
    cf13 = reinterpret_cast<uint1_t>(!!*reinterpret_cast<int32_t*>(ecx + 0x229f8861));
    *reinterpret_cast<int32_t*>(ecx + 0x229f8861) = -*reinterpret_cast<int32_t*>(ecx + 0x229f8861);
    __asm__("insb ");
    eax14 = ebp15;
    __asm__("arpl [ecx+0x5acf55c0], si");
    __asm__("aas ");
    edx16 = edx6 - 1;
    if (__intrinsic()) {
        ecx17 = ecx + 1;
        *reinterpret_cast<unsigned char*>(ecx17 + 0x2c737db0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx17 + 0x2c737db0) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx17) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ecx17 + 0x2c737db0) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx17) + cf13))));
        goto eax18;
    }
    __asm__("retf 0xbec5");
    *reinterpret_cast<unsigned char*>(edi9 + 0xffffff90) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi9 + 0xffffff90) >> 1);
    zf19 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edi9 + 0xffffff90) == 0);
    ebp20 = ebp21->f0;
    esp22 = &ebp21->f4;
    esi23 = 0xe5137a0d;
    do {
        --ecx;
        if (reinterpret_cast<uint1_t>(!!ecx) & zf19) 
            break;
        --esp22;
        *esp22 = esi23;
        zf19 = reinterpret_cast<uint1_t>(eax14 == 0x38a1be49);
        less_or_equal24 = reinterpret_cast<int32_t>(eax14) <= reinterpret_cast<int32_t>(0x38a1be49);
        edi25 = eax14;
        eax14 = edi9;
        *edi25 = *reinterpret_cast<signed char*>(&eax14);
        edi9 = edi25 + 1;
        ++esi23;
        __asm__("lahf ");
    } while (less_or_equal24);
    goto addr_0x409010_10;
    __asm__("rcl dword [edi+edi*8], 0x19");
    *reinterpret_cast<unsigned char*>(ebp20 - 0x11b9aa85) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp20 - 0x11b9aa85) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax14) + 1));
    ecx26 = *esp22;
    if (0) {
        if (!__intrinsic()) 
            goto addr_0x409046_15;
    } else {
        ebx27->f63 = reinterpret_cast<unsigned char>(ebx28->f63 | 40);
        __asm__("rcl dword [edx-0x42], 1");
        __asm__("into ");
        *reinterpret_cast<int32_t*>(esp22 + 1 - 1) = 0x4090a8;
        eax29 = fun_d16a44d6();
        ebp30 = *reinterpret_cast<int32_t*>(0x18edd2f8 & reinterpret_cast<uint32_t>(edi9));
        cf31 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax29) < 0xf1);
        *reinterpret_cast<unsigned char*>(&eax29) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax29) - reinterpret_cast<unsigned char>(15 - cf31));
        esp32 = reinterpret_cast<struct s475*>((0x18edd2f8 & reinterpret_cast<uint32_t>(edi9)) + 4 + 4);
        eax33 = reinterpret_cast<struct s476*>(reinterpret_cast<uint32_t>(eax29) - (0x42fd3834 - reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax29) < 0x42fd3834 - cf31)));
        __asm__("aam 0x11");
        eax33->f74 = reinterpret_cast<unsigned char>(eax33->f74 & *reinterpret_cast<unsigned char*>(&ecx26));
        if (__intrinsic()) 
            goto addr_0x4090d4_19; else 
            goto addr_0x4090bc_20;
    }
    addr_0x409046_15:
    edi9[0xffffffd2] = *reinterpret_cast<signed char*>(&edx16);
    __asm__("in al, dx");
    addr_0x4090d4_19:
    addr_0x4090bc_20:
    edi9[0xffffff94] = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx26) + 1);
    __asm__("int1 ");
    __asm__("enter 0x760d, 0xad");
    if (__intrinsic()) 
        goto addr_0x4090d4_19;
    __asm__("sti ");
    cf34 = reinterpret_cast<uint1_t>(g81fbaa88 < ebp30 + reinterpret_cast<uint1_t>((reinterpret_cast<uint32_t>(eax33) & 0xd4ae9ab4) < 0xa9a97a5d));
    g81fbaa88 = g81fbaa88 - (ebp30 + cf34);
    goto esp32->f4;
    addr_0x409010_10:
}

uint32_t gd6261c39;

void fun_408f3b(int32_t ecx) {
    uint1_t cf2;
    uint32_t eax3;
    int32_t esi4;

    __asm__("fmul qword [edx]");
    *reinterpret_cast<unsigned char*>(ecx - 0x572f422d) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx - 0x572f422d) + 89) + cf2);
    gd6261c39 = eax3 & 0xc7b5c81;
    __asm__("lodsd ");
    *reinterpret_cast<signed char*>(esi4 - 91) = reinterpret_cast<signed char>(~*reinterpret_cast<signed char*>(esi4 - 91));
}

void fun_408feb() {
    int32_t ebp1;
    int32_t ebp2;
    signed char bh3;

    __asm__("iretd ");
    *reinterpret_cast<signed char*>(ebp1 - 0xe7bc462) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp2 - 0xe7bc462) - bh3);
    __asm__("aad 0x5b");
}

signed char gb87f5df0;

struct s477 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_409012(int32_t ecx) {
    int1_t pf2;
    uint32_t eax3;
    struct s477* edi4;
    int32_t* esi5;
    int32_t ecx6;
    int32_t edi7;
    int32_t edx8;
    int32_t edx9;

    __asm__("out dx, al");
    if (!pf2) 
        goto 0x409011;
    eax3 = reinterpret_cast<uint32_t>(__return_address());
    *reinterpret_cast<signed char*>(&eax3) = gb87f5df0;
    edi4->f1 = *esi5;
    if (!(eax3 & 0xc6aa94a1)) 
        goto 0x409083;
    ecx6 = ecx + edi7 - 1;
    if (reinterpret_cast<uint1_t>(!!ecx6) & reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 - 4 - 4 - 4 + *reinterpret_cast<int32_t*>(edx8 + 0x4f653382)) == 0)) {
        __asm__("retf ");
        *reinterpret_cast<signed char*>(edx9 - 0x3a100dc3) = *reinterpret_cast<signed char*>(&ecx6);
    }
}

void fun_40904d() {
}

void fun_4090db() {
    uint32_t* eax1;
    uint32_t* ebx2;
    uint1_t cf3;
    uint32_t* edx4;
    uint32_t edx5;
    int32_t* edx6;
    int32_t* edx7;
    int32_t edx8;
    int32_t edi9;
    uint32_t edx10;
    uint32_t edi11;

    __asm__("insb ");
    __asm__("int1 ");
    eax1 = ebx2;
    cf3 = reinterpret_cast<uint1_t>(*edx4 < edx5);
    *edx6 = *edx7 - edx8;
    __asm__("fnsave [esi+0x345c927f]");
    if (!__intrinsic()) {
        while (1) {
            __asm__("lahf ");
            addr_0x409142_3:
        }
    } else {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax1) + 1) = -19;
        __asm__("retf ");
        __asm__("fsub dword [esp+eax*2+0x39]");
        if (edi9) {
            __asm__("das ");
            __asm__("int 0x2b");
            goto addr_0x409142_3;
        } else {
            *eax1 = *eax1 + edi9 + cf3;
            __asm__("popad ");
            __asm__("into ");
            goto edx10 | edi11;
        }
    }
}

void fun_4091ab(signed char cl) {
}

uint32_t ga52c6f9c;

void fun_4091be() {
    uint32_t eflags1;
    int32_t edi2;
    unsigned char ah3;
    int32_t edi4;
    unsigned char ah5;
    uint1_t below_or_equal6;
    uint32_t* esp7;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
    __asm__("stc ");
    *reinterpret_cast<uint1_t*>(&eflags1) = 0;
    *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
    *reinterpret_cast<uint1_t*>(&eflags1) = reinterpret_cast<uint1_t>((*reinterpret_cast<unsigned char*>(edi2 - 0x1d33da0f) & ah3) == 0);
    *reinterpret_cast<int1_t*>(&eflags1) = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(edi4 - 0x1d33da0f) & ah5) < reinterpret_cast<signed char>(0);
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
    *reinterpret_cast<int1_t*>(&eflags1) = __undefined();
    below_or_equal6 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(*reinterpret_cast<uint1_t*>(&eflags1)));
    __asm__("insb ");
    __asm__("outsd ");
    esp7 = reinterpret_cast<uint32_t*>(0xf9d96cb1);
    do {
        __asm__("in eax, dx");
        __asm__("wait ");
        --esp7;
        *esp7 = eflags1 & 0xfcffff;
        if (!below_or_equal6) 
            break;
        __asm__("daa ");
    } while (0);
    goto addr_0x4091e5_5;
    __asm__("rcl dword [ebx], cl");
    __asm__("aad 0xf9");
    ga52c6f9c = ga52c6f9c & reinterpret_cast<uint32_t>(esp7);
    *reinterpret_cast<int32_t*>(esp7 - 1) = 0x27a89c25;
    __asm__("lodsd ");
    __asm__("fldcw word [esi+0xfcd3d301]");
    __asm__("fnstcw word [edi-0x25]");
    addr_0x4091e5_5:
}

signed char gda83f49e;

struct s478 {
    void* f0;
    signed char[3] pad4;
    unsigned char f4;
};

struct s479 {
    signed char f0;
    struct s478** f1;
};

struct s480 {
    signed char[4] pad4;
    signed char f4;
};

struct s481 {
    signed char[4] pad4;
    signed char f4;
};

struct s482 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s483 {
    signed char[4] pad4;
    int32_t f4;
};

struct s484 {
    unsigned char f0;
    signed char f1;
};

struct s483* g5480a7c1;

struct s485 {
    unsigned char f0;
    signed char[3] pad4;
    struct s478** f4;
};

struct s486 {
    unsigned char f0;
    signed char f1;
};

struct s487 {
    signed char[751232872] pad751232872;
    uint32_t f751232872;
};

struct s488 {
    signed char[82] pad82;
    unsigned char f82;
};

void fun_4091ed(int32_t ecx) {
    uint48_t v2;
    uint32_t ecx3;
    int32_t eax4;
    int32_t esi5;
    struct s478** ecx6;
    uint32_t edx7;
    int16_t cs8;
    int32_t* ebx9;
    int32_t* ebx10;
    void* esp11;
    uint1_t cf12;
    uint32_t* esi13;
    uint32_t* edi14;
    int32_t* edi15;
    int32_t* esi16;
    struct s479* edi17;
    struct s480* edi18;
    signed char* esi19;
    struct s481* esi20;
    uint1_t cf21;
    uint32_t eax22;
    struct s478* edi23;
    struct s482* esi24;
    int32_t** esp25;
    struct s483* eax26;
    struct s478** esp27;
    int32_t* esp28;
    struct s484* edi29;
    uint1_t cf30;
    int1_t zf31;
    struct s483* esp32;
    struct s478** eax33;
    struct s485* edi34;
    struct s486* esi35;
    struct s487* tmp32_36;
    struct s487* eax37;
    uint1_t cf38;
    int1_t sf39;
    int16_t* esp40;
    int16_t es41;
    struct s488* edx42;
    struct s483* tmp32_43;
    struct s483* ebp44;

    *reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(&v2) + 2) = reinterpret_cast<int32_t*>(__return_address());
    ecx3 = reinterpret_cast<uint32_t>(ecx - 1);
    if (!ecx3) {
        eax4 = esi5;
        gda83f49e = *reinterpret_cast<signed char*>(&eax4);
    }
    ecx6 = reinterpret_cast<struct s478**>((ecx3 & edx7) - 1);
    if (1) {
        addr_0x409256_4:
        *reinterpret_cast<int16_t*>(&v2) = cs8;
        *ecx6 = reinterpret_cast<struct s478*>(reinterpret_cast<int32_t>(*ecx6) + 0x7dd01438);
        goto *reinterpret_cast<int16_t*>(&v2);
    } else {
        __asm__("wait ");
        ebx9 = *reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(&v2) + 2);
        *reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(&v2) + 2) = ebx10;
        esp11 = reinterpret_cast<void*>(*ebx10 * 0x6e);
        cf12 = reinterpret_cast<uint1_t>(*esi13 < *edi14);
        *edi15 = *esi16;
        edi17 = reinterpret_cast<struct s479*>(&edi18->f4);
        esi19 = &esi20->f4;
        cf21 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(ebx10) < 0x4a995aa4 + cf12);
        eax22 = reinterpret_cast<uint32_t>(ebx10) - (0x4a995aa4 + cf21);
        if (eax22 != static_cast<uint32_t>(cf21)) 
            goto addr_0x409239_9;
    }
    __asm__("insd ");
    addr_0x409239_9:
    edi17->f0 = *esi19;
    edi23 = reinterpret_cast<struct s478*>(&edi17->f1);
    esi24 = reinterpret_cast<struct s482*>(esi19 + 1);
    __asm__("cli ");
    __asm__("out 0x9b, eax");
    esp25 = reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(esp11) - 4);
    *esp25 = ebx9;
    __asm__("lahf ");
    eax26 = reinterpret_cast<struct s483*>((eax22 ^ 0xad104821) - 1);
    esp27 = reinterpret_cast<struct s478**>(esp25 - 1);
    *esp27 = edi23;
    goto addr_0x409251_15;
    addr_0x4092f7_16:
    __asm__("out dx, al");
    edi23->f4 = *reinterpret_cast<unsigned char*>(&eax26);
    goto (*esp27)->f4;
    addr_0x4092d4_23:
    esp28 = reinterpret_cast<int32_t*>(esp27 - 1);
    *esp28 = 0xef;
    edi29 = reinterpret_cast<struct s484*>(reinterpret_cast<uint32_t>(esp28) * 30 + 4);
    edi29->f0 = *reinterpret_cast<unsigned char*>(&eax26);
    edi29->f1 = *reinterpret_cast<signed char*>(&esi24->f4 + 1);
    *reinterpret_cast<unsigned char*>(&eax26) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax26) | 0x84) & 0xb3) - 67);
    g5480a7c1 = eax26;
    addr_0x4092c5_34:
    cf30 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax26) < reinterpret_cast<unsigned char>(41 + __intrinsic()));
    *reinterpret_cast<unsigned char*>(&eax26) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax26) - reinterpret_cast<unsigned char>(41 + cf30));
    zf31 = *reinterpret_cast<unsigned char*>(&eax26) == static_cast<uint32_t>(cf30);
    esp32 = eax26;
    eax33 = esp27;
    do {
        if (!zf31) 
            break;
        *reinterpret_cast<struct s478***>(&edi23->f0) = eax33;
        edi34 = reinterpret_cast<struct s485*>(&edi23->f4);
        esi35 = reinterpret_cast<struct s486*>(&esi24->f4);
        edi34->f0 = esi35->f0;
        edi23 = reinterpret_cast<struct s478*>(&edi34->f4);
        esi24 = reinterpret_cast<struct s482*>(esi35 + 2);
        tmp32_36 = reinterpret_cast<struct s487*>(reinterpret_cast<unsigned char>(ecx6) + 1);
        ecx6 = eax33;
        eax37 = tmp32_36;
        __asm__("int 0x64");
        cf38 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax37) < 0x9a);
        *reinterpret_cast<unsigned char*>(&eax37) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax37) + 0x66);
        esp32 = reinterpret_cast<struct s483*>(0xb007a081);
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax37) + 0x2cc6e768) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax37) + 0x2cc6e768) - (reinterpret_cast<int32_t>(edi23) + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax37) + 0x2cc6e768) < reinterpret_cast<int32_t>(edi23) + cf38));
        eax33 = reinterpret_cast<struct s478**>(reinterpret_cast<uint32_t>(eax37) ^ 0x84b3c865);
        zf31 = eax33 == 0;
    } while (__intrinsic());
    goto addr_0x409335_45;
    __asm__("cli ");
    goto esp32->f4;
    addr_0x409335_45:
    addr_0x409254_48:
    goto addr_0x409256_4;
    while (1) {
        if (sf39) {
            addr_0x409251_15:
            if (__intrinsic()) 
                goto addr_0x409254_48;
            __asm__("aaa ");
            esp40 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp27 + 1) - 2);
            *esp40 = es41;
            edx42 = reinterpret_cast<struct s488*>(reinterpret_cast<int32_t>(edx42) + 1 - 1);
            *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi23) - 0x70b6a1bb) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi23) - 0x70b6a1bb) & 0x2f3b4ba5;
            esp27 = reinterpret_cast<struct s478**>(esp40 - 2);
            *esp27 = edi23;
            __asm__("aad 0xee");
            __asm__("into ");
            es41 = static_cast<int16_t>(reinterpret_cast<uint32_t>(ecx6));
            tmp32_43 = ebp44;
            ebp44 = eax26;
            eax26 = tmp32_43;
            esi24 = reinterpret_cast<struct s482*>(reinterpret_cast<int32_t>(esi24) - 1 - 1);
            *reinterpret_cast<struct s478***>(&edi23->f0) = reinterpret_cast<struct s478**>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s478***>(&edi23->f0)) | 0xf5);
            sf39 = __intrinsic();
            if (sf39) 
                goto addr_0x4092f7_16;
            if (__intrinsic()) 
                continue;
            edi23 = reinterpret_cast<struct s478*>(0x2c00904c);
        } else {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ecx6) - 0x13ab459b) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ecx6) - 0x13ab459b) & *reinterpret_cast<unsigned char*>(&edx42));
            *reinterpret_cast<unsigned char*>(&eax26) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax26) - 0x7f)));
            if (__intrinsic()) 
                goto addr_0x4092c5_34;
            if (!*reinterpret_cast<unsigned char*>(&eax26)) 
                goto addr_0x4092d4_23;
        }
        edx42->f82 = reinterpret_cast<unsigned char>(edx42->f82 | 0xf5);
        sf39 = __intrinsic();
    }
}

void fun_4091fc(int32_t ecx) {
    uint32_t* edi2;
    uint32_t* edi3;

    *edi2 = *edi3 & reinterpret_cast<uint32_t>(__zero_stack_offset());
}

void fun_97e2bf95();

struct s489 {
    signed char[1] pad1;
    unsigned char f1;
};

int32_t gda95378c;

void fun_409260() {
    int1_t cf1;
    signed char* edi2;
    void* edi3;
    signed char* esi4;
    void* edi5;
    unsigned char* esi6;
    struct s489* esi7;
    unsigned char dh8;

    fun_97e2bf95();
    if (cf1) 
        goto 0x4092c8;
    __asm__("retf ");
    edi2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi3) - 1);
    __asm__("sti ");
    *edi2 = *esi4;
    edi5 = reinterpret_cast<void*>(edi2 + 1);
    esi6 = &esi7->f1;
    *esi6 = reinterpret_cast<unsigned char>(*esi6 | dh8);
    __asm__("into ");
    if (__intrinsic()) 
        goto 0x4092be;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi5) - 47) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi5) - 47) + 1;
    gda95378c = 68;
}

void fun_bc59d0b3(int32_t a1);

void fun_4093c6(uint32_t ecx) {
    int1_t cf2;
    unsigned char* edx3;
    unsigned char* edx4;
    unsigned char* edi5;
    signed char* edi6;
    unsigned char* edi7;
    int32_t esi8;
    int32_t esi9;

    if (!cf2) {
    }
    *edx3 = reinterpret_cast<unsigned char>(*edx4 & 69);
    if (!1) 
        goto addr_0x4093a9_5;
    addr_0x4093a9_5:
    edi5[ecx * 2] = reinterpret_cast<unsigned char>(edi6[ecx * 2] - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + reinterpret_cast<uint1_t>(edi7[ecx * 2] < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + reinterpret_cast<uint1_t>(0x76e8e17a < ecx)))));
    esi8 = esi9 + 1;
    fun_bc59d0b3(__return_address());
    *reinterpret_cast<int32_t*>(esi8 - 0xad5f30b) = ~*reinterpret_cast<int32_t*>(esi8 - 0xad5f30b);
}

uint32_t gf8c9eea2;

struct s490 {
    signed char f0;
    signed char[1069613769] pad1069613770;
    signed char f1069613770;
};

struct s491 {
    signed char[4] pad4;
    signed char f4;
};

struct s492 {
    signed char f0;
    uint32_t f1;
};

struct s493 {
    signed char[4] pad4;
    signed char f4;
};

int32_t gf8c9ee9e;

void fun_18536bbe();

signed char* g51893a38;

void fun_4093cc(int32_t ecx) {
    uint32_t eflags2;
    uint48_t v3;
    int32_t ebx4;
    int1_t cf5;
    int1_t below_or_equal6;
    int1_t zf7;
    uint32_t ebx8;
    unsigned char bl9;
    int32_t edx10;
    int32_t* edi11;
    int32_t eax12;
    struct s490* edi13;
    struct s491* edi14;
    struct s492* esi15;
    struct s493* esi16;
    int16_t ds17;
    int32_t ecx18;
    int1_t cf19;
    int1_t below_or_equal20;
    int16_t* esp21;
    void* ebp22;
    int16_t ds23;
    int16_t es24;
    signed char* eax25;
    void* eax26;
    uint32_t eax27;
    uint32_t* esi28;
    uint1_t below_or_equal29;
    int32_t ebp30;
    int32_t ebp31;
    uint32_t ebp32;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    __asm__("das ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v3) + 2) = ebx4;
    __asm__("clc ");
    __asm__("rol dword [ebx], 0x5a");
    __asm__("retf 0x2b04");
    if (cf5) {
        while (1) {
            if (below_or_equal6) 
                break;
            --ecx;
            if (reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>(!zf7)) 
                goto addr_0x40930f_6;
            __asm__("daa ");
            gf8c9eea2 = eflags2 & 0xfcffff;
        }
    } else {
        *reinterpret_cast<unsigned char*>(&ebx8) = reinterpret_cast<unsigned char>(bl9 & *reinterpret_cast<unsigned char*>(edx10 - 0x14c947be));
        *edi11 = eax12;
        edi13 = reinterpret_cast<struct s490*>(&edi14->f4);
        esi15 = reinterpret_cast<struct s492*>(&esi16->f4);
        if (__intrinsic()) 
            goto addr_0x409432_12; else 
            goto addr_0x4093e0_13;
    }
    __asm__("fcomp5 st7");
    __asm__("cdq ");
    gf8c9ee9e = 0x40939a;
    fun_18536bbe();
    addr_0x40930f_6:
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__undefined() != __intrinsic()) | __undefined())) 
        goto 0x409297; else 
        goto "???";
    addr_0x409432_12:
    *reinterpret_cast<int16_t*>(&v3) = ds17;
    ecx18 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx18) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<unsigned char*>(&ebx8))) {
        __asm__("aaa ");
        __asm__("out dx, al");
    } else {
        __asm__("iretd ");
        cf19 = *reinterpret_cast<unsigned char*>(ebx8 - 39) < 0xba;
        below_or_equal20 = *reinterpret_cast<unsigned char*>(ebx8 - 39) <= 0xba;
        *reinterpret_cast<unsigned char*>(ebx8 - 39) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx8 - 39) + 70);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi13) + 0x3fc102ca);
        if (!below_or_equal20) {
            do {
                __asm__("iretd ");
            } while (!cf19);
            *reinterpret_cast<signed char*>(edi13) = esi15->f0;
            *reinterpret_cast<uint32_t*>(ecx18 + 0x783e4777) = *reinterpret_cast<uint32_t*>(ecx18 + 0x783e4777) | ebx8;
            __asm__("fcomi st0, st7");
            __asm__("insd ");
            __asm__("out dx, al");
            __asm__("cmc ");
            esp21 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(ebp22) + 4 - 2);
            *esp21 = ds23;
            *(esp21 - 1) = es24;
        } else {
            __asm__("lds esi, [ecx+0x57543b39]");
            goto *reinterpret_cast<int16_t*>(&v3);
        }
    }
    addr_0x4093e0_13:
    eax25 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax26) - (0x10ec8e12 + reinterpret_cast<uint1_t>(eax27 < 0x10ec8e12)));
    *reinterpret_cast<unsigned char*>(&eax25) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax25) ^ 0x91);
    *eax25 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
    esi28 = &esi15->f1;
    below_or_equal29 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(esi28 == 0)));
    if (__intrinsic()) {
        __asm__("in al, dx");
        __asm__("enter 0x464f, 0x80");
        below_or_equal29 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>((*reinterpret_cast<unsigned char*>(&eax25) & 10) == 0)));
    }
    if (!below_or_equal29) {
        __asm__("aas ");
        __asm__("out 0x95, al");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi28) + ebp30 * 2) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi28) + ebp31 * 2) | ebp32;
        __asm__("fdivr qword [esi+0xb12aa528]");
    } else {
        __asm__("out dx, al");
        g51893a38 = eax25;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v3) + 2);
    }
}

void fun_409425(int32_t ecx) {
    uint1_t zf2;
    int1_t less3;

    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & zf2) 
        goto 0x40949b;
    if (less3) {
        __asm__("xlatb ");
        __asm__("fistp word [edi+0x5b34de08]");
    }
}

void fun_40948b() {
}

struct s495 {
    int16_t f0;
    signed char[2] pad4;
    struct s494* f4;
    signed char[94] pad102;
    int16_t f102;
};

struct s494 {
    struct s495* f0;
    signed char[729247096] pad729247100;
    unsigned char f729247100;
};

struct s496 {
    signed char[87] pad87;
    unsigned char f87;
};

struct s497 {
    signed char[87] pad87;
    unsigned char f87;
};

int32_t g5ecbeb5c;

signed char gae1cd60d;

struct s498 {
    signed char[1091978904] pad1091978904;
    uint32_t f1091978904;
};

struct s499 {
    struct s494* f0;
    int16_t f4;
};

void fun_4094a3() {
    uint48_t v1;
    struct s494* edi2;
    uint32_t ebx3;
    uint32_t eax4;
    int32_t eax5;
    int32_t ebx6;
    int32_t* edx7;
    int32_t* edx8;
    signed char* ecx9;
    struct s496* edx10;
    struct s497* edx11;
    int32_t eax12;
    int32_t* esp13;
    struct s495* eax14;
    struct s495* esp15;
    struct s498* esi16;
    signed char** esp17;
    struct s495* esp18;
    int16_t ss19;
    int16_t edx20;
    struct s499* esp21;
    signed char tmp8_22;
    signed char tmp8_23;
    signed char** esp24;
    int16_t ss25;

    *reinterpret_cast<int32_t*>(&v1) = reinterpret_cast<int32_t>(__return_address());
    __asm__("aam 0x16");
    edi2 = reinterpret_cast<struct s494*>(0x62e0e7d5);
    ebx3 = eax4;
    eax5 = ebx6 - 1;
    *edx7 = *edx8 << 1;
    ecx9 = reinterpret_cast<signed char*>(0xae1cd60d);
    __asm__("out 0xa7, al");
    edx10->f87 = reinterpret_cast<unsigned char>(edx11->f87 ^ *reinterpret_cast<unsigned char*>(&eax5));
    eax12 = g5ecbeb5c;
    __asm__("rol byte [eax+0x35], 0xaa");
    __asm__("popad ");
    esp13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&v1) + 2)) + 4 + 4 - 4);
    *esp13 = 0x9f7df037;
    eax14 = reinterpret_cast<struct s495*>(eax12 + 0x6c15f53a);
    *reinterpret_cast<signed char*>(&ebx3) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx3) - gae1cd60d);
    __asm__("in al, dx");
    *reinterpret_cast<unsigned char*>(&ecx9) = 0x96;
    esp15 = reinterpret_cast<struct s495*>(esp13 - 1);
    esp15->f0 = eax14->f102;
    while (1) {
        __asm__("fst dword [edx]");
        edi2->f0 = eax14;
        esi16 = reinterpret_cast<struct s498*>(reinterpret_cast<int32_t>(esi16) + 4);
        esp17 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp15) - 4);
        *esp17 = ecx9;
        esp18 = reinterpret_cast<struct s495*>(reinterpret_cast<int32_t>(esp17) - 2);
        esp18->f0 = ss19;
        __asm__("popad ");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edi2->pad729247100) - 0x406aac82) = 0xff;
        edx20 = esp18->f0;
        esp21 = reinterpret_cast<struct s499*>(&esp18->f4);
        edi2 = esp21->f0;
        --ecx9;
        esp15 = eax14;
        eax14 = reinterpret_cast<struct s495*>(&esp21->f4);
        tmp8_22 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi2) - 18);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi2) - 18) = *reinterpret_cast<signed char*>(&ebx3);
        *reinterpret_cast<signed char*>(&ebx3) = tmp8_22;
        do {
            __asm__("lodsb ");
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1) = 4;
            __asm__("into ");
            __asm__("clc ");
            eax14 = reinterpret_cast<struct s495*>(reinterpret_cast<int32_t>(eax14) - 1);
            tmp8_23 = *reinterpret_cast<signed char*>(edx20 - 49);
            *reinterpret_cast<signed char*>(edx20 - 49) = *reinterpret_cast<signed char*>(&edx20);
            *reinterpret_cast<signed char*>(&edx20) = tmp8_23;
            if (1) 
                break;
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi2) + 0x2b776d7c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi2) + 0x2b776d7c) | *reinterpret_cast<unsigned char*>(&ecx9));
            __asm__("les edi, [eax+0x60bdf628]");
            __asm__("daa ");
            esp24 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp15) - 4);
            *esp24 = reinterpret_cast<signed char*>(0x7b11f431);
            esp15 = reinterpret_cast<struct s495*>(reinterpret_cast<int32_t>(esp24) - 2);
            esp15->f0 = ss25;
            __asm__("aas ");
            __asm__("xlatb ");
            edi2 = reinterpret_cast<struct s494*>(0xd559c40f);
        } while (reinterpret_cast<int32_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi16) + 0x41164698) & ebx3) >= reinterpret_cast<int32_t>(0));
        break;
    }
    __asm__("aam 0xc3");
    __asm__("salc ");
}

void fun_40953b() {
    __asm__("lds eax, [ecx+0x68f174bd]");
}

void fun_409542() {
    __asm__("retf 0xd9e5");
    goto 0x409500;
}

struct s500 {
    signed char[83] pad83;
    unsigned char f83;
};

struct s501 {
    signed char[22] pad22;
    int32_t f22;
};

struct s502 {
    void* f0;
    signed char[120876509] pad120876510;
    int32_t f120876510;
};

signed char gcadb8fa2;

struct s503 {
    int32_t f0;
    void* f4;
    signed char[32] pad37;
    signed char f37;
};

struct s504 {
    signed char[1] pad1;
    int32_t f1;
};

uint32_t* g5baa8029;

signed char g266eb60a;

struct s505 {
    struct s505* f0;
    signed char[14] pad18;
    int32_t f18;
};

uint40_t gcadb8fa3;

signed char g66cca64b;

void* gb286fd61;

int32_t g28659df4;

void* g9aa12029;

void* gcaaf5f41;

void fun_4095b0() {
    uint32_t** ebx1;
    struct s500* ecx2;
    int32_t edx3;
    int32_t edx4;
    signed char dl5;
    int32_t edx6;
    unsigned char dl7;
    uint32_t eax8;
    int32_t eax9;
    uint32_t* edx10;
    signed char dh11;
    signed char dh12;
    signed char dl13;
    int32_t edi14;
    unsigned char dl15;
    int32_t edi16;
    struct s501* eax17;
    void* edi18;
    void* esp19;
    struct s502* eax20;
    uint32_t ebp21;
    signed char* edi22;
    struct s503* edi23;
    struct s504* edi24;
    int1_t zf25;
    uint1_t cf26;
    void* esp27;
    uint1_t cf28;
    struct s505* esp29;
    struct s502* edi30;
    uint1_t zf31;
    struct s502* tmp32_32;
    int16_t* esp33;
    int16_t es34;
    void* esp35;
    void* esp36;
    int32_t* esp37;

    ebx1 = reinterpret_cast<uint32_t**>(0x5baa7629);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = -6;
    __asm__("stc ");
    __asm__("aaa ");
    *reinterpret_cast<unsigned char*>(edx3 - 0x676fd3f) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx4 - 0x676fd3f) - reinterpret_cast<unsigned char>(dl5 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edx6 - 0x676fd3f) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(dl7)))));
    __asm__("iretd ");
    *reinterpret_cast<signed char*>(&ecx2) = -56;
    if (1) {
    }
    eax8 = eax9 - 1;
    if (reinterpret_cast<int32_t>(eax8) < reinterpret_cast<int32_t>(0) == __intrinsic()) {
        if (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(eax8 == 0)))) {
            __asm__("popad ");
        } else {
            goto 65;
        }
    }
    *reinterpret_cast<unsigned char*>(&edx10 + 1) = reinterpret_cast<unsigned char>(dh11 + dh12);
    *reinterpret_cast<unsigned char*>(&edx10) = reinterpret_cast<unsigned char>(dl13 - *reinterpret_cast<signed char*>(edi14 + 0xce6b8c2));
    *reinterpret_cast<uint32_t**>(reinterpret_cast<int32_t>(&ebx1) + 1) = reinterpret_cast<uint32_t*>(0x80);
    __asm__("ficom word [ebp+0x65]");
    __asm__("in al, dx");
    *edx10 = *edx10 + 0xdd7be28 + reinterpret_cast<uint1_t>(dl15 < *reinterpret_cast<unsigned char*>(edi16 + 0xce6b8c2));
    eax17 = reinterpret_cast<struct s501*>(eax8 | *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi18) + reinterpret_cast<unsigned char>(edx10) * 2 + 93));
    esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4);
    eax20 = reinterpret_cast<struct s502*>(ebp21 ^ 0xdd316b45);
    __asm__("daa ");
    if (eax20) {
    }
    *edi22 = gcadb8fa2;
    edi23 = reinterpret_cast<struct s503*>(&edi24->f1);
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(edx10));
    __asm__("popad ");
    zf25 = edi23->f37 == -56;
    if (edi23->f37 < -56) 
        goto addr_0x409648_14;
    g5baa8029 = reinterpret_cast<uint32_t*>(0x80);
    if (zf25) {
        addr_0x4096d4_16:
        cf26 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)) < 0xca);
        esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) + 1);
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esp27) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(esp27 == 0))) {
            addr_0x409709_17:
            cf28 = reinterpret_cast<uint1_t>(41 < reinterpret_cast<unsigned char>(g266eb60a + cf26));
            *reinterpret_cast<unsigned char*>(&ebx1) = reinterpret_cast<unsigned char>(41 - reinterpret_cast<unsigned char>(g266eb60a + cf28));
            *ebx1 = edx10;
        } else {
            esp29 = reinterpret_cast<struct s505*>(reinterpret_cast<int32_t>(esp27) - 4);
            esp29->f0 = esp29;
            edx10 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(edx10) + 1);
            __asm__("fstp qword [0xe072efcf]");
            edi23->f0 = *reinterpret_cast<int32_t*>(&gcadb8fa3);
            edi30 = reinterpret_cast<struct s502*>(&edi23->f4);
            __asm__("out dx, eax");
            edi30->f120876510 = edi30->f120876510 - 82;
            esp29->f18 = esp29->f18 - 1;
            zf31 = reinterpret_cast<uint1_t>(esp29->f18 == 0);
            if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(esp29->f18 < 0 != __intrinsic()) | zf31)) 
                goto addr_0x409758_22; else 
                goto addr_0x4096f1_23;
        }
    } else {
        __asm__("out dx, al");
    }
    addr_0x409758_22:
    if (reinterpret_cast<uint1_t>(!!(reinterpret_cast<int32_t>(ecx2) - 1)) & zf31) {
        addr_0x409706_27:
    } else {
        tmp32_32 = edi30;
        edi30 = eax20;
        eax20 = tmp32_32;
        if (zf31) {
            esp33 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp29) - 2);
            *esp33 = es34;
            goto *esp33;
        }
        if (__intrinsic()) 
            goto addr_0x409796_32; else 
            goto addr_0x40975f_33;
    }
    cf26 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edi30->f0) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    goto addr_0x409709_17;
    addr_0x409796_32:
    __asm__("hlt ");
    addr_0x40975f_33:
    g66cca64b = reinterpret_cast<signed char>(g66cca64b << 1);
    __asm__("fild dword [esi]");
    *reinterpret_cast<unsigned char*>(&edx10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx10) ^ 41);
    if (!__intrinsic()) {
        addr_0x4096fd_37:
        __asm__("packsswb mm4, mm2");
        goto addr_0x409706_27;
    } else {
        gb286fd61 = *reinterpret_cast<void**>(&eax20);
        __asm__("in al, dx");
        __asm__("in al, dx");
        *reinterpret_cast<uint32_t**>(reinterpret_cast<int32_t>(esp29) + 1 - 4) = edx10;
        __asm__("aam 0x5a");
        goto addr_0x409796_32;
    }
    addr_0x4096f1_23:
    __asm__("insb ");
    __asm__("lahf ");
    __asm__("cdq ");
    g28659df4 = g28659df4 - reinterpret_cast<int32_t>(esp29);
    *reinterpret_cast<void**>(&eax20) = g9aa12029;
    goto addr_0x4096fd_37;
    addr_0x409648_14:
    esp35 = reinterpret_cast<void*>(eax17->f22 * -53);
    if (!(reinterpret_cast<uint1_t>(__undefined() != __intrinsic()) | __undefined())) {
        __asm__("das ");
        esp36 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp35) + 4 + 1 + *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&gcadb8fa3) + 1));
        __asm__("sti ");
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp36) - 4) = 0x81a3e0eb;
    }
    esp37 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp35) - 4);
    *esp37 = 0x73;
    gcaaf5f41 = *reinterpret_cast<void**>(&eax20);
    ecx2->f83 = reinterpret_cast<unsigned char>(ecx2->f83 | 0x80);
    *reinterpret_cast<unsigned char*>(&edx10 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx10 + 1) - 0x80);
    edi23 = reinterpret_cast<struct s503*>(reinterpret_cast<int32_t>(edi23) - 1);
    if (edi23) {
        if (-56 >= *reinterpret_cast<signed char*>(0x5baa8029 + reinterpret_cast<uint32_t>(eax17) * 2 - 3)) {
        }
    } else {
        esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp37) + 2);
        *reinterpret_cast<void**>(&eax20) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)) ^ 31);
        eax20 = reinterpret_cast<struct s502*>(reinterpret_cast<uint32_t>(eax20) + 0x28077615);
        __asm__("xlatb ");
        __asm__("out 0x80, eax");
        __asm__("clc ");
        goto addr_0x4096d4_16;
    }
}

void fun_4095f7() {
    __asm__("hlt ");
}

void fun_40960b() {
    int32_t ebx1;
    int32_t ebx2;
    int32_t ebx3;

    *reinterpret_cast<unsigned char*>(ebx1 - 38) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx2 - 38) - reinterpret_cast<unsigned char>(70 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx3 - 38) < reinterpret_cast<unsigned char>(70 + __intrinsic()))));
}

int32_t ge6f8887;

void fun_409666() {
    int32_t eax1;
    signed char* edi2;
    int32_t esi3;

    __asm__("fidiv word [edx]");
    eax1 = ge6f8887;
    *edi2 = 0;
    *reinterpret_cast<int32_t*>(eax1 + eax1 * 8 - 80) = *reinterpret_cast<int32_t*>(eax1 + eax1 * 8 - 80) - esi3;
}

void fun_409690() {
    __asm__("in al, dx");
}

void fun_409695() {
    int32_t* eax1;
    signed char al2;
    uint1_t cf3;
    int32_t ebx4;
    signed char bh5;
    int32_t edi6;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al2 - 80) + cf3);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = reinterpret_cast<signed char>(bh5 + *reinterpret_cast<signed char*>(edi6 - 0x6c));
    if (!__intrinsic()) {
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax1) + ebx4 * 2) = 0;
        __asm__("in eax, 0x25");
        __asm__("int 0x38");
        __asm__("retf 0x3662");
    }
}

struct s506 {
    signed char[103] pad103;
    int32_t f103;
};

void fun_40973b(void* ecx) {
    int1_t pf2;
    unsigned char* edi3;
    unsigned char* edi4;
    unsigned char dh5;
    signed char bl6;
    int32_t ebx7;
    uint32_t eax8;
    struct s506* edi9;
    unsigned char bl10;
    int32_t ebx11;
    void** esp12;
    int32_t eax13;
    uint32_t* esp14;

    __asm__("outsb ");
    if (!pf2) 
        goto 0x4096d3;
    *edi3 = reinterpret_cast<unsigned char>(*edi4 & dh5);
    __asm__("popad ");
    if (reinterpret_cast<uint1_t>(!!(reinterpret_cast<int32_t>(ecx) - 1)) & reinterpret_cast<uint1_t>(!!(bl6 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + ebx7 * 2 + 31)))) {
        __asm__("into ");
        eax8 = reinterpret_cast<int32_t>(__zero_stack_offset()) + edi9->f103 + reinterpret_cast<uint1_t>(bl10 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) + ebx11 * 2 + 31));
        __asm__("daa ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1) = -69;
        esp12 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax13 + 0x135751b1) - 4);
        *reinterpret_cast<void***>(esp12) = esp12;
        esp14 = reinterpret_cast<uint32_t*>(esp12 - 1);
        *esp14 = eax8;
        *reinterpret_cast<int32_t*>(esp14 - 1) = 0xd4ac3054;
        if (__intrinsic()) 
            goto 0x409715;
    } else {
        __asm__("daa ");
        __asm__("insb ");
        __asm__("lahf ");
    }
}

void fun_4097ad() {
    int32_t eax1;
    int32_t eax2;

    *reinterpret_cast<int32_t*>(eax1 - 76) = -*reinterpret_cast<int32_t*>(eax2 - 76);
}

void fun_4097de() {
    int32_t* edi1;
    int32_t eax2;

    __asm__("enter 0x5fee, 0xc1");
    __asm__("cdq ");
    *edi1 = eax2;
    __asm__("in al, 0x90");
}

void fun_4097e9(signed char cl) {
    __asm__("les ecx, [esi]");
    __asm__("lahf ");
}

void fun_409867() {
    __asm__("retf ");
}

void fun_40987b(int32_t ecx) {
    unsigned char* edx2;
    signed char* edx3;
    signed char al4;

    __asm__("sti ");
    __asm__("aam 0xdd");
    if (__intrinsic()) {
        __asm__("fcmovnb st0, st3");
    } else {
        __asm__("fcom dword [ecx+0xf4408339]");
        *edx2 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*edx3 + al4) + __intrinsic());
    }
}

struct s507 {
    int32_t f0;
    int32_t f2;
};

signed char gb4fc93a;

signed char g53f8a076;

struct s509 {
    signed char[39] pad39;
    uint32_t f39;
};

struct s508 {
    signed char f0;
    struct s509* f1;
};

struct s510 {
    signed char[1] pad1;
    signed char f1;
};

struct s511 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s512 {
    struct s509* f0;
    signed char f4;
};

unsigned char g26808360;

struct s514 {
    signed char[1] pad1;
    struct s508* f1;
};

struct s513 {
    struct s514* f0;
    unsigned char* f2;
};

struct s515 {
    struct s508* f0;
    signed char[38] pad42;
    uint32_t f42;
};

int16_t fun_2be73aa();

unsigned char g1f3c5ebf;

void fun_40989c(int32_t ecx) {
    struct s507* eax2;
    signed char* edi3;
    struct s508* edi4;
    struct s510* edi5;
    struct s511* esi6;
    uint1_t cf7;
    uint1_t zf8;
    int1_t of9;
    struct s507* esp10;
    struct s509* eax11;
    struct s512* edi12;
    int32_t* esp13;
    uint1_t cf14;
    uint32_t tmp32_15;
    uint32_t* edx16;
    int32_t* edx17;
    int32_t edx18;
    struct s513* esp19;
    struct s514* ebx20;
    struct s515* eax21;
    uint16_t fs22;
    int32_t* esp23;
    uint32_t eax24;
    int32_t ecx25;
    unsigned char dl26;
    unsigned char** esp27;
    signed char bl28;
    struct s511** esp29;
    uint32_t ebp30;
    int32_t* esp31;
    unsigned char* esi32;
    uint1_t cf33;
    uint32_t* esp34;

    __asm__("les edi, [ebx-0x74]");
    *reinterpret_cast<signed char*>(&eax2) = gb4fc93a;
    *edi3 = g53f8a076;
    edi4 = reinterpret_cast<struct s508*>(&edi5->f1);
    esi6 = reinterpret_cast<struct s511*>(0x53f8a077);
    cf7 = 0;
    zf8 = 0;
    of9 = 0;
    esp10 = eax2;
    eax11 = reinterpret_cast<struct s509*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4);
    __asm__("arpl [eax], bp");
    if (1) {
        addr_0x4098c6_5:
        __asm__("sti ");
        __asm__("fstp dword [ebp+0xa5d7df8a]");
    } else {
        esp10 = reinterpret_cast<struct s507*>(reinterpret_cast<int32_t>(esp10) - 4);
        esp10->f0 = ecx;
        __asm__("rcl byte [esi], cl");
        eax11 = reinterpret_cast<struct s509*>(esp10->f0 * 0x55861615);
        cf7 = __intrinsic();
        of9 = __intrinsic();
        zf8 = __undefined();
        edi4->f0 = *reinterpret_cast<signed char*>(&eax11);
        edi12 = reinterpret_cast<struct s512*>(&edi4->f1);
        if (cf7 | zf8) 
            goto addr_0x40984d_10; else 
            goto addr_0x4098c3_11;
    }
    esp13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp10) + 2);
    __asm__("lahf ");
    if (!of9) {
        __asm__("wait ");
        if (zf8) {
            goto *esp13;
        } else {
            cf14 = reinterpret_cast<uint1_t>(g26808360 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + cf7));
            g26808360 = reinterpret_cast<unsigned char>(g26808360 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + cf14));
            __asm__("in al, dx");
            tmp32_15 = *edx16;
            *edx17 = edx18;
            __asm__("aaa ");
            esp19 = reinterpret_cast<struct s513*>(esp13 - 1);
            esp19->f0 = ebx20;
            if (1) {
                eax21 = reinterpret_cast<struct s515*>(&esp19->f0->f1);
                eax21->f0 = edi4;
                __asm__("aad 0xde");
                eax21->f42 = static_cast<uint32_t>(fs22);
                esp23 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&esp19->f2) + 2 - 4);
                *esp23 = 0x40994e;
                fun_2be73aa();
                *(esp23 + 1 - 1) = 0x427ad991;
            } else {
                eax24 = tmp32_15;
                ecx25 = ecx - 1;
                if (reinterpret_cast<uint1_t>(!!ecx25) & reinterpret_cast<uint1_t>(!!(dl26 & 0xfb))) {
                    esp27 = reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(esp19) + 2);
                    *reinterpret_cast<uint32_t*>(eax24 + 0x1590895d) = *reinterpret_cast<uint32_t*>(eax24 + 0x1590895d) ^ eax24;
                    *reinterpret_cast<signed char*>(&ecx25) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx25) - bl28);
                    if (!*reinterpret_cast<signed char*>(&ecx25)) {
                        __asm__("enter 0xe032, 0x50");
                    } else {
                        esp29 = reinterpret_cast<struct s511**>(esp27 - 1);
                        *esp29 = reinterpret_cast<struct s511*>(__return_address());
                        ebp30 = reinterpret_cast<uint32_t>(__return_address()) - 1;
                        if (reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebp30) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(ebp30 == 0)) {
                            esp31 = reinterpret_cast<int32_t*>(esp29 - 1);
                            *esp31 = ecx25;
                            __asm__("xlatb ");
                            esi32 = &esi6->f1;
                            __asm__("out 0xb0, al");
                            eax24 = reinterpret_cast<uint32_t>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax24)));
                            cf33 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx25) + 1) < *esi32);
                            __asm__("stc ");
                            __asm__("int 0x6f");
                            __asm__("retf 0xb6fd");
                            __asm__("retf 0xafab");
                            esp34 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp31) + 1 - 4);
                            *esp34 = ebp30;
                            __asm__("outsb ");
                            esp27 = reinterpret_cast<unsigned char**>(esp34 - 1);
                            *esp27 = reinterpret_cast<unsigned char*>(0x1f3c5ebf);
                            g1f3c5ebf = *esi32;
                            esi6 = reinterpret_cast<struct s511*>(esi32 + 4);
                            *reinterpret_cast<unsigned char*>(*reinterpret_cast<int16_t*>(&ebp30) - 40) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax24) + 51) + cf33) - 81) + __intrinsic());
                        }
                    }
                    *reinterpret_cast<struct s511**>(esp27 - 1) = esi6;
                    __asm__("rol eax, 0x7f");
                    __asm__("int1 ");
                    __asm__("int 0x74");
                    __asm__("aas ");
                    __asm__("hlt ");
                }
            }
        }
    } else {
        eax11->f39 = eax11->f39 ^ reinterpret_cast<uint32_t>(__return_address());
    }
    addr_0x40984d_10:
    *reinterpret_cast<struct s512**>(reinterpret_cast<int32_t>(esp10) - 4) = edi12;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax11) - 0x484365cb) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax11) - 0x484365cb) | 0x104234df;
    addr_0x4098c3_11:
    edi12->f0 = eax11;
    edi4 = reinterpret_cast<struct s508*>(&edi12->f4);
    esi6 = reinterpret_cast<struct s511*>(0x53f8a07c);
    if (of9) 
        goto addr_0x4098c6_5;
}

struct s516 {
    signed char[82] pad82;
    signed char f82;
};

struct s517 {
    signed char[82] pad82;
    signed char f82;
};

void fun_4098e4(signed char* ecx) {
    uint32_t* eax2;
    int32_t* eax3;
    int32_t edx4;
    struct s516* edx5;
    struct s517* edx6;
    signed char dh7;

    __asm__("retf ");
    *ecx = reinterpret_cast<signed char>(*ecx + *reinterpret_cast<signed char*>(&ecx));
    __asm__("arpl [ecx+0xa3307501], bx");
    *eax2 = *eax3 + edx4 + __intrinsic();
    edx5->f82 = reinterpret_cast<signed char>(edx6->f82 + dh7);
    __asm__("aad 0x50");
    __asm__("fstp tword [ebp+0x74c80057]");
}

void fun_409918(int32_t ecx) {
    int32_t ebx2;
    int32_t ebx3;
    signed char bl4;
    unsigned char* edi5;
    unsigned char* edi6;

    __asm__("wait ");
    *reinterpret_cast<signed char*>(ebx2 + 0x1cbdb53f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx3 + 0x1cbdb53f) - bl4);
    __asm__("aaa ");
    *edi5 = reinterpret_cast<unsigned char>(*edi6 ^ 0x6c);
}

void fun_40992f() {
    int1_t zf1;
    int1_t zf2;
    int1_t zf3;
    signed char bh4;
    int32_t edi5;
    uint1_t cf6;

    __asm__("aas ");
    __asm__("sahf ");
    if (zf1) {
        if (!zf2) 
            goto 0x409944;
        __asm__("daa ");
        zf3 = reinterpret_cast<signed char>(bh4 + *reinterpret_cast<signed char*>(edi5 - 0x6c)) + cf6 == 0;
    }
    if (zf3) 
        goto 0x4098c8; else 
        goto "???";
}

void fun_409958() {
    __asm__("in eax, 0x78");
}

struct s518 {
    int32_t f0;
    int32_t f4;
};

struct s519 {
    signed char[1] pad1;
    int32_t f1;
};

struct s520 {
    int32_t f0;
    void* f4;
};

struct s521 {
    signed char[94] pad94;
    unsigned char f94;
};

void fun_409986(int32_t ecx) {
    struct s518* edi2;
    struct s519* edi3;
    struct s520* esp4;
    void** esp5;
    void* ebx6;
    unsigned char bl7;
    uint1_t cf8;
    unsigned char dh9;
    signed char dh10;
    int1_t zf11;
    struct s521* edx12;
    signed char dh13;
    signed char* edx14;
    unsigned char dh15;
    unsigned char* edx16;
    int32_t* esi17;
    void* esi18;
    void* esp19;
    int32_t* esi20;

    __asm__("stc ");
    edi2 = reinterpret_cast<struct s518*>(&edi3->f1);
    esp4 = reinterpret_cast<struct s520*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    esp5 = &esp4->f4;
    *reinterpret_cast<unsigned char*>(&ebx6) = reinterpret_cast<unsigned char>(bl7 | *reinterpret_cast<unsigned char*>(esp4->f0 - 0x72da1390));
    cf8 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ecx - 87) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(dh9)));
    *reinterpret_cast<unsigned char*>(ecx - 87) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx - 87) - reinterpret_cast<unsigned char>(dh10 + cf8));
    zf11 = *reinterpret_cast<unsigned char*>(ecx - 87) == static_cast<uint32_t>(cf8);
    __asm__("fisubr word [ebp+0x243e246]");
    __asm__("fild dword [ecx+0x4c615caf]");
    __asm__("fild qword [esi+0x8ab23af2]");
    __asm__("aam 0x67");
    __asm__("rcl edx, 0x6b");
    __asm__("lodsd ");
    if (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(ecx - 87)) < reinterpret_cast<signed char>(static_cast<uint32_t>(cf8))) {
        __asm__("in al, dx");
        if (cf8) {
            __asm__("fisttp qword [esi+0x369ee091]");
            __asm__("cli ");
            __asm__("aaa ");
        } else {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx12) + 1) = reinterpret_cast<unsigned char>(dh13 - reinterpret_cast<unsigned char>(*edx14 + reinterpret_cast<uint1_t>(dh15 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*edx16)))));
            __asm__("daa ");
            *reinterpret_cast<unsigned char*>(ecx + reinterpret_cast<int32_t>(edi2) * 4 + 0x13a9d7fd) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + reinterpret_cast<int32_t>(edi2) * 4 + 0x13a9d7fd) ^ *reinterpret_cast<unsigned char*>(&ebx6));
            __asm__("sysexit ");
            edx12->f94 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(edx12->f94 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx12) + 1))));
            esi17 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(esi18) + 1) >> *reinterpret_cast<signed char*>(&ecx));
            esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp5) + 4);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx6) - 0x3a4a4e84) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx6) - 0x3a4a4e84) ^ 0x87);
            edi2->f0 = *esi17;
            __asm__("fisubr dword [ebx-0x4b]");
            esp5 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp19) - 4);
            *esp5 = ebx6;
            __asm__("cmc ");
            esi20 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi17 + 1) - 1);
            zf11 = esi20 == 0;
            edi2->f4 = *esi20;
        }
    }
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!zf11)) {
        __asm__("int1 ");
        goto *esp5;
    } else {
        __asm__("iretd ");
    }
}

void fun_4099df() {
    int1_t less_or_equal1;

    if (!less_or_equal1) 
        goto 0x4099d0; else 
        goto "???";
}

struct s522 {
    int32_t f0;
    uint32_t f4;
};

struct s523 {
    signed char[1] pad1;
    int32_t f1;
};

struct s524 {
    int32_t f0;
    signed char f4;
};

struct s525 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_409a3c() {
    struct s522* edi1;
    struct s523* edi2;
    struct s524* esi3;
    struct s525* esi4;
    signed char* esi5;
    uint32_t eax6;

    edi1 = reinterpret_cast<struct s522*>(&edi2->f1);
    esi3 = reinterpret_cast<struct s524*>(&esi4->f1);
    edi1->f0 = esi3->f0;
    esi5 = &esi3->f4;
    if (!__intrinsic()) 
        goto 0x409a1e;
    edi1->f4 = eax6 | 0x339297c3;
    __asm__("enter 0x6c53, 0x35");
    __asm__("out dx, eax");
    __asm__("cli ");
    *esi5 = (esi5 + 4)[1];
    __asm__("int 0xe0");
    __asm__("in eax, dx");
    goto 0xc4360bbf;
}

void fun_409acb(signed char cl) {
    uint48_t v2;
    int1_t zf3;
    signed char bh4;
    signed char al5;
    int16_t ss6;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2) = reinterpret_cast<int32_t>(__return_address());
    __asm__("out dx, al");
    zf3 = bh4 == al5;
    do {
    } while (zf3);
    __asm__("cmc ");
    __asm__("arpl [0xa8176eb], di");
    *reinterpret_cast<int16_t*>(&v2) = ss6;
    __asm__("aaa ");
    goto *reinterpret_cast<int16_t*>(&v2);
}

void fun_409ba5(signed char cl) {
    int32_t ebp2;
    int32_t ebp3;

    *reinterpret_cast<unsigned char*>(ebp2 + 0x70dd41b5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp3 + 0x70dd41b5) >> cl);
    __asm__("sti ");
    return;
}

void fun_409bd7() {
    __asm__("ror eax, cl");
}

struct s526 {
    signed char[4] pad4;
    int32_t f4;
};

uint32_t g1983ae5;

uint48_t g80207208;

void fun_409bda(int32_t ecx) {
    uint32_t v2;
    uint32_t* edx3;
    signed char dh4;
    signed char dl5;
    uint1_t cf6;
    uint1_t cf7;
    int1_t pf8;
    int1_t sf9;
    int1_t less10;
    int32_t edi11;
    int32_t edi12;
    int32_t ebx13;
    int32_t* edi14;
    int32_t eax15;
    int32_t* esi16;
    struct s526* esi17;
    uint32_t* eax18;
    unsigned char al19;
    uint32_t* tmp32_20;
    uint32_t* eax21;
    uint32_t** edi22;
    void* ebx23;
    void* edi24;
    int32_t* edi25;
    signed char* edi26;
    uint32_t eflags27;
    int32_t eax28;

    v2 = reinterpret_cast<uint32_t>(__return_address());
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx3) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(dh4 + dl5) + cf6);
    cf7 = __intrinsic();
    pf8 = __intrinsic();
    sf9 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx3) + 1)) < reinterpret_cast<signed char>(0);
    less10 = sf9 != __intrinsic();
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx3) + 1)) {
        if (sf9) {
            __asm__("cdq ");
            __asm__("into ");
            *reinterpret_cast<signed char*>(ecx + 0x4f99ec14) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
            __asm__("ficom dword [eax+0xd30c76d]");
        } else {
            *reinterpret_cast<uint32_t*>(edi11 - 0x23237c09) = *reinterpret_cast<int32_t*>(edi12 - 0x23237c09) + ebx13 + cf7;
            __asm__("sti ");
            *edi14 = eax15;
            esi16 = &esi17->f4;
            __asm__("cmc ");
            *reinterpret_cast<unsigned char*>(&eax18) = reinterpret_cast<unsigned char>(al19 & 14);
            cf7 = 0;
            pf8 = __intrinsic();
            less10 = __intrinsic();
            tmp32_20 = edx3;
            edx3 = eax18;
            eax21 = tmp32_20;
            edi22 = reinterpret_cast<uint32_t**>(0x3a51a2b9);
            goto addr_0x409bed_16;
        }
    }
    while (1) {
        --ecx;
        if (ecx) {
            if (pf8) 
                break;
            if (!less10) 
                goto addr_0x409c77_20;
            less10 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(ecx + 0x532c5a19)) < reinterpret_cast<signed char>(23 + cf7);
            cf7 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ecx + 0x532c5a19) < reinterpret_cast<unsigned char>(23 + cf7));
            *reinterpret_cast<unsigned char*>(ecx + 0x532c5a19) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 0x532c5a19) - reinterpret_cast<unsigned char>(23 + cf7));
            pf8 = __intrinsic();
        } else {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx3) + reinterpret_cast<int32_t>(edx3)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx3) + reinterpret_cast<int32_t>(edx3)) - reinterpret_cast<unsigned char>(87 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx3) + reinterpret_cast<int32_t>(edx3)) < reinterpret_cast<unsigned char>(87 - cf7))));
            edx3 = reinterpret_cast<uint32_t*>(0x52d80e8d);
            __asm__("retf 0x8545");
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx23) + 1) = 23;
            eax21 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax21) + 0xeaa5d1 - 1);
            *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx23) + reinterpret_cast<int32_t>(edi22) + 0x6d3b57f)) + __intrinsic());
            cf7 = __intrinsic();
            pf8 = __intrinsic();
            less10 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&ecx)) < reinterpret_cast<signed char>(0) != __intrinsic();
            *edi22 = eax21;
            ++edi22;
            ++esi16;
            __asm__("int1 ");
        }
        addr_0x409bed_16:
    }
    *reinterpret_cast<unsigned char*>(&eax21) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax21) & 0xde);
    *reinterpret_cast<signed char*>(&ebx23) = 52;
    edi24 = reinterpret_cast<void*>(v2 | g1983ae5);
    __asm__("rcr dword [esi+0xb59389b], 1");
    edi25 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi24) - 1);
    *edi25 = *esi16;
    *eax21 = *eax21 & reinterpret_cast<uint32_t>(esi16 + 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax21) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax21) + 1) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi25 + 1) + 0xe979cb1));
    __asm__("cdq ");
    *reinterpret_cast<int32_t*>(0x7fdf8df8 - reinterpret_cast<int32_t>(ebx23) + 0x36b3b64c) = *reinterpret_cast<int32_t*>(0x7fdf8df8 - reinterpret_cast<int32_t>(ebx23) + 0x36b3b64c) << *reinterpret_cast<unsigned char*>(&ecx);
    edi26 = *reinterpret_cast<signed char**>(&g80207208);
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags27) + 1) = 0;
    __asm__("int1 ");
    __asm__("in al, dx");
    *reinterpret_cast<int1_t*>(&eflags27) = *reinterpret_cast<unsigned char*>(edi26 - 0x1bb1929b) < 23;
    *reinterpret_cast<int1_t*>(&eflags27) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags27) = *reinterpret_cast<unsigned char*>(edi26 - 0x1bb1929b) == 23;
    *reinterpret_cast<int1_t*>(&eflags27) = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(edi26 - 0x1bb1929b)) < reinterpret_cast<signed char>(23);
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags27) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags27) = __intrinsic();
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&g80207208) + 2) = eflags27 & 0xfcffff;
    eax28 = reinterpret_cast<int32_t>(eax21) * reinterpret_cast<int32_t>(edi26);
    *edi26 = *reinterpret_cast<signed char*>(&eax28);
    __asm__("lodsb ");
    __asm__("int1 ");
    addr_0x409c77_20:
    __asm__("fsubr st0, st2");
    __asm__("in eax, dx");
}

signed char g1c838a78;

void fun_409c87(int32_t ecx) {
    signed char al2;

    __asm__("out 0x83, eax");
    *reinterpret_cast<unsigned char*>(ecx + 0x37891048) = 0;
    g1c838a78 = al2;
    return;
}

int32_t g2de6e37a;

struct s527 {
    signed char[80] pad80;
    int32_t f80;
};

struct s528 {
    signed char[80] pad80;
    int32_t f80;
};

void fun_409c97() {
    uint32_t eax1;
    unsigned char al2;
    unsigned char bl3;
    int1_t below_or_equal4;
    int32_t edi5;
    int16_t ds6;
    struct s527* edi7;
    struct s528* edi8;
    int32_t edx9;

    if (__intrinsic()) 
        goto 0x409c8d;
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al2 ^ 0xe9) - 54) & bl3);
    below_or_equal4 = eax1 <= *reinterpret_cast<uint32_t*>(0x2de6e37c + edi5);
    *reinterpret_cast<int16_t*>(&g2de6e37a) = ds6;
    if (!below_or_equal4) {
        edi7->f80 = edi8->f80 + edx9;
    } else {
        __asm__("xlatb ");
    }
}

struct s529 {
    signed char[1] pad1;
    signed char f1;
};

struct s530 {
    signed char[1] pad1;
    signed char f1;
};

void fun_409d12(int32_t ecx) {
    int32_t ebp2;
    int32_t ebp3;
    struct s529* edi4;
    struct s530* esi5;

    *reinterpret_cast<signed char*>(ebp2 - 7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp3 - 7) - 1);
    if (__intrinsic()) {
        __asm__("out dx, al");
        __asm__("ror byte [ecx+0x6a], 0x6b");
        __asm__("arpl [edi+0x4bc891af], sp");
        __asm__("in eax, dx");
        edi4->f1 = esi5->f1;
    }
}

void fun_409d19(int32_t a1) {
    int1_t less2;
    signed char* edi3;
    signed char* esi4;
    int32_t* esp5;
    int32_t edx6;

    if (!less2) 
        goto 0x409d62;
    *edi3 = *esi4;
    __asm__("out 0xe8, al");
    esp5 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 + 4);
    __asm__("pushad ");
    esp5[a1 * 2] = esp5[a1 * 2] - edx6;
}

void fun_409d33() {
    signed char* edi1;
    signed char* esi2;

    *edi1 = *esi2;
    __asm__("fmul qword [ebx+0x79bb5f33]");
    __asm__("int 0x6e");
}

void fun_409d3e() {
    __asm__("les edi, [edi+0x69e6ef10]");
    __asm__("ror dword [esi+0xa888f8cf], 0x7e");
}

uint32_t g44726e19;

int32_t g7637d131;

struct s531 {
    signed char[12] pad12;
    unsigned char f12;
};

struct s532 {
    signed char[12] pad12;
    signed char f12;
};

struct s533 {
    signed char[12] pad12;
    unsigned char f12;
};

int32_t gf6b75e87;

void fun_409d71(int32_t ecx) {
    int32_t ecx2;
    uint1_t zf3;
    int32_t esi4;
    int32_t esi5;
    int32_t ecx6;
    uint32_t edi7;
    int32_t eax8;
    struct s531* ebp9;
    struct s532* ebp10;
    struct s533* ebp11;

    ecx2 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx2) & zf3) 
        goto 0x409d40;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = -31;
    __asm__("iretd ");
    *reinterpret_cast<uint32_t*>(esi4 - 0x7b204e9f) = *reinterpret_cast<uint32_t*>(esi5 - 0x7b204e9f) ^ reinterpret_cast<uint32_t>(__return_address());
    __asm__("out dx, al");
    ecx6 = ecx2 - 1 + 1;
    if (!__intrinsic()) {
        g44726e19 = reinterpret_cast<uint32_t>(__return_address()) & edi7;
    }
    eax8 = g7637d131;
    ebp9->f12 = reinterpret_cast<unsigned char>(ebp10->f12 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx6) + reinterpret_cast<uint1_t>(ebp11->f12 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx6))))));
    __asm__("in eax, 0x64");
    __asm__("retf ");
    __asm__("fsub dword [edi+0x2505f4e5]");
    gf6b75e87 = eax8;
    __asm__("arpl [ebx-0x5], sp");
}

signed char gc2955757;

void fun_409ee7() {
    signed char* edi1;
    signed char al2;
    int32_t edi3;
    int32_t edi4;
    int1_t zf5;
    int32_t ebp6;
    int32_t ebp7;
    int32_t ebp8;
    int32_t* ebx9;
    int32_t ebx10;
    int32_t ebx11;
    int32_t eax12;

    *edi1 = al2;
    edi3 = edi4 + 1;
    __asm__("ficom dword [esi+0x1224d65a]");
    __asm__("in eax, dx");
    __asm__("rcl ebx, 1");
    __asm__("clc ");
    if (zf5) {
        __asm__("rcl byte [ecx+0xc0550499], cl");
        __asm__("out dx, al");
        *reinterpret_cast<unsigned char*>(ebp6 + 0x59be7c39) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp7 + 0x59be7c39) >> 43);
    } else {
        __asm__("aaa ");
        if (__intrinsic()) {
            __asm__("wait ");
            __asm__("into ");
            *reinterpret_cast<uint32_t*>(edi3 + 0x42906b23) = *reinterpret_cast<uint32_t*>(edi3 + 0x42906b23) + (ebp8 + *ebx9 + __intrinsic());
            __asm__("das ");
            __asm__("o16 int 0x98");
            if (!(ebx10 - 1)) {
                __asm__("out dx, eax");
                ebx11 = eax12;
                gc2955757 = reinterpret_cast<signed char>(gc2955757 - *reinterpret_cast<signed char*>(&ebx11));
            }
        }
    }
}

int32_t fun_df33a955();

struct s534 {
    int16_t f0;
    signed char[2] pad4;
    int32_t f4;
};

void fun_409f2b(int16_t cx) {
    int32_t ebp2;
    signed char* edi3;
    signed char* esi4;
    int32_t eax5;
    int32_t edx6;
    struct s534* esp7;
    int16_t es8;

    __asm__("cmc ");
    fun_df33a955();
    __asm__("fadd dword [ecx-0x4c]");
    *reinterpret_cast<int32_t*>(ebp2 + 0x78ce6548) = 0;
    *edi3 = *esi4;
    if (__intrinsic()) 
        goto 0x409f76;
    __asm__("out 0xc1, eax");
    eax5 = edx6;
    if (!__intrinsic()) {
        __asm__("ficomp dword [eax]");
        *reinterpret_cast<signed char*>(&eax5) = 68;
        __asm__("sti ");
        __asm__("cdq ");
        __asm__("wait ");
        __asm__("clc ");
        *reinterpret_cast<signed char*>(eax5 - 92) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax5 - 92) >> 1);
        esp7 = reinterpret_cast<struct s534*>(reinterpret_cast<int32_t>(__return_address()) + 4 + 4 - 2);
        esp7->f0 = es8;
        __asm__("enter 0x6ce7, 0x24");
        goto esp7->f4;
    }
}

void fun_a00a2dc9(int32_t a1);

void fun_409f7a(int32_t ecx) {
    signed char* edi2;
    signed char* esi3;
    int32_t edi4;
    int32_t edi5;
    uint1_t cf6;
    uint32_t edx7;
    uint1_t cf8;
    uint32_t edx9;
    int32_t edx10;

    __asm__("rol dword [edx], 1");
    fun_a00a2dc9(__return_address());
    *edi2 = *esi3;
    edi4 = edi5 + 1;
    cf6 = reinterpret_cast<uint1_t>(edx7 < *reinterpret_cast<int32_t*>(edi4 - 15) + cf8);
    edx9 = edx10 - (*reinterpret_cast<int32_t*>(edi4 - 15) + cf6);
    *reinterpret_cast<uint32_t*>(ecx - 78) = *reinterpret_cast<uint32_t*>(ecx - 78) + edx9 + cf6;
    if (*reinterpret_cast<uint32_t*>(ecx - 78)) {
        if (__intrinsic()) 
            goto 0x409fb8;
        __asm__("pushad ");
    }
}

void fun_409f9e() {
    __asm__("aas ");
    __asm__("outsb ");
    __asm__("sahf ");
}

void fun_409faf() {
    signed char* edi1;
    signed char al2;

    __asm__("aad 0x51");
    *edi1 = al2;
    if (!__intrinsic()) 
        goto 0x409f55; else 
        goto "???";
}

void fun_40a02b(int32_t ecx) {
    signed char* ebx2;

    *ebx2 = *reinterpret_cast<signed char*>(&ecx);
    __asm__("cdq ");
}

struct s535 {
    signed char[4] pad4;
    int32_t f4;
};

struct s536 {
    signed char[4] pad4;
    signed char f4;
};

int32_t g8f2da33f;

signed char g19fd7d4a;

struct s537 {
    signed char[1] pad1;
    unsigned char f1;
};

void fun_40a03c() {
    int32_t edx1;
    unsigned char dh2;
    int32_t ebx3;
    int32_t esi4;
    uint1_t cf5;
    int1_t pf6;
    int1_t zf7;
    int1_t less8;
    uint32_t ecx9;
    int32_t tmp32_10;
    int32_t ebp11;
    int32_t eax12;
    uint32_t esi13;
    int32_t eax14;
    uint1_t cf15;
    uint32_t* esi16;
    uint32_t* edi17;
    int32_t* edi18;
    int32_t* esi19;
    int32_t* edi20;
    struct s535* edi21;
    signed char* esi22;
    struct s536* esi23;
    signed char dl24;
    uint32_t* ebx25;
    uint32_t* ebx26;
    signed char* edi27;
    signed char* esi28;
    unsigned char* edi29;
    struct s537* edi30;
    signed char* edi31;
    signed char* esi32;
    unsigned char bl33;

    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx1) + 1) = reinterpret_cast<unsigned char>(dh2 | *reinterpret_cast<unsigned char*>(ebx3 + esi4 * 2 + 0x71683303));
    cf5 = 0;
    pf6 = __intrinsic();
    zf7 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx1) + 1) == 0;
    less8 = __intrinsic();
    while (pf6) {
        if (zf7) 
            goto addr_0x40a047_5;
        while (--ecx9, !ecx9) {
            tmp32_10 = ebp11;
            ebp11 = eax12;
            eax12 = tmp32_10;
            if (!less8) 
                goto addr_0x40a0a8_8;
            __asm__("rcl byte [edx+0x36], 1");
            *reinterpret_cast<uint32_t*>(edx1 - 0x69dfc40f) = *reinterpret_cast<uint32_t*>(edx1 - 0x69dfc40f) + esi13 + cf5;
            cf5 = __intrinsic();
            pf6 = __intrinsic();
            zf7 = *reinterpret_cast<uint32_t*>(edx1 - 0x69dfc40f) == 0;
            less8 = reinterpret_cast<int32_t>(*reinterpret_cast<uint32_t*>(edx1 - 0x69dfc40f)) < reinterpret_cast<int32_t>(0) != __intrinsic();
            __asm__("stc ");
            __asm__("frstor [eax]");
            --ecx9;
            if (!ecx9) 
                goto addr_0x40a0e6_10;
            __asm__("insb ");
        }
    }
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) & 92);
    eax14 = eax12 + 0x2173efa2;
    cf15 = reinterpret_cast<uint1_t>(*esi16 < *edi17);
    *edi18 = *esi19;
    edi20 = &edi21->f4;
    esi22 = &esi23->f4;
    *reinterpret_cast<unsigned char*>(eax14 + reinterpret_cast<int32_t>(esi22) + 76) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax14 + reinterpret_cast<int32_t>(esi22) + 76) - reinterpret_cast<unsigned char>(83 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(eax14 + reinterpret_cast<int32_t>(esi22) + 76) < reinterpret_cast<unsigned char>(83 + cf15))));
    *edi20 = *edi20 + 0x69;
    *esi22 = reinterpret_cast<signed char>(*esi22 + dl24);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi20) - 0x77) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi20) - 0x77) - (ecx9 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi20) - 0x77) < ecx9));
    *ebx25 = *ebx26 ^ 0xc78566b;
    addr_0x40a047_5:
    g8f2da33f = eax12;
    g19fd7d4a = reinterpret_cast<signed char>(g19fd7d4a - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1));
    *edi27 = *esi28;
    edi29 = &edi30->f1;
    __asm__("fsubr st0, st7");
    *edi29 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) & 0xe2);
    *reinterpret_cast<uint32_t*>(ecx9 - 0x6d48bf5c) = ecx9;
    __asm__("out dx, eax");
    __asm__("pushad ");
    *reinterpret_cast<signed char*>(edi29 + 1 + 1 + 1) = 70;
    addr_0x40a0a8_8:
    *edi31 = *esi32;
    addr_0x40a0e6_10:
    __asm__("out dx, eax");
    *reinterpret_cast<unsigned char*>(edx1 - 82) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx1 - 82) & bl33);
}

void fun_40a07c() {
    uint32_t* edi1;
    uint32_t eax2;

    __asm__("daa ");
    __asm__("int1 ");
    if (*edi1 > eax2) 
        goto 0x40a03d;
}

void fun_40a085(int32_t ecx) {
    int1_t pf2;
    signed char bh3;
    signed char bl4;

    do {
    } while (!pf2);
    __asm__("insd ");
    if (bh3 >= bl4) 
        goto 0x40a05a;
    __asm__("a16 in al, dx");
}

struct s538 {
    int32_t f0;
    signed char[55] pad59;
    unsigned char f59;
};

unsigned char g64bddbeb;

uint40_t gf540d484;

int32_t g64bddbec;

uint32_t gf7b54bfb;

void* gf7c0bcf4;

unsigned char gf540d4c4;

int32_t gadf99196;

void* gcf79b369;

uint32_t g64bddb82;

uint32_t g1692a217;

void fun_40a0ec() {
    struct s538* ebx1;
    void* ebx2;
    int32_t* edi3;
    uint32_t ebx4;
    int32_t* edi5;
    uint1_t cf6;
    unsigned char* eax7;
    void* ebp8;
    int32_t edx9;
    void* ecx10;
    uint1_t cf11;
    uint1_t cf12;
    uint1_t below_or_equal13;
    uint32_t eax14;
    void* eax15;
    void* ecx16;
    uint1_t zf17;
    uint32_t ecx18;

    __asm__("in eax, dx");
    ebx1 = reinterpret_cast<struct s538*>(reinterpret_cast<int32_t>(ebx2) - (*edi3 + reinterpret_cast<uint1_t>(ebx4 < *edi5 + cf6)));
    __asm__("ror byte [edx+0x76], 1");
    while (1) {
        eax7 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax7) * reinterpret_cast<uint32_t>(ebp8));
        edx9 = __intrinsic();
        __asm__("xlatb ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx10) + (reinterpret_cast<uint32_t>(ebp8) - 1));
        *reinterpret_cast<unsigned char*>(&ecx10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) | g64bddbeb);
        cf11 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&gf540d484) < g64bddbeb);
        g64bddbeb = *reinterpret_cast<unsigned char*>(&gf540d484);
        g64bddbec = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&gf540d484) + 1);
        cf12 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax7) + 1) < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) + cf11));
        below_or_equal13 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax7) + 1) <= reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) + cf12));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax7) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax7) + 1) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) + cf12));
        do {
            if (!below_or_equal13) 
                goto addr_0x40a0c5_10;
            __asm__("retf ");
            gf7b54bfb = gf7b54bfb + reinterpret_cast<uint32_t>(eax7) + cf12;
            __asm__("out 0x36, eax");
            __asm__("paddsb mm5, [ecx+0x4e80a2a9]");
            eax14 = reinterpret_cast<uint32_t>(eax7) | *reinterpret_cast<unsigned char*>(&gf540d484);
            __asm__("insd ");
            eax15 = reinterpret_cast<void*>(eax14 ^ 0xb254c07);
            __asm__("ds lodsd ");
            *reinterpret_cast<signed char*>(&ebx1) = -13;
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1) ^ 0x92);
            if (0) 
                goto addr_0x40a17d_12;
            ebx1 = reinterpret_cast<struct s538*>(0xb7ead56a);
            ebp8 = eax15;
            eax7 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax15) >> 1);
            ecx16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx10) - 1);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx16) + 1) = 0x66;
            ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx16) + 1);
            if (*reinterpret_cast<unsigned char*>(&eax7) >= 0xb2) 
                break;
            __asm__("sti ");
            *eax7 = reinterpret_cast<unsigned char>(*eax7 & *reinterpret_cast<unsigned char*>(&eax7));
            __asm__("aad 0x81");
            edx9 = 0x67198ffb;
            ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx10) + reinterpret_cast<int32_t>(gf7c0bcf4));
            __asm__("lodsd ");
            __asm__("rcr edx, 0x95");
            gf540d4c4 = 0;
            cf12 = 0;
            zf17 = reinterpret_cast<uint1_t>(gf540d4c4 == 0);
            below_or_equal13 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf17));
            __asm__("cdq ");
            __asm__("xlatb ");
        } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | zf17));
        goto addr_0x40a169_15;
    }
    addr_0x40a0c5_10:
    *reinterpret_cast<signed char*>(&edx9) = -21;
    gadf99196 = gadf99196 - edx9;
    addr_0x40a17d_12:
    gcf79b369 = eax15;
    ebx1->f59 = 0xff;
    ebx1->f0 = ebx1->f0 + 0x28762992;
    __asm__("insb ");
    addr_0x40a169_15:
    __asm__("xlatb ");
    __asm__("stc ");
    ecx18 = reinterpret_cast<uint32_t>(ecx10) | g64bddb82;
    g1692a217 = g1692a217 - ecx18;
    goto 0x64bddbf0;
}

void fun_40a178() {
    __asm__("sti ");
    __asm__("clc ");
    __asm__("ror byte [ecx], 0xe4");
}

signed char g221cd619;

signed char fun_40a18b(int32_t ecx) {
    signed char al2;

    al2 = g221cd619;
    return al2;
}

unsigned char gf9a666f3;

void fun_40a1d0(int32_t ecx) {
    int32_t eax2;
    int32_t esi3;
    int32_t eax4;

    __asm__("aaa ");
    eax2 = esi3;
    if (eax4 - 1) {
        gf9a666f3 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax2) + 63)));
        __asm__("retf 0xea8e");
        __asm__("cmc ");
        __asm__("fsub dword [esi-0x7]");
    }
}

struct s539 {
    signed char[4] pad4;
    signed char f4;
};

struct s540 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40a1e1(void* ecx) {
    int32_t* edi2;
    int32_t* esi3;
    signed char* edi4;
    struct s539* edi5;
    signed char* esi6;
    struct s540* esi7;
    uint32_t eax8;

    __asm__("fdiv dword [edi]");
    __asm__("out 0x54, eax");
    *edi2 = *esi3;
    edi4 = &edi5->f4;
    esi6 = &esi7->f4;
    if (1) {
        __asm__("aad 0x81");
        __asm__("lodsd ");
    } else {
        if (__intrinsic()) {
            __asm__("in al, dx");
        }
        ecx = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx) - 1);
        if (reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>((eax8 & 0xfdcaade2) == 0)) {
            __asm__("into ");
        }
        __asm__("out dx, eax");
        edi4[reinterpret_cast<int32_t>(edi4) * 8] = reinterpret_cast<signed char>(edi4[reinterpret_cast<int32_t>(edi4) * 8] << *reinterpret_cast<unsigned char*>(&ecx));
        if (!__intrinsic()) 
            goto addr_0x40a22b_14;
    }
    __asm__("rcr byte [ecx+0xfe77cabc], 1");
    *edi4 = *esi6;
    addr_0x40a22b_14:
    __asm__("lodsd ");
    __asm__("wait ");
    __asm__("sti ");
    esi6 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi6) + reinterpret_cast<int32_t>(ecx) + 1);
    if (__intrinsic()) {
        __asm__("outsd ");
    }
}

struct s541 {
    unsigned char f0;
    signed char[1790023879] pad1790023880;
    signed char f1790023880;
};

struct s542 {
    int32_t f0;
    signed char[85] pad89;
    uint32_t f89;
};

signed char g749f1759;

struct s543 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s544 {
    int32_t f0;
    unsigned char f4;
};

struct s541* fun_3ce6e8fa();

int32_t g50cbbbb5;

struct s541* fun_45e6b5a2();

int32_t g52d2c402;

void fun_f238c7c4(int16_t ecx);

void fun_40a33c(struct s541* ecx) {
    int1_t sf2;
    int32_t eax3;
    int32_t eax4;
    struct s542* edx5;
    uint32_t edx6;
    uint1_t cf7;
    unsigned char* ebx8;
    unsigned char* ebx9;
    signed char ebx10;
    void* esp11;
    unsigned char* esi12;
    struct s543* esi13;
    int32_t ebx14;
    int32_t* esp15;
    uint32_t ebp16;
    uint1_t cf17;
    int32_t edi18;
    struct s544* esp19;
    void* eax20;
    void* esp21;
    struct s541* eax22;
    uint1_t zf23;
    int1_t of24;
    uint1_t below_or_equal25;
    struct s541* tmp32_26;
    int32_t* esp27;
    int16_t ds28;
    int32_t* esp29;
    int16_t* esp30;
    int16_t ecx31;
    void* esi32;

    if (sf2) {
        __asm__("out dx, al");
        __asm__("in eax, 0x49");
    } else {
        eax3 = eax4 + 0x1e5f13b1;
        edx5 = reinterpret_cast<struct s542*>(edx6 ^ 0x2995b64e);
        __asm__("retf ");
        __asm__("aaa ");
        cf7 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&edx5) < *ebx8);
        __asm__("lodsb ");
        if (*reinterpret_cast<unsigned char*>(&edx5) == *ebx9) {
            if (!__intrinsic()) {
                g749f1759 = *reinterpret_cast<signed char*>(eax3 + eax3);
            }
        } else {
            g749f1759 = ebx10;
            esp11 = reinterpret_cast<void*>(0x25cca09c);
            if (__intrinsic()) {
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx5) - 0x54f8396) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx5) - 0x54f8396) - (0x1a51ec1a - reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx5) - 0x54f8396) < 0x1a51ec1a - cf7));
                __asm__("lahf ");
            }
            __asm__("das ");
            *reinterpret_cast<signed char*>(eax3 + eax3) = 59;
            esi12 = &esi13->f1;
            __asm__("rcr dword [ebx], cl");
            ebx14 = 0xfca733cf;
            addr_0x40a3ba_13:
            while (edx5 = reinterpret_cast<struct s542*>(reinterpret_cast<uint32_t>(edx5) + 1), esp15 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp11) + 4 | ebp16), cf17 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ecx) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*esi12))), *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) - reinterpret_cast<unsigned char>(*esi12 + cf17)), edi18 = *esp15, *reinterpret_cast<signed char*>(&ebx14) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx14) - 1), esp19 = reinterpret_cast<struct s544*>(esp15 + 1 - 1), esp19->f0 = 0x40a3ce, eax20 = reinterpret_cast<void*>(ecx->f0()), esp21 = eax20, eax22 = reinterpret_cast<struct s541*>(&esp19->f4), ++ebx14, zf23 = reinterpret_cast<uint1_t>(ebx14 == 0), of24 = __intrinsic(), below_or_equal25 = reinterpret_cast<uint1_t>(cf17 | zf23), !__intrinsic()) {
                while (esp11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp21) + 4), below_or_equal25) {
                    while (ecx = reinterpret_cast<struct s541*>(reinterpret_cast<uint32_t>(ecx) - 1), reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>(!zf23)) {
                        tmp32_26 = ecx;
                        ecx = eax22;
                        cf17 = __intrinsic();
                        zf23 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_26) - 0x482ab57a == 0);
                        of24 = __intrinsic();
                        esp27 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp11) - 4);
                        *esp27 = 0x40a3f1;
                        eax22 = fun_3ce6e8fa();
                        esp11 = reinterpret_cast<void*>(esp27 + 1);
                        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx14) + 1) = 45;
                    }
                    __asm__("fmul st0, st6");
                    __asm__("in eax, dx");
                    if (of24) 
                        goto addr_0x40a3ba_13;
                    ds28 = static_cast<int16_t>(g50cbbbb5);
                    esp29 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp11) - 4);
                    *esp29 = 0x40a40b;
                    eax22 = fun_45e6b5a2();
                    esp21 = reinterpret_cast<void*>(esp29 + 1);
                    cf17 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) + cf17));
                    below_or_equal25 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) <= reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) + cf17));
                    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) + cf17));
                    zf23 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) == static_cast<uint32_t>(cf17));
                    of24 = __intrinsic();
                }
                goto addr_0x40a410_19;
            }
            goto addr_0x40a3d2_20;
        }
    }
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx) + 0x6ab198c8) = 0;
    g52d2c402 = 0x68f5673b;
    addr_0x40a3d2_20:
    __asm__("repne fdiv qword [ecx-0x47]");
    eax22->f0 = *esi12;
    *reinterpret_cast<uint32_t*>(edi18 - 72) = *reinterpret_cast<uint32_t*>(edi18 - 72) - (0x1f9fb5b - reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edi18 - 72) < 0x1f9fb5b - cf17));
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp21) - 4) = edi18;
    goto edx5->f0;
    addr_0x40a410_19:
    __asm__("out dx, al");
    esp30 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp11) - 2);
    *esp30 = ds28;
    if (ebx14 - 1 < 0) {
        ecx31 = *esp30;
        *reinterpret_cast<int32_t*>(esp30 + 2 - 2) = 0x40a47d;
        fun_f238c7c4(ecx31);
    } else {
        esi32 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi12) | edx5->f89);
        __asm__("enter 0x9a21, 0x42");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi32) + reinterpret_cast<uint32_t>(ecx) - 98) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi32) + reinterpret_cast<uint32_t>(ecx) - 98) & reinterpret_cast<uint32_t>(esp30);
    }
}

void fun_40a37e() {
}

void fun_40a3a6() {
    __asm__("rol dword [ebx+0x6fb832a0], 1");
}

signed char ga7937782;

signed char gd006fa6f;

void fun_40a425() {
    void* esp1;
    uint40_t v2;
    uint32_t* esi3;
    uint1_t cf4;
    int32_t ecx5;
    uint32_t* edi6;
    int1_t zf7;
    int32_t eax8;
    int32_t ebp9;
    int32_t eax10;
    int32_t ebp11;
    int32_t ecx12;
    int32_t eax13;
    unsigned char* esp14;

    esp1 = __zero_stack_offset();
    *reinterpret_cast<int32_t*>(&v2) = reinterpret_cast<int32_t>(__return_address());
    esi3 = reinterpret_cast<uint32_t*>(0);
    cf4 = 0;
    do {
        if (!ecx5) 
            break;
        --ecx5;
        cf4 = reinterpret_cast<uint1_t>(*esi3 < *edi6);
        zf7 = *esi3 == *edi6;
        *edi6 = *esi3;
        ++edi6;
        ++esi3;
    } while (!zf7);
    __asm__("insd ");
    *reinterpret_cast<uint32_t*>(eax8 + ebp9) = *reinterpret_cast<int32_t*>(eax10 + ebp11) + ecx5 + cf4;
    ecx12 = ecx5 - 1;
    eax13 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 1);
    ga7937782 = *reinterpret_cast<signed char*>(&eax13);
    __asm__("arpl si, dx");
    *reinterpret_cast<signed char*>(eax13 - 0x3c174aeb) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax13 - 0x3c174aeb) - 1);
    __asm__("aas ");
    esp14 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp1) + 1 + 4 + 4);
    __asm__("iretd ");
    esp14[reinterpret_cast<int32_t>(edi6) * 4] = reinterpret_cast<unsigned char>(esp14[reinterpret_cast<int32_t>(edi6) * 4] | reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx12) + 1) - 3));
    gd006fa6f = 24;
    __asm__("out 0x45, al");
}

signed char gdc52b516;

void fun_40a52e(unsigned char* ecx) {
    unsigned char dh2;
    uint1_t cf3;
    unsigned char* esi4;
    unsigned char* edi5;
    int1_t less_or_equal6;
    signed char* esi7;
    signed char* edi8;
    signed char* edi9;
    signed char* esi10;
    signed char al11;
    uint32_t* ebx12;
    int32_t* ebx13;
    uint32_t* ebx14;

    *ecx = reinterpret_cast<unsigned char>(*ecx ^ dh2);
    __asm__("sti ");
    cf3 = reinterpret_cast<uint1_t>(*esi4 < *edi5);
    less_or_equal6 = *esi7 <= *edi8;
    *edi9 = *esi10;
    if (!less_or_equal6) {
        __asm__("xlatb ");
        gdc52b516 = al11;
        *ebx12 = *ebx13 - (70 + reinterpret_cast<uint1_t>(*ebx14 < 70 + cf3));
        __asm__("aam 0xdc");
    }
}

struct s546 {
    struct s546* f0;
    int32_t f1;
    signed char f4;
    signed char[119433245] pad119433251;
    uint32_t f119433251;
};

struct s545 {
    struct s546* f0;
    struct s546* f1;
};

struct s547 {
    struct s546* f0;
    int32_t f1;
    signed char f4;
    signed char[549860147] pad549860153;
    int32_t f549860153;
};

struct s548 {
    signed char[1] pad1;
    struct s546* f1;
};

struct s549 {
    signed char[1] pad1;
    struct s546* f1;
};

unsigned char g7f7b8b3a;

int32_t g409012cc;

int32_t g18f4642d;

uint56_t g18f46431;

struct s550 {
    int32_t f0;
    signed char[539127607] pad539127611;
    unsigned char f539127611;
};

unsigned char g9218281e;

struct s546* fun_c0aa1a8e();

uint32_t g1cfa4f21;

unsigned char g6d08ad17;

struct s546* fun_484d8483();

struct s551 {
    int32_t f0;
    struct s546* f4;
};

unsigned char g1afb9bfd;

void fun_40a5af(int32_t ecx, struct s545* a2) {
    uint64_t v2;
    uint32_t eflags3;
    int1_t zf4;
    signed char* esi5;
    signed char* edi6;
    int1_t below_or_equal7;
    unsigned char* esi8;
    unsigned char* edi9;
    signed char* edi10;
    signed char* esi11;
    struct s547* edi12;
    struct s548* edi13;
    struct s546* esi14;
    struct s549* esi15;
    uint32_t ecx16;
    struct s546* eax17;
    int16_t ax18;
    void* eax19;
    void* eax20;
    struct s545* ss21;
    int32_t ebp22;
    void** edx23;
    struct s550* ecx24;
    void* eax25;
    struct s545** esp26;
    int1_t less_or_equal27;
    uint1_t cf28;
    void* esp29;
    struct s545* edi30;
    uint1_t less31;
    struct s546* eax32;
    struct s546* tmp32_33;
    void* ecx34;
    void*** esp35;
    int1_t zf36;
    void*** esp37;
    struct s551* esi38;
    signed char* ebx39;
    void** eax40;
    void*** esp41;
    uint32_t* esp42;
    void** esp43;
    uint32_t ebx44;
    int16_t ds45;
    int1_t pf46;

    *reinterpret_cast<struct s545**>(reinterpret_cast<int32_t>(&v2) + 4) = a2;
    *reinterpret_cast<int32_t*>(&v2) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = 0;
    zf4 = *esi5 == *edi6;
    below_or_equal7 = *esi8 <= *edi9;
    *edi10 = *esi11;
    edi12 = reinterpret_cast<struct s547*>(&edi13->f1);
    esi14 = reinterpret_cast<struct s546*>(&esi15->f1);
    __asm__("fmul dword [ecx-0x63]");
    ecx16 = reinterpret_cast<uint32_t>(ecx - 1);
    if (ecx16) {
        __asm__("int1 ");
        __asm__("les esi, [ecx+0x43]");
    }
    if (zf4) {
        __asm__("ficomp dword [esi+0xe63cd74a]");
    } else {
        *reinterpret_cast<int16_t*>(&eax17) = reinterpret_cast<int16_t>(ax18 / *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi14) + 0xffffff86));
        *reinterpret_cast<signed char*>(&ecx16) = -24;
        __asm__("fcomp st0, st4");
        edi12->f0 = eax17;
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi12) + 4) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi14) + 4);
        if (below_or_equal7) 
            goto 0x40a549;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax19) + 1) = -37;
        __asm__("cli ");
        g7f7b8b3a = *reinterpret_cast<unsigned char*>(&eax17);
        *reinterpret_cast<unsigned char*>(&eax19) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax17) & 0xb2);
        g409012cc = g18f4642d;
        edi12 = reinterpret_cast<struct s547*>(0x409012d0);
        esi14 = reinterpret_cast<struct s546*>(0x18f46431);
        __asm__("lds eax, [edx+ebp+0x56]");
        if (__intrinsic()) 
            goto addr_0x40a5e2_19;
    }
    __asm__("fcomip st0, st1");
    __asm__("cdq ");
    goto *reinterpret_cast<struct s545**>(reinterpret_cast<int32_t>(&v2) + 4);
    addr_0x40a5e2_19:
    eax20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax19) - 0x736b2514 + reinterpret_cast<unsigned char>(*reinterpret_cast<struct s546**>(&g18f46431)));
    __asm__("cli ");
    __asm__("salc ");
    if (eax20) {
        __asm__("in eax, 0x88");
        __asm__("fadd qword [ebp-0x5b]");
    }
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax20) - 0x31c0a691) = *reinterpret_cast<signed char*>(&eax20);
    __asm__("insd ");
    ss21 = *reinterpret_cast<struct s545**>(&v2);
    ebp22 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2);
    edx23 = reinterpret_cast<void**>(0x9e7e4df5);
    ecx24 = reinterpret_cast<struct s550*>(0x4f0dc229);
    eax25 = reinterpret_cast<void*>(ecx16 ^ 0x409012d0);
    esp26 = reinterpret_cast<struct s545**>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 2 + 4 - 2);
    *reinterpret_cast<struct s545**>(reinterpret_cast<int32_t>(&v2) + 4) = ss21;
    if (!1) 
        goto addr_0x40a679_27;
    __asm__("wait ");
    __asm__("int1 ");
    goto *reinterpret_cast<struct s545**>(reinterpret_cast<int32_t>(&v2) + 4);
    addr_0x40a679_27:
    __asm__("rcr ebx, 0xf6");
    less_or_equal27 = reinterpret_cast<signed char>(*reinterpret_cast<struct s546**>(&g18f46431)) <= reinterpret_cast<signed char>(0x9d);
    g9218281e = 56;
    if (less_or_equal27) {
        cf28 = reinterpret_cast<uint1_t>(0x9e7e4df5 < reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g18f46431) + 3)));
        __asm__("enter 0x434d, 0xdf");
        *reinterpret_cast<unsigned char*>(&eax25) = reinterpret_cast<unsigned char>(56 - reinterpret_cast<unsigned char>(66 - reinterpret_cast<uint1_t>(56 < reinterpret_cast<unsigned char>(66 - cf28))));
        esp29 = eax25;
        goto addr_0x40a691_31;
    }
    while (1) {
        edi30 = *esp26;
        *reinterpret_cast<struct s546**>(&edi30->f0) = *reinterpret_cast<struct s546**>(&esi14->f0);
        edi12 = reinterpret_cast<struct s547*>(&edi30->f1);
        esi14 = reinterpret_cast<struct s546*>(&esi14->f1);
        *reinterpret_cast<int1_t*>(&eflags3) = 0;
        *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
        *reinterpret_cast<uint1_t*>(&eflags3) = 0;
        *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = 0;
        *reinterpret_cast<int1_t*>(&eflags3) = __undefined();
        less31 = reinterpret_cast<uint1_t>(*reinterpret_cast<int1_t*>(&eflags3));
        *reinterpret_cast<int32_t*>(esp26 + 2 - 2) = 0x40a6c5;
        eax32 = fun_c0aa1a8e();
        esp29 = reinterpret_cast<void*>(0x1cfa4f25);
        if (reinterpret_cast<uint1_t>(static_cast<uint32_t>(less31))) {
            if (!less31) 
                goto addr_0x40a728_38;
            tmp32_33 = esi14;
            esi14 = eax32;
            eax32 = tmp32_33;
            __asm__("aaa ");
            edx23 = reinterpret_cast<void**>(0x24bc091d);
            g1cfa4f21 = eflags3 & 0xfcffff;
            *reinterpret_cast<unsigned char*>(&eax32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32) - reinterpret_cast<unsigned char>(71 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax32) < 71)));
            esp29 = reinterpret_cast<void*>(0x1cfa4f20);
            __asm__("rcl dword [edi+0x6d], cl");
        }
        g6d08ad17 = *reinterpret_cast<unsigned char*>(&eax32);
        ecx34 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(edx23)) * 0xaf088ef2);
        esp35 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp29) - 4);
        *esp35 = reinterpret_cast<void**>(0x40a6fa);
        eax32 = fun_484d8483();
        ecx24 = reinterpret_cast<struct s550*>(reinterpret_cast<uint32_t>(ecx34) - 1);
        esp29 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp35 + 1) + 1);
        __asm__("in eax, dx");
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx23) - 0x3f4aebc2) = 0;
        zf36 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx23) - 0x3f4aebc2) == 0;
        __asm__("aaa ");
        if (zf36) 
            break;
        __asm__("out dx, al");
        if (!zf36) 
            goto addr_0x40a70a_42;
        addr_0x40a691_31:
        *reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(&ebp22) + *reinterpret_cast<int16_t*>(&edi12)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(&ebp22) + *reinterpret_cast<int16_t*>(&edi12)) + *reinterpret_cast<signed char*>(&edx23));
        esp37 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp29) - 4);
        *esp37 = edx23;
        __asm__("arpl [eax+0x1a], si");
        esp26 = reinterpret_cast<struct s545**>(reinterpret_cast<uint32_t>(esp37) - 2);
        *esp26 = ss21;
        edi12->f0 = *reinterpret_cast<struct s546**>(&esi14->f0);
        esi38 = reinterpret_cast<struct s551*>(&esi14->f1);
        edi12->f1 = esi38->f0;
        esi14 = reinterpret_cast<struct s546*>(&esi38->f4);
        __asm__("cli ");
        *reinterpret_cast<unsigned char*>(&ecx24) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx24) & *reinterpret_cast<unsigned char*>(&ebx39));
        --ebx39;
        *reinterpret_cast<struct s546**>(&esi14->f0) = reinterpret_cast<struct s546*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s546**>(&esi14->f0)) >> 65);
        __asm__("rep out 0xae, eax");
        g1afb9bfd = 87;
    }
    addr_0x40a715_49:
    __asm__("wait ");
    edi12 = reinterpret_cast<struct s547*>(&edi12->f1);
    esi14 = reinterpret_cast<struct s546*>(&esi14->f1);
    while (1) {
        ebx39 = reinterpret_cast<signed char*>(0x678b464);
        addr_0x40a728_38:
        eax40 = edx23;
        *reinterpret_cast<signed char*>(&eax40) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax40) + *ebx39);
        *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
        *reinterpret_cast<uint1_t*>(&eflags3) = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&eax40) == 0);
        *reinterpret_cast<int1_t*>(&eflags3) = *reinterpret_cast<signed char*>(&eax40) < 0;
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
        __asm__("in eax, dx");
        __asm__("fxch4 st5");
        esp41 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp29) - 4);
        *esp41 = eax40;
        __asm__("ror dword [edi], 0x2c");
        esp42 = reinterpret_cast<uint32_t*>(esp41 - 1);
        *esp42 = eflags3 & 0xfcffff;
        *reinterpret_cast<signed char*>(&eax40) = 53;
        esp43 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp42) - 1);
        ecx24->f0 = ecx24->f0 - 0x4c32850a;
        __asm__("pushad ");
        ebx44 = 0xfff3f7bd;
        edx23 = *reinterpret_cast<void***>(eax40);
        ecx24 = reinterpret_cast<struct s550*>(reinterpret_cast<int32_t>(*esp43) - 1);
        if (!(reinterpret_cast<uint1_t>(!!ecx24) & 1)) 
            break;
        *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(eax40 + 1) - 2) = ds45;
        esp29 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp43 + 1) | esi14->f119433251);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx24) + 0x20226f3b) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx24) + 0x20226f3b) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx44) + 1))));
        pf46 = __intrinsic();
        edi12->f0 = *reinterpret_cast<struct s546**>(&esi14->f0);
        edi12 = reinterpret_cast<struct s547*>(reinterpret_cast<uint32_t>(edi12) + 4);
        esi14 = reinterpret_cast<struct s546*>(reinterpret_cast<unsigned char>(esi14) + 4);
        do {
            ecx24 = reinterpret_cast<struct s550*>(reinterpret_cast<uint32_t>(ecx24) - 1);
            if (ecx24) 
                break;
        } while (pf46);
        goto addr_0x40a786_59;
    }
    __asm__("int1 ");
    __asm__("fild dword [ebp+0x3d]");
    addr_0x40a786_59:
    __asm__("lodsb ");
    addr_0x40a70a_42:
    *reinterpret_cast<unsigned char*>(&eax32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32) ^ 0xf2);
    ecx24 = reinterpret_cast<struct s550*>(reinterpret_cast<uint32_t>(edi12) + 0x20c63339);
    edi12->f0 = eax32;
    edi12 = reinterpret_cast<struct s547*>(reinterpret_cast<uint32_t>(edi12) + 4);
    esi14 = reinterpret_cast<struct s546*>(reinterpret_cast<unsigned char>(esi14) + 4);
    goto addr_0x40a715_49;
}

int32_t fun_fd7ee69c(int32_t a1, int16_t a2);

struct s552 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_40a5f4(int32_t ecx) {
    int1_t less2;
    int16_t cs3;
    int32_t eax4;
    uint1_t cf5;
    int32_t eax6;
    uint1_t zf7;
    struct s552* edi8;

    if (less2) {
        __asm__("fistp word [ebx+0x7891760b]");
        __asm__("out 0x62, eax");
    }
    __asm__("fistp dword [esi]");
    eax4 = fun_fd7ee69c(73, cs3);
    __asm__("outsd ");
    cf5 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax4) < 0x7e);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) - 0x7e);
    eax6 = eax4 + 1;
    zf7 = reinterpret_cast<uint1_t>(eax6 == 0);
    edi8->f1 = eax6;
    __asm__("aaa ");
    if (zf7) 
        goto addr_0x40a61e_7;
    addr_0x40a61e_7:
    if (cf5 | zf7) 
        goto 0x40a66e; else 
        goto "???";
}

void fun_40a633(int32_t ecx) {
    __asm__("fldenv [eax]");
    __asm__("ror dword [ebx+0x16a923e6], 0x42");
    __asm__("in al, 0x57");
    if (0) 
        goto 0x40a6c4;
    __asm__("in al, dx");
    __asm__("iretd ");
    __asm__("enter 0x1dda, 0xb6");
    __asm__("fadd dword [esi-0x6e]");
}

void fun_40a765() {
}

void fun_40a767() {
    __asm__("int 0xe7");
}

uint32_t gd15d3623;

void fun_40a78b(int32_t ecx) {
    void* ebp2;
    int32_t eax3;
    uint32_t eax4;

    __asm__("aaa ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp2) + 4 - 4) = 84;
    gd15d3623 = eax3 + ecx + reinterpret_cast<uint1_t>(eax4 < 0xd875d1ca) - 0x7cbef3b4;
}

void fun_40a7ad() {
    return;
}

void fun_40a7bf() {
}

void fun_40a7e5() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<signed char*>(ebx1 + 0x7a729955) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx2 + 0x7a729955) + 1);
}

int32_t gbd80402;

void fun_40a7ef(int32_t ecx) {
    int1_t zf2;
    int32_t eax3;

    __asm__("out 0x92, eax");
    if (!zf2) 
        goto 0x40a7a1;
    __asm__("fstp8 st3");
    __asm__("fdiv qword [esi]");
    eax3 = gbd80402;
    __asm__("das ");
    gbd80402 = eax3;
    __asm__("popad ");
}

signed char fun_6ccf250c(int32_t a1);

void fun_40a80f(int32_t ecx) {
    signed char* edi2;
    signed char* esi3;

    fun_6ccf250c(__return_address());
    *edi2 = *esi3;
}

int32_t gf8776a95;

void fun_40a81e(int32_t ecx) {
    int32_t eax2;
    int32_t* edi3;
    int32_t* esi4;

    __asm__("cli ");
    gf8776a95 = eax2;
    *edi3 = *esi4;
    if (1) {
    }
}

int32_t gadcdad7a;

struct s553 {
    signed char[43] pad43;
    signed char f43;
};

struct s554 {
    signed char[43] pad43;
    signed char f43;
};

void fun_40a82f() {
    int32_t eax1;
    uint16_t ax2;
    int32_t edi3;
    int32_t edi4;
    int32_t esi5;
    int32_t ebp6;
    int32_t eax7;
    struct s553* esi8;
    struct s554* esi9;

    *reinterpret_cast<uint16_t*>(&eax1) = reinterpret_cast<uint16_t>(ax2 & 0xeb26);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<uint16_t*>(&eax1) == 0))) {
        *reinterpret_cast<uint32_t*>(eax1 + edi3 * 2 - 74) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(eax1 + edi4 * 2 - 74) + 0x4aeed13b);
        *reinterpret_cast<int32_t*>(esi5 + eax1 * 4 + 0x3b568e) = ebp6;
        __asm__("sahf ");
    } else {
        __asm__("rcr byte [ebp+0x475ecc2b], 1");
        eax7 = gadcdad7a;
        __asm__("lds esi, [ebx]");
        esi8->f43 = reinterpret_cast<signed char>(esi9->f43 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1));
        __asm__("ficom dword [eax+0x7ea8e98f]");
    }
}

void fun_40a898() {
    __asm__("rol dword [ebx-0x58], 1");
}

uint32_t g29c583f1;

signed char g8079493d;

uint32_t ge2a43ba8;

void fun_40a8b8(signed char* ecx) {
    uint32_t eflags2;
    int1_t cf3;
    uint1_t cf4;
    uint32_t edx5;
    uint1_t cf6;
    uint32_t eax7;
    int32_t edi8;
    int32_t edi9;
    int32_t edi10;
    uint32_t eax11;
    uint32_t* esp12;
    int32_t edx13;
    signed char* esi14;
    signed char* esi15;
    signed char bl16;
    uint32_t eax17;
    uint32_t* esp18;
    signed char bh19;
    void** esp20;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    if (!cf3) {
        goto addr_0x40a8b0_3;
    }
    cf4 = reinterpret_cast<uint1_t>(edx5 < *reinterpret_cast<int32_t*>(ecx - 0x6f) + cf6);
    __asm__("lodsb ");
    eax7 = g29c583f1;
    edi8 = edi9 + 1;
    if (!reinterpret_cast<uint1_t>(cf4 | reinterpret_cast<uint1_t>(edi8 == 0))) {
        addr_0x40a8b4_5:
    } else {
        if (__intrinsic()) {
            addr_0x40a8b0_3:
            __asm__("lds eax, [eax-0x56]");
            goto addr_0x40a8b4_5;
        } else {
            edi10 = edi8 - 1;
            eax11 = eax7 | 0x2f1a7300;
            if (!__intrinsic()) 
                goto 0x40a894;
            esp12 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 - 4);
            *esp12 = edx13 - (*reinterpret_cast<int32_t*>(ecx - 0x6f) + cf4);
            __asm__("retf ");
            *reinterpret_cast<signed char*>(&eax11) = g8079493d;
            ge2a43ba8 = eax11;
            *esi14 = reinterpret_cast<signed char>(*esi15 - bl16);
            eax17 = 0x104da282;
            *reinterpret_cast<int1_t*>(&eflags2) = 0;
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags2) = 0;
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
            *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
            esp18 = esp12 - 1;
            *esp18 = eflags2 & 0xfcffff;
            *reinterpret_cast<signed char*>(edi10 - 5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi10 - 5) - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax17) + 1));
            *ecx = bh19;
            __asm__("xlatb ");
            esp20 = reinterpret_cast<void**>(esp18 - 1);
            *reinterpret_cast<void***>(esp20) = esp20;
            if (!__intrinsic()) 
                goto addr_0x40a8fb_9;
        }
    }
    __asm__("out 0x41, eax");
    __asm__("out dx, al");
    goto *reinterpret_cast<void***>(esp20);
    addr_0x40a8fb_9:
    __asm__("wait ");
    __asm__("pushad ");
    __asm__("xlatb ");
    __asm__("das ");
    __asm__("fmul qword [ebp+0x576dc48c]");
}

void fun_40a91c() {
}

struct s555 {
    void* f0;
    signed char[3] pad4;
    struct s555* f4;
    signed char[68] pad74;
    uint32_t f74;
    signed char[14] pad92;
    uint32_t f92;
    signed char[579177012] pad579177108;
    unsigned char f579177108;
    signed char[928453983] pad970760180;
    unsigned char f970760180;
    signed char[1259082344] pad1156100701;
    int32_t f1156100701;
    signed char[1099887036] pad1182245917;
    signed char f1182245917;
    signed char[1839403305] pad1947907399;
    int32_t f1947907399;
};

struct s556 {
    signed char[18] pad18;
    int32_t f18;
};

struct s557 {
    signed char[123] pad123;
    signed char f123;
};

struct s558 {
    int16_t f0;
    struct s555* f2;
};

struct s559 {
    signed char[1] pad1;
    void* f1;
};

struct s560 {
    struct s555* f0;
    signed char[2] pad4;
    struct s555* f4;
};

struct s555* g73dd5021;

struct s561 {
    struct s555* f0;
    signed char[2] pad4;
    struct s555* f4;
};

void* fun_87f9681c();

uint32_t g654580e1;

signed char g7bc65fac;

void fun_40a995(unsigned char cl) {
    uint1_t df2;
    struct s555* ebx3;
    void* ebx4;
    uint32_t eax5;
    int32_t ebp6;
    struct s556* ebp7;
    uint1_t cf8;
    int32_t esi9;
    struct s557* eax10;
    struct s558* esp11;
    uint32_t edi12;
    int16_t ss13;
    unsigned char dh14;
    unsigned char* edi15;
    struct s555* edi16;
    struct s559* edi17;
    void* ecx18;
    void* ecx19;
    int1_t sf20;
    struct s555* ecx21;
    struct s555* eax22;
    uint1_t cf23;
    struct s560* esp24;
    struct s555* ebp25;
    struct s555* eax26;
    struct s555** esp27;
    struct s555* esi28;
    uint32_t ebx29;
    uint1_t cf30;
    uint1_t below_or_equal31;
    struct s561* esp32;
    void* eax33;
    int1_t pf34;
    struct s561* esp35;
    unsigned char* edx36;
    struct s555* tmp32_37;
    struct s555* eax38;
    uint16_t fs39;
    unsigned char tmp8_40;
    struct s555** esp41;
    uint1_t cf42;
    unsigned char* eax43;
    struct s561* esp44;
    void* tmp32_45;
    void* ecx46;
    int1_t zf47;
    struct s561* esp48;
    uint1_t zf49;
    struct s561* esp50;
    int16_t* esp51;
    int16_t cs52;
    struct s555* esp53;
    struct s555* es54;

    df2 = 0;
    ebx3 = reinterpret_cast<struct s555*>(reinterpret_cast<int32_t>(ebx4) - 1);
    eax5 = ebp6 + ebp7->f18 + cf8;
    esi9 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(ebx3) + 0x741ab547) * 62;
    eax10->f123 = 96;
    *reinterpret_cast<int32_t*>(esi9 - 0x2c30aec) = *reinterpret_cast<int32_t*>(esi9 - 0x2c30aec) << cl;
    __asm__("ror bh, cl");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax10) - 0x6546d0b8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax10) - 0x6546d0b8) + *reinterpret_cast<unsigned char*>(&eax5));
    *reinterpret_cast<void**>(ebx3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx3)) << 1);
    esp11 = reinterpret_cast<struct s558*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__return_address()) + 4) & edi12) - 2);
    esp11->f0 = ss13;
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) | dh14);
    *edi15 = *reinterpret_cast<unsigned char*>(&eax5);
    edi16 = reinterpret_cast<struct s555*>(&edi17->f1);
    __asm__("fisubr dword [ebx+0xd9f1d1f]");
    *reinterpret_cast<signed char*>(&ecx18) = -24;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax10) - 0x52ef4412) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax10) - 0x52ef4412) + eax5;
    ecx19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx18) - *reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(ebx3) + 0x44e8b25d));
    sf20 = reinterpret_cast<int32_t>(ecx19) < 0;
    do {
        *reinterpret_cast<unsigned char*>(&eax5) = 0xd8;
    } while (sf20);
    ecx21 = reinterpret_cast<struct s555*>(reinterpret_cast<int32_t>(ecx19) - 1);
    if (ecx21) {
        *reinterpret_cast<struct s555**>(&(esp11 - 1)->f0) = ebx3;
        __asm__("stc ");
    }
    eax22 = reinterpret_cast<struct s555*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax5)));
    *reinterpret_cast<unsigned char*>(&eax22) = 99;
    cf23 = 0;
    esp24 = reinterpret_cast<struct s560*>(&esp11->f2);
    ebp25 = eax22;
    __asm__("enter 0x7c8b, 0xf8");
    eax26 = esp24->f0;
    esp27 = &esp24->f4;
    __asm__("fldcw word [edi+0x81401f26]");
    g73dd5021 = eax26;
    if (!1) {
        __asm__("in al, dx");
        __asm__("lodsd ");
        *reinterpret_cast<signed char*>(&eax26) = -57;
        esi28 = reinterpret_cast<struct s555*>(0xc78e812d);
        esp27 = reinterpret_cast<struct s555**>(reinterpret_cast<uint16_t>(ebp25) + 4);
        ebp25 = reinterpret_cast<struct s555*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebp25)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi16)));
        __asm__("a16 out dx, eax");
        __asm__("clc ");
        ebx29 = reinterpret_cast<uint16_t>(ebx3) + 1;
        __asm__("rol byte [0xfc93b898], cl");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(edi16) + 0xffffffee) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(edi16) + 0xffffffee) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx29) + 1));
        ecx21 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(ecx21) + reinterpret_cast<uint16_t>(ecx21));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax26) + 1) = 91;
        __asm__("outsd ");
        eax26 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(eax26) ^ 0x2e540d2a);
        cf30 = 0;
        below_or_equal31 = 0;
        if (0) 
            goto addr_0x40aa95_11;
        esp32 = reinterpret_cast<struct s561*>(esp27 - 2);
        esp32->f0 = reinterpret_cast<struct s555*>(0x40aa21);
        eax33 = fun_87f9681c();
        esp27 = &esp32->f4;
        eax26 = reinterpret_cast<struct s555*>(reinterpret_cast<int32_t>(eax33) + 0xbcdc0392);
        cf30 = __intrinsic();
        below_or_equal31 = reinterpret_cast<uint1_t>(cf30 | reinterpret_cast<uint1_t>(eax26 == 0));
        *reinterpret_cast<signed char*>(&ecx21) = -50;
        goto addr_0x40aa96_13;
    }
    while (cf30 = reinterpret_cast<uint1_t>(0x654580f8 < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi16)) + cf23), below_or_equal31 = reinterpret_cast<uint1_t>(0x654580f8 <= reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi16)) + cf30), pf34 = __intrinsic(), ecx21 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(ecx21) - 1), reinterpret_cast<uint1_t>(!!ecx21) & reinterpret_cast<uint1_t>(0x654580f8 - (reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi16)) + cf30) == static_cast<uint32_t>(cf30))) {
        __asm__("xlatb ");
        __asm__("xlatb ");
        eax26 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(eax26) + 0xc2e80223 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ebx3) < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(eax26) + 0x39dc9ff4)));
        esp35 = reinterpret_cast<struct s561*>(esp27 - 2);
        esp35->f0 = eax26;
        esp27 = reinterpret_cast<struct s555**>(reinterpret_cast<uint32_t>(esp35) - 4);
        *esp27 = ebx3;
        cf23 = reinterpret_cast<uint1_t>(g654580e1 < reinterpret_cast<uint16_t>(ebx3) + __intrinsic());
        g654580e1 = g654580e1 - (reinterpret_cast<uint16_t>(ebx3) + cf23);
    }
    df2 = 1;
    edx36 = reinterpret_cast<unsigned char*>(0x654580f8);
    if (!below_or_equal31) 
        goto addr_0x40aa59_18;
    while (esi28 = reinterpret_cast<struct s555*>(0x6797460b), !pf34) {
        while (1) {
            addr_0x40aa95_11:
            __asm__("iretd ");
            addr_0x40aa96_13:
            ebx3 = *esp27;
            esp27 = esp27 + 2;
            tmp32_37 = edi16;
            edi16 = eax26;
            eax38 = tmp32_37;
            if (!below_or_equal31) {
                edi16 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(edi16) + reinterpret_cast<uint32_t>(edx36));
                if (ecx21) 
                    goto addr_0x40aaf1_21;
                edx36 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx36) & *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebp25) + reinterpret_cast<uint16_t>(edi16) * 2 + 0x7e9abe8b));
                eax38 = reinterpret_cast<struct s555*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ecx21)) * 0xdc8093d4);
                esi28 = reinterpret_cast<struct s555*>(static_cast<uint32_t>(fs39));
                tmp8_40 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx21) + 1);
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx21) + 1) = *reinterpret_cast<unsigned char*>(&ebx3);
                *reinterpret_cast<unsigned char*>(&ebx3) = tmp8_40;
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1) = 0xff;
            } else {
                __asm__("lahf ");
                __asm__("outsd ");
                __asm__("lahf ");
                *reinterpret_cast<uint16_t*>(&edx36) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax38) % static_cast<int16_t>(*reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(esi28) + 0xffffffc5)));
                *reinterpret_cast<uint16_t*>(&eax38) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax38) / static_cast<int16_t>(*reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(esi28) + 0xffffffc5)));
                if (cf30) 
                    break;
            }
            eax26 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(eax38) | 0x485e5aa2);
            *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx36) + 1) = reinterpret_cast<void*>(96);
            edi16 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(edi16) + 1);
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx3) + 0xffffffcd) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx3) + 0xffffffcd) + reinterpret_cast<uint32_t>(esp27);
            cf30 = __intrinsic();
            below_or_equal31 = reinterpret_cast<uint1_t>(cf30 | reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx3) + 0xffffffcd) == 0));
            esp27 = esp27 - 2;
            *esp27 = reinterpret_cast<struct s555*>(0xe1);
        }
        eax26 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(eax38) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebp25) + 74));
        edx36 = __intrinsic();
        cf30 = __intrinsic();
        pf34 = __undefined();
        below_or_equal31 = reinterpret_cast<uint1_t>(cf30 | __undefined());
        g7bc65fac = *reinterpret_cast<signed char*>(&eax26);
        __asm__("popad ");
    }
    esp41 = esp27 - 2;
    *esp41 = ebx3;
    cf42 = reinterpret_cast<uint1_t>(reinterpret_cast<uint16_t>(eax26) < reinterpret_cast<uint16_t>(0xdd7a756c));
    eax43 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(eax26) - 0xdd7a756c);
    esi28 = edi16;
    if (reinterpret_cast<int32_t>(eax43) >= reinterpret_cast<int32_t>(0)) 
        goto addr_0x40ab1f_28; else 
        goto addr_0x40aabd_29;
    addr_0x40aaf1_21:
    eax43 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(eax38) | 0xcbf1d95d);
    __asm__("daa ");
    __asm__("out dx, al");
    esp44 = reinterpret_cast<struct s561*>(esp27 - 2);
    esp44->f0 = ecx21;
    __asm__("fldcw word [0xbc28e2a3]");
    esp41 = reinterpret_cast<struct s555**>(reinterpret_cast<uint32_t>(esp44) - 4);
    *esp41 = ebp25;
    *reinterpret_cast<signed char*>(&ecx21) = *reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(ecx21) + 0x4677a41d);
    do {
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx3) + 92) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebx3) + 92) + reinterpret_cast<uint16_t>(esi28);
        if (!__intrinsic()) 
            break;
        tmp32_45 = reinterpret_cast<void*>(4 - 8 * df2);
        *reinterpret_cast<void**>(edi16) = *reinterpret_cast<void**>(esi28);
        edi16 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(edi16) + reinterpret_cast<uint32_t>(tmp32_45));
        esi28 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(esi28) + reinterpret_cast<uint32_t>(tmp32_45));
        ebx3 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(ebx3) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<uint16_t>(esi28) + reinterpret_cast<uint16_t>(ebp25) * 4)));
        cf42 = 0;
        if (__intrinsic()) 
            goto addr_0x40ab4e_35;
        edi16 = reinterpret_cast<struct s555*>(0xb637195);
        addr_0x40ab1f_28:
        *edx36 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*edx36 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax43) + 1)) + cf42);
        __asm__("pushad ");
        *reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(esi28) + 0xffffffe1) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(esi28) + 0xffffffe1) - 88;
        ecx46 = reinterpret_cast<void*>(reinterpret_cast<uint16_t>(ecx21) - 1);
        if (reinterpret_cast<uint1_t>(!!ecx46) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(esi28) + 0xffffffe1))) 
            goto addr_0x40ab89_37;
        __asm__("wait ");
        ebx3 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(ebx3) - reinterpret_cast<uint16_t>(esi28));
        *eax43 = reinterpret_cast<unsigned char>(*eax43 | 96);
        zf47 = *eax43 == 0;
        ecx21 = reinterpret_cast<struct s555*>(reinterpret_cast<uint32_t>(ecx46) - 1);
        if (reinterpret_cast<uint1_t>(!!ecx21) & reinterpret_cast<uint1_t>(!zf47)) 
            goto addr_0x40ab45_39;
        if (!ecx21) 
            goto addr_0x40ab36_41;
        addr_0x40aabd_29:
        edi16 = reinterpret_cast<struct s555*>(0x9fc7005);
        *reinterpret_cast<signed char*>(&eax43) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax43) + 66);
    } while (__intrinsic());
    goto addr_0x40aac7_43;
    addr_0x40aad0_44:
    addr_0x40ab4e_35:
    __asm__("lodsb ");
    __asm__("bts eax, ebp");
    __asm__("sahf ");
    __asm__("lahf ");
    __asm__("pushad ");
    esi28 = reinterpret_cast<struct s555*>(0x9ad44a08);
    if (!__intrinsic()) {
        addr_0x40ab39_45:
        esp48 = reinterpret_cast<struct s561*>(esp41 - 2);
        esp48->f0 = esi28;
        __asm__("pushad ");
        *reinterpret_cast<struct s555**>(reinterpret_cast<uint32_t>(esp48) - 4) = ebx3;
        __asm__("wait ");
    } else {
        ebp25 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(ebp25) - 1);
        __asm__("iretd ");
        ecx46 = reinterpret_cast<void*>(0x7a2b463a);
        do {
            addr_0x40ab89_37:
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx46) + 0xffffffe2) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx46) + 0xffffffe2) >> *reinterpret_cast<signed char*>(&ecx46);
            zf49 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx46) + 0xffffffe2) == 0);
            esp50 = reinterpret_cast<struct s561*>(esp41 - 2);
            esp50->f0 = reinterpret_cast<struct s555*>(24);
            ecx46 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx46) - 1);
            if (reinterpret_cast<uint1_t>(!!ecx46) & zf49) 
                break;
            __asm__("lodsd ");
            esp51 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp50) - 2);
            *esp51 = cs52;
            esp41 = reinterpret_cast<struct s555**>(esp51 - 2);
            *esp41 = edi16;
        } while (ecx46);
        goto addr_0x40ab95_49;
    }
    addr_0x40ab37_50:
    esp53 = ebp25;
    esp41 = reinterpret_cast<struct s555**>(reinterpret_cast<uint16_t>(esp53) + 4);
    goto addr_0x40ab39_45;
    addr_0x40ab95_49:
    __asm__("sti ");
    __asm__("les edx, [ecx+0x30]");
    *(esp41 - 2) = ebx3;
    __asm__("cmc ");
    addr_0x40ab45_39:
    --esp41;
    *esp41 = es54;
    ecx21 = reinterpret_cast<struct s555*>(reinterpret_cast<uint16_t>(ecx21) - 1);
    if (!(reinterpret_cast<uint1_t>(!!ecx21) & reinterpret_cast<uint1_t>(!zf47))) {
    }
    addr_0x40ab36_41:
    *reinterpret_cast<void**>(edi16) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi16)) + 96)));
    goto addr_0x40ab37_50;
    addr_0x40aac7_43:
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebp25) + 0xffffff9c) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(ebp25) + 0xffffff9c) - reinterpret_cast<uint32_t>(edx36);
    __asm__("aad 0x20");
    goto addr_0x40aad0_44;
    addr_0x40aa59_18:
}

void fun_40aa5d() {
    __asm__("xlatb ");
}

void fun_40aa63() {
    __asm__("pmovmskb ebp, mm7");
    __asm__("fild word [edx+0x3a9ac386]");
}

void fun_40aad6(signed char cl) {
    int32_t ebp2;

    *reinterpret_cast<signed char*>(ebp2 - 0xd55f99b) = cl;
}

int32_t gb789051f;

void fun_40aade() {
    int32_t edi1;

    edi1(__return_address());
    if (!__intrinsic()) 
        goto 0x40aaa4;
    __asm__("cdq ");
    gb789051f = gb789051f + 65;
}

void fun_40ab42(int32_t ecx) {
    int1_t zf2;

    __asm__("sti ");
    if (!(reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!zf2))) 
        goto "???";
    __asm__("insb ");
}

void fun_40ab49() {
    __asm__("fsub dword [esi]");
}

void fun_40aba3() {
    int32_t* edi1;
    int32_t* esi2;

    *edi1 = *esi2;
    __asm__("retf 0xfc12");
}

void fun_40abab() {
    __asm__("aam 0xc4");
}

void fun_40abb9() {
    int32_t edi1;
    int32_t edi2;

    *reinterpret_cast<signed char*>(edi1 - 73) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi2 - 73) - 1);
}

signed char g9196d3da;

void fun_40abe1() {
    int32_t ebp1;
    int32_t ebp2;
    int32_t ebx3;
    uint1_t cf4;

    __asm__("aas ");
    *reinterpret_cast<uint32_t*>(ebp1 + 0x31834106) = *reinterpret_cast<int32_t*>(ebp2 + 0x31834106) + ebx3 + cf4;
    __asm__("in eax, 0xe6");
    g9196d3da = reinterpret_cast<signed char>(g9196d3da + 0x70);
}

void fun_40abfb() {
    __asm__("hlt ");
}

void fun_40ac10() {
}

struct s562 {
    signed char[95] pad95;
    signed char f95;
};

struct s563 {
    int32_t f0;
    int32_t f4;
};

struct s564 {
    signed char[4] pad4;
    int32_t f4;
};

struct s565 {
    signed char[31] pad31;
    signed char f31;
};

struct s566 {
    signed char[1] pad1;
    int32_t f1;
    signed char[1294139247] pad1294139252;
    uint32_t f1294139252;
};

int32_t gf777dc9a;

unsigned char gabc964a8;

int32_t g250189b6;

void fun_40ac13(struct s562* ecx) {
    int1_t less2;
    int32_t eax3;
    int32_t* edi4;
    int32_t eax5;
    struct s563* edi6;
    struct s564* edi7;
    struct s565* edx8;
    void* edx9;
    signed char al10;
    void* esp11;
    int32_t eax12;
    struct s566* esi13;
    unsigned char* eax14;
    uint32_t ebx15;
    uint32_t ebx16;
    uint32_t ebp17;
    unsigned char tmp8_18;
    uint1_t cf19;
    int16_t bp20;
    int16_t bp21;
    int16_t bp22;
    int32_t* esi23;
    signed char tmp8_24;
    int32_t ebp25;
    int32_t ebp26;
    int32_t eax27;
    uint1_t cf28;
    unsigned char* v29;
    unsigned char* ss30;
    uint1_t cf31;
    unsigned char tmp8_32;
    unsigned char tmp8_33;

    if (!less2) {
        do {
            eax3 = eax3 + 0x4920c119;
            __asm__("int 0x32");
            __asm__("iretd ");
            if (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(eax3 == 0))) 
                goto 0x40abbc;
        } while (!__intrinsic());
    }
    *edi4 = eax5;
    edi6 = reinterpret_cast<struct s563*>(&edi7->f4);
    edx8 = reinterpret_cast<struct s565*>(reinterpret_cast<int32_t>(edx9) + 1);
    __asm__("rol dword [ebx], cl");
    ecx->f95 = reinterpret_cast<signed char>(ecx->f95 - al10);
    esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4);
    edi6->f0 = eax12;
    esi13 = reinterpret_cast<struct s566*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    *reinterpret_cast<unsigned char*>(&eax14) = 0xfe;
    ebx15 = ebx16 ^ ebp17;
    __asm__("ficomp dword [eax]");
    if (!0) 
        goto addr_0x40ac2a_14;
    addr_0x40ac68_15:
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1) ^ *eax14);
    ecx = *reinterpret_cast<struct s562**>(ebx15 - 95);
    esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp11) - 4);
    *reinterpret_cast<int32_t*>(eax14 - 82) = *reinterpret_cast<int32_t*>(eax14 - 82) - reinterpret_cast<int32_t>(esp11);
    __asm__("clc ");
    __asm__("cmc ");
    __asm__("fstp qword [edx+edx*8+0xedad66dd]");
    tmp8_18 = *reinterpret_cast<unsigned char*>(eax14 - 47);
    *reinterpret_cast<unsigned char*>(eax14 - 47) = *reinterpret_cast<unsigned char*>(&eax14);
    *reinterpret_cast<unsigned char*>(&eax14) = tmp8_18;
    cf19 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(bp20 + *reinterpret_cast<int16_t*>(&esi13)) - 0x200e) < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx8) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(bp21 + *reinterpret_cast<int16_t*>(&esi13)) - 0x200e) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int16_t>(bp22 + *reinterpret_cast<int16_t*>(&esi13)) - 0x200e) - *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx8) + 1));
    ++eax14;
    *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax14) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx15 + 0x1bba5bb8) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax14) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx15 + 0x1bba5bb8) + cf19))));
    goto addr_0x40ac87_17;
    addr_0x40ac2a_14:
    esi23 = &esi13->f1;
    __asm__("bswap edi");
    if (__intrinsic()) {
        addr_0x40ac87_17:
        __asm__("insd ");
        __asm__("out 0x1e, eax");
        tmp8_24 = *reinterpret_cast<signed char*>(ebp25 + reinterpret_cast<int16_t>(eax14) * 4 + 0x6ab161bc);
        *reinterpret_cast<signed char*>(ebp26 + reinterpret_cast<int16_t>(eax14) * 4 + 0x6ab161bc) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) = tmp8_24;
        eax27 = reinterpret_cast<int32_t>(eax14 - 0x2030ba1);
        __asm__("ror dword [esi+0x2d12369b], 0x20");
        cf28 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax27) < reinterpret_cast<unsigned char>(edx8->f31 + __intrinsic()));
        *reinterpret_cast<unsigned char*>(&eax27) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax27) - reinterpret_cast<unsigned char>(edx8->f31 + cf28));
        if (reinterpret_cast<uint1_t>(!!(reinterpret_cast<int32_t>(ecx) - 1)) & reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax27) != static_cast<uint32_t>(cf28))) {
            __asm__("fsubr dword [ecx+ebp*4+0x75]");
            __asm__("iretd ");
            __asm__("outsb ");
        } else {
            gf777dc9a = eax27;
        }
    } else {
        gabc964a8 = reinterpret_cast<unsigned char>(gabc964a8 | *reinterpret_cast<unsigned char*>(&ebx15));
        v29 = ss30;
        edi6->f4 = *esi23;
        esi13 = reinterpret_cast<struct s566*>(esi23 + 1);
        cf31 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi13) + 0x4d22ff74) < 12);
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi13) + 0x4d22ff74) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi13) + 0x4d22ff74) - 12;
        __asm__("in eax, dx");
        eax14 = v29;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx8) + 1) = 0xa0;
        tmp8_32 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi13) - 0x6df2fc94);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi13) - 0x6df2fc94) = *reinterpret_cast<unsigned char*>(&ebx15);
        *reinterpret_cast<unsigned char*>(&ebx15) = tmp8_32;
        edx8 = reinterpret_cast<struct s565*>(reinterpret_cast<uint32_t>(edx8) + g250189b6 + cf31);
        esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp11) - 2 + 4 - 4);
        tmp8_33 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi13) - 0x5c35d890);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi13) - 0x5c35d890) = *reinterpret_cast<unsigned char*>(&eax14);
        *reinterpret_cast<unsigned char*>(&eax14) = tmp8_33;
        __asm__("psrlw mm5, [edx+0x5a]");
        goto addr_0x40ac68_15;
    }
}

void fun_40acc9(signed char cl) {
    int32_t eax2;
    int32_t eax3;
    uint1_t cf4;
    uint1_t less_or_equal5;
    int32_t eax6;
    int32_t eax7;

    *reinterpret_cast<uint32_t*>(eax2 - 0x43e8fd85) = *reinterpret_cast<int32_t*>(eax3 - 0x43e8fd85) + reinterpret_cast<int32_t>(__zero_stack_offset()) + cf4;
    less_or_equal5 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(eax6 - 0x43e8fd85) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(eax7 - 0x43e8fd85) == 0));
    __asm__("ror dword [edi-0x11], 0x49");
    if (less_or_equal5) 
        goto "???";
    __asm__("popad ");
}

void fun_40ace0(int32_t ecx) {
    uint32_t* ebx2;
    uint16_t ds3;

    __asm__("ds lodsd ");
    ebx2[ecx * 2] = static_cast<uint32_t>(ds3);
}

void fun_40ace9(int32_t ecx) {
}

void fun_40acee() {
    unsigned char al1;

    if (!(al1 ^ 0x70)) 
        goto 0x40ad36;
    if (__intrinsic()) 
        goto 0x40acda;
    __asm__("wait ");
    goto 80;
}

void fun_40ad46() {
    __asm__("into ");
}

struct s567 {
    signed char[114] pad114;
    signed char f114;
};

int32_t fun_8e6a8d84(int32_t a1);

void fun_40ad4b(int16_t cx) {
    struct s567* eax2;
    void* eax3;
    int32_t ecx4;
    unsigned char* ebx5;
    unsigned char* ebx6;
    int32_t ebx7;
    uint16_t cs8;
    int32_t esi9;
    uint32_t edi10;
    int32_t edi11;

    eax2 = reinterpret_cast<struct s567*>(reinterpret_cast<int32_t>(eax3) + 1);
    ecx4 = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) ^ 0x79);
    __asm__("lodsd ");
    *ebx5 = reinterpret_cast<unsigned char>(*ebx6 | *reinterpret_cast<unsigned char*>(&ecx4));
    if (ecx4 - 1) {
        *reinterpret_cast<uint32_t*>(ebx7 - 0x66) = static_cast<uint32_t>(cs8);
    } else {
        fun_8e6a8d84(esi9 - 1 + 1);
        edi10 = reinterpret_cast<uint32_t>(edi11 + 1);
        eax2->f114 = 0;
        *reinterpret_cast<uint32_t*>(edi10 - 0x2149f8ce) = *reinterpret_cast<uint32_t*>(edi10 - 0x2149f8ce) | edi10;
        __asm__("outsd ");
    }
}

struct s568 {
    unsigned char f0;
    unsigned char f1;
};

struct s569 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s570 {
    unsigned char f0;
    unsigned char f1;
};

struct s571 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s572 {
    signed char[25] pad25;
    signed char f25;
};

struct s573 {
    signed char[25] pad25;
    signed char f25;
};

struct s574 {
    unsigned char f0;
    signed char[3] pad4;
    unsigned char f4;
};

struct s575 {
    unsigned char f0;
    signed char[3] pad4;
    unsigned char f4;
};

int32_t gb0f1b3ca;

void fun_40ad86() {
    int32_t* esp1;
    struct s568* edi2;
    struct s569* edi3;
    struct s570* esi4;
    struct s571* esi5;
    struct s572* edx6;
    struct s573* edx7;
    signed char bh8;
    uint32_t eax9;
    int32_t eax10;
    int32_t* eax11;
    uint32_t eax12;
    uint32_t* eax13;
    uint1_t zf14;
    int32_t ecx15;
    int32_t ebx16;
    struct s574* edi17;
    struct s575* esi18;
    int32_t edx19;
    int32_t eax20;
    uint16_t cs21;

    esp1 = reinterpret_cast<int32_t*>(0xc0d30a6c);
    edi2 = reinterpret_cast<struct s568*>(&edi3->f4);
    esi4 = reinterpret_cast<struct s570*>(&esi5->f4);
    edi2->f0 = reinterpret_cast<unsigned char>(edi2->f0 | 36);
    __asm__("les ebp, [edx]");
    __asm__("fidiv dword [eax]");
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(edi2->f0 == 0))) {
        edx6->f25 = reinterpret_cast<signed char>(edx7->f25 + bh8);
        __asm__("pushad ");
    }
    eax9 = eax10 - (*eax11 + reinterpret_cast<uint1_t>(eax12 < *eax13));
    *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) ^ 0x73);
    zf14 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax9) == 0);
    do {
        if (!(reinterpret_cast<uint1_t>(!!(ecx15 - 1)) & zf14)) 
            break;
        ecx15 = ebx16 + 0x4e0460db;
        __asm__("rol dword [eax-0x7a], cl");
        __asm__("int 0x67");
        edi2->f0 = esi4->f0;
        edi17 = reinterpret_cast<struct s574*>(&edi2->f1);
        esi18 = reinterpret_cast<struct s575*>(&esi4->f1);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx19) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx19) + 1) ^ esi18->f0);
        if (0) 
            goto addr_0x40ae29_12;
        ++edx19;
        zf14 = reinterpret_cast<uint1_t>(edx19 == 0);
        edi17->f0 = esi18->f0;
        edi2 = reinterpret_cast<struct s568*>(&edi17->f4);
        esi4 = reinterpret_cast<struct s570*>(&esi18->f4);
        ebx16 = *esp1;
        ++esp1;
    } while (!zf14);
    goto addr_0x40add3_17;
    addr_0x40ae29_12:
    __asm__("in al, 0x6c");
    __asm__("out dx, al");
    __asm__("out dx, eax");
    addr_0x40add3_17:
    eax20 = gb0f1b3ca;
    do {
        *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax20) & 0x75);
    } while (!*reinterpret_cast<unsigned char*>(&eax20));
    goto *reinterpret_cast<int32_t*>(cs21 + 0x2d00396);
}

struct s576 {
    signed char[60] pad60;
    uint32_t f60;
};

struct s577 {
    signed char[60] pad60;
    int32_t f60;
};

void fun_40adb0() {
    struct s576* ebx1;
    struct s577* ebx2;
    int32_t esi3;

    ebx1->f60 = reinterpret_cast<uint32_t>(ebx2->f60 + esi3);
}

void fun_40adf8() {
}

struct s578 {
    signed char[42] pad42;
    unsigned char f42;
};

unsigned char g889bb600;

signed char gc5c68b1f;

uint32_t ge5e8d21;

void fun_40adfe() {
    uint32_t ebx1;
    uint32_t ebx2;
    uint32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    struct s578* ebp6;
    uint32_t eax7;

    __asm__("faddp st0, st0");
    ebx1 = ebx2 & *eax3;
    __asm__("daa ");
    __asm__("arpl si, bp");
    eax4 = eax5 - 1;
    ebp6->f42 = 0;
    if (1) {
        g889bb600 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax4) + 1);
        __asm__("wait ");
        eax7 = ebx1 | 0x3fa70d54;
        gc5c68b1f = reinterpret_cast<signed char>(gc5c68b1f + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1));
    } else {
        ge5e8d21 = ge5e8d21 ^ 0xc5c68b1f;
        if (0) 
            goto 0x40adb5;
        __asm__("fdiv st4, st0");
    }
}

void fun_40ae39() {
    __asm__("fistp dword [edi-0x18]");
    __asm__("hlt ");
}

void fun_40ae5c() {
    int32_t edx1;
    int32_t edx2;
    int32_t ebp3;
    uint1_t cf4;
    signed char dl5;
    signed char bh6;

    *reinterpret_cast<uint32_t*>(edx1 - 0x4fad7ee1) = *reinterpret_cast<int32_t*>(edx2 - 0x4fad7ee1) + ebp3 + cf4;
    if (dl5 == bh6) {
        __asm__("daa ");
    }
}

int32_t g29751938;

uint32_t fun_610e62a5();

void fun_40ae89() {
    uint40_t v1;
    int1_t less2;
    int32_t ebp3;
    int32_t edx4;
    uint32_t eax5;
    uint32_t eax6;
    int32_t* edi7;
    int32_t* esi8;

    *reinterpret_cast<int32_t*>(&v1) = reinterpret_cast<int32_t>(__return_address());
    g29751938 = ~g29751938;
    less2 = ebp3 + edx4 < 0 != __intrinsic();
    eax5 = fun_610e62a5();
    if (less2) {
        eax6 = eax5 ^ 0x2dfbe669;
        less2 = reinterpret_cast<signed char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax6) + 0x72))) < reinterpret_cast<signed char>(0) != __intrinsic();
    }
    if (!less2) {
    }
    *edi7 = *esi8;
    __asm__("les ebx, [ebx]");
    __asm__("out dx, al");
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 1);
}

void fun_40af01() {
    __asm__("rol edi, cl");
    __asm__("hlt ");
}

void fun_40af40(int32_t ecx) {
    int1_t zf2;
    int1_t cf3;
    int32_t ebx4;
    int32_t ebx5;
    int32_t* edi6;

    __asm__("in al, dx");
    __asm__("sahf ");
    if (!zf2) {
        if (cf3) {
        }
        *reinterpret_cast<signed char*>(&ebx4) = -32;
        ebx5 = ebx4 + 1;
        __asm__("fstp8 st0");
        if (!ecx) 
            goto addr_0x40afa1_7;
    }
    __asm__("outsb ");
    *edi6 = ebx5;
    goto 0x40aeb3;
    addr_0x40afa1_7:
    __asm__("enter 0xd3b0, 0xb");
    __asm__("fldenv [ebp+0x4f]");
    __asm__("out dx, al");
}

signed char gb5f40eac;

int32_t fun_40afb5() {
    unsigned char* edi1;
    signed char al2;
    uint1_t cf3;
    int32_t eax4;
    int32_t esi5;

    __asm__("arpl [eax+0x126d28e4], cx");
    *edi1 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al2 + 91) + cf3);
    eax4 = esi5 + 1;
    *reinterpret_cast<signed char*>(&eax4) = gb5f40eac;
    __asm__("xlatb ");
    __asm__("retf ");
    __asm__("fstp tword [eax]");
    return eax4;
}

struct s579 {
    signed char f0;
    signed char[120] pad121;
    int32_t f121;
};

struct s580 {
    signed char[4] pad4;
    signed char f4;
};

struct s581 {
    signed char[4] pad4;
    signed char f4;
};

unsigned char gd9e9e772;

void fun_40b054(signed char cl) {
    int32_t ecx1;
    int32_t* edi2;
    int32_t* esi3;
    struct s579* edi4;
    struct s580* edi5;
    signed char* esi6;
    struct s581* esi7;
    void* esp8;
    uint32_t eax9;
    int32_t eax10;
    int32_t ebp11;
    uint32_t edx12;
    int32_t* esp13;
    uint1_t cf14;
    uint32_t tmp32_15;

    *reinterpret_cast<signed char*>(&ecx1) = cl;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx1) + 1) = 0xa7;
    *edi2 = *esi3;
    edi4 = reinterpret_cast<struct s579*>(&edi5->f4);
    esi6 = &esi7->f4;
    esp8 = reinterpret_cast<void*>(0xe915535c);
    __asm__("popad ");
    *reinterpret_cast<unsigned char*>(&eax9) = 77;
    __asm__("rsqrtps xmm5, [ebx-0x62]");
    if (!1) {
        __asm__("fstp9 st7");
        __asm__("das ");
        __asm__("out dx, al");
        eax10 = ebp11 + 0x40e8f457;
        *reinterpret_cast<signed char*>(&eax10) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax10) + 17);
        __asm__("cli ");
        __asm__("lds eax, [edx+0x5a]");
        __asm__("insd ");
        esp8 = reinterpret_cast<void*>(0xe915535c - edi4->f121);
        __asm__("sti ");
        edi4->f0 = *esi6;
        esi6 = esi6 + 4 + 1;
        edi4 = *reinterpret_cast<struct s579**>(reinterpret_cast<int32_t>(edi4) + 4 + 1 + 0x337d358);
        eax9 = reinterpret_cast<uint32_t>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax10)));
    }
    edi4->f0 = *esi6;
    *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) & 44);
    edx12 = 0x9bf68e64;
    do {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax9) + 1) = 6;
        __asm__("fisttp dword [edi+0x630843c2]");
        esp13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp8) - 4);
        *esp13 = 59;
        esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) + 2);
        __asm__("enter 0xa5b2, 0xe7");
        *reinterpret_cast<unsigned char*>(ecx1 + 0x6b77c159) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx1 + 0x6b77c159) ^ 0xa7);
        __asm__("iretd ");
        cf14 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx12) + 1) < gd9e9e772);
        tmp32_15 = edx12;
        edx12 = eax9;
        __asm__("les ebp, [eax]");
        __asm__("fadd dword [ebp+0x6c]");
        eax9 = tmp32_15 + tmp32_15 + cf14;
    } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax9) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(eax9 == 0)));
}

void fun_40b0d2() {
    return;
}

struct s582 {
    signed char[4] pad4;
    signed char f4;
};

struct s583 {
    signed char[86] pad86;
    unsigned char f86;
};

uint48_t g18b38b98;

unsigned char g8eda44a0;

int32_t g4a5a2242;

unsigned char fun_4118da9c();

void fun_40b17e(int32_t ecx) {
    int1_t cf2;
    int32_t* esp3;
    uint32_t* eax4;
    signed char al5;
    uint32_t ecx6;
    int32_t* edi7;
    int32_t* esi8;
    signed char* edi9;
    struct s582* edi10;
    struct s583* esi11;
    void* esi12;
    unsigned char bh13;
    uint32_t eax14;
    uint32_t ebx15;
    int32_t ebp16;
    int32_t ebp17;
    unsigned char bh18;
    uint32_t eax19;
    int16_t* esp20;
    int16_t ds21;
    uint1_t zf22;
    int32_t ecx23;
    int32_t ecx24;
    uint1_t cf25;
    int1_t pf26;
    signed char* esi27;
    int1_t less_or_equal28;
    unsigned char al29;

    if (cf2) {
        __asm__("fist word [edx+0x71c6c519]");
        __asm__("ror eax, cl");
    }
    __asm__("fdiv dword [ecx]");
    __asm__("aam 0xe2");
    __asm__("fisttp qword [edi]");
    __asm__("fistp dword [eax+esi]");
    esp3 = reinterpret_cast<int32_t*>(0x18b38b97);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 - 16);
    ecx6 = reinterpret_cast<uint32_t>(ecx - 1);
    if (ecx6) {
        __asm__("iretd ");
        *edi7 = *esi8;
        edi9 = &edi10->f4;
        esi11 = reinterpret_cast<struct s583*>(reinterpret_cast<int32_t>(esi12) + 4);
        esi11->f86 = reinterpret_cast<unsigned char>(esi11->f86 | bh13);
        __asm__("insd ");
        __asm__("lodsd ");
        eax14 = *reinterpret_cast<uint32_t*>(&g18b38b98);
        *reinterpret_cast<uint32_t*>(&g18b38b98) = ebx15;
        esp3 = reinterpret_cast<int32_t*>(0x18b38b9a);
        __asm__("aad 0xba");
        *reinterpret_cast<signed char*>(&eax14) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax14) - 9);
        ebp16 = ebp17 + 1;
        __asm__("iretd ");
        __asm__("cmc ");
        if (!(bh18 & *reinterpret_cast<unsigned char*>(ebp16 - 58))) 
            goto addr_0x40b23b_10;
    } else {
        __asm__("wait ");
        ecx6 = ecx6 ^ *eax4;
        __asm__("sahf ");
        *reinterpret_cast<unsigned char*>(&eax19) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) & 0xff);
        __asm__("sahf ");
        g8eda44a0 = *reinterpret_cast<unsigned char*>(&eax19);
        if (*reinterpret_cast<unsigned char*>(&eax19)) {
            goto addr_0x40b270_13;
        } else {
            addr_0x40b205_14:
            __asm__("clc ");
            esp20 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp3 + 1) - 2);
            *esp20 = ds21;
            if (0) 
                goto 0x40b1c5; else 
                goto addr_0x40b213_15;
        }
    }
    goto addr_0x40b205_14;
    addr_0x40b23b_10:
    __asm__("aam 0xf9");
    __asm__("out dx, al");
    eax19 = eax14 ^ 0x72496048;
    zf22 = reinterpret_cast<uint1_t>(eax19 == 0);
    __asm__("aam 0x57");
    ecx23 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&g18b38b98) + 2);
    *reinterpret_cast<unsigned char*>(&eax19) = 0xf1;
    ecx24 = ecx23 - 1;
    if (reinterpret_cast<uint1_t>(!!ecx24) & zf22) {
        ++eax19;
        --ecx24;
        if (ecx24) {
            cf25 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(*reinterpret_cast<signed char**>(ebp16 - 0x3cf003b7)) < reinterpret_cast<uint32_t>(edi9));
            *reinterpret_cast<signed char**>(ebp16 - 0x3cf003b7) = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(*reinterpret_cast<signed char**>(ebp16 - 0x3cf003b7)) - reinterpret_cast<uint32_t>(edi9));
            pf26 = __intrinsic();
        }
    } else {
        __asm__("arpl [esi+0x24], ax");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi11) + eax19 * 4 + 0x4281e9aa) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi11) + eax19 * 4 + 0x4281e9aa) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx24) + 1));
        esi27 = reinterpret_cast<signed char*>(ecx24 * 0x183d08ef);
        *reinterpret_cast<unsigned char*>(edi9 - 0x7e0d37f) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi9 - 0x7e0d37f) + *reinterpret_cast<unsigned char*>(&ecx24)) + __intrinsic());
        cf25 = __intrinsic();
        pf26 = __intrinsic();
        if (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(edi9 - 0x7e0d37f)) >= reinterpret_cast<signed char>(0)) 
            goto addr_0x40b269_23;
    }
    if (pf26) {
        *reinterpret_cast<unsigned char*>(ecx24 - 0x39de22b4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx24 - 0x39de22b4) + *reinterpret_cast<unsigned char*>(&eax19)) + cf25);
    } else {
        g4a5a2242 = 0xaddef4c7;
        __asm__("wait ");
        __asm__("cdq ");
    }
    addr_0x40b269_23:
    g4a5a2242 = ebp16 + 1;
    __asm__("cdq ");
    less_or_equal28 = *esi27 <= *edi9;
    *edi9 = *esi27;
    __asm__("outsb ");
    addr_0x40b270_13:
    addr_0x40b213_15:
    *reinterpret_cast<int32_t*>(esp20 - 2) = 0x40b21a;
    al29 = fun_4118da9c();
    if (!(reinterpret_cast<uint1_t>(!!(ecx6 - 1)) & reinterpret_cast<uint1_t>(!!(al29 ^ 69)))) {
    }
}

void fun_40b1d6() {
    __asm__("fnstenv [esi]");
}

void fun_40b221(int32_t ecx) {
    uint1_t zf2;

    if (!(reinterpret_cast<uint1_t>(!!(ecx - 1)) & zf2)) 
        goto "???";
}

void fun_40b278() {
    __asm__("salc ");
}

struct s584 {
    signed char[4] pad4;
    int32_t f4;
};

struct s585 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40b2dd(int32_t ecx) {
    int32_t ebx2;
    signed char ah3;
    int32_t eax4;
    signed char* ebx5;
    uint1_t cf6;
    unsigned char al7;
    int32_t* edi8;
    int32_t* esi9;
    int32_t* edi10;
    struct s584* edi11;
    int32_t* esi12;
    struct s585* esi13;
    uint32_t ebx14;
    signed char bh15;
    uint32_t ebx16;

    if (ecx - 1) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebx2 * 8 + 0x1cf3865d) = ah3;
    } else {
        __asm__("aas ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax4) + 1) = *ebx5;
        __asm__("pushad ");
        __asm__("outsd ");
        cf6 = 0;
        __asm__("outsb ");
        if (al7 & 94) {
            __asm__("wait ");
            *edi8 = *esi9;
            edi10 = &edi11->f4;
            esi12 = &esi13->f4;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi12 + eax4) - 0x48367f61) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi12 + eax4) - 0x48367f61) - 0x76);
            cf6 = __intrinsic();
            __asm__("lahf ");
        }
        if (cf6) {
            __asm__("aam 0x5f");
        } else {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx14) + 1) = reinterpret_cast<signed char>(bh15 << 1);
            ebx16 = ebx14 & *reinterpret_cast<uint32_t*>(ebx14 + 0x5b731e00);
            *edi10 = *esi12;
            *reinterpret_cast<int32_t*>(ebx16 - 0x7a26d78b) = ~*reinterpret_cast<int32_t*>(ebx16 - 0x7a26d78b);
            __asm__("aaa ");
            __asm__("daa ");
            __asm__("out 0x2, eax");
            __asm__("fadd qword [esi-0x54]");
            __asm__("fcomp qword [eax]");
        }
    }
}

void fun_40b347() {
}

struct s586 {
    signed char[5] pad5;
    uint32_t f5;
};

struct s587 {
    int32_t f0;
    unsigned char f4;
};

int32_t gaee1ad5d;

uint32_t ge68b3299;

void* g36011248;

int32_t g52174337;

struct s586* g11758299;

unsigned char gfaf3f238;

void fun_40b353(int32_t ecx, uint32_t a2, struct s586* a3) {
    struct s587* edi4;
    uint32_t edi5;
    uint32_t edx6;
    int32_t* esi7;
    unsigned char* edi8;
    void* esi9;
    void* esi10;
    uint32_t ecx11;
    struct s586* ebp12;
    uint1_t less_or_equal13;
    uint32_t eax14;
    signed char** esp15;
    signed char* edx16;
    void* eax17;
    unsigned char* esi18;
    uint32_t eax19;
    void* esp20;
    uint1_t below_or_equal21;
    unsigned char dh22;
    struct s586* eax23;
    uint16_t fs24;
    uint1_t zf25;
    int32_t* esp26;

    __asm__("rcl byte [eax+0x36a30400], cl");
    edi4 = reinterpret_cast<struct s587*>(edi5 & edx6);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi4) - 84) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi4) - 84) - 79);
    __asm__("iretd ");
    __asm__("aam 0xc2");
    __asm__("aam 0x5d");
    __asm__("int1 ");
    __asm__("fadd dword [0xe5f0a3fd]");
    edi4->f0 = *esi7;
    edi8 = &edi4->f4;
    esi9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi10) + 4);
    ecx11 = a2;
    ebp12 = a3;
    goto addr_0x40b403_10;
    addr_0x40b4b0_11:
    __asm__("fimul word [ecx+edi*2]");
    __asm__("popad ");
    __asm__("hlt ");
    while (1) {
        if (!less_or_equal13) {
            addr_0x40b403_10:
            __asm__("wait ");
            gaee1ad5d = 0x40b414;
            eax14 = reinterpret_cast<uint32_t>(ebp12());
            esp15 = reinterpret_cast<signed char**>(0xaee1ad61);
            __asm__("in al, 0x4a");
            edx16 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi9) - 0x16881ccf);
            __asm__("fist dword [esi+0x23]");
            eax17 = reinterpret_cast<void*>(eax14 | 0x51aea843);
            __asm__("rcr byte [eax], cl");
            esi18 = reinterpret_cast<unsigned char*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi9) - 62) * 6);
            less_or_equal13 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__undefined() != __intrinsic()) | __undefined());
            *edi8 = *esi18;
            ++edi8;
            esi9 = reinterpret_cast<void*>(esi18 + 1);
            --ecx11;
            if (reinterpret_cast<uint1_t>(!!ecx11) & __undefined()) 
                continue;
            *edx16 = reinterpret_cast<signed char>(*edx16 - *reinterpret_cast<signed char*>(&ecx11));
            ++edi8;
            esi9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi9) + 1);
            eax19 = ge68b3299;
            __asm__("aas ");
            __asm__("lodsb ");
            *reinterpret_cast<unsigned char*>(&edx16) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx16) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx16) + 1)) + reinterpret_cast<uint1_t>(*edi8 < *reinterpret_cast<unsigned char*>(&eax17)));
            __asm__("enter 0x7559, 0xcb");
            __asm__("clc ");
            eax17 = reinterpret_cast<void*>(eax19 & 0xd8b50807);
            g36011248 = eax17;
            esp20 = reinterpret_cast<void*>(0xaee1ad63);
            __asm__("enter 0x3a4a, 0x12");
            ebp12 = reinterpret_cast<struct s586*>(g52174337 * 32);
            less_or_equal13 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__undefined() != __intrinsic()) | __undefined());
            below_or_equal21 = reinterpret_cast<uint1_t>(__intrinsic() | __undefined());
        } else {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax17) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax17) + 1) - reinterpret_cast<unsigned char>(*(edx16 - 0x4f5bb325) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax17) + 1) < reinterpret_cast<unsigned char>(*(edx16 - 0x4f5bb325) + reinterpret_cast<uint1_t>(ecx11 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi8) + reinterpret_cast<uint32_t>(edi8) + 0x6e))))));
            __asm__("insd ");
            ecx11 = reinterpret_cast<uint32_t>(esp15) * 0x7f4cf186;
            __asm__("lodsb ");
            dh22 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx16) + 1) + *reinterpret_cast<signed char*>(ecx11 + 37));
            eax23 = reinterpret_cast<struct s586*>(reinterpret_cast<uint32_t>(eax17) + 0x57363008);
            do {
                g11758299 = eax23;
            } while (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax23)) >= reinterpret_cast<signed char>(18));
            ebp12 = reinterpret_cast<struct s586*>(reinterpret_cast<uint32_t>(ebp12) + 1);
            __asm__("sti ");
            __asm__("stc ");
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx16) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(dh22 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx11) + 1)) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax23) < 18));
            eax23->f5 = static_cast<uint32_t>(fs24);
            *reinterpret_cast<unsigned char*>(&eax23) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) | 84);
            esi9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi9) - 1);
            esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax23) - (reinterpret_cast<uint32_t>(ebp12) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax23) < reinterpret_cast<uint32_t>(&ebp12->pad5))));
            eax17 = reinterpret_cast<void*>(0xdf385fbe);
            __asm__("outsb ");
            __asm__("out dx, eax");
            __asm__("fdivr dword [eax+0xcd13bb5a]");
            gfaf3f238 = 0;
            zf25 = reinterpret_cast<uint1_t>(gfaf3f238 == 0);
            less_or_equal13 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | zf25);
            below_or_equal21 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf25));
            *reinterpret_cast<unsigned char*>(&eax17) = 0x70;
            if (!__intrinsic()) 
                goto addr_0x40b4b0_11;
        }
        esp26 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp20) - 4);
        *esp26 = 0xe0268ea;
        __asm__("sti ");
        esp15 = reinterpret_cast<signed char**>(esp26 - 1);
        *esp15 = edx16;
        if (below_or_equal21) 
            continue;
    }
}

struct s588 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40b382() {
    uint32_t eflags1;
    uint32_t eax2;
    unsigned char al3;
    uint32_t eax4;
    int1_t cf5;
    uint32_t* edi6;
    signed char* edi7;
    struct s588* edi8;
    uint32_t esi9;
    int32_t esi10;
    int32_t edx11;
    int32_t edx12;
    uint1_t less13;
    uint1_t less_or_equal14;
    uint32_t eax15;
    int32_t v16;
    unsigned char al17;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
    __asm__("xlatb ");
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 | 0x72);
    eax4 = eax2 ^ 0xc360552a;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax4) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax4) + 1) + 15);
    __asm__("lahf ");
    __asm__("out dx, eax");
    cf5 = *edi6 < eax4;
    edi7 = &edi8->f4;
    esi9 = esi10 + 4;
    edx11 = edx12 - 1;
    less13 = reinterpret_cast<uint1_t>(edx11 < 0 != __intrinsic());
    less_or_equal14 = reinterpret_cast<uint1_t>(less13 | reinterpret_cast<uint1_t>(edx11 == 0));
    __asm__("out 0xc1, al");
    __asm__("fxch7 st6");
    __asm__("aas ");
    __asm__("aas ");
    __asm__("clc ");
    __asm__("daa ");
    if (less13) 
        goto 0x40b403;
    __asm__("fcom qword [eax+0x24]");
    if (!cf5) 
        goto 0x40b400;
    while (1) {
        if (!less_or_equal14) 
            goto 0x40b3f6;
        __asm__("rol byte [ebx+0xe4052ded], 1");
        __asm__("cdq ");
        __asm__("in eax, dx");
        *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) | 0xc3);
        *reinterpret_cast<uint32_t*>(eax4 + 0x5bad61a) = *reinterpret_cast<uint32_t*>(eax4 + 0x5bad61a) & reinterpret_cast<uint32_t>(edi7);
        --esi9;
        less_or_equal14 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi9) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(esi9 == 0));
        if (!__intrinsic()) 
            break;
        __asm__("pushad ");
        if (!__intrinsic()) 
            goto addr_0x40b36f_9;
    }
    __asm__("insb ");
    eax15 = esi9;
    *edi7 = *reinterpret_cast<signed char*>(&eax15);
    __asm__("int1 ");
    __asm__("lodsb ");
    goto v16;
    addr_0x40b36f_9:
    *reinterpret_cast<uint1_t*>(&eflags1) = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax4) < 0xaa);
    al17 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) - reinterpret_cast<unsigned char>(86 - *reinterpret_cast<uint1_t*>(&eflags1)));
    *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags1) = al17 == static_cast<uint32_t>(*reinterpret_cast<uint1_t*>(&eflags1));
    *reinterpret_cast<int1_t*>(&eflags1) = reinterpret_cast<signed char>(al17) < reinterpret_cast<signed char>(static_cast<uint32_t>(*reinterpret_cast<uint1_t*>(&eflags1)));
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
    if (!*reinterpret_cast<int1_t*>(&eflags1)) 
        goto 0x40b360;
    goto eflags1 & 0xfcffff;
}

void fun_40b50d() {
}

unsigned char g9fbfe46f;

struct s589 {
    signed char[73] pad73;
    int32_t f73;
};

struct s590 {
    signed char[73] pad73;
    int32_t f73;
};

unsigned char ga5c9f972;

unsigned char ge735cf51;

uint32_t fun_cc1b6e09();

signed char g4d12211f;

void fun_40b512() {
    uint48_t v1;
    uint1_t df2;
    void* edi3;
    void* edi4;
    void* es5;
    void* ecx6;
    signed char* ecx7;
    unsigned char* esi8;
    uint1_t cf9;
    unsigned char al10;
    unsigned char* eax11;
    signed char al12;
    int1_t less13;
    int32_t edx14;
    uint1_t cf15;
    int32_t edx16;
    unsigned char* edi17;
    int32_t edx18;
    unsigned char* ebx19;
    unsigned char* eax20;
    unsigned char* ebx21;
    unsigned char* esp22;
    uint1_t cf23;
    unsigned char* esp24;
    unsigned char ds25;
    struct s589* edx26;
    struct s590* edx27;
    unsigned char* tmp32_28;
    uint32_t eax29;
    int32_t eax30;
    int32_t edx31;
    int32_t edx32;
    uint32_t eax33;
    void** ebx34;
    uint32_t edx35;
    void** esp36;
    unsigned char* edi37;
    uint1_t cf38;
    int16_t* esp39;
    int16_t ss40;
    int32_t* esp41;
    void* esp42;
    void* tmp32_43;
    int32_t* esp44;
    uint32_t eax45;
    void** eax46;
    signed char** esp47;
    signed char** eax48;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2) = reinterpret_cast<int32_t>(__return_address());
    df2 = 0;
    edi3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi4) - 1);
    *reinterpret_cast<void**>(&v1) = es5;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx6) + 1) = -21;
    ecx7 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx6) - 1);
    if (ecx7) {
        esi8 = reinterpret_cast<unsigned char*>(0xa5c9f972);
        cf9 = reinterpret_cast<uint1_t>(al10 < 0xeb);
        *reinterpret_cast<signed char*>(&eax11) = reinterpret_cast<signed char>(al12 + 21);
        __asm__("wait ");
        __asm__("iretd ");
        less13 = reinterpret_cast<int32_t>(edi3) < reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(edx14 + 0x213ba830) + cf9);
        cf15 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edi3) < *reinterpret_cast<int32_t*>(edx16 + 0x213ba830) + cf9);
        edi17 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi3) - (*reinterpret_cast<int32_t*>(edx18 + 0x213ba830) + cf15));
        ebx19 = eax11;
        eax20 = ebx21;
        __asm__("arpl sp, bp");
        esp22 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2 - 4 - 2 - 4);
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx19) + 1) = 57;
            do {
                if (less13) 
                    goto addr_0x40b5f3_5;
                *reinterpret_cast<unsigned char*>(&eax20) = g9fbfe46f;
                __asm__("out dx, al");
            } while (ecx7);
            cf23 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax20) < reinterpret_cast<unsigned char>(99 - cf15));
            *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax20) - reinterpret_cast<unsigned char>(99 - cf23));
            if (*reinterpret_cast<unsigned char*>(&eax20) == static_cast<uint32_t>(cf23)) 
                goto addr_0x4475d5d6_8;
            esp24 = esp22 - 2;
            *esp24 = ds25;
            edx26->f73 = edx27->f73 << 1;
            cf15 = __intrinsic();
            less13 = __undefined() != __intrinsic();
            df2 = 0;
            tmp32_28 = ebx19;
            ebx19 = eax20;
            __asm__("enter 0x75a5, 0x1b");
            __asm__("fistp dword [ebx]");
            esp22 = tmp32_28;
            eax20 = esp24;
        } while (!less13);
        goto addr_0x40b593_10;
    } else {
        eax29 = reinterpret_cast<uint32_t>(eax30 + 0x175f51ec);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax29) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax29) + 1) - reinterpret_cast<unsigned char>(*(ecx7 + edx31 * 4 - 83) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax29) + 1) < reinterpret_cast<unsigned char>(*(ecx7 + edx32 * 4 - 83) + reinterpret_cast<uint1_t>(eax33 < 0xe8a0ae14)))));
        __asm__("retf ");
        __asm__("lodsd ");
        __asm__("retf 0xa64a");
        __asm__("out dx, al");
        __asm__("rcl byte [eax+0x3336b9d1], 0xd");
        __asm__("lodsd ");
        __asm__("in al, 0xa1");
        if (*reinterpret_cast<signed char*>((eax29 ^ 0x961b75c2 | 0x36c5e3ed) - 1) <= -22) 
            goto 0x40b50f;
        if (__intrinsic()) 
            goto addr_0x40b506_14; else 
            goto addr_0x40b54a_15;
    }
    addr_0x40b5f3_5:
    __asm__("retf 0xb463");
    __asm__("stc ");
    ebx34 = reinterpret_cast<void**>(ebx19 - 1);
    *edi17 = reinterpret_cast<unsigned char>(*edi17 ^ edx35);
    __asm__("lds ecx, [esi+esi*2]");
    esp36 = reinterpret_cast<void**>(esp22 - 1);
    *edi17 = ga5c9f972;
    esi8 = reinterpret_cast<unsigned char*>(0xa5c9f976);
    __asm__("clc ");
    __asm__("cdq ");
    edi37 = edi17 + 4 - 1;
    __asm__("aad 0x62");
    do {
        esi8 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi8) & 23);
        cf38 = 0;
        if (__intrinsic()) 
            break;
        addr_0x40b60c_20:
        ebx34 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx34) - 1);
        __asm__("outsd ");
    } while (cf38);
    goto addr_0x40b610_21;
    addr_0x40b5c1_22:
    while (1) {
        esp39 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp36) - 2);
        *esp39 = ss40;
        esp41 = reinterpret_cast<int32_t*>(esp39 - 2);
        *esp41 = 0xb3ea6531;
        if (!0) 
            break;
        __asm__("fistp dword [eax+0x5f]");
        esp42 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax20) ^ 0x640e5606);
        eax20 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esp41) | reinterpret_cast<uint32_t>(ecx7));
        __asm__("in al, dx");
        esp36 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp42) - 4);
        *reinterpret_cast<void***>(esp36) = esp36;
        ge735cf51 = reinterpret_cast<unsigned char>(ge735cf51 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx34) + 1));
        tmp32_43 = reinterpret_cast<void*>(1 - 2 * df2);
        *edi37 = *esi8;
        edi37 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi37) + reinterpret_cast<uint32_t>(tmp32_43));
        esi8 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi8) + reinterpret_cast<uint32_t>(tmp32_43));
    }
    addr_0x40b610_21:
    addr_0x4475d5d6_8:
    addr_0x40b593_10:
    esp44 = reinterpret_cast<int32_t*>(esp22 - 4);
    *esp44 = 0x40b598;
    eax45 = fun_cc1b6e09();
    eax46 = reinterpret_cast<void**>(eax45 ^ 0x2b74ff2f);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax46) + 1) = -48;
    ebx34 = eax46;
    __asm__("into ");
    edi37 = ebx19;
    eax20 = edi17;
    *reinterpret_cast<uint16_t*>(&eax20) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax20) / static_cast<int16_t>(*ecx7));
    cf38 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax20) < 0x8961a444);
    esp36 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp44 + 1) - 1);
    if (reinterpret_cast<int32_t>(esp36) >= reinterpret_cast<int32_t>(0)) {
        goto addr_0x40b60c_20;
    } else {
        *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax20) - 34) + cf38);
        df2 = 1;
        __asm__("stc ");
        __asm__("lds ebp, [edx+0xecd4fda]");
        __asm__("enter 0x40a0, 0xf5");
        __asm__("rcl byte [ebp+0xa379e55f], cl");
        --ecx7;
        goto addr_0x40b5c1_22;
    }
    addr_0x40b506_14:
    addr_0x40b54a_15:
    __asm__("popad ");
    __asm__("outsb ");
    esp47 = reinterpret_cast<signed char**>(reinterpret_cast<int16_t>(*reinterpret_cast<void**>(&v1)) + 4 - 4);
    *esp47 = ecx7;
    eax48 = esp47;
    g4d12211f = *reinterpret_cast<signed char*>(&eax48);
}

struct s592 {
    signed char[3] pad3;
    int32_t f3;
};

struct s591 {
    signed char[2] pad2;
    struct s592* f2;
};

struct s593 {
    uint32_t f0;
    uint32_t f2;
};

struct s594 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40b63c(void* ecx) {
    uint32_t eax2;
    uint32_t eax3;
    int32_t* esp4;
    int32_t edx5;
    struct s591* esp6;
    int32_t* ecx7;
    struct s592** esp8;
    struct s592* edx9;
    uint32_t tmp32_10;
    uint32_t ebp11;
    uint32_t* edi12;
    uint32_t* esi13;
    uint32_t* edi14;
    struct s593* esp15;
    uint32_t* esp16;
    struct s594* ebp17;

    eax2 = eax3 | 0xa1285997;
    esp4 = reinterpret_cast<int32_t*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2) | eax2) - 4);
    *esp4 = edx5;
    __asm__("in al, 0xd");
    __asm__("in al, 0xfd");
    __asm__("cmc ");
    esp6 = reinterpret_cast<struct s591*>(esp4 + 1);
    ecx7 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (ecx7) {
        while (1) {
            esp8 = &esp6->f2;
            edx9 = *esp8;
            __asm__("cmc ");
            *reinterpret_cast<int32_t*>(esp8 + 1 - 1) = *ecx7;
            *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) - reinterpret_cast<unsigned char>(0x6a + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax2) < 0x6a)));
            tmp32_10 = ebp11 & *edi12;
            ebp11 = eax2;
            if (!__intrinsic()) {
            }
            *edi12 = *esi13;
            edi14 = edi12 - 1;
            *edi14 = tmp32_10;
            __asm__("lodsd ");
            __asm__("popad ");
            __asm__("lahf ");
            __asm__("daa ");
            edi12 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi14 - 1) - 1);
            esi13 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi13 - 1 - 1) - 1 - 1);
            esp15 = reinterpret_cast<struct s593*>(edx9->f3 * 98 - 1 - 4);
            esp15->f0 = ebp11;
            __asm__("o16 clc ");
            __asm__("gs lodsb ");
            __asm__("aas ");
            esp16 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp15) + 2);
            *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi13 + static_cast<int32_t>(edi12)) - 69) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi13 + static_cast<int32_t>(edi12)) - 69) + ebp11 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ecx7) < *reinterpret_cast<unsigned char*>(ebp11 + 10));
            eax2 = *esp16;
            esp6 = reinterpret_cast<struct s591*>(esp16 + 1);
        }
    } else {
        *reinterpret_cast<uint32_t*>(eax2 + 0x37d2d75a) = *reinterpret_cast<uint32_t*>(eax2 + 0x37d2d75a) >> *reinterpret_cast<unsigned char*>(&ecx7);
        __asm__("clc ");
        goto ebp17->f4;
    }
}

struct s595 {
    signed char[76] pad76;
    unsigned char f76;
};

signed char fun_8c533a3e(signed char* a1, int32_t a2);

void fun_40b777(signed char* ecx) {
    signed char* edi2;
    signed char* esi3;
    struct s595* edi4;
    void* edi5;
    unsigned char* edx6;
    unsigned char bl7;
    signed char ah8;

    __asm__("daa ");
    *edi2 = *esi3;
    edi4 = reinterpret_cast<struct s595*>(reinterpret_cast<int32_t>(edi5) + 1);
    __asm__("aaa ");
    __asm__("retf 0x981e");
    *reinterpret_cast<signed char*>(&edx6) = 0x94;
    edx6[reinterpret_cast<int32_t>(ecx) * 8] = reinterpret_cast<unsigned char>(edx6[reinterpret_cast<int32_t>(ecx) * 8] | bl7);
    __asm__("out 0x7b, eax");
    edi4->f76 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(edi4->f76 + ah8)));
    fun_8c533a3e(ecx, __return_address());
    *ecx = reinterpret_cast<signed char>(*ecx + 0x6c);
}

struct s596 {
    unsigned char f0;
    signed char[218752442] pad218752443;
    unsigned char f218752443;
    signed char[94579090] pad313331534;
    unsigned char f313331534;
    signed char[1149139634] pad925600257;
    int32_t f925600257;
};

void fun_b6bd4ce9();

struct s597 {
    int32_t f0;
    struct s596* f4;
};

uint32_t fun_66636535();

struct s598 {
    struct s596* f0;
    signed char[2] pad4;
    struct s596* f4;
};

unsigned char gd36bfe2c;

void fun_40b79d() {
    uint1_t df1;
    uint1_t cf2;
    uint32_t eax3;
    uint32_t eax4;
    uint1_t cf5;
    int1_t sf6;
    int1_t of7;
    struct s596** esp8;
    struct s596** esp9;
    struct s596* ds10;
    struct s596** esp11;
    struct s596* ecx12;
    struct s596** esp13;
    void* tmp32_14;
    void* edi15;
    void* edi16;
    struct s596* esi17;
    struct s596* edi18;
    int32_t* esp19;
    struct s597* esp20;
    struct s598* esp21;
    int1_t less22;
    int16_t cs23;
    struct s596** esp24;

    df1 = 0;
    cf2 = __intrinsic();
    while (1) {
        eax3 = eax4 + 0xea62127c + cf2;
        cf5 = __intrinsic();
        sf6 = reinterpret_cast<int32_t>(eax3) < reinterpret_cast<int32_t>(0);
        of7 = __intrinsic();
        while (1) {
            esp8 = reinterpret_cast<struct s596**>(0xced48dab);
            while (cf5) {
                while (esp9 = esp8 - 1, *esp9 = ds10, esp11 = esp9 - 2, *esp11 = ecx12, !ecx12) {
                    __asm__("enter 0xb320, 0x69");
                    esp13 = esp11 - 2;
                    *esp13 = ecx12;
                    __asm__("aaa ");
                    __asm__("les eax, [edx+0x5de03e1d]");
                    __asm__("fmul qword [edx+0x6f]");
                    ds10 = *esp13;
                    *reinterpret_cast<unsigned char*>(ecx12) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx12) + *reinterpret_cast<unsigned char*>(&eax3))));
                    __asm__("insd ");
                    __asm__("sahf ");
                    __asm__("in al, dx");
                    __asm__("sahf ");
                    tmp32_14 = reinterpret_cast<void*>(1 - 2 * df1);
                    edi15 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi16) + reinterpret_cast<uint32_t>(tmp32_14));
                    esi17 = reinterpret_cast<struct s596*>(reinterpret_cast<uint16_t>(esi17) + reinterpret_cast<uint32_t>(tmp32_14));
                    edi18 = reinterpret_cast<struct s596*>(reinterpret_cast<uint32_t>(edi15) & *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi15) - 61));
                    esp19 = reinterpret_cast<int32_t*>(esp13 + 1 - 2);
                    *esp19 = 0x40b6f4;
                    fun_b6bd4ce9();
                    esp20 = reinterpret_cast<struct s597*>(esp19 + 1 - 1);
                    esp20->f0 = 0x40b6fa;
                    eax3 = fun_66636535();
                    esp21 = reinterpret_cast<struct s598*>(&esp20->f4);
                    *reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(ecx12) + 0x372b8a01) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(ecx12) + 0x372b8a01) << *reinterpret_cast<unsigned char*>(&ecx12);
                    if (!(reinterpret_cast<uint1_t>(!!(reinterpret_cast<uint16_t>(ecx12) - 1)) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(ecx12) + 0x372b8a01)))) 
                        goto addr_0x40b702_10;
                    ecx12 = esp21->f0;
                    esp8 = &esp21->f4;
                    __asm__("in eax, dx");
                    __asm__("sahf ");
                    __asm__("les esi, [ebx-0x50]");
                    eax3 = 0x95687a7;
                    *reinterpret_cast<unsigned char*>(&ecx12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx12) | *reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(esi17) + 0x12ad0f4e - 0x4b25a192));
                    cf5 = reinterpret_cast<uint1_t>(reinterpret_cast<uint16_t>(__intrinsic()) < reinterpret_cast<uint16_t>(ecx12));
                }
                goto addr_0x40b731_12;
                addr_0x40b702_10:
                *reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(edi18) + 0xd09e5bb) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(edi18) + 0xd09e5bb) - 35) + __intrinsic());
                __asm__("pushad ");
                __asm__("fdivp st7, st0");
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1) = -69;
                __asm__("fsub qword [ebp+0xb45d56d1]");
                esp8 = reinterpret_cast<struct s596**>(reinterpret_cast<int32_t>(esp21) - 2);
                *esp8 = ds10;
                cf5 = 0;
                sf6 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax3) & 62) < reinterpret_cast<signed char>(0);
                of7 = 0;
                ecx12 = reinterpret_cast<struct s596*>(0x9b1f4bb7);
            }
            __asm__("rcr bh, 1");
            esp11 = esp8 - 2;
            *esp11 = edi18;
            if (!of7) {
                addr_0x40b73a_14:
                less22 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax3)) < reinterpret_cast<signed char>(0x70 - cf5);
                cf5 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax3) < reinterpret_cast<unsigned char>(0x70 - cf5));
                *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax3) - reinterpret_cast<unsigned char>(0x70 - cf5));
                sf6 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax3)) < reinterpret_cast<signed char>(static_cast<uint32_t>(cf5));
                of7 = __intrinsic();
                df1 = 1;
                __asm__("rol dword [edx+0x699b0730], 0xa6");
                *reinterpret_cast<int16_t*>(esp11 - 1) = cs23;
                if (less22) 
                    continue; else 
                    break;
            } else {
                esp24 = esp11 - 2;
                *esp24 = esi17;
                if (sf6) 
                    goto addr_0x40b770_16;
                esp11 = esp24 - 2;
                *esp11 = reinterpret_cast<struct s596*>(0x9a478ede);
            }
            addr_0x40b731_12:
            *reinterpret_cast<unsigned char*>(&eax3) = gd36bfe2c;
            goto addr_0x40b73a_14;
        }
        __asm__("fcomp qword [ebp+0x5d]");
        eax4 = reinterpret_cast<uint32_t>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax3))) ^ 0x83cfb97;
        cf2 = 0;
    }
    addr_0x40b770_16:
    *reinterpret_cast<unsigned char*>(edi18) = *reinterpret_cast<unsigned char*>(esi17);
}

void fun_40b7b5(signed char cl) {
    int32_t edi2;
    int32_t edi3;
    signed char bl4;
    uint1_t cf5;
    int32_t edi6;
    int32_t* ebx7;
    int32_t* ebx8;
    int32_t ebx9;
    int1_t sf10;
    int32_t* ebx11;

    __asm__("arpl [edi+0x3fc3a787], sp");
    *reinterpret_cast<unsigned char*>(edi2 - 11) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi3 - 11) + bl4) + cf5);
    if (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(edi6 - 11) == 0))) 
        goto 0x40b82a;
    *ebx7 = *ebx8 - ebx9;
    sf10 = *ebx11 < 0;
    __asm__("lds edx, [edi+0x3c6216e2]");
    if (!sf10) 
        goto 0x40b776;
    __asm__("xlatb ");
    __asm__("repne retf ");
}

void fun_40b939() {
    uint48_t v1;
    int1_t zf2;
    int1_t zf3;
    int1_t less_or_equal4;

    *reinterpret_cast<int32_t*>(&v1) = reinterpret_cast<int32_t>(__return_address());
    __asm__("aad 0xcd");
    if (!zf2) 
        goto 0x40b99c;
    __asm__("ror dword [eax+esi*2-0x7c], 0xaf");
    if (zf3) 
        goto 0x40b910;
    __asm__("int1 ");
    if (less_or_equal4) 
        goto 0x40b96a;
    do {
    } while (__intrinsic());
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2);
}

void fun_40b9eb(int32_t ecx) {
    __asm__("in eax, dx");
    __asm__("out 0xa4, eax");
}

void fun_40b9f0() {
    int1_t of1;
    int32_t* edi2;
    int32_t eax3;

    __asm__("cmc ");
    if (!of1) {
    }
    if (*edi2 < eax3) 
        goto addr_0x40b9ea_7;
    addr_0x40b9ea_7:
}

void fun_40b9f5() {
    __asm__("rcr dword [eax+0xb7a884e6], 1");
}

int32_t CreateFileMappingA = 0x324a6;

int32_t g42e0c8 = 0;

uint32_t g42e0d0 = 0;

void fun_40c000() {
    int32_t eax1;
    int32_t eax2;
    int32_t esi3;
    uint32_t eax4;

    eax1 = reinterpret_cast<int32_t>(CreateFileMappingA());
    g42e0c8 = eax1;
    if (eax1 && (eax2 = reinterpret_cast<int32_t>(GetLastError()), eax2 != 0xb7)) {
    }
    eax4 = fun_415320(0, 0xff, 0, 4, 0, 48, "ladybird", esi3, __return_address());
    g42e0d0 = eax4;
    goto 0;
}

struct s599 {
    signed char[86] pad86;
    int32_t f86;
};

struct s600 {
    signed char[123] pad123;
    int32_t f123;
};

struct s601 {
    signed char[123] pad123;
    int32_t f123;
};

struct s602 {
    signed char[4] pad4;
    int32_t f4;
};

struct s603 {
    signed char[4] pad4;
    int32_t f4;
};

struct s604 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40c887(int32_t ecx) {
    struct s599* eax2;
    int32_t ebp3;
    uint32_t* eax4;
    void* esp5;
    struct s600* ebx6;
    struct s601* ebx7;
    signed char bl8;
    uint32_t esi9;
    struct s602* ebx10;
    struct s603* ebx11;
    signed char* ebx12;
    signed char* ebx13;
    void* esp14;
    int32_t ecx15;
    int32_t ebp16;
    int32_t ebp17;
    int32_t ebp18;
    unsigned char* ecx19;
    int32_t ebp20;
    void* ebp21;
    void* ebp22;
    signed char al23;
    uint1_t cf24;
    int1_t pf25;
    int1_t zf26;
    struct s604* ebp27;

    eax2->f86(__return_address());
    eax4 = fun_40c760(ebp3 + 8, ecx, __return_address());
    esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 - 4 - 4 - 4 + 4 + 16);
    if (!(__intrinsic() || (ecx = ecx, !__intrinsic()))) {
        *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) & *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax4) - 0x100b4b));
    }
    ebx6->f123 = ebx7->f123 + 1;
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) + 0x87);
    do {
        *reinterpret_cast<int16_t*>(&eax4) = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax4)) * bl8);
        esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 2);
        esi9 = esi9;
    } while (!__undefined());
    ebx10->f4 = ebx11->f4 >> 1;
    ebx12 = ebx13;
    esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4);
    ecx15 = ecx;
    *ebx12 = reinterpret_cast<signed char>(*ebx12 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx12) + 1));
    __asm__("int1 ");
    if (!(__intrinsic() | reinterpret_cast<uint1_t>(*ebx12 == 0))) {
        do {
            *reinterpret_cast<unsigned char*>(&ebx12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp16 + ecx15 - 0x100c) ^ *reinterpret_cast<unsigned char*>(ebp17 + ecx15 - 0x100d));
            *reinterpret_cast<unsigned char*>(ebp18 + ecx15 - 0x100c) = *reinterpret_cast<unsigned char*>(&ebx12);
            if (__intrinsic() || !__intrinsic()) {
                ebx12 = ebx12;
            } else {
                *eax4 = *eax4 ^ reinterpret_cast<uint32_t>(eax4);
            }
            if (__intrinsic() || (ecx15 = ecx15, !__intrinsic())) {
            }
            esi9 = esi9;
            if (__intrinsic() || (ecx15 = ecx15, !__intrinsic())) {
                ecx15 = ecx15;
            } else {
                __asm__("rol byte [ecx+0x3b], 1");
            }
            __asm__("into ");
        } while (0);
    }
    ecx19 = *reinterpret_cast<unsigned char**>(ebp20 - 8);
    al23 = fun_40c6e0(ecx19, reinterpret_cast<int32_t>(ebp21) + 8, ecx19, esi9, reinterpret_cast<int32_t>(ebp22) - 0x100c);
    cf24 = __intrinsic();
    pf25 = __intrinsic();
    zf26 = reinterpret_cast<int32_t>(esp14) - 4 - 4 - 4 - 4 - 4 + 4 + 16 == 0;
    if (pf25) 
        goto addr_0x40c983_32;
    esi9 = esi9;
    if (pf25) 
        goto addr_0x40c98c_34;
    addr_0x40c983_32:
    while (!zf26) {
        addr_0x40c98c_34:
        *ecx19 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx19 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx19) + 1)) + cf24);
        cf24 = __intrinsic();
        pf25 = __intrinsic();
        zf26 = *ecx19 == 0;
    }
    if (pf25) 
        goto addr_0x40c992_37;
    do {
        ecx19 = ecx19;
        if (!pf25) {
            addr_0x40c992_37:
            ebp27 = ebp27;
        } else {
            *ecx19 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx19 + al23) + cf24);
            cf24 = __intrinsic();
            pf25 = __intrinsic();
            zf26 = *ecx19 == 0;
        }
    } while (!zf26);
    if (!(pf25 || (esi9 = esi9, !pf25))) {
        zf26 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx19) + *(ebx12 - 0x97a038b)) + cf24 == 0;
    }
    if (!zf26) {
        if (esi9 >= 0x1000) {
        }
        if (!(__intrinsic() || !__intrinsic())) {
            __asm__("arpl [ebx+0x858df84d], cx");
        }
        __asm__("hlt ");
    } else {
        goto ebp27->f4;
    }
}

void fun_40d389() {
    int32_t esi1;

    goto *reinterpret_cast<int32_t*>(esi1 - 0x7b);
}

void** g42e520;

struct s605 {
    signed char[4] pad4;
    int16_t f4;
};

void** ged87047b;

void fun_40d8bc(void** ecx, struct s5** a2) {
    struct s5* eax3;
    struct s5* ebx4;
    void** eax5;
    void** eax6;
    int1_t pf7;
    struct s605* ebp8;
    struct s605* ebp9;
    struct s605* ebp10;
    void** ecx11;
    uint32_t edi12;
    uint32_t edi13;
    int32_t esi14;
    int32_t tmp32_15;
    struct s605* ebp16;
    void** ecx17;
    int32_t eax18;
    int1_t pf19;
    uint32_t edi20;
    struct s5* ebx21;
    uint32_t edi22;
    int16_t* esp23;
    uint32_t edi24;
    int1_t pf25;
    int16_t es26;

    eax3 = fun_4229f0(0xfa, __return_address(), a2);
    ebx4 = eax3;
    fun_40f680();
    eax5 = fun_40c510(ecx);
    g42e520 = eax5;
    eax6 = fun_40f2b0(eax5);
    pf7 = __intrinsic();
    if (pf7 || !pf7) {
        ebp8 = ebp9;
    } else {
        ebx4->f4 = 0;
        pf7 = __intrinsic();
    }
    ebp10 = ebp8;
    if (pf7 || !pf7) {
        ebp10 = ebp10;
    } else {
        __asm__("fdivr qword [ebx+0x4]");
    }
    ecx11 = ecx;
    if (pf7 || (edi12 = edi13, !pf7)) {
        ecx11 = ecx11;
    } else {
        edi12 = edi12 | ebx4->f4;
        pf7 = __intrinsic();
    }
    if (pf7 || (ebx4 = ebx4, !pf7)) {
        ebp10 = ebp10;
    } else {
        pf7 = __intrinsic();
    }
    do {
        esi14 = tmp32_15;
    } while (!pf7);
    ged87047b = eax6;
    ebp16 = ebp10;
    ecx17 = ecx11;
    eax18 = reinterpret_cast<int32_t>(esi14());
    pf19 = __intrinsic();
    if (eax18 != 1) {
        if (!(pf19 || !pf19)) {
            ebx4->f4 = reinterpret_cast<unsigned char>(ebx4->f4 ^ edi12);
            pf19 = __intrinsic();
        }
        edi20 = edi12;
        ebx21 = ebx4;
        if (pf19 || (edi20 = edi20, !pf19)) {
            ebp16 = ebp16;
        }
        __asm__("in eax, dx");
        edi22 = edi20;
        do {
            *reinterpret_cast<unsigned char*>(&ebx21) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx21) >> *reinterpret_cast<signed char*>(&ecx17));
            ecx17 = ecx17;
        } while (!__intrinsic());
        esp23 = &ebp16->f4;
        if (!(__intrinsic() || !__intrinsic())) {
            ebx21->f4 = reinterpret_cast<unsigned char>(ebx21->f4 + edi22 + __intrinsic());
        }
        edi24 = edi22;
        do {
            *reinterpret_cast<unsigned char*>(&ebx21) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx21) >> 6);
        } while (!__intrinsic());
        ebx21->f4 = reinterpret_cast<unsigned char>(ebx21->f4 - (edi24 + reinterpret_cast<uint1_t>(ebx21->f4 < reinterpret_cast<unsigned char>(edi24 + __intrinsic()))));
        pf25 = __intrinsic();
        do {
            __asm__("fucomi st0, st3");
            --esp23;
            *esp23 = es26;
        } while (!pf25);
        __asm__("fidivr dword [ebx+0x4]");
    } else {
        fun_40f4d0();
        goto ebp16->f4;
    }
}

struct s606 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s607 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s608 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s609 {
    signed char[4] pad4;
    int32_t f4;
};

struct s610 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40dd44(int32_t ecx, int32_t a2, int32_t a3) {
    uint112_t v2;
    int1_t zf3;
    int1_t pf4;
    int32_t eax5;
    int32_t eax6;
    void** eax7;
    signed char bl8;
    struct s606* ebx9;
    struct s607* ebx10;
    uint32_t edi11;
    struct s608* ebx12;
    struct s608* ebx13;
    unsigned char edi14;
    unsigned char edi15;
    int1_t pf16;
    int32_t ecx17;
    unsigned char edi18;
    unsigned char tmp8_19;
    int16_t es20;
    int32_t ecx21;
    struct s608* ebx22;
    struct s609* ebp23;
    struct s610* ebp24;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 6) = a2;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 10) = a3;
    if (!zf3 && (pf4 = __intrinsic(), eax5 == 100) || (pf4 = __intrinsic(), eax6 != 0x67)) {
        if (pf4 || !pf4) {
            ecx = ecx;
        } else {
            eax7 = gc087047b;
        }
        do {
            *reinterpret_cast<int16_t*>(&eax7) = reinterpret_cast<int16_t>(*reinterpret_cast<signed char*>(&eax7) * bl8);
            ecx = ecx;
        } while (!__undefined());
        ebx9->f4 = ebx10->f4 ^ edi11;
        ebx12 = ebx13;
        edi14 = edi15;
        __asm__("les eax, [esi]");
        pf16 = __intrinsic();
        if (!eax7) {
            if (pf16 || (ebx12 = ebx12, !pf16)) {
                edi14 = edi14;
            } else {
                eax7 = gd287047b;
            }
            ecx17 = ecx;
            edi18 = edi14;
            if (!(pf16 || (ebx12 = ebx12, !pf16))) {
                tmp8_19 = ebx12->f4;
                ebx12->f4 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx12) + 1);
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx12) + 1) = tmp8_19;
            }
            if (!(pf16 || !pf16)) {
                ebx12->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx12->f4) >> 0xffffff87);
                pf16 = __intrinsic();
            }
            do {
                __asm__("fucomi st0, st3");
            } while (!pf16);
            ebx12->f4 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx12) + 1);
            *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(eax7) + reinterpret_cast<unsigned char>(eax7) + 0x47b0000)(es20);
            ecx21 = ecx17;
            if (!(__intrinsic() || !__intrinsic())) {
                ebx12->f4 = edi18;
            }
            ebx22 = ebx12;
            do {
                *reinterpret_cast<unsigned char*>(&ebx22) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx22) >> *reinterpret_cast<signed char*>(&ecx21));
            } while (!__intrinsic());
            ebx22->f4 = reinterpret_cast<unsigned char>(ebx22->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx22) + 1));
            if (__intrinsic() || !__intrinsic()) {
            }
        } else {
            fun_411450(4, 7, 16);
            goto ebp23->f4;
        }
    } else {
        fun_411450(11, 10, 16);
        goto ebp24->f4;
    }
}

struct s611 {
    signed char[4] pad4;
    int32_t f4;
};

struct s612 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s613 {
    int32_t f0;
    void** f4;
    signed char[3] pad8;
    int32_t f8;
};

struct s614 {
    signed char[4] pad4;
    int32_t f4;
};

struct s615 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e072(int32_t ecx, void** a2, void** a3, void** a4) {
    void** eax5;
    int32_t ebp6;
    struct s611* ebp7;
    void** edx8;
    void** edx9;
    int32_t* ebp10;
    int32_t* ebp11;
    struct s612* ebx12;
    struct s612* ebx13;
    int1_t pf14;
    struct s612* ebx15;
    void** edx16;
    struct s612* ebx17;
    int32_t ecx18;
    int32_t* ebp19;
    void** edx20;
    int1_t pf21;
    struct s612* ebx22;
    void** edx23;
    int32_t ecx24;
    int32_t* ebp25;
    int32_t ebp26;
    struct s613* esp27;
    int32_t ecx28;
    struct s614* ebx29;
    struct s615* ebx30;
    int32_t edi31;

    *reinterpret_cast<int32_t*>(ecx - 1)();
    eax5 = *reinterpret_cast<void***>(ebp6 - 0x9c);
    if (!eax5) {
        fun_411450(3, 8, 16);
        goto ebp7->f4;
    }
    if (!__intrinsic() && (edx8 = edx9, __intrinsic())) {
    }
    if (__intrinsic()) 
        goto addr_0x40e0ac_7;
    edx8 = edx8;
    if (__intrinsic()) 
        goto addr_0x40e0b5_9;
    addr_0x40e0ac_7:
    addr_0x40e0b6_10:
    ebp10 = ebp11;
    ebx12 = ebx13;
    *eax5 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax5) << 1);
    *eax5 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax5) + reinterpret_cast<int32_t>(eax5));
    if (*reinterpret_cast<int16_t*>(&eax5)) {
        *reinterpret_cast<unsigned char*>(&ebx12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx12) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx8 + 1)));
        fun_422199(ecx);
        pf14 = __intrinsic();
        if (pf14 || (ebp10 = ebp10, !pf14)) {
            ecx = ecx;
        } else {
            pf14 = __intrinsic();
        }
        ebx15 = ebx12;
        edx16 = edx8;
        if (pf14 || (ebx15 = ebx15, !pf14)) {
            edx16 = edx16;
        } else {
            ebx15->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx15->f4) >> 1);
        }
        ebx17 = ebx15;
        ecx18 = ecx;
        ebp19 = ebp10;
        fun_4117e0(edx16, a2, a3, a4);
        if (!(__intrinsic() || (ecx18 = ecx18, !__intrinsic()))) {
            __asm__("fnstcw word [ebx+0x4]");
        }
        edx20 = edx16;
        do {
            *reinterpret_cast<unsigned char*>(&ebx17) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx17) >> *reinterpret_cast<signed char*>(&ecx18));
        } while (!__intrinsic());
        ebx17->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx17->f4 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx17) + 1)) + __intrinsic());
        pf21 = __intrinsic();
        if (!(pf21 || !pf21)) {
            pf21 = __intrinsic();
        }
        ebx22 = ebx17;
        edx23 = edx20;
        __asm__("in eax, dx");
        ecx24 = ecx18;
        ebp25 = ebp19;
        do {
            ecx24 = ecx24;
        } while (!pf21);
        ebp26 = *ebp25;
        __asm__("in al, dx");
        esp27 = reinterpret_cast<struct s613*>(ebp25 + 1 - 3);
        esp27->f0 = ecx24;
        ecx28 = *reinterpret_cast<int32_t*>(ebp26 - 16);
        esp27->f4 = edx23;
        esp27->f8 = ecx28;
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp27) - 4) = 0x40e5bd;
        fun_40986a(*reinterpret_cast<unsigned char*>(&ecx28));
        if (__intrinsic() || !__intrinsic()) {
        }
        goto ebx22;
    } else {
        if (!(__intrinsic() || !__intrinsic())) {
            ebx12->f4 = reinterpret_cast<unsigned char>(ebx12->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx12) + 1));
        }
        goto ebx12;
    }
    addr_0x40e0b5_9:
    ebx29->f4 = ebx30->f4 + edi31;
    goto addr_0x40e0b6_10;
}

struct s616 {
    signed char[4] pad4;
    unsigned char f4;
    signed char[1947793528] pad1947793533;
    signed char f1947793533;
};

struct s617 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e18b(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    struct s616* ebx4;
    struct s616* ebx5;
    unsigned char bh6;
    struct s617* ebx7;
    struct s616* ebx8;
    uint32_t edi9;
    signed char al10;

    if (pf2 || !pf3) {
        ebx4 = ebx5;
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = reinterpret_cast<unsigned char>(bh6 ^ ebx7->f4);
    }
    ebx8 = ebx4;
    do {
        *reinterpret_cast<unsigned char*>(&ebx8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx8) >> *reinterpret_cast<signed char*>(&ecx));
    } while (!__intrinsic());
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) - *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx8) + 4));
    if (!(__intrinsic() || !__intrinsic())) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx8) + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx8) + 4) & edi9);
    }
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx8) + 0x7418f87d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx8) + 0x7418f87d) + al10);
}

struct s618 {
    signed char[4] pad4;
    unsigned char f4;
    signed char[1126430744] pad1126430749;
    signed char f1126430749;
};

void fun_40e96e() {
    void** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    void** eax5;
    void** edx6;
    int32_t ebp7;
    void** eax8;
    int32_t ebp9;
    int32_t edx10;
    int32_t ebp11;
    void** eax12;
    uint1_t cf13;
    int1_t pf14;
    struct s618* ebx15;
    struct s618* ebx16;
    unsigned char edi17;
    void** ecx18;
    uint32_t edi19;
    uint32_t edi20;
    int32_t edi21;
    uint32_t edi22;
    void** ecx23;
    uint32_t edi24;
    int32_t ebp25;
    int32_t ebp26;
    int32_t edx27;
    struct s618* ebx28;
    uint32_t eax29;
    uint1_t cf30;
    int1_t pf31;
    struct s618* ebx32;

    ecx1 = *reinterpret_cast<void***>(ebp2 - 20);
    eax3 = *reinterpret_cast<int32_t*>(ebp4 - 16);
    fun_40c7a0(ecx1, eax5, ecx1, eax3, __return_address());
    edx6 = *reinterpret_cast<void***>(ebp7 - 24);
    eax8 = *reinterpret_cast<void***>(ebp9 - 20);
    edx10 = *reinterpret_cast<int32_t*>(ebp11 - 16);
    eax12 = fun_40c7a0(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4 + 4 + 16 - 4 - 12, edx6, eax8, edx10, 0x4296a4);
    cf13 = 0;
    pf14 = __intrinsic();
    if (!(pf14 || (ebx15 = ebx16, !pf14))) {
        cf13 = reinterpret_cast<uint1_t>(ebx15->f4 < edi17);
        pf14 = __intrinsic();
    }
    ecx18 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4 + 4 + 16 - 4 - 12);
    if (pf14 || !pf14) {
        edi19 = edi20;
    } else {
        edi19 = edi21 - (ebx15->f4 + reinterpret_cast<uint1_t>(edi22 < ebx15->f4 + cf13));
        pf14 = __intrinsic();
    }
    if (!(pf14 || (ecx18 = ecx18, !pf14))) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1) + ebx15->f4);
    }
    ecx23 = ecx18;
    edi24 = edi19;
    ebp25 = ebp26;
    edx27 = edx10;
    ebx28 = ebx15;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx28) + 0x4323f81d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx28) + 0x4323f81d) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx23)));
    *reinterpret_cast<void***>(eax12 + 0xffffffff) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx23 + 1)));
    do {
        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax12)));
        *reinterpret_cast<unsigned char*>(edx27 - 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx27 - 1) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx23 + 1)));
        eax29 = reinterpret_cast<uint32_t>(edi24(1, 0x42e0e8, 0));
        cf30 = reinterpret_cast<uint1_t>(eax29 < 1);
        pf31 = __intrinsic();
        if (eax29 != 1) 
            break;
        cf30 = 0;
        pf31 = __intrinsic();
        if (0) 
            break;
        eax12 = reinterpret_cast<void**>(ebx28(ebp25 - 0xc8, 0, 0, 0, 0, 1, 0x42e0e8, 0));
        if (eax12) 
            goto addr_0x40eacf_44;
        cf30 = 0;
        pf31 = __intrinsic();
    } while (1);
    if (!(pf31 || (ebx28 = ebx28, !pf31))) {
        ebx28->f4 = reinterpret_cast<unsigned char>(ebx28->f4 ^ edi24);
        cf30 = 0;
        pf31 = __intrinsic();
    }
    ebx32 = ebx28;
    do {
    } while (!pf31);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx32) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx32) + 1) - reinterpret_cast<unsigned char>(ebx32->f4 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx32) + 1) < reinterpret_cast<unsigned char>(ebx32->f4 + cf30))));
    goto ebx32;
    addr_0x40eacf_44:
    if (!(__intrinsic() || (ebx28 = ebx28, !__intrinsic()))) {
        __asm__("fidivr word [ebx+0x4]");
    }
    goto ebx28;
}

struct s619 {
    signed char[4] pad4;
    int32_t f4;
    signed char[4] pad12;
    unsigned char* f12;
    int32_t f16;
    int32_t f20;
};

void fun_410b7f(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10, int32_t a11, int32_t a12, int32_t a13, int32_t a14, int32_t a15, int32_t a16, int32_t a17, int32_t a18, int32_t a19, int32_t a20, int32_t a21, int32_t a22, int32_t a23, int32_t a24, int32_t a25, int32_t a26, int32_t a27, int32_t a28, int32_t a29, int32_t a30, int32_t a31, int32_t a32, int32_t a33, int32_t a34, int32_t a35, int32_t a36, int32_t a37, int32_t a38, int32_t a39, int32_t a40, int32_t a41, int32_t a42, int32_t a43, int32_t a44, int32_t a45, int32_t a46, int32_t a47, int32_t a48, int32_t a49, int32_t a50, int32_t a51, int32_t a52, int32_t a53, int32_t a54, int32_t a55, int32_t a56, int32_t a57, int32_t a58, int32_t a59, int32_t a60, int32_t a61, int32_t a62, int32_t a63, int16_t a64) {
    int32_t ebx65;
    int32_t ebx66;
    int1_t less_or_equal67;
    uint32_t eax68;
    uint1_t cf69;
    uint1_t cf70;
    uint32_t eax71;
    uint1_t cf72;
    uint32_t* eax73;
    void* eax74;
    int1_t sf75;
    int1_t of76;
    int32_t* ebx77;
    struct s619* ebp78;
    int32_t ecx79;
    int1_t cf80;
    int1_t sf81;
    int1_t of82;
    uint1_t less_or_equal83;
    int32_t ecx84;
    int1_t cf85;
    int1_t sf86;
    int1_t of87;
    uint1_t less_or_equal88;
    int32_t* esi89;
    int32_t* edi90;
    unsigned char* edx91;
    int32_t v92;
    int32_t v93;
    int32_t v94;
    int32_t v95;
    int32_t v96;
    int32_t v97;
    int32_t v98;
    int32_t v99;
    int32_t v100;
    int32_t v101;
    int32_t v102;
    int32_t v103;
    int32_t v104;
    int32_t v105;
    int32_t v106;
    int32_t v107;
    int32_t v108;
    int32_t v109;
    int32_t v110;
    int32_t v111;
    int32_t v112;
    int32_t v113;
    int32_t v114;
    int32_t v115;
    int32_t v116;
    int32_t v117;
    int32_t v118;
    int32_t v119;
    int32_t v120;
    int32_t v121;
    int32_t v122;
    int32_t v123;
    int32_t v124;
    int32_t v125;
    int32_t v126;
    int32_t v127;
    int32_t v128;
    int32_t v129;
    int32_t v130;
    int32_t v131;
    int32_t v132;
    int32_t v133;
    int32_t v134;
    int16_t v135;

    *reinterpret_cast<int32_t*>(ebx65 - 0x7a99f73c) = *reinterpret_cast<int32_t*>(ebx66 - 0x7a99f73c) + 1;
    __asm__("ror byte [edi], 0x85");
    less_or_equal67 = reinterpret_cast<int32_t>(eax68) <= reinterpret_cast<int32_t>(0x14fffffd - cf69);
    cf70 = reinterpret_cast<uint1_t>(eax71 < 0x14fffffd - cf72);
    eax73 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax74) - (0x14fffffd - cf70));
    sf75 = reinterpret_cast<int32_t>(eax73) < reinterpret_cast<int32_t>(static_cast<uint32_t>(cf70));
    of76 = __intrinsic();
    while (!of76 && of76) {
    }
    while ((ebx77 = ebx77, !sf75) && sf75) {
    }
    while ((ebx77 = ebx77, cf70) && !cf70) {
    }
    while (less_or_equal67 && !less_or_equal67) {
    }
    do {
    } while (!of76 && of76);
    while (!sf75 && sf75) {
    }
    while ((ebx77 = ebx77, cf70) && !cf70) {
    }
    while ((eax73 = eax73, less_or_equal67) && !less_or_equal67) {
    }
    while (!of76 && of76) {
    }
    while (!sf75 && sf75) {
    }
    while (cf70 && !cf70) {
    }
    while (less_or_equal67 && !less_or_equal67) {
    }
    while ((eax73 = eax73, !of76) && of76) {
    }
    while (!sf75 && sf75) {
    }
    while ((eax73 = eax73, cf70) && !cf70) {
    }
    while ((ebp78 = ebp78, less_or_equal67) && !less_or_equal67) {
    }
    while (!of76 && of76) {
    }
    while (!sf75 && sf75) {
    }
    while (cf70 && !cf70) {
    }
    while ((ecx79 = ecx79, less_or_equal67) && !less_or_equal67) {
    }
    while ((ecx79 = ecx79, !of76) && of76) {
    }
    while ((ecx79 = ecx79, !sf75) && sf75) {
    }
    while (cf70 && !cf70) {
    }
    while ((ecx79 = ecx79, less_or_equal67) && !less_or_equal67) {
    }
    do {
    } while (!of76 && of76);
    while (!sf75 && sf75) {
    }
    while ((ecx79 = ecx79, cf70) && !cf70) {
    }
    do {
        ecx79 = ecx79;
    } while (less_or_equal67 && !less_or_equal67);
    while (!of76 && of76) {
    }
    while (!sf75 && sf75) {
    }
    while (cf70 && !cf70) {
    }
    while ((eax73 = eax73, less_or_equal67) && !less_or_equal67) {
    }
    while ((eax73 = eax73, !of76) && of76) {
    }
    while ((eax73 = eax73, !sf75) && sf75) {
    }
    while (cf70 && !cf70) {
    }
    while ((ecx79 = ecx79, less_or_equal67) && !less_or_equal67) {
    }
    while ((eax73 = eax73, !of76) && of76) {
    }
    while (!sf75 && sf75) {
    }
    while (cf70 && !cf70) {
    }
    *reinterpret_cast<int16_t*>(&eax73) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax73) / *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx77) + 1));
    cf80 = __undefined();
    *(ebx77 - 0xddd3dcf) = *(ebx77 - 0xddd3dcf) + 1;
    sf81 = *(ebx77 - 0xddd3dcf) < 0;
    of82 = __intrinsic();
    less_or_equal83 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf81 != of82) | reinterpret_cast<uint1_t>(*(ebx77 - 0xddd3dcf) == 0));
    do {
    } while (less_or_equal83 && !less_or_equal83);
    while ((ebp78 = ebp78, !of82) && of82) {
    }
    while ((ecx79 = ecx79, !sf81) && sf81) {
    }
    while (cf80 && !cf80) {
    }
    while (less_or_equal83 && !less_or_equal83) {
    }
    while ((ebx77 = ebx77, !of82) && of82) {
    }
    while (!sf81 && sf81) {
    }
    while (!cf80) {
    }
    while (less_or_equal83 && !less_or_equal83) {
    }
    while (!of82 && of82) {
    }
    while ((ebx77 = ebx77, !sf81) && sf81) {
    }
    while (cf80 && !cf80) {
    }
    while ((ecx79 = ecx79, less_or_equal83) && !less_or_equal83) {
    }
    while ((eax73 = eax73, !of82) && of82) {
    }
    while ((ecx79 = ecx79, !sf81) && sf81) {
    }
    while (cf80 && !cf80) {
    }
    while ((ebx77 = ebx77, less_or_equal83) && !less_or_equal83) {
    }
    do {
    } while (!of82 && of82);
    while ((eax73 = eax73, !sf81) && sf81) {
    }
    while (cf80 && !cf80) {
    }
    while (less_or_equal83 && !less_or_equal83) {
    }
    while (!of82 && of82) {
    }
    while (!sf81 && sf81) {
    }
    while (cf80 && !cf80) {
    }
    while ((ecx79 = ecx79, less_or_equal83) && !less_or_equal83) {
    }
    while (!of82 && of82) {
    }
    ecx84 = ecx79 - 1;
    *eax73 = *eax73 + reinterpret_cast<uint32_t>(eax73);
    *reinterpret_cast<signed char*>(&ebx77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx77) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx84) + 1));
    cf85 = __intrinsic();
    sf86 = *reinterpret_cast<signed char*>(&ebx77) < 0;
    of87 = __intrinsic();
    less_or_equal88 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf86 != of87) | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&ebx77) == 0));
    while (!sf86 && sf86) {
    }
    while ((ebp78 = ebp78, cf85) && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    do {
    } while (!of87 && of87);
    while (!sf86 && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while ((ebp78 = ebp78, !sf86) && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while ((ecx84 = ecx84, !sf86) && sf86) {
    }
    while ((ebp78 = ebp78, cf85) && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while ((ebx77 = ebx77, !of87) && of87) {
    }
    while ((ebp78 = ebp78, !sf86) && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while ((ecx84 = ecx84, less_or_equal88) && !less_or_equal88) {
    }
    while ((ebp78 = ebp78, !of87) && of87) {
    }
    while ((ebp78 = ebp78, !sf86) && sf86) {
    }
    while ((ebx77 = ebx77, cf85) && !cf85) {
    }
    while ((ebp78 = ebp78, less_or_equal88) && !less_or_equal88) {
    }
    while ((ecx84 = ecx84, !of87) && of87) {
    }
    while (!sf86 && sf86) {
    }
    while ((ebp78 = ebp78, cf85) && !cf85) {
    }
    esi89 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp78) - 64);
    edi90 = ebx77;
    while (ecx84) {
        --ecx84;
        *edi90 = *esi89;
        ++edi90;
        ++esi89;
    }
    do {
        ebp78 = ebp78;
    } while (less_or_equal88 && !less_or_equal88);
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while ((ebp78 = ebp78, cf85) && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while ((esi89 = esi89, cf85) && !cf85) {
    }
    while ((ebp78 = ebp78, less_or_equal88) && !less_or_equal88) {
    }
    while ((ebp78 = ebp78, !of87) && of87) {
    }
    while (!sf86 && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while ((ebp78 = ebp78, less_or_equal88) && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while ((esi89 = esi89, !of87) && of87) {
    }
    while ((esi89 = esi89, !sf86) && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while ((esi89 = esi89, !of87) && of87) {
    }
    while ((esi89 = esi89, !sf86) && sf86) {
    }
    while (!cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while ((esi89 = esi89, !of87) && of87) {
    }
    while (sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    do {
    } while (!of87 && of87);
    while ((esi89 = esi89, !sf86) && sf86) {
    }
    while ((ebp78 = ebp78, cf85) && !cf85) {
    }
    while ((ebp78 = ebp78, less_or_equal88) && !less_or_equal88) {
    }
    while ((ebp78 = ebp78, !of87) && of87) {
    }
    do {
    } while (!sf86 && sf86);
    while (cf85 && !cf85) {
    }
    while ((ebp78 = ebp78, less_or_equal88) && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while ((ebp78 = ebp78, cf85) && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while ((ebp78 = ebp78, cf85) && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while ((esi89 = esi89, !sf86) && sf86) {
    }
    while (cf85 && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while ((esi89 = esi89, cf85) && !cf85) {
    }
    while ((ebp78 = ebp78, less_or_equal88) && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    while ((ebp78 = ebp78, cf85) && !cf85) {
    }
    while (less_or_equal88 && !less_or_equal88) {
    }
    while (!of87 && of87) {
    }
    while (!sf86 && sf86) {
    }
    do {
        esi89 = esi89;
    } while (cf85 && !cf85);
    while ((ebp78 = ebp78, less_or_equal88) && !less_or_equal88) {
    }
    while ((esi89 = esi89, !of87) && of87) {
    }
    ebp78->f20 = ebp78->f20 + reinterpret_cast<int32_t>(esi89);
    edx91 = ebp78->f12;
    v92 = ebp78->f16;
    fun_40faa0(edx91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135);
    goto ebp78->f4;
}

void fun_413d37() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 - 0x1d7e07ab) = *reinterpret_cast<int32_t*>(ebx2 - 0x1d7e07ab) - 1;
}

struct s620 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_413d3e(int32_t ecx, int16_t a2) {
    int32_t* eax3;
    int32_t* eax4;
    int32_t ebp5;
    int32_t ebp6;
    signed char al7;
    int1_t cf8;
    int1_t sf9;
    int32_t ebp10;
    int1_t of11;
    uint1_t less12;
    uint1_t less_or_equal13;
    int32_t ebp14;
    struct s620* ebp15;
    int32_t* eax16;
    int32_t* eax17;
    int32_t* eax18;
    int32_t eax19;
    void* ebp20;
    void* ebp21;
    signed char dh22;
    void* ebp23;
    void* ebp24;

    *eax3 = *eax4 + 1;
    *reinterpret_cast<signed char*>(ebp5 - 0x7ccd8b2e) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp6 - 0x7ccd8b2e) + al7);
    cf8 = __intrinsic();
    sf9 = *reinterpret_cast<signed char*>(ebp10 - 0x7ccd8b2e) < 0;
    of11 = __intrinsic();
    less12 = reinterpret_cast<uint1_t>(sf9 != of11);
    less_or_equal13 = reinterpret_cast<uint1_t>(less12 | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(ebp14 - 0x7ccd8b2e) == 0));
    if (!less12) {
        do {
            addr_0x413d4d_3:
            ebp15 = ebp15;
        } while (less_or_equal13 && !less_or_equal13);
        while ((ebp15 = ebp15, !of11) && of11) {
        }
        while ((ebp15 = ebp15, !sf9) && sf9) {
        }
        *eax16 = ecx;
        do {
        } while (cf8 && !cf8);
        while (less_or_equal13 && !less_or_equal13) {
        }
        *eax17 = *eax18 + eax19;
        goto ebp15->f4;
    } else {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(ebp20) - 21) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(ebp21) - 21) + dh22);
        cf8 = __intrinsic();
        sf9 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(ebp23) - 21) < 0;
        of11 = __intrinsic();
        less_or_equal13 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf9 != of11) | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(ebp24) - 21) == 0));
        goto addr_0x413d4d_3;
    }
}

struct s621 {
    signed char[8] pad8;
    void** f8;
    signed char[11] pad20;
    void** f20;
};

void fun_414185(void** ecx, void** a2, void** a3) {
    int32_t eax4;
    struct s621* ebp5;
    void* ebp6;
    void** v7;
    void** v8;

    *reinterpret_cast<int32_t*>(eax4 - 0x75)(__return_address());
    ebp5 = reinterpret_cast<struct s621*>(reinterpret_cast<int32_t>(ebp6) - 1);
    __asm__("clc ");
    v7 = ebp5->f20;
    v8 = ebp5->f8;
    fun_411eb0(ecx, v8, v7, ecx, __return_address(), a2, a3);
    goto 0x4141b8;
}

struct s622 {
    signed char[8] pad8;
    void** f8;
};

struct s623 {
    signed char[20] pad20;
    int32_t f20;
};

struct s624 {
    signed char[16] pad16;
    void*** f16;
};

struct s625 {
    signed char[12] pad12;
    int32_t f12;
};

struct s626 {
    signed char[12] pad12;
    int32_t f12;
};

struct s627 {
    signed char[20] pad20;
    int32_t f20;
};

struct s628 {
    signed char[20] pad20;
    int32_t f20;
};

void fun_41421c(int32_t a1) {
    int32_t v2;
    uint32_t eax3;
    int32_t ebp4;
    int32_t ebp5;
    int32_t ebp6;
    void*** edx7;
    void* ebp8;
    void** v9;
    struct s622* ebp10;
    void* ebp11;
    void** eax12;
    int32_t ebx13;
    int32_t ebx14;
    int32_t ebp15;
    int32_t ebp16;
    struct s623* ebp17;
    int32_t eax18;
    int32_t ebp19;
    int32_t ebp20;
    int1_t cf21;
    int1_t sf22;
    int1_t of23;
    uint1_t less_or_equal24;
    int32_t ebp25;
    struct s624* ebp26;
    struct s625* ebp27;
    struct s626* ebp28;
    int32_t ebp29;
    struct s627* ebp30;
    struct s628* ebp31;
    int32_t ebp32;

    v2 = reinterpret_cast<int32_t>(__return_address());
    if (eax3 < *reinterpret_cast<uint32_t*>(ebp4 - 4)) {
        *reinterpret_cast<int32_t*>(ebp5 - 0x1018) = *reinterpret_cast<int32_t*>(ebp6 - 4);
        edx7 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp8) - 0x1018);
        v9 = ebp10->f8;
        eax12 = fun_4119a0(v9, reinterpret_cast<int32_t>(ebp11) - 0x100c, edx7, 4, 1, *reinterpret_cast<int24_t*>(&v2));
        if (!(reinterpret_cast<unsigned char>(eax12) & 0xffff)) {
            *reinterpret_cast<int32_t*>(ebx13 + 0x552b1055) = *reinterpret_cast<int32_t*>(ebx14 + 0x552b1055) - 1;
        } else {
            *reinterpret_cast<int32_t*>(ebp15 - 0x1010) = *reinterpret_cast<int32_t*>(ebp16 - 0x100c) - ebp17->f20;
            eax18 = *reinterpret_cast<int32_t*>(ebp19 - 0x1018) - *reinterpret_cast<int32_t*>(ebp20 - 0x100c) + 1;
            cf21 = __intrinsic();
            sf22 = eax18 < 0;
            of23 = __intrinsic();
            less_or_equal24 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf22 != of23) | reinterpret_cast<uint1_t>(eax18 == 0));
            *reinterpret_cast<int32_t*>(ebp25 - 0x1014) = eax18;
            do {
            } while (!sf22 && sf22);
            while (cf21 && !cf21) {
            }
            while (less_or_equal24 && !less_or_equal24) {
            }
            while (!of23 && of23) {
            }
            while (!sf22 && sf22) {
            }
            while (cf21 && !cf21) {
            }
            while (less_or_equal24 && !less_or_equal24) {
            }
            while (!of23 && of23) {
            }
            while (!sf22 && sf22) {
            }
        }
    }
    __asm__("clc ");
    ebp26->f16 = edx7;
    ebp27->f12 = ebp28->f12 + *reinterpret_cast<int32_t*>(ebp29 - 8);
    ebp30->f20 = ebp31->f20 + *reinterpret_cast<int32_t*>(ebp32 - 8);
    goto 0x4140fa;
}

void fun_4142ec() {
    __asm__("in al, dx");
    __asm__("out dx, eax");
}

void fun_4142ef(int32_t ecx) {
    *reinterpret_cast<int32_t*>(ecx - 0x75)(__return_address());
    __asm__("lock out dx, eax");
}

void fun_4142f6() {
    int32_t ebp1;
    int32_t ebp2;

    *reinterpret_cast<int32_t*>(ebp1 - 0x1007ea7c) = *reinterpret_cast<int32_t*>(ebp2 - 0x1007ea7c) - 1;
}

void fun_4142fd(int32_t a1, int32_t a2) {
    int32_t eax3;
    int32_t* eax4;
    int32_t ebx5;
    int32_t ebx6;
    int1_t cf7;
    int1_t sf8;
    int32_t ebx9;
    int1_t of10;
    uint1_t less_or_equal11;
    int32_t ebx12;
    int32_t* ebx13;
    int32_t* ebx14;

    eax4 = reinterpret_cast<int32_t*>(*reinterpret_cast<int32_t*>(eax3 - 24)());
    *eax4 = *eax4 + reinterpret_cast<int32_t>(eax4);
    *reinterpret_cast<signed char*>(ebx5 + 0x7eb08c4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx6 + 0x7eb08c4) + *reinterpret_cast<signed char*>(&eax4));
    cf7 = __intrinsic();
    sf8 = *reinterpret_cast<signed char*>(ebx9 + 0x7eb08c4) < 0;
    of10 = __intrinsic();
    less_or_equal11 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf8 != of10) | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(ebx12 + 0x7eb08c4) == 0));
    while (cf7 && !cf7) {
    }
    while (less_or_equal11 && !less_or_equal11) {
    }
    while (!of10 && of10) {
    }
    while (!sf8 && sf8) {
    }
    while (cf7 && !cf7) {
    }
    do {
    } while (less_or_equal11 && !less_or_equal11);
    *ebx13 = *ebx14 + 1;
}

void fun_414357() {
    __asm__("in al, dx");
    __asm__("out dx, eax");
}

void fun_41435a(int32_t ecx) {
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ecx - 0x100b73) = *reinterpret_cast<int32_t*>(ecx - 0x100b73) - 1;
    goto ebx2;
}

struct s629 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_414451(int32_t a1, int32_t a2) {
    int32_t* edx3;
    int32_t eax4;
    struct s629* ebp5;

    *edx3 = eax4;
    goto ebp5->f4;
}

void fun_4146c0() {
    int32_t ebx1;

    goto ebx1;
}

int32_t GetVersion = 0x32a08;

void*** g42ec70;

uint32_t g42ec6c;

void** g42ec68;

uint32_t g42ec64;

int32_t GetCommandLineA = 0x326c0;

void** fun_416828() {
    int32_t eax1;
    int32_t eax2;
    signed char al3;
    void* esp4;
    void* ebp5;
    struct s46* eax6;
    struct s46* v7;
    void** v8;
    void** ebx9;
    void** v10;
    void** esi11;
    void** v12;
    void** edi13;
    uint32_t eax14;
    void*** edx15;
    uint32_t ecx16;
    void** ecx17;
    int32_t eax18;
    void** v19;
    void** v20;
    void** v21;
    int32_t eax22;
    void** v23;
    struct s35* eax24;
    void** v25;
    void** v26;
    void** v27;
    void** eax28;
    struct s35* eax29;
    struct s35* v30;
    uint32_t v31;
    void* v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** eax43;
    struct s35* esi44;
    uint32_t eax45;
    uint32_t v46;
    void** eax47;
    void** eax48;
    void** eax49;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax2) + al3);
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebp5 = esp4;
    eax6 = g0;
    v7 = eax6;
    g0 = reinterpret_cast<struct s46*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4);
    v8 = ebx9;
    v10 = esi11;
    v12 = edi13;
    eax14 = reinterpret_cast<uint32_t>(GetVersion(v12, v10, v8));
    edx15 = reinterpret_cast<void***>(0);
    *reinterpret_cast<signed char*>(&edx15) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax14) + 1);
    g42ec70 = edx15;
    ecx16 = eax14 & 0xff;
    g42ec6c = ecx16;
    ecx17 = reinterpret_cast<void**>((ecx16 << 8) + reinterpret_cast<uint32_t>(edx15));
    g42ec68 = ecx17;
    g42ec64 = eax14 >> 16;
    eax18 = fun_4170b0(v12, v10, v8);
    if (!eax18) {
        fun_416a10(28, v12, v10, v8, v19);
    }
    eax22 = fun_4194b0(v12, v10, v8, v20, v21);
    if (!eax22) {
        fun_416a10(16, v12, v10, v8, v23);
    }
    fun_41abf0(v12, v10, v8);
    fun_41a6f0(ecx17, v12, v10, v8);
    eax24 = reinterpret_cast<struct s35*>(GetCommandLineA(v12, v10, v8));
    g4313b0 = eax24;
    eax28 = fun_41b7d0(ecx17, v12, v10, v8, v25, v26, v27);
    g42ecc4 = eax28;
    if (!eax28 || (eax29 = g4313b0, !eax29)) {
        fun_415820(ecx17, 0xff, v12, v10, v8, v30, v31, v32, v33, v34, v35);
    }
    fun_41b520(v12, v10, v8);
    eax43 = fun_41b430(ecx17, v12, v10, v8, v36, v37, v38, v39, v40, v41, v42);
    fun_4157f0(v12, v10, v8);
    esi44 = g4313b0;
    if (!reinterpret_cast<int1_t>(esi44->f0 == 34)) {
        while (reinterpret_cast<unsigned char>(esi44->f0) > 32) {
            esi44 = reinterpret_cast<struct s35*>(&esi44->f1);
        }
    } else {
        while ((esi44 = reinterpret_cast<struct s35*>(&esi44->f1), eax43 = esi44->f0, eax43 != 34) && eax43) {
            eax43 = fun_41b3d0(reinterpret_cast<unsigned char>(eax43) & 0xff, v12, v10, v8);
            if (!eax43) 
                continue;
            esi44 = reinterpret_cast<struct s35*>(&esi44->f1);
        }
        if (reinterpret_cast<int1_t>(esi44->f0 == 34)) 
            goto addr_0x416966_14;
    }
    addr_0x41696a_15:
    while (esi44->f0 && reinterpret_cast<unsigned char>(esi44->f0) <= 32) {
        esi44 = reinterpret_cast<struct s35*>(&esi44->f1);
    }
    GetStartupInfoA(reinterpret_cast<int32_t>(ebp5) - 92, v12, v10, v8);
    if (1) {
        eax45 = 10;
    } else {
        eax45 = v46 & 0xffff;
    }
    eax47 = reinterpret_cast<void**>(GetModuleHandleA());
    eax48 = fun_40ce40(ecx17);
    eax49 = fun_415820(ecx17, eax48, eax47, 0, 0, esi44, eax45, reinterpret_cast<int32_t>(ebp5) - 92, v12, v10, v8);
    g0 = v7;
    return eax49;
    addr_0x416966_14:
    esi44 = reinterpret_cast<struct s35*>(&esi44->f1);
    goto addr_0x41696a_15;
}

struct s630 {
    signed char[1] pad1;
    signed char f1;
};

struct s631 {
    signed char[1] pad1;
    signed char f1;
};

struct s632 {
    signed char[2] pad2;
    signed char f2;
};

struct s633 {
    signed char[2] pad2;
    signed char f2;
};

struct s634 {
    signed char[3] pad3;
    int32_t f3;
};

struct s635 {
    signed char[3] pad3;
    int32_t f3;
};

void fun_416bb0(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    struct s630* edi6;
    struct s631* esi7;
    uint32_t ecx8;
    struct s632* edi9;
    struct s633* esi10;
    int32_t* esi11;
    struct s634* esi12;
    int32_t* edi13;
    struct s635* edi14;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    edi6->f1 = esi7->f1;
    ecx8 = ecx >> 2;
    edi9->f2 = esi10->f2;
    esi11 = &esi12->f3;
    edi13 = &edi14->f3;
    if (ecx8 < 8) 
        goto 0x416b9c;
    while (ecx8) {
        --ecx8;
        *edi13 = *esi11;
        ++edi13;
        ++esi11;
    }
    switch (edx2) {
    case 3:
        goto 0x416cc0;
    case 2:
        goto 0x416cac;
    case 1:
        goto 0x416ca0;
    case 0:
        goto 0x416c98;
    }
}

struct s636 {
    signed char[3] pad3;
    signed char f3;
};

struct s637 {
    signed char[3] pad3;
    signed char f3;
};

void fun_416d38(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s636* edi4;
    struct s637* esi5;
    int32_t* esi6;
    void* esi7;
    uint32_t ecx8;
    int32_t* edi9;
    void* edi10;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    esi6 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi7) - 1);
    ecx8 = ecx >> 2;
    edi9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi10) - 1);
    if (ecx8 < 8) 
        goto 0x416d00;
    while (ecx8) {
        --ecx8;
        *edi9 = *esi6;
        --edi9;
        --esi6;
    }
    switch (edx2) {
    case 3:
        goto 0x416e5c;
    case 2:
        goto 0x416e48;
    case 1:
        goto 0x416e38;
    case 0:
        goto 0x416e30;
    }
}

void fun_416dd4(int32_t ecx) {
    void* edi2;
    void* esi3;
    void* edi4;
    void* esi5;
    void* edi6;
    void* esi7;
    void* edi8;
    void* esi9;
    void* edi10;
    void* esi11;
    void* edi12;
    void* esi13;
    void* edi14;
    void* esi15;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi2) + ecx * 4 + 28) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi3) + ecx * 4 + 28);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi4) + ecx * 4 + 24) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi5) + ecx * 4 + 24);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi6) + ecx * 4 + 20) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi7) + ecx * 4 + 20);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi8) + ecx * 4 + 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi9) + ecx * 4 + 16);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi10) + ecx * 4 + 12) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi11) + ecx * 4 + 12);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi12) + ecx * 4 + 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi13) + ecx * 4 + 8);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi14) + ecx * 4 + 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi15) + ecx * 4 + 4);
}

signed char g5050105;

void fun_418734() {
    signed char al1;

    g5050105 = reinterpret_cast<signed char>(g5050105 + al1);
}

void fun_41875c() {
    int32_t eax1;
    int32_t eax2;
    signed char al3;
    int32_t eax4;
    signed char al5;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax2) + al3);
    *reinterpret_cast<signed char*>(&eax4) = reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(al5 + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax4) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax4) + eax4;
}

struct s638 {
    signed char[269488144] pad269488144;
    unsigned char f269488144;
};

unsigned char g10100e10;

void fun_4187d0(uint32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char dl4;
    int32_t* eax5;
    int32_t* eax6;
    int32_t edx7;
    void* edx8;
    signed char dl9;
    signed char* eax10;
    unsigned char* eax11;
    signed char* eax12;
    unsigned char* eax13;
    signed char* eax14;
    unsigned char* eax15;
    signed char* eax16;
    unsigned char* eax17;
    signed char* eax18;
    unsigned char* eax19;
    signed char* eax20;
    unsigned char* edx21;
    void** eax22;
    unsigned char* eax23;
    signed char* eax24;
    void* eax25;
    void* eax26;
    signed char al27;
    unsigned char* eax28;
    struct s638* eax29;
    uint32_t ecx30;

    *eax2 = reinterpret_cast<signed char>(*eax3 + dl4);
    *eax5 = *eax6 + edx7;
    *reinterpret_cast<signed char*>(&edx8) = reinterpret_cast<signed char>(dl9 + *eax10);
    *eax11 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax12 + *reinterpret_cast<signed char*>(&edx8)) + __intrinsic());
    *eax13 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax14 + *reinterpret_cast<signed char*>(&edx8)) + __intrinsic());
    *eax15 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax16 + *reinterpret_cast<signed char*>(&edx8)) + __intrinsic());
    *eax17 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax18 + *reinterpret_cast<signed char*>(&edx8)) + __intrinsic());
    *eax19 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax20 + *reinterpret_cast<signed char*>(&edx8)) + __intrinsic());
    edx21 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx8) + reinterpret_cast<int32_t>(*eax22));
    *eax23 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax24 + *reinterpret_cast<unsigned char*>(&edx21)) + __intrinsic());
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<uint32_t>(edx21)) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax26) + reinterpret_cast<uint32_t>(edx21)) + al27) + __intrinsic());
    eax28 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax29) + 0x10101010);
    *eax28 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax28 + *reinterpret_cast<unsigned char*>(&edx21)) + __intrinsic());
    *eax28 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax28 + *reinterpret_cast<unsigned char*>(&edx21)) + __intrinsic());
    *eax28 = reinterpret_cast<unsigned char>(*eax28 | *reinterpret_cast<unsigned char*>(&ecx));
    *eax28 = reinterpret_cast<unsigned char>(*eax28 | *reinterpret_cast<unsigned char*>(&edx21));
    *eax28 = reinterpret_cast<unsigned char>(*eax28 | reinterpret_cast<uint32_t>(edx21));
    *eax28 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax28 + *reinterpret_cast<unsigned char*>(&edx21))));
    *edx21 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*edx21 + *reinterpret_cast<unsigned char*>(&ecx)) + __intrinsic());
    ecx30 = ecx | *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax28) + reinterpret_cast<uint32_t>(edx21));
    g10100e10 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(g10100e10 + *reinterpret_cast<signed char*>(&ecx30))));
    *(eax28 - 0x6f6f6f70) = static_cast<unsigned char>(__intrinsic());
}

struct s639 {
    signed char[151587078] pad151587078;
    uint32_t f151587078;
};

void fun_41a004(unsigned char* ecx) {
    uint32_t eax2;
    uint32_t* edx3;
    uint32_t* edx4;
    uint32_t eax5;
    struct s639* eax6;
    void* eax7;
    uint32_t* eax8;
    uint32_t* edi9;
    uint32_t* edi10;

    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(&ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | eax2);
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *edx3 = *edx4 | eax5;
    eax6 = reinterpret_cast<struct s639*>(reinterpret_cast<int32_t>(eax7) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx) + reinterpret_cast<uint32_t>(ecx))));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    eax8 = &eax6->f151587078;
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *edi9 = *edi10 | reinterpret_cast<uint32_t>(eax8);
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *eax8 = *eax8 | reinterpret_cast<uint32_t>(ecx);
}

void fun_41a6ac() {
    int32_t eax1;
    int32_t eax2;
    signed char al3;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax2) + al3);
}

struct s640 {
    signed char[1] pad1;
    signed char f1;
};

struct s641 {
    signed char[1] pad1;
    signed char f1;
};

struct s642 {
    signed char[2] pad2;
    signed char f2;
};

struct s643 {
    signed char[2] pad2;
    signed char f2;
};

struct s644 {
    signed char[3] pad3;
    int32_t f3;
};

struct s645 {
    signed char[3] pad3;
    int32_t f3;
};

void fun_41d5f0(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    struct s640* edi6;
    struct s641* esi7;
    uint32_t ecx8;
    struct s642* edi9;
    struct s643* esi10;
    int32_t* esi11;
    struct s644* esi12;
    int32_t* edi13;
    struct s645* edi14;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    edi6->f1 = esi7->f1;
    ecx8 = ecx >> 2;
    edi9->f2 = esi10->f2;
    esi11 = &esi12->f3;
    edi13 = &edi14->f3;
    if (ecx8 < 8) 
        goto 0x41d5dc;
    while (ecx8) {
        --ecx8;
        *edi13 = *esi11;
        ++edi13;
        ++esi11;
    }
    switch (edx2) {
    case 3:
        goto 0x41d700;
    case 2:
        goto 0x41d6ec;
    case 1:
        goto 0x41d6e0;
    case 0:
        goto 0x41d6d8;
    }
}

struct s646 {
    signed char[3] pad3;
    signed char f3;
};

struct s647 {
    signed char[3] pad3;
    signed char f3;
};

void fun_41d778(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s646* edi4;
    struct s647* esi5;
    int32_t* esi6;
    void* esi7;
    uint32_t ecx8;
    int32_t* edi9;
    void* edi10;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    esi6 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi7) - 1);
    ecx8 = ecx >> 2;
    edi9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi10) - 1);
    if (ecx8 < 8) 
        goto 0x41d740;
    while (ecx8) {
        --ecx8;
        *edi9 = *esi6;
        --edi9;
        --esi6;
    }
    switch (edx2) {
    case 3:
        goto 0x41d89c;
    case 2:
        goto 0x41d888;
    case 1:
        goto 0x41d878;
    case 0:
        goto 0x41d870;
    }
}

void fun_41d814(int32_t ecx) {
    void* edi2;
    void* esi3;
    void* edi4;
    void* esi5;
    void* edi6;
    void* esi7;
    void* edi8;
    void* esi9;
    void* edi10;
    void* esi11;
    void* edi12;
    void* esi13;
    void* edi14;
    void* esi15;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi2) + ecx * 4 + 28) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi3) + ecx * 4 + 28);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi4) + ecx * 4 + 24) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi5) + ecx * 4 + 24);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi6) + ecx * 4 + 20) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi7) + ecx * 4 + 20);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi8) + ecx * 4 + 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi9) + ecx * 4 + 16);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi10) + ecx * 4 + 12) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi11) + ecx * 4 + 12);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi12) + ecx * 4 + 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi13) + ecx * 4 + 8);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi14) + ecx * 4 + 4) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi15) + ecx * 4 + 4);
}

int32_t RegOpenKeyA = 0x328b2;

struct s648 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_41f000(void** ecx, void** a2, void** a3) {
    uint96_t v2;
    void*** ebp4;
    void** esi5;
    void** v6;
    void** ebp7;
    void** eax8;
    void** esi9;
    struct s648* ebx10;
    unsigned char bh11;
    void* ecx12;
    int32_t edx13;
    int32_t edi14;
    int32_t edx15;
    int32_t edx16;

    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8) = a2;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4) = reinterpret_cast<void**>(__return_address());
    ebp4 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax8 = fun_420230(ecx, 0x429198, esi5, 0, v6, ebp7, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8), a3);
    esi9 = eax8;
    if (!esi9) {
        __asm__("clc ");
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 5);
    } else {
        RegOpenKeyA(0x80000002, esi9, ebp4 - 4);
        if (__intrinsic() || (ebp4 = ebp4, !__intrinsic())) {
        }
        do {
            ebp4 = ebp4;
        } while (!__intrinsic());
        do {
            *reinterpret_cast<unsigned char*>(&ebx10) = 0;
        } while (!__intrinsic());
        ebx10->f4 = reinterpret_cast<unsigned char>(ebx10->f4 ^ bh11);
        ecx12 = reinterpret_cast<void*>(ebp4 - 8);
        fun_41f0e0(ecx12, edx13, ecx12);
        if (!(__intrinsic() || (ebx10 = ebx10, !__intrinsic()))) {
            ebx10->f4 = reinterpret_cast<unsigned char>(ebx10->f4 + edi14 + __intrinsic());
        }
        if (!(__intrinsic() || !__intrinsic())) {
            *reinterpret_cast<uint32_t*>(esi9 + 0xffffffe8) = *reinterpret_cast<uint32_t*>(esi9 + 0xffffffe8) - (edx15 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(esi9 + 0xffffffe8) < edx16 + __intrinsic()));
        }
    }
}

void fun_41f0ac() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 + 0x47b04c4) = *reinterpret_cast<int32_t*>(ebx2 + 0x47b04c4) + 1;
    if (__intrinsic() || !__intrinsic()) {
        goto 0x41f0d4;
    }
}

void fun_41f157() {
    int32_t eax1;

    *reinterpret_cast<int32_t*>(eax1 - 0x73)(__return_address());
}

struct s649 {
    signed char[82] pad82;
    int32_t f82;
};

struct s650 {
    signed char[30] pad30;
    signed char f30;
};

void fun_41f15e(struct s649* ecx, int32_t a2, int32_t a3) {
    int32_t ebp4;
    int32_t edi5;
    void* eax6;
    void* ebp7;
    void* ebp8;
    struct s650* ebp9;
    signed char* eax10;
    int32_t ebx11;

    ecx->f82(__return_address());
    *reinterpret_cast<int32_t*>(ebp4 - 4) = 0x104;
    eax6 = fun_41f2c0(edi5, __return_address(), a2, a3);
    if (__intrinsic() || (ebp7 = ebp8, !__intrinsic())) {
    }
    ebp9 = reinterpret_cast<struct s650*>(reinterpret_cast<int32_t>(ebp7) + 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp9) + reinterpret_cast<int32_t>(eax6) - 0x110) = 0;
    if (__intrinsic() || (ecx = ecx, !__intrinsic())) {
        ecx = ecx;
    } else {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp9) - 0x10f73) = *reinterpret_cast<signed char*>(&ecx);
    }
    eax10 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) - 24)());
    __asm__("outsb ");
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&eax10));
    *reinterpret_cast<signed char*>(ebx11 - 0x7a99fb3c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx11 - 0x7a99fb3c) + *reinterpret_cast<signed char*>(&eax10));
    ebp9->f30 = 0;
    if (__intrinsic() || !__intrinsic()) {
    }
}

struct s651 {
    signed char[4] pad4;
    signed char f4;
};

struct s652 {
    signed char[4] pad4;
    signed char f4;
};

struct s653 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_41f1d8(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    struct s651* ebx4;
    struct s652* ebx5;
    signed char bh6;
    struct s653* ebp7;

    if (pf2 || !pf3) {
    }
    ebx4->f4 = reinterpret_cast<signed char>(ebx5->f4 + bh6);
    goto ebp7->f4;
}

void fun_41f253(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    int1_t pf4;

    if (pf2 || !pf3) {
    }
    pf4 = __intrinsic();
    do {
        __asm__("fucomi st0, st3");
    } while (!pf4);
    __asm__("rcl byte [eax+0x68], cl");
}

unsigned char g7815ff56;

void fun_41f274(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** eax13;
    int1_t pf14;
    unsigned char* ebx15;
    int32_t esi16;
    int32_t esi17;

    eax13 = fun_42026c(ecx, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    pf14 = __intrinsic();
    if (!eax13) {
        if (!(pf14 || !pf14)) {
            g7815ff56 = *reinterpret_cast<unsigned char*>(&eax13);
        }
        *reinterpret_cast<unsigned char*>(&eax13) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax13) & *ebx15);
        pf14 = __intrinsic();
        if (eax13 != 0xffffffff) {
        }
    }
    if (!pf14 && pf14) {
    }
    if (pf14) 
        goto addr_0x41f2ab_11;
    if (pf14) 
        goto addr_0x41f2b4_13;
    addr_0x41f2ab_11:
    addr_0x41f2b5_14:
    addr_0x41f2b4_13:
    *reinterpret_cast<int32_t*>(esi16 - 0x75) = *reinterpret_cast<int32_t*>(esi17 - 0x75) << *reinterpret_cast<unsigned char*>(&ecx);
    goto addr_0x41f2b5_14;
}

void fun_41f2b8(int32_t a1, int32_t a2, int32_t a3) {
    goto a3;
}

void fun_41f35e() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 + 0x47b04c4) = *reinterpret_cast<int32_t*>(ebx2 + 0x47b04c4) + 1;
    goto 0x41f36e;
}

void fun_41f378() {
    int1_t pf1;
    int1_t pf2;

    if (pf1 || !pf2) {
    }
}

void fun_41fdfc() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 + 0x47b04c4) = *reinterpret_cast<int32_t*>(ebx2 + 0x47b04c4) + 1;
    goto 0x41fe0c;
}

void fun_41fef0(int32_t ecx) {
    int32_t ebx2;
    int32_t ebx3;

    *reinterpret_cast<int32_t*>(ebx2 + 0x47b04c4) = *reinterpret_cast<int32_t*>(ebx3 + 0x47b04c4) + 1;
    goto 0x41ff00;
}

struct s654 {
    signed char[94] pad94;
    int32_t f94;
};

void fun_4208d6() {
    struct s654* edi1;

    edi1->f94(__return_address());
}

void fun_420a7e(int32_t ecx) {
    *reinterpret_cast<int32_t*>(ecx - 0x75)(__return_address());
    __asm__("in al, dx");
    __asm__("out dx, eax");
}

void fun_420a85() {
    int32_t edx1;

    *reinterpret_cast<int32_t*>(edx1 - 0x75)(__return_address());
    __asm__("out dx, eax");
}

struct s655 {
    signed char[8] pad8;
    void** f8;
};

void fun_53420a80(void** a1);

struct s656 {
    signed char[4] pad4;
    signed char f4;
};

struct s657 {
    signed char[4] pad4;
    signed char f4;
};

void fun_420a8c(int32_t ecx, void** a2, void** a3) {
    int32_t eax4;
    struct s655* ebp5;
    void* ebp6;
    unsigned char dl7;
    uint32_t* edi8;
    int32_t edi9;
    int32_t* edi10;
    int32_t edi11;
    int32_t edx12;
    uint32_t* edi13;
    int32_t edi14;
    uint32_t edx15;
    int32_t ebx16;
    int32_t ebx17;
    void** v18;
    void** ecx19;
    void** eax20;
    struct s656* ebx21;
    struct s657* ebx22;
    signed char bh23;

    *reinterpret_cast<int32_t*>(eax4 - 0x73)(__return_address());
    ebp5 = reinterpret_cast<struct s655*>(reinterpret_cast<int32_t>(ebp6) - 1);
    *reinterpret_cast<unsigned char*>(ecx - 24) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx - 24) | dl7);
    edi8[edi9 * 2] = edi10[edi11 * 2] - (edx12 + reinterpret_cast<uint1_t>(edi13[edi14 * 2] < edx15));
    *reinterpret_cast<int32_t*>(ebx16 - 0x6a72ef3c) = *reinterpret_cast<int32_t*>(ebx17 - 0x6a72ef3c) + 1;
    fun_53420a80(__return_address());
    v18 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp5) - 0x1018);
    ecx19 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp5) - 0x1010);
    eax20 = fun_411eb0(ecx19, &ebp5->f8, ecx19, v18, __return_address(), a2, a3);
    if (__intrinsic() || !__intrinsic()) {
        ebp5 = ebp5;
    } else {
        ebx21->f4 = reinterpret_cast<signed char>(ebx22->f4 + bh23);
    }
    *reinterpret_cast<void***>(eax20) = *reinterpret_cast<void***>(eax20) + 1;
    *reinterpret_cast<signed char*>(&(ebp5 - 0xcfa4840)->pad8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&(ebp5 - 0xcfa4840)->pad8) + *reinterpret_cast<signed char*>(&eax20));
}

void fun_420aed() {
    __asm__("lock out dx, eax");
}

struct s658 {
    signed char[8] pad8;
    int32_t f8;
    int32_t f12;
    int32_t f16;
};

void fun_53420ae8(int32_t a1);

void fun_420af0(int32_t ecx) {
    struct s658* eax2;
    int32_t v3;
    int32_t v4;
    int32_t v5;
    void** eax6;
    int32_t ebx7;
    int32_t ebx8;

    eax2 = reinterpret_cast<struct s658*>(*reinterpret_cast<int32_t*>(ecx - 0x75)(__return_address()));
    fun_53420ae8(__return_address());
    v3 = eax2->f8;
    v4 = eax2->f12;
    v5 = eax2->f16;
    eax6 = fun_420470(v3, v4, v5, reinterpret_cast<int32_t>(eax2) - 0x2018, __return_address());
    if (!(__intrinsic() || (ebx7 = ebx8, !__intrinsic()))) {
        gd287047b = eax6;
    }
    goto ebx7;
}

void fun_420c11() {
    int32_t edx1;

    *reinterpret_cast<int32_t*>(edx1 - 0x75)(__return_address());
    __asm__("out dx, eax");
}

void fun_420c18(int32_t ecx) {
    int32_t eax2;
    unsigned char dl3;
    int32_t ebx4;
    int32_t ebx5;
    int32_t* ebx6;

    *reinterpret_cast<int32_t*>(eax2 - 0x73)(__return_address());
    *reinterpret_cast<unsigned char*>(ecx - 24) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx - 24) | dl3);
    __asm__("insd ");
    *reinterpret_cast<int32_t*>(ebx4 + 0x47b10c4) = *reinterpret_cast<int32_t*>(ebx5 + 0x47b10c4) + 1;
    __asm__("in eax, dx");
    goto *ebx6;
}

void fun_420c61(int32_t ecx) {
    *reinterpret_cast<int32_t*>(ecx - 0x201f6b) = *reinterpret_cast<int32_t*>(ecx - 0x201f6b) - 1;
}

void fun_420c68(signed char cl) {
    int1_t pf2;
    int1_t pf3;
    int32_t* ebx4;

    if (pf2 || !pf3) {
    }
    goto *ebx4;
}

void fun_420c7f(int32_t ecx) {
    int32_t ebx2;
    int32_t ebx3;
    int32_t* ebx4;
    int32_t* ebx5;

    *reinterpret_cast<int32_t*>(ecx - 0x100b7b) = *reinterpret_cast<int32_t*>(ecx - 0x100b7b) - 1;
    *reinterpret_cast<int32_t*>(ebx2 - 0x100773) = *reinterpret_cast<int32_t*>(ebx3 - 0x100773) - 1;
    *ebx4 = *ebx5 + 1;
}

void fun_420c8e() {
    __asm__("in al, dx");
    __asm__("out dx, eax");
}

void fun_420c91(int32_t ecx) {
    *reinterpret_cast<int32_t*>(ecx - 0x100773) = *reinterpret_cast<int32_t*>(ecx - 0x100773) - 1;
}

int32_t fun_8a420ca0(int32_t a1);

void fun_420c98(signed char cl) {
    int1_t pf2;
    int1_t pf3;
    int32_t ebx4;
    int32_t* ebx5;
    int32_t* ebx6;

    if (!(pf2 || !pf3)) {
        *reinterpret_cast<signed char*>(ebx4 - 0x100f6b) = cl;
    }
    *ebx5 = *ebx6 + 1;
    fun_8a420ca0(__return_address());
    __asm__("lock out dx, eax");
}

struct s659 {
    signed char[36] pad36;
    int32_t f36;
};

struct s660 {
    signed char[24] pad24;
    int32_t f24;
};

void fun_420cb6(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    signed char tmp8_4;
    int32_t ebx5;
    signed char al6;
    int32_t* eax7;
    struct s659* ebp8;
    int32_t ebp9;
    struct s660* ebp10;

    if (!(pf2 || !pf3)) {
        tmp8_4 = *reinterpret_cast<signed char*>(ebx5 - 0x201f43);
        *reinterpret_cast<signed char*>(ebx5 - 0x201f43) = al6;
        *reinterpret_cast<signed char*>(&eax7) = tmp8_4;
    }
    *eax7 = *eax7 + 1;
    if (*eax7) {
        if (__intrinsic() || !__intrinsic()) {
        }
        __asm__("in eax, dx");
        *eax7 = *eax7 + 1;
        if (!*eax7) {
            *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp8) - 0x100c) = ebp8->f36;
            if (__intrinsic() || !__intrinsic()) {
            }
            __asm__("lock out dx, eax");
        }
    } else {
        *reinterpret_cast<int32_t*>(ebp9 - 0x2020) = ebp10->f24;
        if (__intrinsic() || !__intrinsic()) {
        }
        __asm__("clc ");
        __asm__("out dx, eax");
    }
}

void fun_420ce9(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    int32_t esi4;
    int32_t esi5;
    uint1_t cf6;

    if (!(pf2 || !pf3)) {
        *reinterpret_cast<uint32_t*>(esi4 - 0x75) = *reinterpret_cast<int32_t*>(esi5 - 0x75) + reinterpret_cast<int32_t>(__zero_stack_offset()) + cf6;
    }
    __asm__("in al, 0xdf");
}

void fun_420cfb() {
    int32_t esi1;

    goto *reinterpret_cast<int32_t*>(esi1 - 0x7d);
}

void fun_420dbe(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    int32_t esi4;
    int32_t esi5;
    int32_t ebp6;
    int16_t dx7;

    if (!(pf2 || !pf3)) {
        *reinterpret_cast<signed char*>(esi4 - 0x75) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi5 - 0x75) << *reinterpret_cast<unsigned char*>(&ecx));
    }
    *reinterpret_cast<int16_t*>(ebp6 - 4) = reinterpret_cast<int16_t>(dx7 + 1);
    if (__intrinsic() || !__intrinsic()) {
        goto 0x420de2;
    }
}

void fun_420de4() {
    __asm__("sti ");
}

struct s661 {
    signed char[94] pad94;
    int32_t f94;
};

struct s662 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_420de6() {
    struct s661* edi1;
    struct s662* ebp2;

    edi1->f94();
    goto ebp2->f4;
}

struct s663 {
    signed char[8] pad8;
    void** f8;
};

struct s664 {
    signed char[12] pad12;
    int32_t f12;
};

struct s665 {
    signed char[16] pad16;
    int32_t f16;
};

signed char g42eb08a1;

void* g42eb08;

void fun_c9c91727();

void fun_4211de() {
    void** ecx1;
    void** v2;
    struct s663* ebp3;
    int32_t v4;
    struct s664* ebp5;
    int32_t v6;
    struct s665* ebp7;
    void* eax8;
    int32_t ebp9;
    int32_t ebp10;
    signed char* ebx11;
    signed char* ebx12;
    int32_t ebp13;
    int1_t pf14;

    ecx1 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12);
    v2 = ebp3->f8;
    v4 = ebp5->f12;
    v6 = ebp7->f16;
    eax8 = fun_413a9f(ecx1, v2, v4, v6, __return_address());
    if (!(__intrinsic() || (ebp9 = ebp10, !__intrinsic()))) {
        *reinterpret_cast<signed char*>(&eax8) = g42eb08a1;
    }
    *ebx11 = reinterpret_cast<signed char>(*ebx12 + *reinterpret_cast<signed char*>(&eax8));
    ebp13 = ebp9 + 1;
    pf14 = __intrinsic();
    g42eb08 = eax8;
    if (pf14 || (ecx1 = ecx1, !pf14)) {
        ecx1 = ecx1;
    } else {
        pf14 = __intrinsic();
    }
    do {
    } while (!pf14);
    __asm__("clc ");
    *reinterpret_cast<void***>(ebp13 - 12) = ecx1;
    if (!(__intrinsic() || !__intrinsic())) {
        __asm__("fimul word [ebx+0x5589fc55]");
    }
    fun_c9c91727();
    __asm__("wait ");
}

void fun_42167a(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* ebx4;
    signed char* ebx5;
    signed char bh6;
    int1_t zf7;
    signed char* ebx8;
    int32_t ebp9;
    uint32_t eax10;
    int32_t* eax11;
    int32_t ebx12;
    int32_t ebx13;
    signed char* ebx14;
    signed char* ebx15;

    *eax2 = *eax3 + 1;
    *ebx4 = reinterpret_cast<signed char>(*ebx5 + bh6);
    zf7 = *ebx8 == 0;
    if (!zf7 || (eax10 = fun_422b40(0x42eb08, ebp9, __return_address()), eax11 = reinterpret_cast<int32_t*>(eax10 & 0xffff), eax11 == 0)) {
        goto 0x4215ff;
    }
    if (!__intrinsic() && __intrinsic()) {
    }
    if (__intrinsic()) 
        goto addr_0x4216aa_7;
    if (__intrinsic()) 
        goto addr_0x4216b3_9;
    addr_0x4216aa_7:
    ecx = ecx;
    addr_0x4216b4_10:
    *eax11 = *eax11 + 1;
    *reinterpret_cast<signed char*>(ebx12 + 0x42eb080d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx13 + 0x42eb080d) + *reinterpret_cast<signed char*>(&ecx));
    *ebx14 = reinterpret_cast<signed char>(*ebx15 + *reinterpret_cast<signed char*>(&eax11));
    __asm__("enter 0xd89, 0x8");
    goto 0x421723;
    addr_0x4216b3_9:
    goto addr_0x4216b4_10;
}

int32_t g5a3e9;

struct s666 {
    signed char[4] pad4;
    signed char f4;
};

struct s667 {
    signed char[4] pad4;
    signed char f4;
};

struct s668 {
    signed char[4] pad4;
    int32_t f4;
    signed char[12] pad20;
    signed char* f20;
    int16_t f24;
    signed char[2] pad28;
    signed char* f28;
};

struct s669 {
    struct s668* f0;
    int16_t f4;
};

struct s670 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s671 {
    signed char[4] pad4;
    int32_t f4;
};

struct s672 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4219ff(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t ebx4;
    int32_t ebx5;
    signed char al6;
    uint32_t edi7;
    uint32_t edi8;
    int32_t eax9;
    struct s666* ebx10;
    struct s667* ebx11;
    signed char bh12;
    struct s668* ebp13;
    struct s669* ebp14;
    int16_t* esp15;
    struct s670* ebx16;
    struct s671* ebx17;
    uint32_t edi18;
    struct s672* ebx19;
    signed char* eax20;
    signed char* eax21;
    signed char al22;
    int32_t eax23;
    uint32_t eax24;
    uint32_t ecx25;
    uint32_t eax26;
    uint32_t ecx27;
    void* edx28;
    uint32_t ecx29;
    uint32_t edx30;
    void* eax31;
    uint32_t edx32;
    uint32_t eax33;
    void* ecx34;
    uint32_t eax35;
    uint32_t ecx36;
    uint32_t eax37;
    uint32_t ecx38;
    void* ecx39;
    void* edx40;
    uint32_t edi41;
    int16_t es42;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(ebx4 + 0x117308fa) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx5 + 0x117308fa) + al6);
    if (__intrinsic() || !__intrinsic()) {
        edi7 = edi8;
    } else {
        g5a3e9 = eax9;
    }
    ebx10->f4 = reinterpret_cast<signed char>(ebx11->f4 + bh12);
    ebp13 = ebp14->f0;
    esp15 = &ebp14->f4;
    if (!(__intrinsic() || !__intrinsic())) {
        ebx16->f4 = ebx17->f4 + edi7 + __intrinsic();
    }
    edi18 = edi7;
    do {
        *reinterpret_cast<unsigned char*>(&ebx19) = 0;
    } while (!__intrinsic());
    ebx19->f4 = ebx19->f4 - (edi18 + reinterpret_cast<uint1_t>(ebx19->f4 < edi18 + __intrinsic()));
    *eax20 = reinterpret_cast<signed char>(*eax21 + al22);
    ebp13->f24 = reinterpret_cast<int16_t>(ebp13->f24 - 1);
    if (!eax23) {
        goto ebp13->f4;
    } else {
        eax24 = 0;
        *reinterpret_cast<signed char*>(&eax24) = *ebp13->f20;
        ecx25 = 0;
        *reinterpret_cast<signed char*>(&ecx25) = *reinterpret_cast<signed char*>(&g42eb08);
        eax26 = eax24 ^ ecx25;
        *ebp13->f20 = *reinterpret_cast<signed char*>(&eax26);
        ecx27 = 0;
        *reinterpret_cast<signed char*>(&ecx27) = *ebp13->f20;
        edx28 = g42eb08;
        ecx29 = ecx27 ^ reinterpret_cast<uint32_t>(edx28) >> 8 & 0xff;
        *ebp13->f20 = *reinterpret_cast<signed char*>(&ecx29);
        edx30 = 0;
        *reinterpret_cast<signed char*>(&edx30) = *ebp13->f20;
        eax31 = g42eb08;
        edx32 = edx30 ^ reinterpret_cast<uint32_t>(eax31) >> 16 & 0xff;
        *ebp13->f20 = *reinterpret_cast<signed char*>(&edx32);
        eax33 = 0;
        *reinterpret_cast<signed char*>(&eax33) = *ebp13->f20;
        ecx34 = g42eb08;
        eax35 = eax33 ^ reinterpret_cast<uint32_t>(ecx34) >> 24 & 0xff;
        *ebp13->f20 = *reinterpret_cast<signed char*>(&eax35);
        ecx36 = 0;
        *reinterpret_cast<signed char*>(&ecx36) = *ebp13->f20;
        eax37 = 0;
        *reinterpret_cast<signed char*>(&eax37) = *ebp13->f28;
        ecx38 = ecx36 ^ eax37;
        *ebp13->f20 = *reinterpret_cast<signed char*>(&ecx38);
        ecx39 = reinterpret_cast<void*>(0);
        *reinterpret_cast<signed char*>(&ecx39) = *ebp13->f20;
        edx40 = g42eb08;
        g42eb08 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx40) + reinterpret_cast<uint32_t>(ecx39));
        ebp13->f20 = ebp13->f20 + 1;
        ebp13->f28 = ebp13->f28 + 1;
        if (__intrinsic() || !__intrinsic()) {
            ebx19 = ebx19;
        } else {
            __asm__("fidivr dword [ebx+0x4]");
        }
        edi41 = edi18;
        do {
            --esp15;
            *esp15 = es42;
        } while (!__undefined());
        ebx19->f4 = ebx19->f4 ^ edi41;
    }
}

struct s673 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421d21(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* ebx4;
    signed char* ebx5;
    signed char bh6;
    int1_t zf7;
    signed char* ebx8;
    int32_t ebp9;
    uint32_t eax10;
    void** eax11;
    signed char bl12;
    uint32_t edx13;
    uint32_t edx14;
    int1_t less15;
    unsigned char edi16;
    unsigned char edi17;
    int32_t ebp18;
    int32_t ebp19;
    unsigned char edi20;
    int32_t ebx21;
    int32_t ebx22;
    unsigned char* ebx23;
    signed char* ebx24;
    int32_t ecx25;
    unsigned char edi26;
    int32_t ebp27;
    int1_t pf28;
    struct s673* ebx29;
    struct s673* ebx30;
    unsigned char tmp8_31;
    int32_t ecx32;
    unsigned char tmp32_33;
    unsigned char edi34;
    struct s673* ebx35;
    void* eax36;

    *eax2 = *eax3 + 1;
    *ebx4 = reinterpret_cast<signed char>(*ebx5 + bh6);
    zf7 = *ebx8 == 0;
    __asm__("clc ");
    if (!zf7 || (eax10 = fun_422b40(0x42eb08, ebp9, __return_address()), eax11 = reinterpret_cast<void**>(eax10 & 0xffff), eax11 == 0)) {
        *reinterpret_cast<void***>(eax11) = *reinterpret_cast<void***>(eax11) + 1;
        *reinterpret_cast<signed char*>(ecx - 0x3dd43dcd) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx - 0x3dd43dcd) + bl12);
        eax11 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(eax11) & 15 ^ edx13) - edx14);
        less15 = reinterpret_cast<signed char>(eax11) < reinterpret_cast<signed char>(0);
        if (eax11) {
            addr_0x421fb6_3:
            while (!less15) {
            }
        } else {
            if (__intrinsic() || !__intrinsic()) {
                ecx = ecx;
            } else {
                __asm__("fidivr dword [ebx+0x4]");
            }
            edi16 = edi17;
            goto addr_0x421dfa_14;
        }
    } else {
        if (__intrinsic() || (ebp18 = ebp19, !__intrinsic())) {
            ecx = ecx;
        } else {
            __asm__("arpl [ebx+0x4], di");
        }
        ecx = ecx;
        edi16 = edi20;
        *reinterpret_cast<void***>(eax11) = *reinterpret_cast<void***>(eax11) + 1;
        *reinterpret_cast<signed char*>(ebx21 + 0x42eb080d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx22 + 0x42eb080d) + *reinterpret_cast<signed char*>(&ecx));
        *ebx23 = reinterpret_cast<unsigned char>(*ebx24 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
        __asm__("enter 0xd89, 0x8");
        goto addr_0x421dfa_14;
    }
    addr_0x421dfa_14:
    ecx25 = ecx;
    edi26 = edi16;
    ebp27 = ebp18;
    *reinterpret_cast<void***>(eax11) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax11)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    pf28 = __intrinsic();
    if (pf28 || (edi26 = edi26, !pf28)) {
        ebp27 = ebp27;
    } else {
        gd287047b = eax11;
    }
    if (!(pf28 || (ebx29 = ebx30, !pf28))) {
        tmp8_31 = ebx29->f4;
        ebx29->f4 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx29) + 1);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx29) + 1) = tmp8_31;
    }
    if (pf28 || (ebp27 = ebp27, !pf28)) {
        ebp27 = ebp27;
    } else {
        ebx29->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx29->f4) >> 0xffffff87);
        pf28 = __intrinsic();
    }
    do {
        __asm__("fucomi st0, st3");
    } while (!pf28);
    ebx29->f4 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx29) + 1);
    ecx32 = ecx25;
    if (!(pf28 || (ebp27 = ebp27, !pf28))) {
        tmp32_33 = ebx29->f4;
        ebx29->f4 = edi26;
        edi26 = tmp32_33;
    }
    edi34 = edi26;
    ebx35 = ebx29;
    do {
        *reinterpret_cast<unsigned char*>(&ebx35) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx35) >> *reinterpret_cast<signed char*>(&ecx32));
    } while (!__intrinsic());
    ebx35->f4 = reinterpret_cast<unsigned char>(ebx35->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx35) + 1));
    eax36 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(ebp27 - 4)));
    less15 = reinterpret_cast<int32_t>(eax36) < reinterpret_cast<int32_t>(0) != __intrinsic();
    g42eb08 = eax36;
    if (!(__intrinsic() || !__intrinsic())) {
        less15 = reinterpret_cast<signed char>(ebx35->f4) < reinterpret_cast<signed char>(edi34);
        ebx35->f4 = reinterpret_cast<unsigned char>(ebx35->f4 - edi34);
    }
    goto addr_0x421fb6_3;
}

struct s674 {
    signed char[94] pad94;
    int32_t f94;
};

void fun_421fba() {
    struct s674* edi1;

    edi1->f94(__return_address());
}

struct s675 {
    signed char[8] pad8;
    int32_t f8;
};

struct s676 {
    signed char[8] pad8;
    int32_t f8;
};

void fun_42211b(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t ebx4;
    int32_t ebx5;
    int32_t edx6;
    struct s675* ebp7;
    struct s676* ebp8;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(ebx4 + 0x88a0845) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx5 + 0x88a0845) + *reinterpret_cast<signed char*>(&ecx));
    *reinterpret_cast<signed char*>(edx6 + 0x42eaf8) = *reinterpret_cast<signed char*>(&ecx);
    ebp7->f8 = ebp8->f8 + 1;
    if (__intrinsic() || !__intrinsic()) {
    }
}

void fun_422145(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t edx4;
    int32_t edx5;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(edx4 - 0x777703b3) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx5 - 0x777703b3) + cl);
}

struct s677 {
    signed char[94] pad94;
    int32_t f94;
};

struct s678 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422151(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    struct s677* edi4;
    struct s678* ebp5;

    if (pf2 || !pf3) {
        ecx = ecx;
    } else {
        __asm__("fnstcw word [ebx+0x4]");
    }
    edi4->f94(ecx);
    goto ebp5->f4;
}

struct s679 {
    signed char[104] pad104;
    unsigned char f104;
};

struct s680 {
    signed char[104] pad104;
    unsigned char f104;
};

void fun_422478() {
    int32_t ebx1;
    int32_t ebx2;
    int1_t pf3;
    struct s679* edx4;
    struct s680* edx5;
    unsigned char dl6;

    *reinterpret_cast<int32_t*>(ebx1 + 0x47b04c4) = *reinterpret_cast<int32_t*>(ebx2 + 0x47b04c4) + 1;
    pf3 = __intrinsic();
    do {
    } while (!pf3);
    edx4->f104 = reinterpret_cast<unsigned char>(edx5->f104 | dl6);
}

void fun_4224e6(int32_t a1, void** a2) {
    void** v3;
    int32_t ebp4;
    void** v5;
    int32_t ebp6;
    int32_t v7;
    int32_t ebp8;

    v3 = *reinterpret_cast<void***>(ebp4 - 12);
    v5 = *reinterpret_cast<void***>(ebp6 - 8);
    v7 = *reinterpret_cast<int32_t*>(ebp8 - 4);
    fun_4205b5(v3, v5, v7, ".txt", __return_address(), a1, a2);
    if (__intrinsic() || !__intrinsic()) {
    }
}

struct s681 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422541() {
    int32_t ebx1;
    int32_t ebx2;
    struct s681* ebp3;

    *reinterpret_cast<int32_t*>(ebx1 + 0x47b04c4) = *reinterpret_cast<int32_t*>(ebx2 + 0x47b04c4) + 1;
    goto ebp3->f4;
}

struct s682 {
    signed char[4] pad4;
    int32_t f4;
};

struct s683 {
    signed char[94] pad94;
    unsigned char f94;
};

struct s684 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422967(int32_t a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** v14;
    int32_t ebp15;
    void** v16;
    int32_t ebp17;
    int32_t v18;
    int32_t ebp19;
    int32_t eax20;
    int1_t pf21;
    struct s682* ebx22;
    struct s682* ebx23;
    void** ecx24;
    struct s683* edi25;
    struct s683* edi26;
    signed char* eax27;
    void* ebp28;
    struct s684* ebp29;
    void* edi30;
    uint32_t edi31;

    v14 = *reinterpret_cast<void***>(ebp15 - 12);
    v16 = *reinterpret_cast<void***>(ebp17 - 8);
    v18 = *reinterpret_cast<int32_t*>(ebp19 - 4);
    eax20 = fun_4205b5(v14, v16, v18, ".txt", __return_address(), a1, a2);
    pf21 = __intrinsic();
    if (!pf21 && (ebx22 = ebx23, pf21)) {
    }
    ecx24 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 12);
    if (pf21) 
        goto addr_0x422998_5;
    if (pf21) 
        goto addr_0x4229a1_7;
    addr_0x422998_5:
    edi25 = edi26;
    addr_0x4229a2_8:
    if (!(pf21 || (ecx24 = ecx24, !pf21))) {
        *reinterpret_cast<signed char*>(&eax20) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax20) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx22) + 1));
    }
    eax27 = reinterpret_cast<signed char*>(eax20 + 0x42eb08);
    *eax27 = reinterpret_cast<signed char>(*eax27 + *reinterpret_cast<signed char*>(&eax27));
    *eax27 = reinterpret_cast<signed char>(*eax27 + *reinterpret_cast<signed char*>(&eax27));
    fun_4118a0(ecx24, reinterpret_cast<int32_t>(ebp28) + 0xfffffff4, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    if (!(__intrinsic() || !__intrinsic())) {
        edi25->f94 = reinterpret_cast<unsigned char>(edi25->f94 | *reinterpret_cast<unsigned char*>(&ebx22));
    }
    goto ebp29->f4;
    addr_0x4229a1_7:
    edi25 = reinterpret_cast<struct s683*>(reinterpret_cast<int32_t>(edi30) - (ebx22->f4 + reinterpret_cast<uint1_t>(edi31 < ebx22->f4 + __intrinsic())));
    pf21 = __intrinsic();
    goto addr_0x4229a2_8;
}

struct s685 {
    signed char[4] pad4;
    signed char f4;
};

struct s686 {
    struct s686* f0;
    int32_t f4;
    uint32_t* f8;
};

void** gdb87047b;

void fun_422b8b(int32_t* ecx, int32_t a2, int32_t a3) {
    int32_t eax4;
    void* eax5;
    void** eax6;
    uint1_t cf7;
    int1_t pf8;
    struct s685* ebx9;
    struct s686* ebp10;
    struct s686* ebp11;
    struct s685* ebx12;
    uint32_t eax13;

    eax5 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(eax4 - 1)());
    eax6 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax5) + 0x43229c + cf7);
    pf8 = __intrinsic();
    if (!eax6) {
        if (!(pf8 || !pf8)) {
            ebx9->f4 = reinterpret_cast<signed char>(ebx9->f4 >> 0x87);
        }
    } else {
        if (pf8 || !pf8) {
            ebp10 = ebp11;
        }
        ebx9 = ebx12;
        *ecx = *ecx + 1;
        if (*ecx) 
            goto addr_0x422c23_15; else 
            goto addr_0x422bd4_16;
    }
    ebp10 = ebp10->f0;
    *ebp10->f8 = reinterpret_cast<uint32_t>(ecx) & 0xff;
    addr_0x422ca4_22:
    goto ebp10->f4;
    addr_0x422c23_15:
    pf8 = __intrinsic();
    if (*reinterpret_cast<int32_t*>(&(ebp10 - 11)->f0) == 2) {
        if (!(pf8 || (ebx9 = ebx9, !pf8))) {
            ebx9->f4 = reinterpret_cast<signed char>(ebx9->f4 >> 0xffffff87);
        }
        goto ebx9;
    }
    addr_0x422bd4_16:
    if (!(__intrinsic() || !__intrinsic())) {
        eax6 = gdb87047b;
    }
    if (!(__intrinsic() || !__intrinsic())) {
        __asm__("fidivr word [ebx+0x4]");
    }
    eax13 = reinterpret_cast<uint32_t>(eax6 + 0x3b7d0000);
    *reinterpret_cast<signed char*>(&eax13) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax13) + 0x66);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp10) - 0x98) = eax13;
    goto addr_0x422ca4_22;
}

struct s687 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422fda(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    struct s687* ebx4;
    struct s687* ebx5;

    *reinterpret_cast<int32_t*>(eax2 + eax3 + 0x47b0000)(__return_address());
    __asm__("in eax, dx");
    ebx4 = ebx5;
    do {
        *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) >> 6);
    } while (!__intrinsic());
    ebx4->f4 = reinterpret_cast<signed char>(ebx4->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1));
    __asm__("in eax, dx");
}

struct s688 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s689 {
    signed char[4] pad4;
    int32_t f4;
};

int32_t gf687047b;

void fun_423130(int32_t* ecx, int32_t a2, int32_t a3, int32_t a4) {
    uint1_t cf5;
    int1_t pf6;
    int32_t eax7;
    struct s688* ebx8;
    struct s688* ebx9;
    struct s689* ebp10;
    struct s689* ebp11;
    uint32_t edi12;
    int32_t* edx13;
    int32_t* edx14;
    int1_t pf15;
    uint1_t zf16;
    uint1_t less_or_equal17;
    void** eax18;
    void* eax19;
    void* eax20;
    struct s688* ebx21;
    int1_t pf22;
    signed char al23;
    signed char* eax24;
    signed char* eax25;
    signed char al26;
    int16_t ax27;

    cf5 = 0;
    pf6 = __intrinsic();
    if (!eax7) {
        addr_0x423415_2:
        if (!(pf6 || !pf6)) {
            __asm__("fdivr qword [ebx+0x4]");
        }
    } else {
        if (!(pf6 || (ebx8 = ebx9, !pf6))) {
            ebx8->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx8->f4) >> *reinterpret_cast<signed char*>(&ecx));
            cf5 = __intrinsic();
            pf6 = __intrinsic();
        }
        ebp10 = ebp11;
        if (pf6 || (ebp10 = ebp10, !pf6)) {
            ecx = ecx;
        } else {
            ebx8->f4 = reinterpret_cast<unsigned char>(ebx8->f4 + edi12);
            cf5 = __intrinsic();
        }
        edx13 = edx14;
        *ecx = *ecx + 1;
        pf15 = __intrinsic();
        zf16 = reinterpret_cast<uint1_t>(*ecx == 0);
        less_or_equal17 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(*ecx < 0 != __intrinsic()) | zf16);
        if (!zf16) 
            goto addr_0x4232a8_44; else 
            goto addr_0x42321d_45;
    }
    __asm__("in eax, dx");
    ebp10 = ebp10;
    do {
    } while (!__intrinsic());
    __asm__("fdivr qword [ebx+0x4]");
    *reinterpret_cast<void***>(eax18) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax18)) + reinterpret_cast<unsigned char>(eax18));
    addr_0x423485_63:
    goto ebp10->f4;
    addr_0x4232a8_44:
    if (!(pf15 || (edx13 = edx13, !pf15))) {
        eax19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax20) - 0x3f78fb85 + cf5);
        pf15 = __intrinsic();
    }
    do {
        __asm__("fucomi st0, st3");
        addr_0x4232c7_70:
        ebx8 = ebx8;
    } while (!pf15);
    eax18 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax19) - 0x3f78fb85);
    if (__intrinsic() || (edx13 = edx13, !__intrinsic())) {
        ebx8 = ebx8;
    } else {
        ebx8->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx8->f4) >> 1);
    }
    ebx21 = ebx8;
    *edx13 = *edx13 + 1;
    pf6 = __intrinsic();
    if (*edx13) 
        goto addr_0x423415_2;
    if (pf6 || (ebx21 = ebx21, !pf6)) {
    }
    do {
        *reinterpret_cast<int16_t*>(&eax18) = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax18)) * *reinterpret_cast<signed char*>(&ebx21));
    } while (!__undefined());
    ebx21->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx21->f4) >> 1);
    pf22 = __intrinsic();
    if (!(pf22 || (ebp10 = ebp10, !pf22))) {
        ebx21->f4 = 0;
        pf22 = __intrinsic();
    }
    ebp10 = ebp10;
    if (!(pf22 || (ebp10 = ebp10, !pf22))) {
        gdb87047b = eax18;
    }
    __asm__("aad 0x16");
    *reinterpret_cast<void***>(eax18) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax18)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *reinterpret_cast<int16_t*>(&(ebp10 - 19)->pad4) = *reinterpret_cast<int16_t*>(&eax18);
    goto addr_0x423485_63;
    addr_0x42321d_45:
    if (!(pf15 || (ebp10 = ebp10, !pf15))) {
        *reinterpret_cast<signed char*>(&gf687047b) = al23;
    }
    ebp10 = ebp10;
    if (less_or_equal17) 
        goto addr_0x4232c7_70;
    *eax24 = reinterpret_cast<signed char>(*eax25 + al26);
    *reinterpret_cast<int16_t*>(&(ebp10 - 19)->pad4) = ax27;
    goto addr_0x423485_63;
}

void fun_423af8() {
    int1_t pf1;
    int1_t pf2;

    if (pf1 || !pf2) {
    }
}

void fun_423b0a(int32_t* ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t* edi4;
    int32_t eax5;

    *ecx = *ecx + 1;
    *reinterpret_cast<signed char*>(eax2 - 0x80) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax3 - 0x80) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *edi4 = eax5;
}

void fun_423b16() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 - 0x7a76fb3c) = *reinterpret_cast<int32_t*>(ebx2 - 0x7a76fb3c) + 1;
}

struct s690 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s691 {
    signed char[4] pad4;
    int32_t f4;
};

struct s692 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_423b20(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    int1_t pf8;
    int1_t pf9;
    int32_t ebx10;
    int32_t eax11;
    int32_t eax12;
    int32_t* eax13;
    int32_t ebp14;
    int32_t edi15;
    int32_t edi16;
    void** eax17;
    int32_t ebp18;
    struct s690* ebx19;
    struct s691* ebx20;
    struct s692* ebx21;

    if (!(pf8 || (ecx = ecx, !pf9))) {
        ecx = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx) ^ *reinterpret_cast<uint32_t*>(ebx10 - 0xb77b));
    }
    eax12 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax11 - 1)(__return_address()));
    eax13 = reinterpret_cast<int32_t*>(eax12 + 0x432354);
    *reinterpret_cast<int32_t**>(ebp14 - 0xc4) = eax13;
    if (__intrinsic() || !__intrinsic()) {
        edi15 = edi16;
    } else {
        __asm__("fld qword [ebx+0xffff3cbd]");
    }
    *eax13 = *eax13 + 1;
    if (*eax13) {
        eax17 = fun_420230(ecx, 0x42ab90, __return_address(), a2, a3, a4, a5, a6, a7);
        *reinterpret_cast<void***>(ebp18 - 0xcc) = eax17;
        if (!(__intrinsic() || !__intrinsic())) {
            ebx19->f4 = ebx20->f4 - (edi15 + reinterpret_cast<uint1_t>(ebx21->f4 < edi15 + __intrinsic()));
        }
        *reinterpret_cast<int32_t*>(ecx + 0xffffff8b)(__return_address());
    }
}

struct s693 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s694 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423bbf(int32_t ecx) {
    int32_t edx2;
    int32_t eax3;
    int32_t ebp4;
    uint1_t cf5;
    int1_t cf6;
    int32_t ebp7;
    int1_t pf8;
    int32_t ebp9;
    int32_t ebp10;
    int32_t* eax11;
    uint32_t edi12;
    struct s693* ebx13;
    struct s694* ebx14;
    struct s694* ebx15;

    eax3 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(edx2 - 1)(__return_address()));
    *reinterpret_cast<uint32_t*>(ebp4 - 0xd0) = eax3 + 0x4322ac + cf5;
    cf6 = *reinterpret_cast<uint32_t*>(ebp7 - 0xd0) < 0;
    pf8 = __intrinsic();
    if (!*reinterpret_cast<int32_t*>(ebp9 - 0xd0)) 
        goto "h";
    if (!(pf8 || !pf8)) {
        cf6 = 0;
        pf8 = __intrinsic();
    }
    GetCurrentProcess(7, ebp10 - 8, 4, __return_address());
    eax11 = reinterpret_cast<int32_t*>(*reinterpret_cast<int32_t*>(ebp10 - 0xd0)());
    *reinterpret_cast<int32_t**>(ebp10 - 0xd4) = eax11;
    if (!(pf8 || !pf8)) {
        cf6 = edi12 < ebx13->f4;
    }
    *eax11 = *eax11 + 1;
    if (cf6) 
        goto "h";
    if (*reinterpret_cast<int32_t*>(ebp10 - 8)) 
        goto "h";
    if (__intrinsic() || !__intrinsic()) {
        ebx14 = ebx15;
    }
    do {
    } while (!__undefined());
    ebx14->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx14) + 1);
}

struct s695 {
    signed char[4] pad4;
    signed char f4;
};

struct s696 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423c9c() {
    int32_t* eax1;
    int32_t* eax2;
    struct s695* ebx3;
    struct s696* ebx4;
    signed char bh5;

    *eax1 = *eax2 + 1;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 + bh5);
    goto "h";
}

void fun_423cd8() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 - 0x7a76fb3c) = *reinterpret_cast<int32_t*>(ebx2 - 0x7a76fb3c) + 1;
}

struct s697 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_423ce2(unsigned char cl, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** ecx1;
    uint240_t v2;
    int1_t pf3;
    int32_t ebp4;
    int32_t ebp5;
    int1_t pf6;
    int32_t edx7;
    int32_t edx8;
    int32_t ebx9;
    uint1_t cf10;
    uint1_t cf11;
    int32_t eax12;
    int32_t* eax13;
    void** eax14;
    int32_t edx15;
    struct s697* ebx16;
    struct s697* ebx17;
    int16_t es18;
    int32_t eax19;
    int32_t eax20;
    int32_t* eax21;
    void** eax22;
    int1_t pf23;
    void** v24;
    int32_t eax25;

    *reinterpret_cast<unsigned char*>(&ecx1) = cl;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 6) = a2;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10) = a3;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 14) = a4;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 18) = a5;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 22) = a6;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 26) = a7;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 2) = reinterpret_cast<void**>(__return_address());
    if (pf3 || (ebp4 = ebp5, !pf6)) {
        edx7 = edx8;
    } else {
        *reinterpret_cast<unsigned char*>(&ecx1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx1) + *reinterpret_cast<signed char*>(ebx9 - 0xaf73)) + cf10);
        cf11 = __intrinsic();
    }
    eax12 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(ecx1 + 0xffffffff)(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 2)));
    eax13 = reinterpret_cast<int32_t*>(eax12 + 0x432354 + cf11);
    *reinterpret_cast<int32_t**>(ebp4 - 0xa4) = eax13;
    if (__intrinsic() || !__intrinsic()) {
        ebp4 = ebp4;
    }
    *eax13 = *eax13 + 1;
    if (*eax13) {
        eax14 = fun_420230(ecx1, 0x42ab40, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 2), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 6), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 14), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 18), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 22), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 26));
        *reinterpret_cast<void***>(ebp4 - 0xac) = eax14;
        if (!__intrinsic() && (ebp4 = ebp4, __intrinsic())) {
        }
        edx15 = edx7;
        if (__intrinsic()) 
            goto addr_0x423d3b_13;
        edx15 = edx15;
        if (!__intrinsic()) 
            goto addr_0x423d3b_13; else 
            goto addr_0x423d44_15;
    }
    addr_0x423d3b_13:
    addr_0x423d45_20:
    ebx16 = ebx17;
    do {
        *reinterpret_cast<int16_t*>(&v2) = es18;
        edx15 = edx15;
    } while (!__undefined());
    ebx16->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx16->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx16) + 1)) + __intrinsic());
    eax19 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(edx15 - 0x75)(*reinterpret_cast<int16_t*>(&v2)));
    eax20 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax19 - 1)(*reinterpret_cast<int16_t*>(&v2)));
    eax21 = reinterpret_cast<int32_t*>(eax20 + 0x4322ac);
    *reinterpret_cast<int32_t**>(ebp4 - 0xbc) = eax21;
    if (!(__intrinsic() || (ecx1 = ecx1, !__intrinsic()))) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx16) - 0xbb43) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx16) - 0xbb43) ^ *reinterpret_cast<unsigned char*>(&eax21));
    }
    *eax21 = *eax21 + 1;
    if (*eax21) {
        eax22 = fun_420230(ecx1, 0x42ab10, *reinterpret_cast<void***>(&v2), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 12), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 20), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 24));
        pf23 = __intrinsic();
        *reinterpret_cast<void***>(ebp4 - 0xa0) = eax22;
        if (pf23 || !pf23) {
            ebp4 = ebp4;
        } else {
            pf23 = __intrinsic();
        }
        v24 = *reinterpret_cast<void***>(ebp4 - 0xa0);
        eax25 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t**>(ebp4 - 0xbc)(v24, 0xc0000000, 3, 0, 3, 0x80, *reinterpret_cast<int16_t*>(&v2)));
        *reinterpret_cast<int32_t*>(ebp4 - 0xc8) = eax25;
        if (pf23 || !pf23) {
        }
        do {
        } while (!pf23);
        __asm__("rol byte [ebx+0xffff38bd], 0xff");
    }
    addr_0x423d44_15:
    __asm__("fnstcw word [ebx+0x4]");
    goto addr_0x423d45_20;
}

struct s698 {
    signed char f0;
    signed char[47] pad48;
    signed char f48;
};

struct s699 {
    signed char[4] pad4;
    int32_t f4;
};

struct s700 {
    signed char[1] pad1;
    struct s698* f1;
};

signed char fun_423e36() {
    int32_t edx1;
    int32_t eax2;
    struct s698* eax3;
    uint1_t cf4;
    struct s699* ebx5;
    int32_t edi6;
    signed char ch7;
    struct s700* edi8;
    signed char ch9;

    eax2 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(edx1 - 1)());
    eax3 = reinterpret_cast<struct s698*>(eax2 + 0x432274 + cf4);
    if (!(__intrinsic() || !__intrinsic())) {
        ebx5->f4 = edi6;
    }
    eax3->f0 = reinterpret_cast<signed char>(eax3->f0 + *reinterpret_cast<signed char*>(&eax3));
    eax3->f48 = reinterpret_cast<signed char>(eax3->f48 + ch7);
    edi8->f1 = eax3;
    __asm__("retf ");
    return *reinterpret_cast<signed char*>(&eax3) + ch9;
}

void fun_423e64() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 - 0x7a76fb3c) = *reinterpret_cast<int32_t*>(ebx2 - 0x7a76fb3c) + 1;
}

void fun_423e6e(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    int32_t ebp4;
    int32_t ebp5;
    signed char* edx6;
    signed char* edx7;
    int1_t pf8;
    int32_t v9;
    int32_t eax10;

    if (pf2 || !pf3) {
        ebp4 = ebp5;
    } else {
        *edx6 = reinterpret_cast<signed char>(*edx7 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        pf8 = __intrinsic();
    }
    v9 = *reinterpret_cast<int32_t*>(ebp4 - 0xc0);
    eax10 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(ebp4 - 0xbc)(v9, 0xc0000000, 3, 0, 3, 0x80, __return_address()));
    *reinterpret_cast<int32_t*>(ebp4 - 0xc8) = eax10;
    if (pf8 || !pf8) {
    }
}

void fun_423ee1() {
}

void fun_423ee9(int32_t ecx) {
    *reinterpret_cast<int32_t*>(ecx - 1)(__return_address());
    if (__intrinsic() || !__intrinsic()) {
    }
    goto 0x423f09;
}

struct s701 {
    signed char[8] pad8;
    uint32_t* f8;
};

void fun_423f27(int32_t* ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t edx4;
    int32_t eax5;
    signed char* eax6;
    struct s701* ebp7;
    void* ebp8;

    *ecx = *ecx + 1;
    *reinterpret_cast<int32_t*>(eax2 + eax3 + 0x47b0000)(__return_address());
    eax5 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(edx4 - 1)(__return_address()));
    eax6 = reinterpret_cast<signed char*>(eax5 + 0x43229c);
    if (!eax6) {
        ebp7 = reinterpret_cast<struct s701*>(reinterpret_cast<int32_t>(ebp8) + 1);
        *eax6 = reinterpret_cast<signed char>(*eax6 + *reinterpret_cast<signed char*>(&eax6));
        if (!(__intrinsic() || (ecx = ecx, !__intrinsic()))) {
            __asm__("arpl [ebx+0x4], di");
        }
        do {
        } while (!__undefined());
        __asm__("fmul qword [ebx+0x88b0845]");
        *ebp7->f8 = reinterpret_cast<uint32_t>(ecx) & *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp7) - 0xc8);
        if (__intrinsic() || !__intrinsic()) {
        }
    } else {
        if (__intrinsic() || !__intrinsic()) {
        }
        do {
        } while (!__undefined());
    }
}

struct s702 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_423f85(int32_t ecx) {
    int1_t pf2;
    int32_t* edx3;
    int32_t* edx4;
    int1_t pf5;
    struct s702* ebx6;

    if (pf2 || (edx3 = edx4, !pf5)) {
    }
    do {
        *reinterpret_cast<unsigned char*>(&ebx6) = 0;
        ebx6 = ebx6;
    } while (!__intrinsic());
    *edx3 = *edx3 + 1;
    if (*edx3) 
        goto 0x42400f;
    if (!__intrinsic() && __intrinsic()) {
    }
    if (__intrinsic()) 
        goto addr_0x423fb4_11;
    if (__intrinsic()) 
        goto addr_0x423fbd_13;
    addr_0x423fb4_11:
    addr_0x423fbe_14:
    addr_0x423fbd_13:
    ebx6->f4 = 0;
    goto addr_0x423fbe_14;
}

struct s703 {
    signed char[4] pad4;
    signed char f4;
};

struct s704 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423fdc() {
    int32_t* eax1;
    int32_t* eax2;
    struct s703* ebx3;
    struct s704* ebx4;
    signed char bh5;

    *eax1 = *eax2 + 1;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 + bh5);
    goto 0x42400f;
}

void fun_424067() {
    int32_t ebp1;

    *reinterpret_cast<int32_t*>(ebp1 - 4) = 0x47b0001;
    goto gffff;
}

struct s705 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424249(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    int32_t* edi4;
    void* edi5;
    struct s705* ebx6;
    int32_t ecx7;
    int32_t eax8;

    if (!(pf2 || !pf3)) {
        edi4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi5) - ebx6->f4);
    }
    ecx7 = ecx;
    do {
        ecx7 = ecx7;
        *edi4 = eax8;
        ++edi4;
        *reinterpret_cast<signed char*>(&eax8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax8) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx7) + 1));
    } while (*reinterpret_cast<signed char*>(&eax8) < 0 == __intrinsic());
}

void fun_4242b2() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 - 0x74affb3c) = *reinterpret_cast<int32_t*>(ebx2 - 0x74affb3c) + 1;
}

struct s706 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s707 {
    signed char[32] pad32;
    int32_t f32;
    signed char[12] pad48;
    void** f48;
};

struct s707* g18;

struct s708 {
    signed char[28] pad28;
    uint32_t f28;
};

struct s708* g42ec24;

void** g42ec20;

void** g42eb1c;

void fun_4242bc(int32_t ecx) {
    uint96_t v2;
    int32_t eax3;
    int32_t eax4;
    uint1_t cf5;
    signed char* eax6;
    int32_t ebp7;
    int32_t ebp8;
    int32_t ebp9;
    int32_t ebp10;
    int32_t edi11;
    int32_t edi12;
    int32_t edi13;
    int32_t ebp14;
    int32_t ebp15;
    struct s706* ebx16;
    int16_t es17;
    int32_t ebp18;
    int1_t pf19;
    int32_t ebp20;
    struct s707* eax21;
    void** ecx22;
    void** eax23;
    int1_t pf24;
    int32_t ebp25;
    int1_t zf26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** eax31;
    void** ecx32;
    int1_t pf33;
    int1_t pf34;
    int1_t zf35;
    int1_t zf36;
    struct s708* eax37;
    void** ecx38;
    int32_t ebp39;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 6) = reinterpret_cast<int32_t>(__return_address());
    eax4 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax3 - 1)(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 6)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&v2) + 2) = eax4 + 0x432354 + cf5;
    eax6 = reinterpret_cast<signed char*>(GetProcAddress(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&v2) + 2), *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 6)));
    *reinterpret_cast<signed char**>(ebp7 - 16) = eax6;
    if (!*reinterpret_cast<int32_t*>(ebp8 - 16)) {
        addr_0x424302_2:
    } else {
        eax6 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(ebp9 - 16)(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&v2) + 2), *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 6)));
        *reinterpret_cast<int16_t*>(ebp10 - 0xb4) = *reinterpret_cast<int16_t*>(&eax6);
        if (!__intrinsic() && (edi11 = edi12, __intrinsic())) {
        }
        if (__intrinsic()) 
            goto addr_0x4242ec_7;
        ecx = ecx;
        if (!__intrinsic()) 
            goto addr_0x4242ec_7; else 
            goto addr_0x4242f5_9;
    }
    edi13 = edi11;
    ebp14 = ebp15;
    do {
        *reinterpret_cast<unsigned char*>(&ebx16) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx16) >> *reinterpret_cast<signed char*>(&ecx));
        *reinterpret_cast<int16_t*>(&v2) = es17;
        edi13 = edi13;
    } while (!__intrinsic());
    ebp18 = ebp14 + 1;
    *eax6 = reinterpret_cast<signed char>(*eax6 + reinterpret_cast<int32_t>(eax6));
    *eax6 = reinterpret_cast<signed char>(*eax6 + *reinterpret_cast<signed char*>(&eax6));
    pf19 = __intrinsic();
    if (!(pf19 || (ebp18 = ebp18, !pf19))) {
        ebx16->f4 = reinterpret_cast<unsigned char>(ebx16->f4 + edi13 + __intrinsic());
        pf19 = __intrinsic();
    }
    if (pf19 || (ebp18 = ebp18, !pf19)) {
    }
    ebp20 = ebp18;
    eax21 = g18;
    ecx22 = eax21->f48;
    eax23 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx22 + 2))));
    pf24 = __intrinsic();
    if (!eax23) {
        eax23 = reinterpret_cast<void**>(0);
        pf24 = __intrinsic();
        *reinterpret_cast<void***>(ebp20 - 4) = reinterpret_cast<void**>(0);
    }
    __asm__("popad ");
    if (!(pf24 || (ebp20 = ebp20, !pf24))) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx16) + 1) = ebx16->f4;
    }
    ebp25 = ebp20;
    *reinterpret_cast<void***>(eax23) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax23)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    if (!*reinterpret_cast<void***>(eax23) || (zf26 = g42ec24 == 0, zf26)) {
        eax31 = fun_420230(ecx22, 0x42ab00, *reinterpret_cast<void***>(&v2), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8), v27, v28, v29, v30);
        eax23 = reinterpret_cast<void**>(GetModuleHandleA(eax31, *reinterpret_cast<int16_t*>(&v2)));
        g42ec20 = eax23;
        if (__intrinsic() || !__intrinsic()) {
        }
        *reinterpret_cast<void***>(eax23) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax23)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
        if (*reinterpret_cast<void***>(eax23)) {
            ecx32 = g42ec20;
            g42eb1c = ecx32;
            if (__intrinsic() || !__intrinsic()) {
                ebp25 = ebp25;
            }
            eax23 = fun_411c70(0x42eb18, eax31, 0x42eb18, eax31);
            pf33 = __intrinsic();
            if (!(pf33 || !pf33)) {
                eax23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax23) & 0xc987047b);
                pf33 = __intrinsic();
            }
            ebp25 = ebp25;
            if (pf33 || !pf33) {
            }
            ebx16 = ebx16;
        }
    }
    *reinterpret_cast<int32_t*>(ebp25 - 0xa8) = 0xff;
    pf34 = __intrinsic();
    zf35 = g42ec20 == 0;
    if (zf35 || (pf34 = __intrinsic(), zf36 = g42ec24 == 0, zf36)) {
        if (!(pf34 || !pf34)) {
            gc087047b = eax23;
        }
    } else {
        eax37 = g42ec24;
        ecx38 = g42ec20;
        *reinterpret_cast<uint32_t*>(ebp25 - 0xac) = reinterpret_cast<unsigned char>(ecx38) + eax37->f28;
        if (!(__intrinsic() || !__intrinsic())) {
            ebx16->f4 = reinterpret_cast<unsigned char>(ebx16->f4 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx16) + 1) + reinterpret_cast<uint1_t>(ebx16->f4 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx16) + 1) + __intrinsic()))));
        }
    }
    addr_0x4242ec_7:
    addr_0x4242f6_99:
    ebp15 = ebp39;
    goto addr_0x424302_2;
    addr_0x4242f5_9:
    __asm__("fdivr qword [ebx+0x4]");
    goto addr_0x4242f6_99;
}

struct s709 {
    signed char[4] pad4;
    signed char f4;
};

struct s710 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424595() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    struct s709* ebx6;
    struct s710* ebx7;
    signed char bh8;
    int32_t* eax9;
    int32_t* eax10;
    signed char* eax11;
    signed char* eax12;
    signed char al13;
    int32_t ebx14;
    signed char bl15;
    signed char ch16;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    ebx6->f4 = reinterpret_cast<signed char>(ebx7->f4 + bh8);
    *eax9 = *eax10 + 1;
    *eax11 = reinterpret_cast<signed char>(*eax12 + al13);
    *reinterpret_cast<signed char*>(&ebx14) = reinterpret_cast<signed char>(bl15 + ch16);
    if (!__intrinsic()) 
        goto 0x418a4c;
    *reinterpret_cast<int32_t*>(ebx14 - 0x6a76fe3e) = *reinterpret_cast<int32_t*>(ebx14 - 0x6a76fe3e) + 1;
}

void fun_4245c0(int32_t ecx) {
    goto *reinterpret_cast<int32_t*>(ecx + 0x42ec24);
}

struct s711 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s712 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42465a(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    int1_t pf4;
    int1_t pf5;
    struct s711* ebx6;
    struct s712* ebx7;
    uint32_t edi8;

    if (!(pf2 || !pf3)) {
        __asm__("fstp tword [ebx+0x4]");
    }
    if (!(pf4 || !pf5)) {
        ebx6->f4 = ebx7->f4 & edi8;
    }
}

struct s713 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4246ad(int32_t* ecx) {
    struct s713* ebx2;
    signed char bh3;
    signed char al4;
    uint1_t cf5;
    int32_t eax6;
    int32_t eax7;
    struct s713* ebx8;
    int32_t edx9;
    int32_t eax10;
    int32_t* edx11;
    int32_t* edx12;
    int32_t* edx13;

    *ecx = *ecx + 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx2) + 1) = reinterpret_cast<signed char>(bh3 + al4);
    cf5 = 0;
    *reinterpret_cast<int32_t*>(eax6 + eax7 + 0x47b0000)(__return_address());
    if (!(__intrinsic() || !__intrinsic())) {
        ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx2->f4) >> 1);
        cf5 = __intrinsic();
    }
    ebx8 = ebx2;
    eax10 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(edx9 - 1)(__return_address()));
    if (!(eax10 + 0x43229c + cf5)) {
        __asm__("hlt ");
    } else {
        if (!__intrinsic() && __intrinsic()) {
        }
        if (__intrinsic()) 
            goto addr_0x424701_14;
        ebx8 = ebx8;
        if (__intrinsic()) 
            goto addr_0x42470a_16;
    }
    addr_0x424701_14:
    ecx = ecx;
    addr_0x42470b_17:
    do {
        *reinterpret_cast<unsigned char*>(&ebx8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx8) >> *reinterpret_cast<signed char*>(&ecx));
        ebx8 = ebx8;
    } while (!__intrinsic());
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) + ebx8->f4);
    *edx11 = *edx12 + 1;
    if (!*edx13) {
        if (!(__intrinsic() || !__intrinsic())) {
            ebx8->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx8->f4 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1)) + __intrinsic());
        }
        do {
        } while (!__intrinsic());
    }
    addr_0x42470a_16:
    ebx8->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx8->f4) >> 0x87);
    goto addr_0x42470b_17;
}

struct s714 {
    signed char[4] pad4;
    signed char f4;
};

struct s715 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424762() {
    int32_t* eax1;
    int32_t* eax2;
    struct s714* ebx3;
    struct s715* ebx4;
    signed char bh5;

    *eax1 = *eax2 + 1;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 + bh5);
    goto 0x424795;
}

struct s716 {
    signed char[15] pad15;
    signed char f15;
};

struct s717 {
    signed char[15] pad15;
    signed char f15;
};

struct s718 {
    signed char[8] pad8;
    uint32_t** f8;
};

struct s719 {
    signed char[8] pad8;
    uint32_t* f8;
};

struct s720 {
    signed char[8] pad8;
    uint32_t* f8;
};

struct s721 {
    signed char[8] pad8;
    uint32_t*** f8;
};

struct s722 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s723 {
    signed char[8] pad8;
    uint32_t* f8;
};

void fun_424847(int32_t ecx) {
    struct s716* ebp2;
    struct s717* ebp3;
    signed char dh4;
    uint32_t** eax5;
    int32_t ebp6;
    struct s718* ebp7;
    struct s719* ebp8;
    int32_t ebp9;
    int32_t ebp10;
    struct s720* ebp11;
    uint32_t*** ecx12;
    struct s721* ebp13;
    int32_t ebp14;
    struct s722* ebx15;
    struct s722* ebx16;
    struct s723*** ebp17;
    struct s723*** ebp18;
    int1_t pf19;
    struct s723** ebp20;
    struct s723* ebp21;
    int1_t pf22;

    *reinterpret_cast<int32_t*>(ecx - 0x3827cef) = *reinterpret_cast<int32_t*>(ecx - 0x3827cef) - 1;
    ebp2->f15 = reinterpret_cast<signed char>(ebp3->f15 + dh4);
    eax5 = reinterpret_cast<uint32_t**>(*reinterpret_cast<uint32_t*>(ebp6 - 0xb4) & 0xffff);
    if (eax5) {
        eax5 = ebp7->f8;
        *eax5 = reinterpret_cast<uint32_t*>(*ebp8->f8 & 0xfd356997);
        *reinterpret_cast<int16_t*>(ebp9 - 12) = 1;
    }
    if (*reinterpret_cast<uint32_t*>(ebp10 - 0xb8) & 0xffff) {
        eax5 = reinterpret_cast<uint32_t**>(*ebp11->f8 & 0x1145373a);
        ecx12 = ebp13->f8;
        *ecx12 = eax5;
        *reinterpret_cast<int16_t*>(ebp14 - 12) = 1;
        if (__intrinsic() || !__intrinsic()) {
            ebx15 = ebx16;
        } else {
            __asm__("fistp qword [ebx+0x4]");
        }
        do {
            *reinterpret_cast<unsigned char*>(&ebx15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx15) >> *reinterpret_cast<signed char*>(&ecx12));
            ecx12 = ecx12;
        } while (!__intrinsic());
        ebx15->f4 = 0;
    }
    *eax5 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(*eax5) + 1);
    if (*eax5) {
        if (!(__intrinsic() || (ebp17 = ebp18, !__intrinsic()))) {
            __asm__("fnstsw word [ebx+0x4]");
        }
        if (!(__intrinsic() || !__intrinsic())) {
            ebx15->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx15->f4) >> 0xffffff87);
        }
        do {
            *reinterpret_cast<unsigned char*>(&ebx15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx15) >> 6);
        } while (!__intrinsic());
        ebx15->f4 = reinterpret_cast<unsigned char>(ebx15->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx15) + 1));
        pf19 = __intrinsic();
        ebp20 = *ebp17;
        do {
        } while (!pf19);
        ebp21 = *ebp20;
        if (__intrinsic() || (ebp21 = ebp21, !__intrinsic())) {
        }
        pf22 = __intrinsic();
        *ebp21->f8 = reinterpret_cast<uint32_t>(eax5) & 0x5185dade;
        *reinterpret_cast<int16_t*>(&(ebp21 - 1)->pad8) = 1;
        if (!(pf22 || !pf22)) {
            pf22 = __intrinsic();
        }
        if (!(pf22 || !pf22)) {
            pf22 = __intrinsic();
        }
        if (pf22 || !pf22) {
        }
    }
    __asm__("hlt ");
}

struct s724 {
    int32_t f0;
    signed char[16777181] pad16777185;
    int32_t f16777185;
};

struct s725 {
    signed char[4] pad4;
    signed char f4;
};

struct s726 {
    signed char[4] pad4;
    signed char f4;
};

struct s727 {
    signed char[4] pad4;
    unsigned char f4;
    signed char[58328317] pad58328322;
    unsigned char f58328322;
};

struct s728 {
    int32_t f0;
    void** f1;
};

struct s729 {
    signed char[8] pad8;
    void** f8;
};

int32_t g42ec28;

void fun_424c80(struct s724* ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t eax4;
    struct s725* ebx5;
    struct s726* ebx6;
    signed char bh7;
    struct s727* ebx8;
    struct s727* ebx9;
    struct s728* edx10;
    struct s728* edx11;
    void* eax12;
    void** eax13;
    int1_t pf14;
    struct s729* ebp15;
    struct s729* ebp16;
    uint32_t edi17;
    uint32_t edi18;
    int32_t edi19;
    unsigned char edi20;
    uint32_t edi21;
    struct s729* ebp22;
    void** edx23;
    int1_t zf24;
    uint32_t edi25;
    void** edx26;
    struct s727* ebx27;
    struct s727* ebx28;

    eax4 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax2 + eax3 - 0x389a0000)(__return_address()));
    ecx->f0 = ecx->f0 + 1;
    ebx5->f4 = reinterpret_cast<signed char>(ebx6->f4 + bh7);
    ebx8 = ebx9;
    edx10 = edx11;
    eax12 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(eax4 - 1)(__return_address()));
    eax13 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax12) + 0x43229c + __intrinsic());
    pf14 = __intrinsic();
    if (eax13) {
        if (pf14 || (ebp15 = ebp16, !pf14)) {
            edi17 = edi18;
        } else {
            edi17 = edi19 - (ebx8->f4 + reinterpret_cast<uint1_t>(edi20 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(ebx8->f4))));
            pf14 = __intrinsic();
        }
        edi21 = edi17;
        ebp22 = ebp15;
        if (pf14 || (edi21 = edi21, !pf14)) {
            edx10 = edx10;
        } else {
            *reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx8) - 0x8743) = *reinterpret_cast<void**>(&eax13);
        }
        edx10->f0 = edx10->f0 + 1;
        if (!edx10->f0) {
            if (__intrinsic() || !__intrinsic()) {
                ebp22 = ebp22;
            } else {
                edi21 = edi21 ^ ebx8->f4;
            }
            edi21 = edi21;
            *reinterpret_cast<void***>(eax13) = *reinterpret_cast<void***>(eax13) + 1;
            ebx8->f4 = reinterpret_cast<unsigned char>(ebx8->f4 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1));
            edx10 = edx10;
            ebx8 = ebx8;
        }
    }
    edx23 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edx10) + 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1));
    *reinterpret_cast<void***>(eax13) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax13)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    *reinterpret_cast<void***>(edx23) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx23)) - reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx23)) < reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13)) + __intrinsic()))));
    *reinterpret_cast<void***>(eax13) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax13)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13)));
    if (__intrinsic() || (edx23 = edx23, !__intrinsic())) {
        ebx8 = ebx8;
    } else {
        eax13 = gdb87047b;
    }
    if (__intrinsic() || (edi21 = edi21, !__intrinsic())) {
        edx23 = edx23;
    } else {
        ebx8->f4 = reinterpret_cast<unsigned char>(ebx8->f4 & *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1));
    }
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(ebp22) - 4) = 0;
    zf24 = g42ec28 == 0xc0000005;
    if (!zf24) {
        if (__intrinsic() || (edi21 = edi21, !__intrinsic())) {
            ebx8 = ebx8;
        }
        edi25 = edi21;
        edx26 = edx23;
        __asm__("in eax, dx");
        ebx27 = ebx8;
        do {
            *reinterpret_cast<unsigned char*>(&ebx27) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx27) >> 6);
            ebp22 = ebp22;
        } while (!__intrinsic());
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx27) + 1) = 0;
        ebx28 = ebx27;
        eax13 = ebp22->f8;
        *reinterpret_cast<void***>(eax13) = edx26 + 0xf71;
        if (__intrinsic() || (ebx28 = ebx28, !__intrinsic())) {
            ecx = ecx;
        } else {
            __asm__("fidivr word [ebx+0x4]");
        }
        ebx8 = ebx28;
        ebp22 = reinterpret_cast<struct s729*>(reinterpret_cast<int32_t>(ebp22) + 1);
        *reinterpret_cast<void***>(eax13) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax13)) + reinterpret_cast<unsigned char>(eax13));
        if (__intrinsic() || !__intrinsic()) {
            ebx8 = ebx8;
        } else {
            ebx8->f4 = reinterpret_cast<unsigned char>(ebx8->f4 - (edi25 + reinterpret_cast<uint1_t>(ebx8->f4 < reinterpret_cast<unsigned char>(edi25 + __intrinsic()))));
        }
        ecx = ecx;
    }
    ecx->f16777185 = ecx->f16777185 + 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp22) - 0x74ba8b37) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp22) - 0x74ba8b37) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13)));
    ebx8->f58328322 = reinterpret_cast<unsigned char>(ebx8->f58328322 | *reinterpret_cast<unsigned char*>(&ecx));
    *reinterpret_cast<void***>(eax13) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax13)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void***>(ebp22->f8) = eax13;
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(ebp22) - 4) = 1;
    if (!(__intrinsic() || !__intrinsic())) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) - reinterpret_cast<unsigned char>(ebx8->f4 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) < reinterpret_cast<unsigned char>(ebx8->f4 + __intrinsic()))));
    }
    goto ebx8;
}

struct s730 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s731 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4250d1(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    struct s730* ebx4;
    struct s730* ebx5;
    signed char bh6;
    struct s731* ebx7;
    uint1_t cf8;
    int1_t pf9;
    uint32_t edi10;
    int1_t pf11;
    struct s730* ebx12;
    uint32_t edi13;
    int1_t pf14;
    uint32_t edi15;
    struct s730* ebx16;

    if (pf2 || !pf3) {
        ebx4 = ebx5;
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(bh6 + ebx7->f4) + cf8);
        pf9 = __intrinsic();
    }
    if (!(pf9 || !pf9)) {
        __asm__("arpl [ebx+0x4], di");
    }
    ebx4->f4 = ebx4->f4 + edi10;
    pf11 = __intrinsic();
    if (!(pf11 || !pf11)) {
        __asm__("arpl [ebx+0x4], di");
    }
    ebx12 = ebx4;
    edi13 = edi10;
    do {
    } while (!pf11);
    ebx12->f4 = ebx12->f4 & edi13;
    pf14 = __intrinsic();
    edi15 = edi13;
    ebx16 = ebx12;
    do {
        ebx16 = ebx16;
    } while (!pf14);
    ebx16->f4 = ebx16->f4 - edi15;
}

void fun_425325(int32_t ecx) {
    goto ecx;
}

struct s732 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425491(int32_t a1, int32_t a2) {
    int32_t ebx3;
    int32_t ebx4;
    struct s732* ebp5;

    *reinterpret_cast<int32_t*>(ebx3 - 0x769b0fb3) = *reinterpret_cast<int32_t*>(ebx4 - 0x769b0fb3) - 1;
    goto ebp5->f4;
}

struct s733 {
    signed char[4] pad4;
    int32_t f4;
};

struct s734 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4256c6(int32_t ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    int1_t pf6;
    int1_t pf7;
    struct s733* ebx8;
    struct s734* ebx9;
    int32_t edi10;

    if (!(pf6 || !pf7)) {
        ebx8->f4 = ebx9->f4 - edi10;
    }
    __asm__("in eax, dx");
    goto a5;
}

void fun_425958() {
    int32_t ebx1;

    goto ebx1;
}

struct s735 {
    signed char[82] pad82;
    signed char f82;
};

struct s736 {
    int32_t f0;
    signed char[4385832] pad4385836;
    unsigned char f4385836;
};

struct s737 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s738 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425aff(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    int1_t pf8;
    int32_t edx9;
    int32_t edx10;
    int1_t pf11;
    struct s735** ebp12;
    struct s735** ebp13;
    uint1_t cf14;
    int32_t ebx15;
    int32_t ebx16;
    int32_t ebx17;
    int32_t eax18;
    int32_t eax19;
    struct s736* eax20;
    unsigned char* eax21;
    struct s737* ebx22;
    struct s738* ebx23;
    int32_t edi24;
    int32_t ebx25;
    int32_t ebx26;
    void** eax27;

    if (pf8 || (edx9 = edx10, !pf11)) {
        ebp12 = ebp13;
    } else {
        cf14 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx15 - 0xa77b) < *reinterpret_cast<unsigned char*>(&ecx));
        *reinterpret_cast<unsigned char*>(ebx16 - 0xa77b) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx17 - 0xa77b) - *reinterpret_cast<unsigned char*>(&ecx));
    }
    eax19 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax18 - 1)(__return_address()));
    eax20 = reinterpret_cast<struct s736*>(eax19 + 0x432354 + cf14);
    *reinterpret_cast<struct s736**>(ebp12 - 40) = eax20;
    if (__intrinsic() || (edx9 = edx9, !__intrinsic())) {
        ecx = ecx;
    } else {
        __asm__("rol dword [ebx+0xffff60bd], cl");
    }
    eax20->f0 = eax20->f0 + 1;
    if (!eax20->f0) {
        eax21 = &eax20->f4385836;
        *eax21 = reinterpret_cast<unsigned char>(*eax21 + reinterpret_cast<uint32_t>(eax21));
        *eax21 = reinterpret_cast<unsigned char>(*eax21 + *reinterpret_cast<signed char*>(&eax21));
        if (!(__intrinsic() || !__intrinsic())) {
            ebx22->f4 = ebx23->f4 + edi24 + __intrinsic();
        }
        (*ebp12)->f82 = reinterpret_cast<signed char>((*ebp12)->f82 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1));
        if (__intrinsic() || !__intrinsic()) {
            ebx25 = ebx26;
        }
        goto *reinterpret_cast<int32_t*>(ebx25 + 0x7b000000);
    } else {
        eax27 = fun_420230(ecx, 0x42ab40, __return_address(), a2, a3, a4, a5, a6, a7);
        *reinterpret_cast<void***>(ebp12 - 41) = eax27;
        if (__intrinsic() || !__intrinsic()) {
        }
        *reinterpret_cast<int32_t*>(ecx + 0xffffff8b)(__return_address());
        __asm__("pushad ");
    }
}

struct s739 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s740 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s741 {
    signed char[4] pad4;
    signed char f4;
};

struct s742 {
    signed char f0;
    signed char[31] pad32;
    signed char f32;
};

struct s743 {
    signed char[4] pad4;
    signed char f4;
};

struct s744 {
    signed char[4] pad4;
    signed char f4;
};

signed char g83ffffa5;

void fun_425b9e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    int32_t edx8;
    int32_t eax9;
    int32_t* eax10;
    uint1_t cf11;
    int32_t ebp12;
    void** eax13;
    uint1_t cf14;
    int1_t pf15;
    int32_t ebp16;
    struct s739* ebx17;
    signed char bh18;
    struct s740* ebx19;
    struct s741* ebx20;
    signed char bh21;
    int32_t v22;
    int32_t ebp23;
    int32_t eax24;
    int32_t v25;
    int32_t esi26;
    int32_t esi27;
    void* ecx28;
    struct s742** edi29;
    int32_t eax30;
    struct s742* eax31;
    struct s743* ebx32;
    struct s744* ebx33;
    void* ecx34;

    eax9 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(edx8 - 1)(__return_address()));
    eax10 = reinterpret_cast<int32_t*>(eax9 + 0x4322ac + cf11);
    *reinterpret_cast<int32_t**>(ebp12 - 0xac) = eax10;
    if (__intrinsic() || !__intrinsic()) {
    }
    *eax10 = *eax10 + 1;
    if (!*eax10) 
        goto 0x425dfb;
    eax13 = fun_420230(ecx, 0x42ab10, __return_address(), a2, a3, a4, a5, a6, a7);
    cf14 = __intrinsic();
    pf15 = __intrinsic();
    *reinterpret_cast<void***>(ebp16 - 0x9c) = eax13;
    if (!(pf15 || !pf15)) {
        cf14 = reinterpret_cast<uint1_t>(ebx17->f4 < reinterpret_cast<unsigned char>(bh18 + cf14));
        ebx19->f4 = reinterpret_cast<unsigned char>(ebx20->f4 - reinterpret_cast<unsigned char>(bh21 + cf14));
        pf15 = __intrinsic();
    }
    v22 = *reinterpret_cast<int32_t*>(ebp23 - 0x9c);
    eax24 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(ebp23 - 0xac)(v22, 0xc0000000, 3, 0, 3, 0x80, __return_address()));
    *reinterpret_cast<int32_t*>(ebp23 - 0xb4) = eax24;
    if (!(pf15 || !pf15)) {
        __asm__("fstp tword [ebx+0x4]");
    }
    v25 = *reinterpret_cast<int32_t*>(esi26 + esi27 - 0x75);
    ecx28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi29 + reinterpret_cast<int32_t>(edi29) * 2) - 1);
    eax30 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx28) - 1)(v25, v22, 0xc0000000, 3, 0, 3, 0x80, __return_address()));
    eax31 = reinterpret_cast<struct s742*>(eax30 + 0x432274 + cf14);
    if (!(__intrinsic() || !__intrinsic())) {
        ebx32->f4 = reinterpret_cast<signed char>(ebx33->f4 >> 1);
    }
    ecx34 = ecx28;
    eax31->f0 = reinterpret_cast<signed char>(eax31->f0 + *reinterpret_cast<signed char*>(&eax31));
    eax31->f32 = reinterpret_cast<signed char>(eax31->f32 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx34) + 1));
    *edi29 = eax31;
    *reinterpret_cast<signed char*>(&eax31) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax31) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx34) + 1));
    g83ffffa5 = *reinterpret_cast<signed char*>(&eax31);
    __asm__("les eax, [ecx+ecx*4]");
}

struct s745 {
    signed char[3] pad3;
    signed char f3;
};

signed char g8068006a;

void fun_425c97(int32_t ecx) {
    int1_t pf2;
    struct s745* edx3;
    struct s745* edx4;
    int1_t pf5;
    signed char* eax6;
    int32_t v7;
    int32_t ebp8;
    int32_t ebp9;
    int32_t eax10;
    int32_t ebp11;
    int32_t v12;
    int32_t ebp13;

    if (pf2 || (edx3 = edx4, !pf5)) {
        ecx = ecx;
    } else {
        *reinterpret_cast<signed char*>(&eax6) = g8068006a;
    }
    *eax6 = reinterpret_cast<signed char>(*eax6 + *reinterpret_cast<signed char*>(&eax6));
    edx3->f3 = reinterpret_cast<signed char>(edx3->f3 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    v7 = *reinterpret_cast<int32_t*>(ebp8 - 0x98);
    eax10 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(ebp9 - 0xac)(v7, 0xc0000000, 3, 0, __return_address()));
    *reinterpret_cast<int32_t*>(ebp11 - 0xb4) = eax10;
    if (__intrinsic() || !__intrinsic()) {
    }
    v12 = *reinterpret_cast<int32_t*>(ebp13 - 0x75);
    *reinterpret_cast<int32_t*>(eax10 - 1)(v12, v7, 0xc0000000, 3, 0, __return_address());
    if (!(__intrinsic() || !__intrinsic())) {
        __asm__("fistp qword [ebx+0x4]");
    }
}

struct s746 {
    signed char f0;
    signed char[47] pad48;
    signed char f48;
};

struct s747 {
    signed char[1] pad1;
    struct s746* f1;
};

void fun_425d20() {
    int32_t v1;
    int32_t edx2;
    int32_t ebp3;
    int32_t ecx4;
    int32_t edi5;
    int32_t edi6;
    int32_t eax7;
    struct s746* eax8;
    uint1_t cf9;
    int32_t ecx10;
    struct s747* edi11;
    int1_t pf12;
    int32_t ebp13;
    struct s746* v14;
    int32_t eax15;

    v1 = *reinterpret_cast<int32_t*>(edx2 + ebp3 - 0x75);
    ecx4 = edi5 + edi6 * 8 - 1;
    eax7 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(ecx4 - 1)(v1, __return_address()));
    eax8 = reinterpret_cast<struct s746*>(eax7 + 0x432274 + cf9);
    if (!__intrinsic() && __intrinsic()) {
    }
    ecx10 = ecx4;
    if (__intrinsic()) 
        goto addr_0x425d3e_5;
    if (__intrinsic()) 
        goto addr_0x425d47_7;
    addr_0x425d3e_5:
    addr_0x425d48_8:
    eax8->f0 = reinterpret_cast<signed char>(eax8->f0 + *reinterpret_cast<signed char*>(&eax8));
    eax8->f48 = reinterpret_cast<signed char>(eax8->f48 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1));
    edi11->f1 = eax8;
    *reinterpret_cast<signed char*>(&eax8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax8) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1));
    pf12 = __intrinsic();
    __asm__("fldenv [edi+edi*8+0x4c483ff]");
    *reinterpret_cast<struct s746**>(ebp13 - 0xb0) = eax8;
    if (!(pf12 || !pf12)) {
        pf12 = __intrinsic();
    }
    v14 = *reinterpret_cast<struct s746**>(ebp13 - 0xb0);
    eax15 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(ebp13 - 0xac)(v14, 0xc0000000, 3, 0, 3, 0x80, v1, __return_address()));
    *reinterpret_cast<int32_t*>(ebp13 - 0xb4) = eax15;
    if (pf12 || !pf12) {
    }
    addr_0x425d47_7:
    ebp13 = ecx10;
    goto addr_0x425d48_8;
}

struct s748 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s749 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_425dd3(int32_t ecx) {
    int32_t v2;
    int32_t ebp3;
    int32_t eax4;
    struct s748* ebx5;
    struct s749* ebx6;
    uint32_t edi7;

    v2 = *reinterpret_cast<int32_t*>(ebp3 - 0x75);
    *reinterpret_cast<int32_t*>(eax4 - 1)(v2, __return_address());
    if (!(__intrinsic() || !__intrinsic())) {
        ebx5->f4 = ebx6->f4 & edi7;
    }
    goto 0x425dfb;
}

int32_t gff87047b;

void fun_425ff2(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    int32_t ebx4;
    signed char al5;

    if (pf2 || !pf3) {
    }
    do {
        *reinterpret_cast<unsigned char*>(&ebx4) = 0;
    } while (!__intrinsic());
    *reinterpret_cast<signed char*>(&gff87047b) = al5;
    goto ebx4;
}

struct s750 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s751 {
    uint32_t f0;
    uint32_t f4;
};

void fun_426554(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t edx4;
    int32_t eax5;
    uint32_t eax6;
    uint1_t cf7;
    struct s750* ebx8;
    struct s751* edi9;
    uint32_t* edi10;
    int32_t ebp11;

    *reinterpret_cast<int32_t*>(eax2 + eax3 + 0x47b0000)(__return_address());
    eax5 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(edx4 - 1)(__return_address()));
    eax6 = eax5 + 0x43229c + cf7;
    if (eax6) {
        if (!(__intrinsic() || !__intrinsic())) {
            ebx8->f4 = 0;
        }
    }
    edi9->f0 = eax6;
    edi10 = &edi9->f4;
    *reinterpret_cast<signed char*>(&eax6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax6) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("rcr dword [ebx+0xc483ffff], 0x4");
    *reinterpret_cast<uint32_t*>(ebp11 - 0xa0) = eax6;
    if (__intrinsic()) 
        goto addr_0x42667a_30;
    if (__intrinsic()) 
        goto addr_0x426683_32;
    addr_0x42667a_30:
    if (__intrinsic()) 
        goto addr_0x426686_34;
    edi10 = edi10;
    if (__intrinsic()) 
        goto addr_0x42668f_36;
    addr_0x426686_34:
    addr_0x426690_37:
    *edi10 = eax6;
    __asm__("wait ");
    addr_0x42668f_36:
    ebx8->f4 = reinterpret_cast<unsigned char>(ebx8->f4 ^ reinterpret_cast<uint32_t>(edi10));
    goto addr_0x426690_37;
    addr_0x426683_32:
}

struct s752 {
    signed char[17] pad17;
    int32_t f17;
};

void fun_4265c7(int32_t* ecx) {
    struct s752* esi2;
    int1_t pf3;
    int1_t pf4;

    *ecx = *ecx + 1;
    if (!*ecx) 
        goto 0x426635;
    if (!(__intrinsic() || !__intrinsic())) {
        __asm__("fdivr dword [ebx+0x4]");
    }
    esi2->f17 = esi2->f17 + 1;
    pf3 = __intrinsic();
    if (!(pf3 || !pf3)) {
        pf3 = __intrinsic();
    }
    do {
    } while (!pf3);
    pf4 = __intrinsic();
    do {
        __asm__("fucomi st0, st3");
    } while (!pf4);
}

void fun_4266e1() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 - 0x74affb3c) = *reinterpret_cast<int32_t*>(ebx2 - 0x74affb3c) + 1;
}

struct s753 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s754 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4266eb() {
    int32_t eax1;
    int32_t eax2;
    uint1_t cf3;
    int32_t eax4;
    int32_t ebp5;
    struct s753* ebx6;
    struct s754* ebx7;
    uint32_t edi8;

    eax2 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax1 - 1)(__return_address()));
    eax4 = reinterpret_cast<int32_t>(GetProcAddress(eax2 + 0x432354 + cf3, __return_address()));
    *reinterpret_cast<int32_t*>(ebp5 - 4) = eax4;
    if (!(__intrinsic() || !__intrinsic())) {
        ebx6->f4 = ebx7->f4 & edi8;
    }
}

void fun_42671b() {
    int32_t* eax1;
    int32_t* eax2;
    int32_t ebx3;
    int32_t ebx4;
    signed char al5;
    int32_t ebp6;
    int16_t ax7;
    int32_t ebp8;

    *eax1 = *eax2 + 1;
    *reinterpret_cast<signed char*>(ebx3 + 0x7400fc7d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx4 + 0x7400fc7d) + al5);
    ax7 = reinterpret_cast<int16_t>(*reinterpret_cast<int32_t*>(ebp6 - 4)(__return_address()));
    *reinterpret_cast<int16_t*>(ebp8 - 0xa8) = ax7;
    if (__intrinsic() || !__intrinsic()) {
    }
    __asm__("stc ");
}

void fun_426756() {
    int32_t esi1;

    goto *reinterpret_cast<int32_t*>(esi1 - 0x77);
}

struct s755 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s756 {
    signed char[4] pad4;
    int32_t f4;
};

int32_t gc987047b;

struct s757 {
    signed char[17] pad17;
    int32_t f17;
};

void fun_42675e(int32_t ecx, int32_t a2, int32_t a3) {
    int1_t pf4;
    struct s755* ebx5;
    struct s755* ebx6;
    int1_t pf7;
    struct s756* ebp8;
    struct s756* ebp9;
    int32_t* eax10;
    int1_t pf11;
    struct s757* esi12;
    struct s757* esi13;
    int1_t pf14;
    uint32_t edi15;
    struct s756* ebp16;
    int1_t pf17;

    if (pf4 || (ebx5 = ebx6, !pf7)) {
        ebp8 = ebp9;
    } else {
        *reinterpret_cast<signed char*>(&eax10) = *reinterpret_cast<signed char*>(&gc987047b);
    }
    if (!(pf11 || (esi12 = esi13, !pf14))) {
        ebx5->f4 = ebx5->f4 | edi15;
    }
    ebp16 = ebp8;
    esi12->f17 = esi12->f17 + 1;
    pf17 = __intrinsic();
    *reinterpret_cast<signed char*>(&ebx5) = -1;
    if (!esi12->f17 || ((pf17 = __intrinsic(), !!(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp16) - 0xa4) & 0xffff)) || (pf17 = __intrinsic(), !!(*reinterpret_cast<uint32_t*>(&(ebp16 - 21)->pad4) & 0xffff)))) {
        do {
        } while (!pf17);
        *eax10 = *eax10 + reinterpret_cast<int32_t>(eax10);
        goto ebp16->f4;
    } else {
        if (pf17 || !pf17) {
            ebx5 = ebx5;
        }
        goto ebx5;
    }
}

struct s758 {
    signed char[4] pad4;
    signed char f4;
};

struct s759 {
    signed char[4] pad4;
    signed char f4;
};

struct s760 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s761 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s762 {
    signed char[4] pad4;
    int32_t f4;
};

struct s763 {
    signed char[4] pad4;
    signed char f4;
};

struct s764 {
    signed char[4] pad4;
    unsigned char f4;
    signed char[277416000] pad277416005;
    signed char f277416005;
};

void fun_426ef5(int32_t ecx) {
    int32_t* edi2;
    int32_t* edi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    struct s758* ebx7;
    struct s759* ebx8;
    signed char bh9;
    int1_t pf10;
    struct s760* ebx11;
    struct s761* ebx12;
    unsigned char bh13;
    uint1_t cf14;
    int32_t* eax15;
    int32_t* eax16;
    int1_t pf17;
    int32_t* eax18;
    struct s762* ebp19;
    struct s762* ebp20;
    int1_t pf21;
    struct s763* ebx22;
    struct s763* ebx23;
    struct s762* ebp24;
    struct s762* ebp25;
    struct s764* ebx26;
    struct s764* ebx27;
    struct s762* ebp28;
    struct s762* ebp29;
    int32_t eax30;
    int32_t* eax31;
    int32_t* eax32;
    int32_t eax33;

    *edi2 = *edi3 - 1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    ebx7->f4 = reinterpret_cast<signed char>(ebx8->f4 + bh9);
    pf10 = __intrinsic();
    do {
    } while (!pf10);
    ebx11->f4 = reinterpret_cast<unsigned char>(ebx12->f4 & bh13);
    cf14 = 0;
    *eax15 = *eax16 + 1;
    pf17 = __intrinsic();
    if (!*eax18) {
        if (pf17 || !pf17) {
            ebp19 = ebp20;
        } else {
            __asm__("fnstcw word [ebx+0x4]");
        }
        do {
            ebp19 = ebp19;
        } while (!pf17);
        pf21 = __intrinsic();
        ebx22 = ebx23;
        ebp24 = ebp19;
        do {
            __asm__("fucomi st0, st3");
        } while (!pf21);
        ebx22->f4 = reinterpret_cast<signed char>(ebx22->f4 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx22) + 1));
        ebp25 = ebp24;
        __asm__("rcr byte [edi+0x5e], 0x5b");
    } else {
        if (pf17 || (ebx26 = ebx27, !pf17)) {
            ebp28 = ebp29;
        } else {
            cf14 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx26) + 4) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx26) + 1))));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx26) + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx26) + 4) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx26) + 1) + cf14));
        }
        ebp25 = ebp28;
        if (!(__intrinsic() || !__intrinsic())) {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx26) + 1) = 0xff;
            cf14 = 0;
        }
        *reinterpret_cast<uint32_t*>(ecx + 0x34fc2) = *reinterpret_cast<uint32_t*>(ecx + 0x34fc2) + eax30 + cf14;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx26) + 0x10890845) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx26) + 0x10890845) + *reinterpret_cast<signed char*>(&ecx));
        if (!(__intrinsic() || !__intrinsic())) {
            __asm__("fdivr dword [ebx+0x4]");
        }
        *eax31 = *eax32 + eax33;
    }
    goto ebp25->f4;
}

void fun_401005(int32_t ecx) {
    int1_t pf2;

    if (pf2) {
    }
}

int32_t ga6305ee2;

void fun_401034(uint32_t ecx) {
    int32_t* edi2;
    int32_t* esi3;
    int32_t* edx4;
    int32_t* edx5;
    signed char* edi6;
    void* edi7;
    int32_t eax8;
    int32_t esi9;
    signed char dl10;
    signed char* eax11;
    void* edi12;
    void* ebp13;
    void* ebp14;
    int32_t edx15;
    int32_t edx16;
    int32_t v17;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
    *edi2 = *esi3;
    *edx4 = -*edx5;
    if (!__intrinsic()) {
        __asm__("fucompp ");
        edi6 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi7) + 4 - 1);
        eax8 = esi9 + 4;
        *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax8) | 20);
        ga6305ee2 = eax8;
        *reinterpret_cast<signed char*>(ecx - 0x65ca04e8) = dl10;
        __asm__("rcl al, cl");
        __asm__("enter 0xd170, 0xd3");
        *edi6 = *eax11;
        edi12 = reinterpret_cast<void*>(edi6 + 1);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebp13) + reinterpret_cast<int32_t>(edi12) * 4 + 0x76) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebp14) + reinterpret_cast<int32_t>(edi12) * 4 + 0x76) & *reinterpret_cast<unsigned char*>(&ecx));
        __asm__("daa ");
    } else {
        *reinterpret_cast<int32_t*>(edx15 - 71) = *reinterpret_cast<int32_t*>(edx16 - 71) - 0x79;
        if (!(reinterpret_cast<uint32_t>(v17 + 4) & ecx)) 
            goto 0x40100c;
    }
}

void fun_40112a() {
}

void fun_401149() {
    if (!__intrinsic()) 
        goto 0x401117;
    __asm__("enter 0x1925, 0x90");
    goto 0x401110;
}

void fun_40115f() {
}

void fun_40125f(signed char cl) {
    int32_t edx2;
    int32_t eax3;
    signed char ah4;
    unsigned char ah5;
    uint32_t ebp6;
    int32_t* edi7;
    int32_t* edi8;

    *reinterpret_cast<signed char*>(&edx2) = -32;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax3) + 1) = reinterpret_cast<unsigned char>(ah4 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx2 - 15) + reinterpret_cast<uint1_t>(ah5 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx2 - 15) + __intrinsic()))));
    *reinterpret_cast<uint32_t*>(eax3 + 0x2fc0d230) = *reinterpret_cast<uint32_t*>(eax3 + 0x2fc0d230) | ebp6;
    *edi7 = *edi8 + 0x349cfbae;
    __asm__("aas ");
}

struct s765 {
    signed char[120] pad120;
    signed char f120;
};

struct s766 {
    signed char[120] pad120;
    signed char f120;
};

struct s767 {
    signed char[120] pad120;
    signed char f120;
};

void fun_401311(int32_t ecx) {
    struct s765* ebx2;
    struct s766* ebx3;
    struct s767* ebx4;
    unsigned char* eax5;
    unsigned char ah6;

    ebx2->f120 = reinterpret_cast<signed char>(ebx3->f120 >> *reinterpret_cast<signed char*>(&ecx));
    if (ebx4->f120) 
        goto 0x40136e;
    __asm__("enter 0x4555, 0xa7");
    __asm__("retf 0xff57");
    __asm__("out 0x1d, al");
    *reinterpret_cast<unsigned char*>(&eax5) = 0xf6;
    __asm__("wait ");
    *eax5 = reinterpret_cast<unsigned char>(*eax5 | ah6);
}

struct s768 {
    signed char[106] pad106;
    signed char f106;
};

struct s769 {
    signed char[106] pad106;
    signed char f106;
};

void fun_40135f(signed char cl) {
    struct s768* edx2;
    struct s769* edx3;
    int32_t edi4;
    int32_t eax5;

    edx2->f106 = reinterpret_cast<signed char>(edx3->f106 - cl);
    *reinterpret_cast<signed char*>(edi4 + eax5 * 8 - 0x463283cd) = -75;
}

struct s770 {
    signed char[44] pad44;
    signed char f44;
};

void fun_401377() {
    int32_t eax1;
    int32_t eax2;
    struct s770* edx3;

    eax1 = eax2 + 1;
    *reinterpret_cast<int16_t*>(&eax1) = reinterpret_cast<int16_t>(*reinterpret_cast<signed char*>(&eax1) * edx3->f44);
    *reinterpret_cast<unsigned char*>(eax1 + 0x6b) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax1 + 0x6b) ^ 0x8c);
    __asm__("psubsb mm1, [ecx+0x1488077]");
    __asm__("in eax, 0xe3");
    __asm__("cvttps2pi mm3, [ebx-0x6b]");
}

void fun_40143a() {
    __asm__("outsb ");
    __asm__("stc ");
}

void fun_4014bf(signed char cl) {
    int32_t esi2;
    int32_t esi3;
    uint32_t esi4;
    int32_t esi5;

    __asm__("outsb ");
    __asm__("cmc ");
    *reinterpret_cast<uint32_t*>(esi2 - 40) = *reinterpret_cast<uint32_t*>(esi3 - 40) & esi4;
    if (*reinterpret_cast<int32_t*>(esi5 - 40)) 
        goto 0x40153d;
}

signed char fun_17a2af5();

uint32_t fun_89a5c89b();

void fun_4014ff(int32_t ecx) {
    uint32_t eax2;
    uint32_t eax3;
    signed char* di4;
    signed char* si5;
    int32_t edi6;
    int16_t di7;

    __asm__("aaa ");
    __asm__("retf ");
    fun_17a2af5();
    __asm__("in al, 0x4");
    eax2 = fun_89a5c89b();
    __asm__("lahf ");
    eax3 = eax2 & 0x6abb6ccd;
    *di4 = *si5;
    *reinterpret_cast<int16_t*>(&edi6) = reinterpret_cast<int16_t>(di7 + 1);
    *reinterpret_cast<uint32_t*>(edi6 + 0xed05397) = *reinterpret_cast<uint32_t*>(edi6 + 0xed05397) - (eax3 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edi6 + 0xed05397) < eax3));
    __asm__("das ");
}

unsigned char g6c40a0dd;

void fun_4015a9() {
    int32_t ecx1;
    int32_t eax2;
    uint32_t eax3;

    __asm__("into ");
    ecx1 = 0xa502077;
    if (1 & reinterpret_cast<uint1_t>(!!(eax2 + 0x294e25dd))) 
        goto 0x401582;
    __asm__("popad ");
    g6c40a0dd = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(g6c40a0dd + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1)) + reinterpret_cast<uint1_t>(eax3 < 0xd6b1da23));
}

void fun_401613() {
    signed char* edi1;
    signed char* esi2;

    *edi1 = *esi2;
}

void fun_401644(int32_t ecx) {
}

void fun_40170a(int32_t ecx) {
    int1_t sf2;
    int32_t edx3;
    uint1_t cf4;
    int32_t ebx5;
    uint32_t ebx6;

    if (sf2) 
        goto 0x4016c6;
    __asm__("salc ");
    __asm__("ror cl, 1");
    __asm__("xlatb ");
    if (reinterpret_cast<uint1_t>(!!(ecx + *reinterpret_cast<int32_t*>(edx3 + 0x92ac4fa) + cf4 - 1)) & reinterpret_cast<uint1_t>(!!(*reinterpret_cast<uint32_t*>(ebx5 - 52) & ebx6))) 
        goto 0x4016d4;
    __asm__("out 0x82, al");
    __asm__("lodsb ");
}

void fun_4017dc() {
    int32_t ecx1;
    int32_t ebp2;

    __asm__("fisttp word [ebp+0x99ae5e80]");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1) = 2;
    *reinterpret_cast<int32_t*>(ecx1 + 0x670508a3) = *reinterpret_cast<int32_t*>(ecx1 + 0x670508a3) - ebp2;
}

void fun_401859(signed char cl) {
}

struct s771 {
    signed char[122] pad122;
    unsigned char f122;
};

void fun_401865() {
    int32_t* edi1;
    int32_t* esi2;
    struct s771* esi3;
    void* esi4;
    int32_t ecx5;
    unsigned char bl6;
    unsigned char al7;
    int32_t edx8;

    __asm__("das ");
    __asm__("arpl [edi+edi+0x4c], bp");
    __asm__("fstp dword [ebp+0x76]");
    __asm__("aam 0x64");
    __asm__("into ");
    *edi1 = *esi2;
    esi3 = reinterpret_cast<struct s771*>(reinterpret_cast<int32_t>(esi4) + 4);
    __asm__("out dx, al");
    if (!__intrinsic()) 
        goto 0x40185b;
    ecx5 = reinterpret_cast<int32_t>(__return_address());
    esi3->f122 = reinterpret_cast<unsigned char>(esi3->f122 + reinterpret_cast<unsigned char>(bl6 | al7));
    __asm__("fiadd word [ecx-0x17]");
    *reinterpret_cast<signed char*>(edx8 - 20) = *reinterpret_cast<signed char*>(&ecx5);
}

void fun_401ad7(signed char cl) {
    __asm__("fild qword [ecx+0xe44830fc]");
}

void fun_401b63() {
}

struct s772 {
    signed char[30] pad30;
    uint32_t f30;
};

void fun_401f04() {
    struct s772* edi1;
    int32_t edi2;
    uint32_t edx3;

    edi1 = reinterpret_cast<struct s772*>(edi2 + (reinterpret_cast<int32_t>(__zero_stack_offset()) - 4));
    __asm__("int1 ");
    edi1->f30 = edi1->f30 ^ edx3;
    __asm__("hlt ");
}

struct s773 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_401f1c(int32_t ecx) {
    uint48_t v2;
    int32_t* eax3;
    struct s773* eax4;
    int1_t sf5;
    int32_t* ebp6;
    int32_t* eax7;
    int32_t* ebp8;
    int32_t esi9;
    int32_t esi10;
    signed char bh11;
    uint1_t cf12;
    signed char* esi13;
    void* ds14;
    int16_t* esp15;
    int16_t es16;
    uint1_t cf17;
    uint32_t ebx18;
    int32_t ebx19;
    signed char* edi20;
    void* esi21;
    int32_t* tmp32_22;
    void* edi23;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 2) = reinterpret_cast<int32_t>(__return_address());
    eax3 = &eax4->f1;
    sf5 = reinterpret_cast<int32_t>(eax3) < 0;
    ebp6 = eax3;
    eax7 = ebp8;
    if (!sf5) {
        addr_0x401f11_2:
    } else {
        if (sf5 != __intrinsic()) {
        }
        *reinterpret_cast<unsigned char*>(esi9 - 15) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi10 - 15) + bh11) + cf12);
        do {
            __asm__("les esp, [ebp+ebp+0x5a87cc8d]");
            __asm__("retf ");
            esi13 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi13) + reinterpret_cast<int32_t>(eax7));
            *reinterpret_cast<void**>(&v2) = ds14;
        } while (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(esi13 == 0)));
        __asm__("popad ");
        esp15 = reinterpret_cast<int16_t*>(reinterpret_cast<int16_t>(*reinterpret_cast<void**>(&v2)) + 4 - 2);
        *esp15 = es16;
        cf17 = reinterpret_cast<uint1_t>(ebx18 < reinterpret_cast<int32_t>(eax7) + __intrinsic());
        if (reinterpret_cast<int32_t>(ebx19 - (reinterpret_cast<int32_t>(eax7) + cf17)) < reinterpret_cast<int32_t>(static_cast<uint32_t>(cf17))) 
            goto addr_0x401f49_8; else 
            goto addr_0x401f3a_9;
    }
    *edi20 = *esi13;
    esi21 = reinterpret_cast<void*>(esi13 + 1);
    __asm__("cdq ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi21) + reinterpret_cast<int32_t>(ebp6) * 4 - 7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi21) + reinterpret_cast<int32_t>(ebp6) * 4 - 7) >> 1);
    __asm__("hlt ");
    addr_0x401f49_8:
    __asm__("aaa ");
    if (cf17) {
        goto addr_0x401f11_2;
    } else {
        *eax7 = ecx;
        goto *esp15;
    }
    addr_0x401f3a_9:
    __asm__("insd ");
    tmp32_22 = ebp6;
    ebp6 = eax7;
    eax7 = tmp32_22;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax7) - 0x561be61e) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax7) - 0x561be61e) - 1;
    edi20 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi23) - 1);
    __asm__("enter 0xcd4c, 0xeb");
    goto addr_0x401f49_8;
}

void fun_401f58(signed char cl) {
    uint32_t eflags2;
    unsigned char* ebx3;
    int32_t ebx4;
    void* esp5;
    int32_t edx6;
    int32_t ebp7;
    void* eax8;
    void* edi9;
    unsigned char* esi10;
    unsigned char* esi11;
    uint32_t* esp12;
    void* eax13;
    void* ebp14;
    uint1_t below_or_equal15;
    uint32_t ecx16;
    uint32_t* esp17;
    uint32_t eax18;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    *reinterpret_cast<unsigned char*>(&ebx3) = 0xbd;
    if (reinterpret_cast<signed char>(cl + *reinterpret_cast<signed char*>(ebx4 - 64)) < 0 != __intrinsic()) {
        addr_0x401fb3_3:
    } else {
        __asm__("into ");
        __asm__("daa ");
        ++ebx3;
        *reinterpret_cast<uint32_t*>(ebx3 - 22) = *reinterpret_cast<uint32_t*>(ebx3 - 22) - (0x65 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx3 - 22) < 0x65 + __intrinsic()));
        esp5 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) - 4 + 4 & *reinterpret_cast<uint32_t*>(edx6 + ebp7 - 0x2fd97c81));
        eax8 = edi9;
        *esi10 = reinterpret_cast<unsigned char>(*esi11 | *reinterpret_cast<unsigned char*>(&eax8));
        *reinterpret_cast<unsigned char*>(&ebx3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx3) | *ebx3);
        *reinterpret_cast<uint1_t*>(&eflags2) = 0;
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ebx3) == 0);
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
        *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
        esp12 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp5) - 4);
        *esp12 = eflags2 & 0xfcffff;
        __asm__("into ");
        eax13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax8) + reinterpret_cast<int32_t>(ebp14));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebp14) + reinterpret_cast<uint32_t>(eax13) * 2 + 70) = 0xff;
        *reinterpret_cast<signed char*>(&eax13) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax13) - 32);
        *reinterpret_cast<uint1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&eax13) == 0);
        *reinterpret_cast<int1_t*>(&eflags2) = *reinterpret_cast<signed char*>(&eax13) < 0;
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        below_or_equal15 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint1_t*>(&eflags2) | *reinterpret_cast<uint1_t*>(&eflags2));
        if (below_or_equal15) 
            goto 0x401ff7;
        if (below_or_equal15) 
            goto addr_0x401fa5_6;
    }
    ecx16 = reinterpret_cast<uint32_t>(__return_address()) - 1;
    if (ecx16) 
        goto 0x401fd3;
    *reinterpret_cast<int32_t*>(ecx16 - 0x3e69a963) = *reinterpret_cast<int32_t*>(ecx16 - 0x3e69a963) + 0x6cf759ee;
    addr_0x401fa5_6:
    esp17 = esp12 - 1;
    *esp17 = eflags2 & 0xfcffff;
    *(esp17 - 1) = eax18;
    __asm__("retf ");
    goto addr_0x401fb3_3;
}

void fun_402010() {
    int32_t ebx1;
    int32_t ebx2;
    int32_t ebx3;
    uint1_t cf4;

    __asm__("aam 0xc3");
    *reinterpret_cast<uint32_t*>(ebx1 - 28) = *reinterpret_cast<int32_t*>(ebx2 - 28) - (0x1ae5c79f + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx3 - 28) < 0x1ae5c79f + cf4));
}

int32_t fun_4aef8ad9();

uint32_t fun_fc301ba0();

struct s774 {
    signed char[104] pad104;
    unsigned char f104;
};

struct s775 {
    signed char[43] pad43;
    signed char f43;
};

struct s776 {
    signed char[43] pad43;
    signed char f43;
};

struct s777 {
    unsigned char f0;
    signed char f1;
};

struct s778 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s779 {
    signed char[1] pad1;
    signed char f1;
};

struct s774* fun_844d735();

void fun_402022(int32_t ecx, int32_t a2) {
    uint32_t eax3;
    signed char* esi4;
    signed char* v5;
    uint32_t ebx6;
    uint1_t cf7;
    uint32_t edx8;
    struct s774* eax9;
    struct s774* v10;
    int1_t less11;
    uint1_t cf12;
    int32_t* esp13;
    struct s775* edi14;
    struct s776* edi15;
    signed char* edi16;
    struct s777* edi17;
    struct s778* edi18;
    struct s779* esi19;
    int32_t* esp20;
    void* ebp21;
    signed char* edi22;
    int32_t* esp23;

    __asm__("movaps xmm5, xmm5");
    fun_4aef8ad9();
    eax3 = fun_fc301ba0();
    esi4 = v5;
    ebx6 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(eax3 + 0x2ca7cdfc) * 0x218927d4);
    cf7 = reinterpret_cast<uint1_t>(eax3 < 0xa0f0fd48);
    edx8 = eax3 + 0x5f0f02b8;
    eax9 = v10;
    __asm__("bswap ebx");
    __asm__("fmul dword [edi]");
    __asm__("aaa ");
    less11 = reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax9) + reinterpret_cast<int32_t>(esi4) * 4 + 0x2076bbbf)) < reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx6) + 1) + cf7);
    cf12 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax9) + reinterpret_cast<int32_t>(esi4) * 4 + 0x2076bbbf) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx6) + 1) + cf7));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax9) + reinterpret_cast<int32_t>(esi4) * 4 + 0x2076bbbf) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax9) + reinterpret_cast<int32_t>(esi4) * 4 + 0x2076bbbf) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx6) + 1) + cf12));
    __asm__("outsd ");
    esp13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 + 4 - 4 + 4 + 1 - 4 + 4 + 4 + 4 - 2 + 2);
    if (!less11) {
        __asm__("stc ");
        eax9->f104 = reinterpret_cast<unsigned char>(eax9->f104 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + reinterpret_cast<uint1_t>(eax9->f104 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + cf12))));
        edi14->f43 = reinterpret_cast<signed char>(edi15->f43 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1));
        *edi16 = *esi4;
        edi17 = reinterpret_cast<struct s777*>(&edi18->f1);
        esi19 = reinterpret_cast<struct s779*>(esi4 + 1);
        __asm__("cli ");
        __asm__("pushad ");
        ebx6 = ebx6 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi19) - 0x2c3fa945);
        esp20 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp21) + 4 - 4);
        *esp20 = 0x40207b;
        eax9 = fun_844d735();
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax9) - 0x4df4b13e) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax9) - 0x4df4b13e) ^ *reinterpret_cast<unsigned char*>(&ebx6));
        cf12 = reinterpret_cast<uint1_t>(edi17->f0 < *reinterpret_cast<unsigned char*>(&eax9));
        edi22 = &edi17->f1;
        esi4 = &esi19->f1;
        __asm__("lodsb ");
        esp13 = esp20 + 1 - 1;
        *esp13 = 58;
    }
    if (cf12) 
        goto 0x4020dd;
    __asm__("rcl ah, 0x9e");
    esp23 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp13) - (*reinterpret_cast<int32_t*>(ebx6 + 0x1aef57a5) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esp13) < *reinterpret_cast<int32_t*>(ebx6 + 0x1aef57a5) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) ^ 0x87) < 0x9b))));
    *edi22 = *esi4;
    goto *esp23;
}

void fun_40209b(int16_t cx) {
    int32_t ebx2;
    unsigned char bh3;
    unsigned char ah4;
    int32_t ebx5;
    int32_t eax6;
    int16_t v7;
    int16_t es8;
    int16_t ss9;
    int16_t eflags10;

    __asm__("enter 0x4b6, 0xb8");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx2) + 1) = reinterpret_cast<unsigned char>(bh3 ^ ah4);
    ebx5 = ebx2 - *reinterpret_cast<int32_t*>(eax6 + 0x5b63c88e);
    __asm__("into ");
    __asm__("aaa ");
    (&v7)[1] = es8;
    v7 = ss9;
    eflags10 = v7;
    *reinterpret_cast<unsigned char*>(ebx5 - 66) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx5 - 66) + 40) + *reinterpret_cast<uint1_t*>(&eflags10));
    if (!1) {
        __asm__("cdq ");
        __asm__("enter 0x85bd, 0x2e");
        __asm__("lahf ");
    }
}

void fun_4020f5(int32_t ecx) {
    uint32_t* edx2;
    int32_t* edx3;
    int32_t ebp4;

    __asm__("ror esp, cl");
    __asm__("wait ");
    __asm__("fisub dword [ebp+0x77]");
    *edx2 = reinterpret_cast<uint32_t>(*edx3 + ebp4);
}

int32_t g97b0b88c;

struct s780 {
    int32_t f0;
    int32_t f4;
};

int32_t fun_c1ec72ff();

void fun_402117(int32_t ecx) {
    void** edx2;
    int32_t esi3;
    void* edx4;
    int32_t esi5;
    signed char* esi6;
    signed char* esi7;
    struct s780* esp8;
    void* ebp9;
    int32_t* esp10;
    int32_t ebx11;
    void* esp12;
    void* tmp32_13;
    int32_t* esp14;

    edx2 = reinterpret_cast<void**>(__intrinsic() & *reinterpret_cast<uint32_t*>(esi3 + 0x2217c9fb));
    __asm__("int1 ");
    __asm__("aas ");
    g97b0b88c = 0x303a2c64;
    edx4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx2) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx2) + esi5 * 2)));
    __asm__("aam 0xa0");
    if (!__intrinsic()) {
        *esi6 = reinterpret_cast<signed char>(*esi7 + 1);
        if (0) 
            goto 0x40218d;
        esp8 = reinterpret_cast<struct s780*>(reinterpret_cast<int32_t>(ebp9) + 4 - 4);
        esp8->f0 = 0x40214b;
        fun_c1ec72ff();
        esp10 = &esp8->f4;
        __asm__("aam 0xd2");
        ebx11 = *esp10;
        esp12 = reinterpret_cast<void*>(esp10 + 1);
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx4) - 0x421d588e) = *reinterpret_cast<signed char*>(&edx4);
        tmp32_13 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp12) + reinterpret_cast<uint32_t>(edx4) + 0x6c8a0405);
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp12) + reinterpret_cast<uint32_t>(edx4) + 0x6c8a0405) = esp12;
        esp14 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(tmp32_13) - 4);
        *esp14 = ebx11;
        __asm__("rcl esp, 0x71");
        __asm__("lodsb ");
        __asm__("iretd ");
        *reinterpret_cast<void**>(esp14 - 1) = edx4;
    }
}

void fun_40217d() {
    __asm__("outsb ");
}

void fun_a6e5114a(int32_t a1);

void fun_4022a8() {
    int32_t edx1;
    int32_t edx2;

    fun_a6e5114a(__return_address());
    __asm__("salc ");
    *reinterpret_cast<int32_t*>(edx1 - 0x707d8edc) = *reinterpret_cast<int32_t*>(edx2 - 0x707d8edc) - 0x777c5b68;
}

struct s781 {
    signed char f0;
    signed char[81] pad82;
    int32_t f82;
};

struct s782 {
    int32_t f0;
    uint32_t f4;
};

struct s782* g2932e19f;

signed char g80f3409;

signed char gdcbbe517;

void fun_40232b() {
    uint1_t cf1;
    int32_t eax2;
    int32_t edx3;
    uint1_t cf4;
    int32_t eax5;
    int32_t eax6;
    int32_t edx7;
    int1_t zf8;
    int32_t eax9;
    signed char* edi10;
    struct s781* esi11;
    int32_t ebp12;
    uint32_t ebx13;
    int32_t ebp14;
    int32_t ecx15;
    uint32_t ebp16;
    int1_t of17;
    struct s782* eax18;
    uint32_t* esp19;
    int32_t eax20;
    int32_t v21;
    int32_t ebp22;
    int32_t eax23;
    int16_t* esp24;
    int16_t es25;

    cf1 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(eax2 - 78) < edx3 + cf4);
    *reinterpret_cast<uint32_t*>(eax5 - 78) = *reinterpret_cast<int32_t*>(eax6 - 78) - (edx7 + cf1);
    zf8 = *reinterpret_cast<uint32_t*>(eax9 - 78) == static_cast<uint32_t>(cf1);
    while (1) {
        *edi10 = esi11->f0;
        edi10 = edi10 + 4;
        esi11 = reinterpret_cast<struct s781*>(reinterpret_cast<int32_t>(esi11) + 4);
        if (zf8) {
            esi11 = reinterpret_cast<struct s781*>(reinterpret_cast<int32_t>(esi11) + ebp12);
            if (__intrinsic()) 
                break;
            ebx13 = ebx13 + *reinterpret_cast<int32_t*>(ebp14 - 0x54194712) + __intrinsic();
            *reinterpret_cast<uint32_t*>(ecx15 - 0x4de55e80) = *reinterpret_cast<uint32_t*>(ecx15 - 0x4de55e80) | ebp16;
            of17 = 0;
        } else {
            if (ecx15) {
                addr_0x40239c_10:
                __asm__("outsb ");
                __asm__("cli ");
                ebx13 = ebx13 + 50;
                zf8 = ebx13 == 0;
                __asm__("aam 0xe4");
                if (__intrinsic()) 
                    continue; else 
                    goto addr_0x4023ab_11;
            } else {
                of17 = __intrinsic();
                eax18 = g2932e19f;
                __asm__("wait ");
                __asm__("fsubr qword [0x7573251]");
                esp19 = &eax18->f4;
                ebx13 = *esp19;
                eax20 = eax18->f0;
                if (__intrinsic()) 
                    goto addr_0x402354_14;
            }
        }
        if (!of17) 
            goto addr_0x4023dc_16;
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi11) - 0x2b10a8c7) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi11) - 0x2b10a8c7) - 1;
        esi11->f82 = esi11->f82 + 0x2027435e;
        ecx15 = v21 * 25;
        goto addr_0x40239c_10;
    }
    __asm__("cdq ");
    addr_0x4023dc_16:
    *reinterpret_cast<signed char*>(ebp22 - 0x6f592704) = 0;
    addr_0x4023ab_11:
    __asm__("insb ");
    __asm__("lodsd ");
    __asm__("int 0x28");
    *reinterpret_cast<signed char*>(&eax23) = g80f3409;
    __asm__("xlatb ");
    *edi10 = esi11->f0;
    gdcbbe517 = *reinterpret_cast<signed char*>(&eax23);
    __asm__("retf 0xa11c");
    addr_0x402354_14:
    esp24 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp19 + 1) - 2);
    *esp24 = es25;
    *reinterpret_cast<int32_t*>(esp24 - 2) = eax20;
}

void fun_4023d1(signed char* ecx) {
    signed char ah2;

    __asm__("int 0x64");
    __asm__("fprem1 ");
    *ecx = reinterpret_cast<signed char>(*ecx - ah2);
}

void fun_4023f5() {
    int1_t zf1;

    do {
        __asm__("rcr ah, 1");
    } while (!zf1);
    __asm__("out 0x7d, al");
    __asm__("insd ");
}

void fun_402512() {
    __asm__("arpl [edx], cx");
}

struct s783 {
    signed char[74] pad74;
    int32_t f74;
};

struct s784 {
    signed char[102] pad102;
    unsigned char f102;
};

void fun_402545(struct s783* ecx, int32_t a2) {
    uint1_t zf3;
    uint32_t esi4;
    struct s784* ebx5;
    int32_t ebx6;

    __asm__("fxch4 st1");
    zf3 = reinterpret_cast<uint1_t>((esi4 ^ 0xcc0ac7e7) == 0);
    __asm__("insb ");
    ebx5->f102 = static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | zf3));
    __asm__("sti ");
    if (zf3) 
        goto 0x402533;
    if (1) 
        goto 0x402591;
    ecx->f74 = ebx6;
    __asm__("fidiv dword [ecx+0x951af66f]");
}

void fun_ac5b72a9();

void fun_4025a0(int32_t ecx) {
    fun_ac5b72a9();
    return;
}

void fun_4025af() {
    __asm__("out 0x21, al");
}

struct s785 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s786 {
    signed char[92] pad92;
    signed char f92;
};

struct s787 {
    signed char[92] pad92;
    unsigned char f92;
};

signed char gdbf86b97;

void fun_4025de(int32_t ecx) {
    int32_t ecx2;
    uint32_t eax3;
    uint32_t edi4;
    uint32_t* edx5;
    struct s785* edx6;
    struct s786* edx7;
    struct s787* edx8;
    int32_t edx9;
    signed char bh10;

    ecx2 = ecx - 1;
    __asm__("rcr dword [edx+edx+0x6c], 1");
    eax3 = edi4 | *edx5 | 0x540384da;
    edx6->f92 = reinterpret_cast<unsigned char>(edx7->f92 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx2) + reinterpret_cast<uint1_t>(edx8->f92 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx2))))));
    __asm__("aam 0x52");
    gdbf86b97 = *reinterpret_cast<signed char*>(&eax3);
    *reinterpret_cast<signed char*>(edx9 - 71) = bh10;
    __asm__("clc ");
    goto 0x40263f;
}

void fun_402772() {
    int32_t edx1;
    int32_t edx2;
    int32_t esi3;
    int32_t* edi4;

    __asm__("cmc ");
    *reinterpret_cast<signed char*>(edx1 - 0x37058621) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx2 - 0x37058621) + 97);
    __asm__("fmul qword [edi+0x6a4d32a8]");
    __asm__("cli ");
    __asm__("cmc ");
    __asm__("out 0xed, eax");
    __asm__("insb ");
    if (reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(esi3 - 1 == 0))) {
        *edi4 = 0xb0618503;
        __asm__("out 0x17, eax");
        __asm__("ror byte [ebx], 1");
        __asm__("sahf ");
        __asm__("int1 ");
        __asm__("aaa ");
    }
}

struct s788 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s789 {
    signed char[4] pad4;
    uint32_t f4;
};

int32_t g40149f61;

void fun_402829() {
    int32_t* edi1;
    int32_t* esi2;
    uint32_t* edi3;
    struct s788* edi4;
    uint32_t* esi5;
    struct s789* esi6;
    int1_t cf7;
    int32_t eip8;
    uint1_t cf9;
    int32_t ebp10;
    int32_t eip11;

    __asm__("rol dword [edx-0x72], 0xaa");
    *edi1 = *esi2;
    edi3 = &edi4->f4;
    esi5 = &esi6->f4;
    __asm__("in eax, dx");
    __asm__("int 0x33");
    if (cf7) {
        eip8 = g40149f61;
        goto eip8;
    }
    cf9 = reinterpret_cast<uint1_t>(*esi5 < *edi3);
    *edi3 = *esi5;
    __asm__("aam 0xc4");
    if (reinterpret_cast<uint1_t>(cf9 | reinterpret_cast<uint1_t>(ebp10 - 1 == 0))) 
        goto addr_0x4028c0_10;
    addr_0x4028c0_10:
    __asm__("ficomp dword [esi+0x55cdd6ab]");
    __asm__("stc ");
    eip11 = g40149f61;
    goto eip11;
}

void fun_40283e() {
}

void fun_4028a3(int32_t ecx) {
    int32_t eflags2;
    uint32_t edi3;
    int32_t edi4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    unsigned char* edi8;
    unsigned char al9;

    __asm__("clc ");
    __asm__("aaa ");
    eflags2 = reinterpret_cast<int32_t>(__return_address());
    edi3 = edi4 + (1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1));
    *reinterpret_cast<uint32_t*>(edi3 + eax5 * 4 - 0x2cca0f8a) = *reinterpret_cast<int32_t*>(edi3 + eax6 * 4 - 0x2cca0f8a) - (ecx + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edi3 + eax7 * 4 - 0x2cca0f8a) < ecx + reinterpret_cast<uint1_t>(*edi8 < al9)));
    __asm__("cmc ");
}

void fun_4028d0() {
    __asm__("ficom dword [esi-0xd]");
    __asm__("fdivr qword [esi]");
}

void fun_5f5a3ce7(void** a1, void** a2, int32_t a3, int32_t a4);

void fun_402942(uint32_t* ecx) {
    int32_t ebp2;
    int32_t eax3;
    int32_t eax4;
    int32_t ebx5;
    int32_t ebx6;
    int32_t eax7;
    void** esp8;
    void* esi9;
    int32_t esi10;
    int1_t zf11;
    signed char* esi12;
    int32_t eax13;

    __asm__("rcl byte [ecx], 0x44");
    if (!(ebp2 + 1)) 
        goto 0x4028eb;
    eax3 = eax4 + 0x210f4;
    ebx5 = ebx6 + 1;
    __asm__("cmc ");
    __asm__("aad 0x6e");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1) = 89;
    __asm__("daa ");
    eax7 = eax3 + 0x7ccf6fee;
    esp8 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi9) + esi10 * 4 + 10) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1);
    zf11 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx5) + 1) >> 1) + *esi12 == 0;
    fun_5f5a3ce7(esp8 - 1, esp8, eax13, __return_address());
    __asm__("stc ");
    if (!zf11) 
        goto 0x4029ce;
    *ecx = *ecx | 0x677c687d;
}

void fun_402a45(signed char cl) {
    signed char* edi2;
    signed char* edi3;

    __asm__("fstp qword [esi+0xe]");
    __asm__("aaa ");
    __asm__("lds ebx, [ecx+0x46]");
    *edi2 = reinterpret_cast<signed char>(*edi3 - cl);
}

void fun_402b00() {
    int1_t cf1;
    int32_t edi2;
    int32_t edi3;
    uint1_t cf4;

    __asm__("rol dl, 0x16");
    __asm__("sti ");
    __asm__("aam 0x6f");
    if (cf1) 
        goto 0x402aba;
    *reinterpret_cast<uint32_t*>(edi2 + 0x3b4f8210) = *reinterpret_cast<int32_t*>(edi3 + 0x3b4f8210) + 0x5bf38445 + cf4;
}

struct s790 {
    signed char f0;
    signed char[132490777] pad132490778;
    uint32_t f132490778;
};

struct s791 {
    signed char[4] pad4;
    signed char f4;
};

struct s792 {
    signed char[4] pad4;
    signed char f4;
};

int32_t g179a8bac;

signed char g7ff4465a;

void fun_402b78() {
    void* edx1;
    struct s790* edi2;
    struct s791* edi3;
    signed char* esi4;
    struct s792* esi5;
    signed char ah6;
    uint32_t eax7;
    int32_t eax8;
    uint32_t ebx9;
    uint32_t ebx10;
    uint32_t eax11;
    int32_t eax12;

    edx1 = __return_address();
    edi2 = reinterpret_cast<struct s790*>(&edi3->f4);
    esi4 = &esi5->f4;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi2) - 0x1e546174) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi2) - 0x1e546174) + ah6);
    eax7 = reinterpret_cast<uint32_t>(eax8 + 1);
    ebx9 = ebx10 ^ edi2->f132490778;
    do {
        eax11 = eax7 & 0x628972ea;
        __asm__("salc ");
        __asm__("pminub mm7, mm0");
        *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) ^ 0x81) | 0xcc);
        __asm__("fistp word [ebp-0x6]");
        eax12 = g179a8bac;
        if (reinterpret_cast<int32_t>(eax11) > reinterpret_cast<int32_t>(0x2c9abb72)) 
            goto 0x402b63;
        *reinterpret_cast<signed char*>(&eax12) = g7ff4465a;
        __asm__("arpl [ebx+0x877260f7], ax");
        *reinterpret_cast<int32_t*>(ebx9 - 99) = *reinterpret_cast<int32_t*>(ebx9 - 99) + reinterpret_cast<int32_t>(edx1);
        edi2->f0 = *esi4;
        edi2 = reinterpret_cast<struct s790*>(&edi2->pad132490778);
        ++esi4;
        if (1) 
            goto 0x402b5a;
        eax7 = reinterpret_cast<uint32_t>(eax12 + eax12);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx1) + reinterpret_cast<int32_t>(edi2) - 3) = -*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx1) + reinterpret_cast<int32_t>(edi2) - 3);
        *esi4 = reinterpret_cast<signed char>(*esi4 + reinterpret_cast<int32_t>(edi2));
    } while (__intrinsic());
    __asm__("lds esp, [esi-0x29]");
}

void fun_402be1(int32_t ecx, int16_t a2) {
    int1_t pf3;
    signed char* edx4;
    signed char* edx5;

    do {
    } while (pf3);
    *edx4 = reinterpret_cast<signed char>(*edx5 - 65);
}

void fun_402c07(int32_t ecx) {
    uint32_t esi2;
    uint32_t eax3;
    unsigned char* eax4;
    unsigned char* esi5;
    unsigned char* edi6;
    unsigned char* edi7;
    signed char* v8;
    uint1_t cf9;
    int32_t ebp10;
    int32_t ebp11;

    __asm__("enter 0x7367, 0x86");
    __asm__("lds ecx, [eax]");
    esi2 = eax3;
    eax4 = esi5;
    do {
        __asm__("xlatb ");
        __asm__("in al, dx");
        edi6 = eax4;
        eax4 = edi7;
        __asm__("insb ");
        *v8 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax4) + 1);
        __asm__("retf 0x38d2");
        cf9 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax4) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebp10 - 0x589b98cd) + cf9));
        *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebp11 - 0x589b98cd) + cf9));
        __asm__("lds ebp, [ebx+0x1dd6d0cc]");
        *edi6 = *reinterpret_cast<unsigned char*>(&eax4);
        edi7 = edi6 + 1;
        ++esi2;
        __asm__("int 0x90");
        __asm__("fnstsw word [edi+0xe61d31d0]");
    } while (ecx);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 | esi2);
    __asm__("rcl dword [ebp-0x3], 1");
}

uint32_t gc575c8d;

int32_t g86e39b95;

signed char gec4d8ead;

void fun_402c6a(int32_t ecx) {
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esi4;
    uint1_t cf5;
    int32_t ebx6;
    uint32_t edx7;
    unsigned char* eax8;
    int32_t* ebx9;
    int32_t ebx10;
    int32_t edx11;
    unsigned char dl12;
    int32_t edx13;
    int32_t eax14;
    signed char tmp8_15;

    __asm__("out 0x1d, al");
    if (!__intrinsic()) 
        goto 0x402c42;
    ebp2 = ebp3 - *esi4;
    cf5 = reinterpret_cast<uint1_t>(gc575c8d < 0x791c6467 - reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx6 - 0x56910ae8) < edx7));
    gc575c8d = gc575c8d - (0x791c6467 - cf5);
    g86e39b95 = 0xa2;
    eax8 = reinterpret_cast<unsigned char*>((reinterpret_cast<uint32_t>(__zero_stack_offset()) ^ 0xfdb5f589) + 0x6e1ce4ff);
    if (eax8) {
        __asm__("lodsd ");
        *eax8 = reinterpret_cast<unsigned char>(*eax8 >> 99);
        __asm__("popad ");
        __asm__("sahf ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1) = -61;
        __asm__("int 0x9d");
        *ebx9 = ebx10;
        --ecx;
        if (ecx) 
            goto 0x402c3b;
        *reinterpret_cast<unsigned char*>(&edx11) = reinterpret_cast<unsigned char>(dl12 & *(eax8 + edx13 * 8 - 0x2c0a398c));
        __asm__("fisubr dword [edx+0x8cae8622]");
    }
    eax14 = edx11;
    tmp8_15 = gec4d8ead;
    gec4d8ead = *reinterpret_cast<signed char*>(&eax14);
    *reinterpret_cast<signed char*>(&eax14) = tmp8_15;
    __asm__("arpl [gs:ecx-0x7d], cx");
    *reinterpret_cast<uint32_t*>(eax14 + 0x46e30d09) = *reinterpret_cast<uint32_t*>(eax14 + 0x46e30d09) ^ 0x7a3acde1;
    g86e39b95 = ebp2;
}

struct s793 {
    signed char[1] pad1;
    signed char f1;
};

struct s794 {
    signed char[66] pad66;
    unsigned char f66;
};

struct s795 {
    signed char[66] pad66;
    unsigned char f66;
};

unsigned char g3aa23d61;

void fun_402cf4() {
    struct s793* edi1;
    int32_t ecx2;
    uint32_t eax3;
    unsigned char tmp8_4;
    struct s794* ebp5;
    struct s795* ebp6;
    signed char* edi7;
    int32_t ecx8;
    signed char* esi9;

    __asm__("lock int 0x2");
    __asm__("out 0x64, al");
    __asm__("daa ");
    do {
        __asm__("salc ");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi1) - 67) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi1) - 67) | *reinterpret_cast<unsigned char*>(&ecx2));
        __asm__("fistp word [0x646b9644]");
        *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax3) - reinterpret_cast<unsigned char>(42 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax3) < 42)));
        tmp8_4 = ebp5->f66;
        ebp6->f66 = *reinterpret_cast<unsigned char*>(&ecx2);
        *reinterpret_cast<unsigned char*>(&ecx2) = tmp8_4;
        eax3 = eax3 ^ 0xba6f2842;
        __asm__("a16 salc ");
        edi7 = &edi1->f1;
        ecx8 = ecx2 - 1;
        if (reinterpret_cast<uint1_t>(!!ecx8) & reinterpret_cast<uint1_t>(!!edi7)) 
            goto 0x402cb3;
        *edi7 = *esi9;
        edi1 = reinterpret_cast<struct s793*>(edi7 + 1);
        esi9 = esi9 + 1 + 1;
        __asm__("in al, dx");
        ecx2 = ecx8 - 1;
    } while (reinterpret_cast<uint1_t>(!!ecx2) & reinterpret_cast<uint1_t>(!!esi9));
    __asm__("cli ");
    g3aa23d61 = *reinterpret_cast<unsigned char*>(&eax3);
}

int32_t gd276e8cc;

void fun_402d6b() {
    gd276e8cc = gd276e8cc << 26;
}

void fun_402dab(uint32_t* ecx) {
    __asm__("retf 0xdab3");
    *ecx = *ecx - (80 - reinterpret_cast<uint1_t>(*ecx < 80 - __intrinsic()));
    __asm__("les esp, [edx]");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) = 0x94;
    __asm__("rcr byte [ebx+0xc6eadd95], 0x73");
    *ecx = 0;
}

struct s796 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_402dfe(int16_t cx) {
    void* eax2;
    int32_t ecx3;
    signed char v4;
    uint1_t zf5;
    struct s796* eax6;
    signed char* edi7;
    uint32_t eax8;
    int32_t esi9;
    int32_t ebp10;

    eax2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 - 0x5f34707c);
    __asm__("sahf ");
    *reinterpret_cast<unsigned char*>(&ecx3) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&cx) + v4) + __intrinsic());
    zf5 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ecx3) == 0);
    if (!reinterpret_cast<uint1_t>(__intrinsic() | zf5)) {
        if (!__intrinsic()) 
            goto 0x402eee;
        __asm__("lds edx, [ebp+0x5]");
        __asm__("insb ");
        __asm__("lodsb ");
        __asm__("wait ");
        __asm__("aam 0x8");
        goto eax6->f4;
    } else {
        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&ecx3)) < reinterpret_cast<signed char>(0) != __intrinsic()) | zf5) {
            *reinterpret_cast<void**>(__return_address()) = eax2;
            edi7 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + 4);
            eax8 = reinterpret_cast<uint32_t>(eax2) & reinterpret_cast<uint32_t>(edi7);
            __asm__("insb ");
            __asm__("out 0xa1, eax");
            __asm__("arpl [edi], dx");
            *edi7 = reinterpret_cast<signed char>(*edi7 - *reinterpret_cast<signed char*>(&eax8));
        } else {
            *reinterpret_cast<int32_t*>(esi9 + 1 + 0x68b7b8a2) = ebp10;
        }
    }
}

struct s797 {
    signed char[1] pad1;
    signed char f1;
};

struct s798 {
    signed char f0;
    int32_t f1;
};

struct s799 {
    signed char[1] pad1;
    signed char f1;
};

void fun_402e30(int32_t ecx) {
    int32_t esi2;
    int32_t esi3;
    signed char* edi4;
    signed char al5;
    signed char* edi6;
    struct s797* edi7;
    struct s798* esi8;
    struct s799* esi9;
    uint32_t eax10;
    uint32_t eax11;
    int32_t edx12;

    *reinterpret_cast<unsigned char*>(esi2 + 0x52926d12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi3 + 0x52926d12) & 0xf0);
    __asm__("salc ");
    *edi4 = al5;
    edi6 = &edi7->f1;
    esi8 = reinterpret_cast<struct s798*>(&esi9->f1);
    __asm__("aaa ");
    *edi6 = esi8->f0;
    __asm__("pushad ");
    eax10 = (eax11 & 0x3abed88) - 0x69c59c57;
    *reinterpret_cast<unsigned char*>(edx12 - 0xbf08fd) = 0;
    __asm__("retf ");
    __asm__("stc ");
    __asm__("lodsb ");
    if (reinterpret_cast<int32_t>(edi6 + 1) - esi8->f1 < 0) 
        goto 0x402e02;
    __asm__("out dx, al");
    *reinterpret_cast<signed char*>(ecx + 0x27266fc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx + 0x27266fc) - *reinterpret_cast<signed char*>(&eax10));
}

void fun_402e8b() {
    int32_t ebx1;
    int32_t* edi2;
    int32_t* esi3;
    int32_t ebp4;
    int32_t ebp5;
    int32_t edi6;

    __asm__("stc ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) = 0x87;
    *edi2 = *esi3;
    *reinterpret_cast<int32_t*>(ebp4 - 11) = *reinterpret_cast<int32_t*>(ebp5 - 11) + (edi6 + 4);
    *reinterpret_cast<signed char*>(ebx1 - 0x4ea15595) = -*reinterpret_cast<signed char*>(ebx1 - 0x4ea15595);
}

void fun_402f15(signed char cl) {
    __asm__("into ");
    __asm__("in eax, 0x8");
    __asm__("in eax, dx");
    __asm__("ror cl, 1");
    __asm__("aad 0xa");
    __asm__("wait ");
}

void fun_402fb0() {
}

struct s800 {
    signed char[1] pad1;
    uint32_t f1;
    signed char[117] pad122;
    uint32_t* f122;
};

struct s800* gc6af2720;

uint32_t g1997534f;

signed char g9707ab0c;

void fun_402fe4(uint32_t* ecx) {
    void* esp2;
    uint32_t edx3;
    int1_t zf4;
    struct s800* eax5;
    void* ebx6;
    struct s800* tmp32_7;
    struct s800* esi8;
    uint1_t cf9;
    int32_t ebx10;
    unsigned char* edi11;
    uint32_t* esi12;
    signed char bl13;

    esp2 = __zero_stack_offset();
    *ecx = *ecx | edx3;
    zf4 = *ecx == 0;
    eax5 = gc6af2720;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) = 0x96;
    if (!__intrinsic()) {
        eax5 = reinterpret_cast<struct s800*>(reinterpret_cast<uint32_t>(eax5) + 0x7c8c548e);
        zf4 = eax5 == 0;
    }
    while (1) {
        __asm__("aaa ");
        if (zf4) 
            goto 0x402fd8;
        if (!(reinterpret_cast<uint32_t>(eax5) & 0xb3986f17)) 
            break;
        __asm__("cli ");
        esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp2) - 4 + 2);
        *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<int32_t>(ebx6) - 75));
        __asm__("retf 0x626d");
        __asm__("cmc ");
        tmp32_7 = esi8;
        esi8 = eax5;
        eax5 = tmp32_7;
        *reinterpret_cast<unsigned char*>(&eax5) = 99;
        cf9 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax5->f122) < reinterpret_cast<uint32_t>(ecx));
        eax5->f122 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax5->f122) - (reinterpret_cast<uint32_t>(ecx) + cf9));
        zf4 = reinterpret_cast<int1_t>(eax5->f122 == static_cast<uint32_t>(cf9));
    }
    __asm__("out 0x7e, eax");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) - 0x1556bd9c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) - 0x1556bd9c) - 0x6a);
    if (!__intrinsic()) 
        goto 0x402fdf;
    __asm__("fmul dword [ecx+ebp+0x58e68d4c]");
    g1997534f = g1997534f + ebx10 + __intrinsic();
    *edi11 = *reinterpret_cast<unsigned char*>(&eax5);
    esi12 = &esi8->f1;
    __asm__("int 0xd");
    *esi12 = *esi12 + (reinterpret_cast<int32_t>(esp2) - 4 + 1) + __intrinsic();
    g9707ab0c = reinterpret_cast<signed char>(g9707ab0c - bl13);
}

void fun_40301e() {
    int32_t ebp1;

    __asm__("rol byte [ecx], cl");
    __asm__("les ebp, [eax]");
    goto ebp1;
}

struct s801 {
    signed char[48] pad48;
    uint32_t f48;
};

struct s802 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s803 {
    signed char[1] pad1;
    unsigned char f1;
};

unsigned char g7b2f2c71;

unsigned char g77b41545;

uint32_t g9db03b4b;

uint32_t gcc3468ff;

signed char g3beddce0;

int32_t g12abdb47;

signed char fun_90b3c8aa(int32_t ecx);

void fun_4030f3(struct s801* ecx) {
    uint32_t ebp2;
    signed char* edi3;
    signed char* esi4;
    unsigned char* edi5;
    struct s802* edi6;
    unsigned char* esi7;
    struct s803* esi8;
    void* eax9;
    uint32_t eax10;
    int32_t ebx11;
    struct s801* v12;
    struct s801* eax13;
    uint1_t cf14;
    int32_t edx15;
    int1_t cf16;
    uint32_t edx17;
    uint32_t esi18;
    uint1_t cf19;
    uint1_t cf20;

    ebp2 = 0;
    __asm__("in al, dx");
    *edi3 = *esi4;
    edi5 = &edi6->f1;
    esi7 = &esi8->f1;
    eax9 = reinterpret_cast<void*>(eax10 & 0xae2e80db);
    if (reinterpret_cast<int32_t>(ecx) < reinterpret_cast<int32_t>(*reinterpret_cast<struct s801**>(ebx11 + 0x3bd25848))) 
        goto 0x403092;
    v12 = ecx;
    eax13 = reinterpret_cast<struct s801*>(reinterpret_cast<uint32_t>(eax9) - 0xe270e3bd);
    if (reinterpret_cast<uint32_t>(eax9) >= 0xe270e3bd) {
        addr_0x403126_6:
        cf14 = reinterpret_cast<uint1_t>(g7b2f2c71 < *reinterpret_cast<unsigned char*>(&eax13));
        g7b2f2c71 = reinterpret_cast<unsigned char>(g7b2f2c71 - *reinterpret_cast<unsigned char*>(&eax13));
        __asm__("fdivr qword [ecx+0x91c1db76]");
        __asm__("fcmovbe st0, st3");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax13) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax13) + 1) << *reinterpret_cast<unsigned char*>(&ecx));
        edi5 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi5) - (reinterpret_cast<int32_t>(esi7) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edi5) < reinterpret_cast<int32_t>(esi7) + cf14)) | ecx->f48 | *reinterpret_cast<uint32_t*>(ebp2 - 0x5769d0b));
        __asm__("rcr dword [ebx+0x2ac08f9b], 1");
        if (0) {
            addr_0x40315e_7:
            __asm__("lodsd ");
        } else {
            __asm__("fnsave [ebp+0xbb869613]");
            __asm__("lodsb ");
            __asm__("lds edi, [edx+0xd10546ec]");
            goto addr_0x403157_9;
        }
    } else {
        while (1) {
            *reinterpret_cast<unsigned char*>(&eax13) = 0xbc;
            ++edi5;
            ++esi7;
            ecx = reinterpret_cast<struct s801*>(reinterpret_cast<uint32_t>(ecx) - 1);
            if (!(reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>(*edi5 == 0xbc))) 
                break;
        }
        edx15 = __intrinsic();
        cf16 = *reinterpret_cast<unsigned char*>(&edx15) < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx15) + 1);
        *reinterpret_cast<unsigned char*>(&ecx) = 0xe4;
        ebp2 = reinterpret_cast<uint32_t>(eax13) * edx17;
        eax13 = v12;
        if (!cf16) 
            goto addr_0x403157_9; else 
            goto addr_0x40311c_16;
    }
    *edi5 = *esi7;
    __asm__("lahf ");
    *reinterpret_cast<unsigned char*>(&eax13) = g77b41545;
    esi18 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(ebp2 - 0x3b4b7cbe) * 0xf6c82042);
    *reinterpret_cast<signed char*>(ebp2 + 0x6b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp2 + 0x6b) + 99);
    cf19 = __intrinsic();
    do {
        *reinterpret_cast<unsigned char*>(&eax13) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax13) - reinterpret_cast<unsigned char>(100 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax13) < reinterpret_cast<unsigned char>(100 - cf19))));
        __asm__("out 0x8a, eax");
        cf19 = __intrinsic();
    } while (!__intrinsic());
    __asm__("in al, dx");
    g9db03b4b = g9db03b4b & esi18;
    __asm__("fsubr dword [ebx+ecx+0x82a54f25]");
    __asm__("aad 0x2e");
    cf20 = reinterpret_cast<uint1_t>(gcc3468ff < esi18 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>((reinterpret_cast<uint32_t>(ecx) ^ reinterpret_cast<uint32_t>(eax13)) - 92) < 0x9db03b78));
    gcc3468ff = gcc3468ff - (esi18 + cf20);
    __asm__("fisttp word [esi]");
    g3beddce0 = 32;
    __asm__("ror dword [ebp-0x29], cl");
    __asm__("fbstp tword [ebp+0xf6e79ce0]");
    __asm__("out dx, al");
    if (__intrinsic()) 
        goto 0x40321a;
    __asm__("sti ");
    __asm__("fucom st5");
    __asm__("enter 0x564c, 0x31");
    g12abdb47 = 0x4031e7;
    fun_90b3c8aa(0xe7bc8d67);
    __asm__("fst st2");
    __asm__("fnstsw word [edx+0x180bcdbb]");
    addr_0x403157_9:
    goto addr_0x40315e_7;
    addr_0x40311c_16:
    __asm__("fsubr dword [0xfa0cadbd]");
    goto addr_0x403126_6;
}

void fun_403331(int32_t ecx) {
}

void fun_403378() {
    __asm__("salc ");
}

struct s804 {
    signed char[94] pad94;
    signed char f94;
};

signed char g29ae452b;

void fun_4033cb(signed char cl) {
    int32_t ecx2;
    struct s804* esi3;
    void* esp4;
    void** ebx5;
    void* ebp6;
    uint16_t ss7;

    *reinterpret_cast<signed char*>(&ecx2) = reinterpret_cast<signed char>(cl - esi3->f94);
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 1);
    if (!__intrinsic()) 
        goto 0x403418;
    *reinterpret_cast<signed char*>(&ebx5) = 0x77;
    __asm__("fcomp dword [ecx+0x5]");
    *reinterpret_cast<uint32_t*>(ebx5 - 0x1ef4ef61) = *reinterpret_cast<uint32_t*>(ebx5 - 0x1ef4ef61) | reinterpret_cast<uint32_t>(esp4);
    ebp6 = reinterpret_cast<void*>(ss7 + reinterpret_cast<int32_t>(*ebx5));
    __asm__("lahf ");
    __asm__("daa ");
    g29ae452b = reinterpret_cast<signed char>(g29ae452b - 3);
    __asm__("aaa ");
    if (ecx2 - 1) {
    }
    if (!__intrinsic()) 
        goto 0x403382;
    if (reinterpret_cast<uint32_t>(esp4) >= reinterpret_cast<uint32_t>(ebp6)) 
        goto addr_0x403400_6;
    __asm__("insb ");
    __asm__("out dx, eax");
    addr_0x403400_6:
    __asm__("aas ");
    __asm__("hlt ");
}

void fun_403402() {
}

void fun_403450(int32_t ecx) {
    int32_t ecx2;
    uint1_t zf3;
    int32_t* edi4;
    int32_t* esi5;
    int1_t less_or_equal6;

    ecx2 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx2) & zf3) 
        goto 0x403481;
    *edi4 = *esi5;
    if (!less_or_equal6) {
        __asm__("sahf ");
        if (ecx2 - 1) 
            goto 0x403429;
    }
}

struct s805 {
    signed char[21] pad21;
    unsigned char f21;
};

void fun_40351b(signed char cl) {
    int32_t edi2;
    int32_t edi3;
    int32_t ebx4;
    int32_t edi5;
    int32_t ebx6;
    uint1_t cf7;
    struct s805* ebx8;
    void* ebx9;
    int32_t ebp10;
    int32_t esi11;

    *reinterpret_cast<uint32_t*>(edi2 + 0x64c6fdae) = *reinterpret_cast<int32_t*>(edi3 + 0x64c6fdae) - (ebx4 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edi5 + 0x64c6fdae) < ebx6 + cf7));
    __asm__("popad ");
    ebx8 = reinterpret_cast<struct s805*>(reinterpret_cast<int32_t>(ebx9) + 1);
    *reinterpret_cast<unsigned char*>(&ebx8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx8) & *reinterpret_cast<unsigned char*>(ebp10 + esi11 * 2 - 55));
    ebx8->f21 = reinterpret_cast<unsigned char>(ebx8->f21 >> cl);
    __asm__("cmc ");
    __asm__("pushad ");
}

uint32_t g37fd3271;

void fun_403557(int32_t ecx) {
    int1_t of2;
    uint32_t ecx3;
    int1_t zf4;
    int32_t* esp5;
    void* eax6;
    int32_t edi7;
    int32_t edi8;

    if (!of2) {
        goto 0x40351c;
    } else {
        ecx3 = reinterpret_cast<uint32_t>(ecx - 1);
        if (!(reinterpret_cast<uint1_t>(!!ecx3) & reinterpret_cast<uint1_t>(!zf4))) {
            __asm__("in eax, dx");
            g37fd3271 = g37fd3271 ^ ecx3;
            esp5 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax6) + 1 - 4);
            *esp5 = edi7;
            *(esp5 - 1) = edi8;
        }
        __asm__("outsd ");
        __asm__("aad 0xcf");
    }
}

void fun_4035d8() {
}

void fun_403651(int32_t ecx) {
    if (ecx - 1) 
        goto 0x4035f2;
}

void fun_403668() {
}

void fun_403670() {
}

struct s806 {
    signed char[33] pad33;
    unsigned char f33;
};

struct s807 {
    signed char[33] pad33;
    unsigned char f33;
};

void fun_4036ef() {
    struct s806* edi1;
    struct s807* edi2;
    unsigned char bh3;

    edi1->f33 = reinterpret_cast<unsigned char>(edi2->f33 ^ bh3);
}

struct s808 {
    signed char[4] pad4;
    signed char f4;
};

struct s809 {
    signed char[85] pad85;
    signed char f85;
};

struct s810 {
    signed char[85] pad85;
    signed char f85;
};

void fun_4037d4(int32_t ecx) {
    signed char* eax2;
    signed char bh3;
    signed char* edx4;
    unsigned char dh5;
    signed char** edi6;
    uint32_t eax7;
    struct s808* edi8;
    struct s809* ebp9;
    struct s810* ebp10;

    if (ecx) 
        goto 0x40383f;
    eax2 = reinterpret_cast<signed char*>(__return_address());
    *eax2 = reinterpret_cast<signed char>(*eax2 + bh3);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx4) + 1) = reinterpret_cast<unsigned char>(dh5 & *reinterpret_cast<unsigned char*>(&ecx));
    __asm__("outsb ");
    *edi6 = eax2;
    *reinterpret_cast<signed char*>(&eax2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax2) - *edx4);
    eax7 = reinterpret_cast<uint32_t>(eax2) | 0x7fc9602b;
    __asm__("salc ");
    __asm__("fistp dword [edx]");
    edi8->f4 = *reinterpret_cast<signed char*>(&eax7);
    ebp9->f85 = reinterpret_cast<signed char>(ebp10->f85 + 27);
    __asm__("ror edx, 1");
}

void fun_40382b() {
}

void fun_403866() {
    __asm__("arpl di, bx");
}

struct s811 {
    signed char[5] pad5;
    int32_t f5;
};

void fun_4038a0() {
    struct s811* edi1;

    __asm__("sahf ");
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edi1->f5);
}

void fun_403905() {
}

void fun_403947() {
}

void fun_403995(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t esi4;
    signed char* edi5;

    if (ecx) 
        goto 0x403966;
    __asm__("in eax, dx");
    __asm__("retf ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1) = -95;
    __asm__("sti ");
    __asm__("pushad ");
    if (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>((*reinterpret_cast<unsigned char*>(&ecx) ^ *reinterpret_cast<unsigned char*>(eax2 - 0x6e230f7b)) == 0)))) 
        goto 0x403975;
    __asm__("clc ");
    eax3 = esi4;
    __asm__("rcl dword [ss:ecx], 0xfd");
    *edi5 = *reinterpret_cast<signed char*>(&eax3);
    goto *reinterpret_cast<int32_t*>(eax3 - 0xd311706);
}

struct s812 {
    uint32_t f0;
    unsigned char* f4;
};

struct s813 {
    int32_t f0;
    signed char[86145390] pad86145394;
    signed char f86145394;
};

struct s814 {
    signed char[1] pad1;
    int32_t f1;
};

unsigned char gf36f5f64;

unsigned char* g424af501;

void fun_4039aa(uint32_t ecx) {
    uint1_t cf2;
    unsigned char al3;
    uint1_t cf4;
    unsigned char* eax5;
    signed char al6;
    struct s812* esp7;
    int32_t ebp8;
    int32_t ebp9;
    unsigned char ah10;
    struct s813* edx11;
    struct s814* edx12;
    uint1_t cf13;
    int1_t zf14;
    uint32_t ebp15;
    unsigned char** esp16;
    unsigned char* tmp32_17;
    unsigned char* esi18;
    unsigned char* eax19;
    unsigned char** esp20;
    uint32_t* ebx21;
    unsigned char* edi22;

    cf2 = reinterpret_cast<uint1_t>(al3 < reinterpret_cast<unsigned char>(18 - cf4));
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 - reinterpret_cast<unsigned char>(18 - cf2));
    if (reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax5)) >= reinterpret_cast<signed char>(static_cast<uint32_t>(cf2))) 
        goto 0x40399f;
    __asm__("fild qword [esi+ecx+0x22]");
    __asm__("wait ");
    if (ecx) 
        goto 0x403958;
    esp7 = reinterpret_cast<struct s812*>(0x51c846c1);
    *reinterpret_cast<unsigned char*>(ebp8 - 92) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp9 - 92) ^ ah10);
    edx11 = reinterpret_cast<struct s813*>(&edx12->f1);
    cf13 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(gf36f5f64)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) - reinterpret_cast<unsigned char>(gf36f5f64 + cf13));
    zf14 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) == static_cast<uint32_t>(cf13);
    while (1) {
        addr_0x4039c4_4:
        if (zf14) 
            goto 0x403969;
        *reinterpret_cast<signed char*>(&ecx) = -86;
        __asm__("fimul word [edx+0xf7f25d68]");
        __asm__("out 0x12, al");
        ebp15 = 0x16e08af2;
        __asm__("lahf ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax5) + 1) = 16;
        __asm__("aam 0x5b");
        edx11 = reinterpret_cast<struct s813*>(reinterpret_cast<int32_t>(edx11) + 1);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) - reinterpret_cast<unsigned char>(edx11->f86145394 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) < reinterpret_cast<unsigned char>(edx11->f86145394 + cf13))));
        esp16 = reinterpret_cast<unsigned char**>(reinterpret_cast<uint32_t>(esp7) - 4);
        *esp16 = eax5;
        __asm__("out 0x13, eax");
        __asm__("arpl [edi-0x74], sp");
        __asm__("lodsd ");
        if (!__intrinsic()) 
            break;
        while (*reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) + *eax5), tmp32_17 = esi18, esi18 = eax5, eax19 = tmp32_17, g424af501 = eax19, esp20 = esp16 - 1, *esp20 = esi18, esp7 = reinterpret_cast<struct s812*>(esp20 - 1), esp7->f0 = ecx, !__intrinsic()) {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax19) + 1) = 0;
            __asm__("out 0x99, al");
            *ebx21 = *ebx21 & reinterpret_cast<uint32_t>(esp7);
            eax5 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax19) | 0x2586e066);
            cf13 = 0;
            zf14 = 0;
            __asm__("daa ");
            if (__intrinsic()) 
                goto addr_0x4039c4_4;
            ebx21 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx21) - 1);
            *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) + 0xec))) + 0xd5) + __intrinsic());
            *edi22 = *esi18;
            --edi22;
            --esi18;
            ebp15 = esp7->f0;
            esp16 = &esp7->f4;
            eax5 = eax5 + 0x65ee8817;
        }
        goto addr_0x403a60_12;
    }
    __asm__("rcl ebx, 0x42");
    *(esp16 - 1) = reinterpret_cast<unsigned char*>(0x16e08af3);
    addr_0x403a60_12:
    *reinterpret_cast<uint32_t*>(ebp15 - 0x2205faaf) = *reinterpret_cast<uint32_t*>(ebp15 - 0x2205faaf) ^ ecx;
    if (__intrinsic()) {
        edx11->f0 = edx11->f0 + 0x57d9b820;
        goto esp7->f0;
    } else {
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp7) + reinterpret_cast<int32_t>(ebx21) * 4 - 0x5d31f772) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp7) + reinterpret_cast<int32_t>(ebx21) * 4 - 0x5d31f772) ^ 55;
    }
}

void fun_403a01(signed char cl) {
    signed char* ebx2;
    signed char* edi3;
    void* edi4;
    signed char* esi5;

    *ebx2 = cl;
    edi3 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi4) - 1);
    __asm__("insb ");
    if (reinterpret_cast<int32_t>(edi3) >= 0) {
        *edi3 = *esi5;
    }
}

signed char ga05a;

void fun_403acb(int32_t ecx, int32_t a2) {
    int1_t less3;
    uint32_t eax4;
    uint32_t eax5;
    uint32_t ebp6;
    int32_t edx7;
    int32_t edx8;
    int32_t ebx9;
    int32_t edx10;
    int32_t edx11;
    unsigned char bh12;
    int32_t ebx13;

    __asm__("out 0x98, al");
    if (!less3) {
        eax4 = eax5 | ebp6;
        ga05a = *reinterpret_cast<signed char*>(&eax4);
        *reinterpret_cast<uint32_t*>(edx7 + 0x243e05dd) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(edx8 + 0x243e05dd) + ebx9);
        *reinterpret_cast<unsigned char*>(edx10 + 0x19ec7b37) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx11 + 0x19ec7b37) | bh12);
        *reinterpret_cast<int32_t*>(ebx13 - 0x3c3d62fc)();
    } else {
        __asm__("retf ");
    }
}

void fun_403ad8(int32_t ecx) {
    uint1_t zf2;
    int32_t edx3;

    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & zf2) {
        *reinterpret_cast<int32_t*>(edx3 + 0x5fd8bd6) = *reinterpret_cast<int32_t*>(edx3 + 0x5fd8bd6) + 79;
    } else {
        __asm__("wait ");
        if (!__intrinsic()) {
            __asm__("lds ecx, [esi+0x55]");
        }
    }
    __asm__("outsd ");
}

void fun_403b5b() {
    uint32_t eax1;
    uint32_t eax2;
    signed char* edi3;

    __asm__("out dx, al");
    eax1 = eax2 | 0xa1ae7530;
    *edi3 = *reinterpret_cast<signed char*>(&eax1);
}

signed char g6df931e8;

void fun_403bbf(int32_t ecx) {
    int32_t ebx2;
    int32_t ebx3;
    int32_t* edi4;
    int32_t* esi5;
    int32_t edi6;
    int32_t edi7;
    signed char dh8;
    uint40_t v9;
    int32_t* esp10;
    int32_t esi11;
    signed char bl12;
    signed char al13;

    *reinterpret_cast<unsigned char*>(ecx + ebx2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + ebx3) & 0x77);
    *edi4 = *esi5;
    edi6 = edi7 + 4;
    __asm__("ror edi, 1");
    __asm__("rcr al, 1");
    *reinterpret_cast<signed char*>(edi6 - 0x6c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi6 - 0x6c) - dh8);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v9) + 1) = 0x22ce01d4;
    esp10 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp10) + (esi11 + 4) + 27) = bl12;
    g6df931e8 = al13;
    __asm__("fist dword [ebp+0x778a70f3]");
    *reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(&v9) - 0x1ef32616) = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp10 + 1) + 1 + 2);
}

void fun_5e97fbca(int32_t a1);

void fun_403c16() {
    int32_t edi1;
    int32_t edi2;
    uint32_t eax3;

    *reinterpret_cast<uint32_t*>(edi1 + 0x62a30a0) = *reinterpret_cast<uint32_t*>(edi2 + 0x62a30a0) ^ eax3;
    fun_5e97fbca(__return_address());
}

void fun_403c39() {
    int32_t* edi1;
    int32_t* esi2;
    int32_t edi3;

    *edi1 = *esi2;
    *reinterpret_cast<int32_t*>(edi3 - 4) = reinterpret_cast<int32_t>(__return_address());
    __asm__("out dx, al");
}

void fun_403cd6(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    unsigned char ah4;

    *reinterpret_cast<unsigned char*>(eax2 - 0x317b2348) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax3 - 0x317b2348) ^ ah4);
    __asm__("rcr byte [eax+0x65], 0xbf");
    __asm__("fcom qword [edi+0x40]");
    if (!0) {
        __asm__("lodsb ");
        if (__intrinsic()) 
            goto 0x403d1c;
        __asm__("clc ");
        __asm__("lodsd ");
        __asm__("outsd ");
    }
}

void fun_403f3a() {
    int32_t* edi1;
    int32_t eax2;

    __asm__("fbld tword [esi]");
    __asm__("xlatb ");
    __asm__("cmc ");
    *edi1 = eax2;
    __asm__("retf 0x1670");
}

struct s815 {
    signed char[51] pad51;
    unsigned char f51;
};

void fun_5bba2899();

signed char g6461f788;

int16_t fun_f46700f7(void** a1, int32_t a2);

void fun_403fb4(struct s815* ecx) {
    uint32_t eax2;
    int32_t esi3;

    fun_5bba2899();
    __asm__("cdq ");
    eax2 = reinterpret_cast<uint32_t>(__return_address()) - 0x5bd59549;
    __asm__("pushad ");
    g6461f788 = *reinterpret_cast<signed char*>(&eax2);
    ecx->f51 = reinterpret_cast<unsigned char>(ecx->f51 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx) + reinterpret_cast<uint1_t>(ecx->f51 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(__return_address()) < 0x5bd59549)))));
    fun_f46700f7(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 + 4 - 4 - 4, esi3);
    __asm__("in eax, 0x58");
}

int32_t g6639f257;

int32_t g6639f253;

void fun_40411a(int32_t ecx) {
    int32_t eax2;
    signed char al3;
    int32_t eax4;
    int32_t ecx5;
    signed char* edi6;
    int32_t eip7;

    *reinterpret_cast<signed char*>(&eax2) = reinterpret_cast<signed char>(al3 + 53);
    eax4 = eax2 * 0xe4cd56d3;
    __asm__("clc ");
    g6639f257 = 62;
    ecx5 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx5) & reinterpret_cast<uint1_t>(*edi6 == *reinterpret_cast<signed char*>(&eax4))) 
        goto 0x40416b;
    g6639f253 = ecx5;
    __asm__("stc ");
    if (!__intrinsic()) 
        goto 0x404174;
    __asm__("in eax, 0xf5");
    __asm__("enter 0x6087, 0x9e");
    eip7 = g6639f253;
    goto eip7;
}

struct s816 {
    signed char[1] pad1;
    uint32_t f1;
};

void fun_f418fd60();

void fun_404142(uint32_t ecx) {
    int32_t* esp2;
    int32_t v3;
    uint32_t eax4;
    int32_t eax5;
    uint32_t eax6;
    uint1_t cf7;
    uint32_t* edi8;
    struct s816* edi9;
    uint1_t cf10;
    int32_t edx11;
    int32_t edx12;
    int32_t esi13;
    void* esp14;

    esp2 = reinterpret_cast<int32_t*>(__zero_stack_offset());
    v3 = reinterpret_cast<int32_t>(__return_address());
    eax4 = eax5 - (0x71eb1ad3 - reinterpret_cast<uint1_t>(eax6 < 0x71eb1ad3 - cf7)) - 0x6b0a8849;
    *reinterpret_cast<signed char*>(&eax4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax4) + 7);
    edi8 = &edi9->f1;
    __asm__("in al, 0x75");
    __asm__("stc ");
    __asm__("lodsb ");
    cf10 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edx11 + 0x17e0d24e) < ecx);
    if (reinterpret_cast<int32_t>(*reinterpret_cast<uint32_t*>(edx12 + 0x17e0d24e)) >= reinterpret_cast<int32_t>(ecx)) {
    }
    __asm__("sti ");
    do {
        if (!ecx) 
            break;
        --ecx;
        cf10 = reinterpret_cast<uint1_t>(*edi8 < eax4);
        ++edi8;
        esi13 = esi13 + 4;
    } while (*edi8 != eax4);
    esp14 = reinterpret_cast<void*>(esp2 + 1);
    __asm__("xlatb ");
    if (__intrinsic()) 
        goto addr_0x4041cb_8;
    __asm__("outsd ");
    __asm__("daa ");
    __asm__("in al, 0x28");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp14) + reinterpret_cast<int32_t>(esp14) + 4 - *reinterpret_cast<int32_t*>(esi13 + *reinterpret_cast<int32_t*>(eax4 + 0x1d0c8a4a) + __intrinsic()) - 4) = 0x404221;
    fun_f418fd60();
    addr_0x4041cb_8:
    if (cf10 | reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edi8) - 1 == 0)) 
        goto 0x40416c;
    *reinterpret_cast<int32_t*>(v3 - 0xe041956) = 0;
}

struct s817 {
    signed char[91] pad91;
    int32_t f91;
};

void fun_4041ad(struct s817* ecx) {
    int32_t eax2;
    unsigned char al3;
    int32_t* edi4;

    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 & 0x9e);
    *edi4 = eax2;
    __asm__("aas ");
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax2) == 0))) 
        goto 0x404167;
    ecx->f91 = ecx->f91 >> *reinterpret_cast<signed char*>(&ecx);
    __asm__("in eax, dx");
    __asm__("out dx, al");
    __asm__("retf 0x9719");
}

void fun_4041fb(int32_t ecx) {
    __asm__("into ");
    __asm__("fadd dword [edx+0xc3c57c4b]");
}

void fun_40433b() {
    __asm__("outsd ");
}

void fun_40436b(signed char cl) {
    int32_t edx2;
    int32_t ebp3;
    int32_t edx4;
    int32_t ebp5;

    __asm__("enter 0xc8dd, 0x94");
    *reinterpret_cast<signed char*>(edx2 + ebp3 * 2 - 0x3c4dea3) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx4 + ebp5 * 2 - 0x3c4dea3) + cl);
    __asm__("fnstsw word [edi+0xd4c5c690]");
    goto 0x4043fb;
}

struct s818 {
    signed char[103] pad103;
    int32_t f103;
};

void fun_40439e(struct s818* ecx) {
    int32_t esi2;
    int32_t esi3;
    signed char dl4;

    *reinterpret_cast<signed char*>(esi2 - 0x73f3f687) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi3 - 0x73f3f687) - dl4);
    goto ecx->f103;
}

void fun_4045de() {
}

struct s819 {
    signed char[84] pad84;
    int32_t f84;
};

unsigned char ge68ee7af;

uint32_t gf9187c05;

uint32_t gdc05bf40;

unsigned char g4620b632;

void fun_2b679c7();

unsigned char g6e6e5cec;

void fun_4046b2(uint32_t ecx, void* a2) {
    uint32_t eflags3;
    signed char* eax4;
    signed char ah5;
    signed char* esi6;
    unsigned char* esi7;
    void* esi8;
    unsigned char* edi9;
    struct s819* edi10;
    uint32_t eax11;
    signed char al12;
    int32_t esi13;
    int32_t ebp14;
    void* eax15;
    uint32_t eax16;
    uint32_t ebp17;
    uint1_t cf18;
    unsigned char dh19;
    int32_t ebp20;
    uint32_t ebp21;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = 0;
    __asm__("in eax, 0x24");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax4) + 1) = reinterpret_cast<signed char>(ah5 + *esi6);
    __asm__("sti ");
    __asm__("salc ");
    __asm__("in al, 0x2");
    esi7 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi8) - 1);
    __asm__("fild qword [edx+0x4e]");
    edi9 = reinterpret_cast<unsigned char*>(edi10->f84 * 0x7505e234 - 1);
    *reinterpret_cast<int16_t*>(&eax11) = reinterpret_cast<int16_t>(al12 * *eax4);
    if (ecx) {
        if (0) 
            goto 0x4047a0;
        if (!1) 
            goto addr_0x40474e_5;
    } else {
        __asm__("pushad ");
        esi13 = reinterpret_cast<int32_t>(__return_address());
        do {
            __asm__("insd ");
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax11) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax11) + 1) - *reinterpret_cast<signed char*>(ebp14 * 0xa6b5fc32 - 94));
        } while (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax11) + 1) >= 0);
        __asm__("in al, dx");
        __asm__("aas ");
        __asm__("aas ");
        if (__intrinsic()) 
            goto 0x4046af;
        __asm__("out 0x18, al");
        __asm__("enter 0x3b13, 0x37");
        eax15 = a2;
        *reinterpret_cast<unsigned char*>(esi13 + ecx * 8 + 0x64eedeee) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi13 + ecx * 8 + 0x64eedeee) | 95);
        *reinterpret_cast<uint32_t*>(edi9 + esi13 * 4 + 0x2bc70486) = *reinterpret_cast<int32_t*>(edi9 + esi13 * 4 + 0x2bc70486) + ecx;
        __asm__("sahf ");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax15) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax15) + 1) ^ ge68ee7af);
        if (!*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax15) + 1)) 
            goto addr_0x404732_10; else 
            goto addr_0x404712_11;
    }
    *reinterpret_cast<uint32_t*>(ecx + 87) = *reinterpret_cast<uint32_t*>(ecx + 87) ^ ecx;
    addr_0x40474e_5:
    while (ecx) {
        --ecx;
        *edi9 = *esi7;
        ++edi9;
        ++esi7;
    }
    gf9187c05 = eax11;
    __asm__("pushad ");
    __asm__("lodsb ");
    *reinterpret_cast<int1_t*>(&eflags3) = eax11 < 0xc8d04a;
    eax16 = eax11 - 0xc8d04a;
    *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags3) = eax16 == 0;
    *reinterpret_cast<int1_t*>(&eflags3) = reinterpret_cast<int32_t>(eax16) < reinterpret_cast<int32_t>(0);
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax16) + 1) = 0x85;
    gdc05bf40 = eax16;
    __asm__("das ");
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!*reinterpret_cast<int1_t*>(&eflags3))) 
        goto 0x40478d;
    g4620b632 = reinterpret_cast<unsigned char>(eflags3 & 0xfcffff);
    *edi9 = reinterpret_cast<unsigned char>(eflags3 & 0xfcffff);
    fun_2b679c7();
    addr_0x404732_10:
    *reinterpret_cast<uint32_t*>(ebp17 + reinterpret_cast<int32_t>(eax15) + 30) = *reinterpret_cast<int32_t*>(ebp17 + reinterpret_cast<int32_t>(eax15) + 30) + ecx;
    addr_0x404712_11:
    cf18 = reinterpret_cast<uint1_t>(g6e6e5cec < dh19);
    ebp17 = ebp20 - (reinterpret_cast<int32_t>(eax15) + reinterpret_cast<uint1_t>(ebp21 < reinterpret_cast<int32_t>(eax15) + cf18));
    *reinterpret_cast<int32_t*>(ebp17 - 0x43ff5d91) = *reinterpret_cast<int32_t*>(ebp17 - 0x43ff5d91) >> 1;
    __asm__("rep in eax, dx");
    if (!*reinterpret_cast<int32_t*>(ebp17 - 0x43ff5d91)) 
        goto 0x404789;
    __asm__("outsb ");
    __asm__("cmc ");
    *reinterpret_cast<int16_t*>(&eax15) = reinterpret_cast<int16_t>(*reinterpret_cast<signed char*>(&eax15) * *reinterpret_cast<signed char*>(&eax15));
    *reinterpret_cast<signed char*>(&ecx) = -96;
    goto addr_0x404732_10;
}

void fun_4047da() {
    int32_t ebx1;
    int32_t esi2;
    int32_t ebx3;
    int32_t esi4;
    uint32_t esi5;

    __asm__("retf ");
    *reinterpret_cast<uint32_t*>(ebx1 + esi2 * 2 + 0x71d47f17) = *reinterpret_cast<uint32_t*>(ebx3 + esi4 * 2 + 0x71d47f17) ^ esi5;
    __asm__("hlt ");
}

void fun_404808() {
    __asm__("int1 ");
}

void fun_404832(int32_t ecx) {
    int1_t sf2;
    int32_t edi3;
    int32_t edi4;
    int32_t edi5;
    int32_t edi6;
    int32_t edx7;

    if (sf2) {
        __asm__("pushad ");
    }
    *reinterpret_cast<int32_t*>(edi3 + edi4 * 4 + 0x7453573a) = *reinterpret_cast<int32_t*>(edi5 + edi6 * 4 + 0x7453573a) - edx7;
}

void fun_404a70() {
    __asm__("wait ");
}

void fun_404c42(int32_t ecx) {
    int1_t cf2;

    __asm__("cdq ");
    if (!cf2) 
        goto 0x404cbc;
    __asm__("outsb ");
    __asm__("lodsb ");
}

void fun_404c7b() {
    uint48_t v1;
    int1_t less2;
    int32_t eflags3;
    int32_t* esp4;
    uint32_t* esi5;
    void* esi6;
    int32_t edi7;
    uint32_t esi8;
    int32_t edi9;
    void* ebp10;
    int32_t v11;

    *reinterpret_cast<int32_t*>(&v1) = reinterpret_cast<int32_t>(__return_address());
    if (less2) 
        goto 0x404cee;
    eflags3 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2);
    esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 2 + 4);
    esi5 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esi6) - (*reinterpret_cast<int32_t*>(edi7 - 80) + reinterpret_cast<uint1_t>(esi8 < *reinterpret_cast<int32_t*>(edi9 - 80) + *reinterpret_cast<uint1_t*>(&eflags3))));
    *esi5 = *esi5 | 0xf65c10e2;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp4) + reinterpret_cast<uint32_t>(esi5)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp4) + reinterpret_cast<uint32_t>(esi5)) & 21;
    __asm__("out 0xf, al");
    __asm__("cdq ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp10) + 4 - 4) = v11;
}

signed char gffba2178;

void fun_404d47(signed char cl) {
    int1_t below_or_equal2;

    __asm__("into ");
    if (below_or_equal2) 
        goto 0x404d1e;
    gffba2178 = reinterpret_cast<signed char>(gffba2178 + 66);
}

struct s820 {
    unsigned char f0;
    unsigned char f1;
};

void fun_404dde(int32_t ecx) {
    int1_t less2;
    signed char* edi3;
    signed char* esi4;
    int32_t eax5;
    int32_t edi6;
    struct s820* eax7;
    unsigned char* edi8;
    unsigned char* esi9;
    void* esi10;
    int1_t below_or_equal11;
    int32_t ebp12;
    int32_t ebp13;
    uint1_t cf14;
    void* edi15;
    signed char dh16;

    if (!less2) 
        goto 0x404d72;
    *edi3 = *esi4;
    eax5 = edi6 + 1;
    eax7->f0 = *reinterpret_cast<unsigned char*>(&eax5);
    edi8 = &eax7->f1;
    esi9 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi10) + 1 + 1);
    below_or_equal11 = *reinterpret_cast<unsigned char*>(&eax5) <= 10;
    if (below_or_equal11) 
        goto 0x404da8;
    *(edi8 - 0x770555e6) = reinterpret_cast<unsigned char>(*(edi8 - 0x770555e6) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<uint32_t*>(ebp12 + 0x5bf560aa) = *reinterpret_cast<uint32_t*>(ebp13 + 0x5bf560aa) >> *reinterpret_cast<signed char*>(&ecx);
    __asm__("retf ");
    cf14 = reinterpret_cast<uint1_t>(*esi9 < *edi8);
    *edi8 = *esi9;
    edi15 = reinterpret_cast<void*>(edi8 + 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi15) - 0x3cbc80b1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi15) - 0x3cbc80b1) + dh16) + cf14);
}

struct s821 {
    signed char[29] pad29;
    uint32_t f29;
};

struct s822 {
    signed char[29] pad29;
    uint32_t f29;
};

struct s823 {
    signed char[17] pad17;
    uint32_t f17;
};

struct s824 {
    signed char[17] pad17;
    int32_t f17;
};

struct s825 {
    signed char[17] pad17;
    uint32_t f17;
};

void fun_404ecd(uint32_t ecx) {
    struct s821* esi2;
    struct s822* esi3;
    struct s823* eax4;
    struct s824* eax5;
    struct s825* eax6;

    esi2->f29 = esi3->f29 | 0xa787abfa;
    eax4->f17 = eax5->f17 - (ecx + reinterpret_cast<uint1_t>(eax6->f17 < ecx));
}

void fun_404f05() {
}

void fun_404f46() {
    __asm__("fstp dword [ebx]");
}

int32_t g3a99af03;

void fun_405077() {
    unsigned char* eax1;
    int32_t ecx2;
    int32_t ebx3;
    int32_t ebx4;
    uint32_t esi5;
    uint1_t cf6;
    unsigned char* edi7;
    unsigned char* edi8;
    int32_t* ebp9;

    eax1 = reinterpret_cast<unsigned char*>(g3a99af03 * 0xffffff90);
    __asm__("enter 0xe4a9, 0xba");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = 0x6a;
    *reinterpret_cast<uint32_t*>(ebx3 + 0x19320c9f) = *reinterpret_cast<uint32_t*>(ebx4 + 0x19320c9f) ^ esi5;
    *reinterpret_cast<signed char*>(&eax1) = 0x8f;
    if (!(reinterpret_cast<uint1_t>(!!(ecx2 - 1)) & reinterpret_cast<uint1_t>(!!(reinterpret_cast<int32_t>(__zero_stack_offset()) - 1)))) {
        cf6 = reinterpret_cast<uint1_t>(*eax1 < *edi7);
        *edi8 = *eax1;
        if (!reinterpret_cast<uint1_t>(cf6 | reinterpret_cast<uint1_t>(*ebp9 + 1 == 0))) 
            goto 0x40504c;
        __asm__("insb ");
        __asm__("fldenv [edx]");
    }
}

struct s826 {
    signed char[45] pad45;
    unsigned char f45;
};

struct s827 {
    int32_t f0;
    struct s826* f4;
};

int32_t g959fb531;

void fun_405107(int32_t ecx) {
    uint32_t eflags2;
    uint32_t ecx3;
    int32_t ebx4;
    int32_t ebp5;
    int32_t esi6;
    int32_t ebp7;
    int32_t esi8;
    int32_t edx9;
    struct s826** esp10;
    struct s827* ebp11;
    struct s826* esi12;
    int32_t eax13;
    int32_t esi14;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    __asm__("insd ");
    ecx3 = reinterpret_cast<uint32_t>(ecx - 1) ^ *reinterpret_cast<uint32_t*>(ebx4 - 0x88e8e87);
    *reinterpret_cast<uint32_t*>(ebp5 + esi6 * 4 + 0x4bf266a5) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(ebp7 + esi8 * 4 + 0x4bf266a5) + edx9);
    esp10 = &ebp11->f4;
    esi12 = *esp10;
    eax13 = ebp11->f0;
    esi12->f45 = reinterpret_cast<unsigned char>(esi12->f45 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx3) + 1) + reinterpret_cast<uint1_t>(esi12->f45 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx3) + 1) + __intrinsic()))));
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    __asm__("out dx, al");
    g959fb531 = eax13;
    __asm__("stc ");
    esi14 = reinterpret_cast<int32_t>(esi12) + 1 + 1;
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = esi14 == 0;
    *reinterpret_cast<int1_t*>(&eflags2) = esi14 < 0;
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<uint32_t*>(esp10 + 1 - 1) = eflags2 & 0xfcffff;
    if (*reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1)) 
        goto 0x4051b3;
    if (*reinterpret_cast<int1_t*>(&eflags2) != *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1)) 
        goto 0x405103;
}

void fun_405141(int32_t ecx) {
    __asm__("aaa ");
}

signed char gc9b23383;

signed char ga7aacf2a;

void fun_4051d0() {
    signed char al1;
    int32_t eax2;
    signed char* edx3;
    signed char* edx4;

    al1 = gc9b23383;
    __asm__("out dx, al");
    ga7aacf2a = al1;
    __asm__("int1 ");
    eax2 = 0x57c58146;
    *edx3 = reinterpret_cast<signed char>(*edx4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1));
    __asm__("xlatb ");
}

void fun_405261(int32_t ecx, int32_t a2) {
    int32_t esi3;
    int32_t esi4;

    __asm__("in al, 0xdb");
    __asm__("stc ");
    esi3 = esi4 + 1;
    *reinterpret_cast<int32_t*>(esi3 + 0x112d0b85) = *reinterpret_cast<int32_t*>(esi3 + 0x112d0b85) + 0x573701a;
    __asm__("fisttp dword [esi+0xcb8c004e]");
    __asm__("salc ");
}

void fun_405292(signed char* ecx) {
    *ecx = reinterpret_cast<signed char>(*ecx - *reinterpret_cast<signed char*>(&ecx));
}

void fun_40531f() {
    unsigned char* edi1;
    signed char* edi2;

    *edi1 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*edi2 + 46)));
}

void fun_4053d9() {
    __asm__("xlatb ");
}

uint32_t ge1a4b19d;

int16_t fun_4054be() {
    int32_t eax1;
    int32_t ebx2;
    int1_t cf3;
    uint32_t eax4;

    eax1 = ebx2;
    cf3 = ge1a4b19d < eax4;
    if (!cf3) 
        goto 0x40546e;
    *reinterpret_cast<signed char*>(eax4 - 0xc7839e0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax4 - 0xc7839e0) + 14);
    return *reinterpret_cast<int16_t*>(&eax1);
}

void fun_4054d3(int32_t ecx) {
    __asm__("aaa ");
}

uint32_t g6c4c4fa8;

void fun_40550c(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t ebp4;
    uint32_t esp5;
    int1_t zf6;
    uint1_t cf7;
    int32_t ebx8;
    int32_t ebx9;
    int32_t ebx10;
    uint32_t ebp11;
    int32_t eax12;
    int16_t* esp13;
    int16_t ss14;

    eax2 = eax3 * ebp4;
    __asm__("retf 0x3464");
    __asm__("fcomi st0, st6");
    esp5 = reinterpret_cast<uint32_t>(__zero_stack_offset()) & *reinterpret_cast<uint32_t*>(ecx + 0x10f437e7);
    zf6 = esp5 == 0;
    do {
        __asm__("aaa ");
        --ecx;
    } while (reinterpret_cast<uint1_t>(!!ecx) & reinterpret_cast<uint1_t>(!zf6));
    cf7 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx8 - 0x1215ab82) < 41);
    *reinterpret_cast<unsigned char*>(ebx9 - 0x1215ab82) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx10 - 0x1215ab82) - reinterpret_cast<unsigned char>(41 + cf7));
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) - 23) + cf7);
    g6c4c4fa8 = g6c4c4fa8 ^ ebp11;
    __asm__("ror byte [ebp-0x32], 1");
    __asm__("salc ");
    __asm__("out dx, al");
    eax12 = eax2 - 1;
    __asm__("outsb ");
    *reinterpret_cast<unsigned char*>(eax12 + 0x623ad1f2) = 0xff;
    __asm__("out dx, eax");
    __asm__("aas ");
    if (!__intrinsic()) 
        goto 0x4054fa;
    __asm__("out dx, al");
    __asm__("salc ");
    esp13 = reinterpret_cast<int16_t*>(esp5 + 4 - 2);
    *esp13 = ss14;
    __asm__("aam 0x7c");
    __asm__("outsb ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp13) + 1 - 4) = eax12 - 1;
}

struct s828 {
    signed char[1] pad1;
    signed char f1;
};

void fun_405614(uint32_t ecx) {
    signed char* esi2;
    struct s828* esi3;
    signed char* edi4;
    uint32_t* edi5;
    void* edi6;

    esi2 = &esi3->f1;
    __asm__("fsubr dword [ecx+0x78]");
    *esi2 = reinterpret_cast<signed char>(*esi2 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    if (*esi2 < 0) 
        goto 0x4055a7;
    *edi4 = *esi2;
    edi5 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi6) + 1 + 1);
    __asm__("pushad ");
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(*edi5 & ecx) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>((*edi5 & ecx) == 0))) 
        goto 0x405646;
    __asm__("out dx, al");
    __asm__("ficomp dword [edi+0x785f9bcc]");
}

void fun_4056a8(int32_t ecx) {
    int32_t eflags2;
    int32_t eax3;
    int32_t eax4;
    int32_t edi5;
    signed char* edi6;
    signed char* esi7;
    int32_t esi8;

    eflags2 = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int32_t*>(eax3 + ecx * 2 - 51) = *reinterpret_cast<int32_t*>(eax4 + ecx * 2 - 51) + edi5;
    __asm__("insb ");
    *edi6 = *esi7;
    if (!(esi8 + (1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1)) + 1)) 
        goto 0x4056f6;
    __asm__("fldenv [esi]");
}

void fun_405798() {
    unsigned char* ebx1;
    signed char* ebx2;
    signed char bh3;
    unsigned char* ebx4;
    unsigned char bh5;

    __asm__("int1 ");
    __asm__("in al, 0x23");
    *ebx1 = reinterpret_cast<unsigned char>(*ebx2 - reinterpret_cast<unsigned char>(bh3 + reinterpret_cast<uint1_t>(*ebx4 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(bh5)))));
}

void fun_405911() {
}

struct s829 {
    signed char[65] pad65;
    uint32_t f65;
};

struct s830 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4059c3() {
    int32_t eax1;
    int32_t eax2;
    int32_t* edx3;
    int32_t edi4;
    struct s829* ebx5;
    struct s829* esi6;
    void* esp7;
    int32_t* edi8;
    int32_t* esi9;
    struct s830* edi10;

    eax1 = eax2 * *edx3;
    __asm__("rcr dword [ebp+ebp*8-0x7a], 1");
    *reinterpret_cast<signed char*>(edi4 - 0xe4db2a7) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax1) + 1);
    ebx5 = esi6;
    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 + 4);
    if (__undefined()) 
        goto 0x4059b9;
    *edi8 = *esi9;
    edi10->f4 = eax1;
    __asm__("rcr dword [eax-0x67], 0xc4");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx5) + 1) = -84;
    __asm__("into ");
    __asm__("cvttps2pi mm7, [esi+ebp*4+0x2e45abd9]");
    *reinterpret_cast<int32_t*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(esp7) - reinterpret_cast<int32_t>(esp7)) | ebx5->f65) - 4) = 93;
}

void fun_405a48() {
}

void fun_405c3e(signed char cl) {
    int32_t ebp2;
    int32_t ebp3;

    __asm__("outsb ");
    *reinterpret_cast<int32_t*>(ebp2 - 31) = *reinterpret_cast<int32_t*>(ebp3 - 31) << 1;
    __asm__("stc ");
}

void fun_405c70() {
    unsigned char* edi1;
    unsigned char* edi2;
    unsigned char bh3;

    *edi1 = reinterpret_cast<unsigned char>(*edi2 & bh3);
}

void fun_405c7e() {
    int1_t pf1;
    int32_t tmp32_2;
    int32_t ecx3;
    int32_t eax4;
    int32_t* edi5;
    int32_t v6;

    pf1 = __intrinsic();
    while (1) {
        __asm__("rol byte [edx+0x7f41d88], 0xe3");
        do {
            tmp32_2 = ecx3;
            ecx3 = eax4;
            eax4 = tmp32_2;
            if (ecx3) 
                goto 0x405c20;
            __asm__("iretd ");
            if (!pf1) 
                break;
            __asm__("rcl byte [esi-0x62], 1");
            __asm__("in eax, dx");
            __asm__("fcomp dword [ebx+0x25ef6912]");
            if (__intrinsic()) 
                goto 0x405d06;
            __asm__("salc ");
            *edi5 = 0xd6c03716;
            ++edi5;
            __asm__("in eax, dx");
            eax4 = 0xd6c03719;
            __asm__("wait ");
            __asm__("wait ");
            pf1 = __intrinsic();
            __asm__("outsd ");
            ecx3 = v6 - 1;
        } while (reinterpret_cast<uint1_t>(!!ecx3) & 1);
        break;
    }
    __asm__("out dx, al");
}

void fun_405cfd() {
    __asm__("rcr cl, cl");
}

void fun_405d75() {
    __asm__("popad ");
}

void fun_e538ef6();

int32_t fun_ef917057();

void fun_405d9a() {
    int32_t ecx1;
    int32_t eax2;
    int32_t ecx3;
    int32_t esi4;
    int32_t esi5;
    unsigned char dl6;
    int32_t esi7;

    __asm__("outsb ");
    fun_e538ef6();
    *reinterpret_cast<signed char*>(&ecx1) = 8;
    eax2 = fun_ef917057();
    ecx3 = ecx1 + 1;
    __asm__("daa ");
    *reinterpret_cast<unsigned char*>(esi4 + 0x7103851c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi5 + 0x7103851c) & dl6);
    *reinterpret_cast<int32_t*>(ecx3 - 0x59da1329) = *reinterpret_cast<int32_t*>(ecx3 - 0x59da1329) - eax2;
    goto esi7;
}

signed char gd1a2ede0;

struct s831 {
    signed char[1] pad1;
    signed char f1;
};

void fun_405ee1() {
    uint48_t v1;
    uint32_t eflags2;
    void** esp3;
    int1_t below_or_equal4;
    void* edx5;
    signed char bh6;
    void* edx7;
    uint32_t eax8;
    signed char al9;
    uint32_t eax10;
    int32_t ebx11;
    signed char bl12;
    signed char* edi13;
    struct s831* edi14;
    int32_t* esp15;
    uint32_t* esp16;
    uint16_t es17;
    int32_t ebx18;

    *reinterpret_cast<int32_t*>(&v1) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    esp3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 2);
    if (!below_or_equal4 || (edx5 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&v1) + 2), esp3 = reinterpret_cast<void**>(0xaff0c68), *reinterpret_cast<signed char*>(&edx5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&edx5) + bh6), edx7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx5) - 1), !!edx7)) {
        __asm__("lds edi, [ecx]");
        __asm__("fnstenv [esi*2+0x5a7ec189]");
        *reinterpret_cast<signed char*>(&eax8) = reinterpret_cast<signed char>(al9 - 53);
        eax10 = eax8 ^ 0x69ccb74b;
        gd1a2ede0 = *reinterpret_cast<signed char*>(&eax10);
        __asm__("int 0xe");
        __asm__("insd ");
        *reinterpret_cast<signed char*>(&ebx11) = reinterpret_cast<signed char>(bl12 - 0x65);
        *reinterpret_cast<int32_t*>(esp3 - 1) = -1;
        edi13 = &edi14->f1;
        esp15 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx7) - 4);
        *esp15 = 93;
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edi13) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(edi13 == 0))) {
            *reinterpret_cast<int1_t*>(&eflags2) = 0;
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags2) = 0;
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
            *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
            __asm__("in eax, dx");
            esp16 = reinterpret_cast<uint32_t*>(esp15 - 1);
            *esp16 = eflags2 & 0xfcffff;
            *reinterpret_cast<int1_t*>(&eflags2) = 0;
            *reinterpret_cast<uint32_t*>(edi13 - 0x38d669a3) = static_cast<uint32_t>(es17);
            ebx18 = ebx11 - 1;
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags2) = ebx18 == 0;
            *reinterpret_cast<int1_t*>(&eflags2) = ebx18 < 0;
            *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
            *reinterpret_cast<void**>(esp16 - 1) = reinterpret_cast<void*>(eflags2 & 0xfcffff);
        } else {
            if (__intrinsic()) 
                goto 0x405f9e;
            __asm__("retf 0x6374");
            goto 0x405faa;
        }
    }
    __asm__("wait ");
    *reinterpret_cast<signed char*>(ebx18 + 0x3ccd9b68 - 0x3d2c075b) = -12;
    __asm__("outsd ");
    __asm__("aad 0x57");
    __asm__("lahf ");
    *edi13 = reinterpret_cast<signed char>(*edi13 - 1);
}

void fun_405f37(int32_t ecx) {
    int32_t ebp2;
    int32_t ebp3;
    int32_t ebx4;
    int32_t ebp5;
    int32_t ebp6;
    int32_t* esi7;
    void* esi8;
    int32_t ecx9;
    int32_t* edi10;

    *reinterpret_cast<int32_t*>(ebp2 + 0x475028e1) = *reinterpret_cast<int32_t*>(ebp3 + 0x475028e1) + ebx4;
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(ebp5 + 0x475028e1) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(ebp6 + 0x475028e1) == 0))) 
        goto 0x405f6a;
    esi7 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi8) - 1);
    if (reinterpret_cast<int32_t>(esi7) < 0) {
        __asm__("aas ");
        __asm__("in al, 0xe8");
        ecx9 = ecx - 1;
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(ecx9 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(ecx9 == 0))) 
            goto 0x405ed5;
        *reinterpret_cast<unsigned char*>(esi7 - 0x1f196e26) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi7 - 0x1f196e26) >> 16);
    }
    *edi10 = *esi7;
}

int32_t gfe922725;

void fun_406035(int32_t ecx) {
    int1_t less_or_equal2;
    int32_t eax3;
    signed char* edx4;
    unsigned char bl5;
    int32_t edi6;

    if (less_or_equal2) 
        goto 0x40607e;
    eax3 = gfe922725;
    if (!__intrinsic()) 
        goto 0x405fc6;
    edx4 = reinterpret_cast<signed char*>(__return_address());
    __asm__("daa ");
    *reinterpret_cast<unsigned char*>(&edx4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx4) & reinterpret_cast<unsigned char>(bl5 & *reinterpret_cast<unsigned char*>(&eax3)));
    edx4[edi6 * 8] = 0;
    __asm__("cli ");
}

void fun_406132(signed char cl) {
    uint32_t eax2;

    if (reinterpret_cast<int32_t>(eax2 & 0x922f0fb6) >= reinterpret_cast<int32_t>(0)) 
        goto 0x4060f4;
}

void fun_50a7c36f(int32_t a1);

void fun_406201() {
    __asm__("out dx, eax");
    fun_50a7c36f(__return_address());
}

struct s832 {
    struct s832* f0;
    signed char[1] pad5;
    int32_t f5;
};

int32_t gddf720bd;

struct s833 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40625d(int32_t ecx) {
    int1_t less_or_equal2;
    struct s832* edx3;
    int32_t eax4;
    void* esp5;
    int32_t eax6;
    struct s832** esp7;
    int32_t* edi8;
    int32_t* esi9;
    unsigned char* edi10;
    struct s833* edi11;
    struct s832* esp12;
    unsigned char bl13;

    __asm__("rdmsr ");
    if (less_or_equal2) {
        edx3 = reinterpret_cast<struct s832*>(eax4 % *reinterpret_cast<int32_t*>(ecx + 0x2e73ce2e));
        if (!__undefined()) 
            goto 0x406335;
        esp5 = reinterpret_cast<void*>(edx3->f5 * 0x74);
        __asm__("sahf ");
        gddf720bd = eax6 / *reinterpret_cast<int32_t*>(ecx + 0x2e73ce2e);
        esp7 = reinterpret_cast<struct s832**>(reinterpret_cast<int32_t>(esp5) - 4);
        *esp7 = edx3;
        *edi8 = *esi9;
        edi10 = &edi11->f4;
        esp12 = reinterpret_cast<struct s832*>(esp7 - 1);
        esp12->f0 = esp12;
        *reinterpret_cast<signed char*>(edi10 - 0x3146ebb0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi10 - 0x3146ebb0) - 0x78);
        *edi10 = reinterpret_cast<unsigned char>(*edi10 & bl13);
        if (!__intrinsic()) 
            goto 0x406322;
        *reinterpret_cast<uint32_t*>(&esp12->pad5 - 1) = reinterpret_cast<uint32_t>(edx3) - (reinterpret_cast<uint32_t>(esp12) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edx3) < reinterpret_cast<uint32_t>(&esp12->f0)));
    }
}

void fun_40630b() {
    uint32_t edx1;
    unsigned char dh2;
    unsigned char ah3;
    uint32_t* esi4;
    uint32_t* esi5;

    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx1) + 1) = reinterpret_cast<unsigned char>(dh2 | ah3);
    *esi4 = *esi5 | edx1;
    if (__intrinsic()) 
        goto 0x406304;
    __asm__("fisttp qword [edi+0xc6707011]");
}

void fun_406399() {
    int32_t* eax1;
    int32_t* eax2;
    int32_t* edi3;
    int32_t eax4;

    __asm__("out dx, eax");
    *eax1 = *eax2 << 1;
    __asm__("out dx, eax");
    __asm__("cdq ");
    *edi3 = eax4;
    __asm__("cli ");
    __asm__("out 0xd2, al");
}

struct s834 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4063dc(int32_t ecx) {
    uint32_t eflags2;
    signed char* eax3;
    unsigned char* edi4;
    int32_t edi5;
    int32_t ebp6;
    int32_t ecx7;
    signed char* edx8;
    struct s834* v9;
    struct s834* cs10;
    int32_t ecx11;
    int32_t edx12;
    int32_t eax13;
    unsigned char bl14;
    signed char bl15;
    uint32_t* esp16;

    __asm__("in eax, 0x82");
    __asm__("into ");
    eflags2 = reinterpret_cast<uint32_t>(__return_address());
    __asm__("salc ");
    __asm__("in eax, 0x3d");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1) = -100;
    edi4 = reinterpret_cast<unsigned char*>(edi5 + *reinterpret_cast<int32_t*>(ebp6 - 72) + *reinterpret_cast<uint1_t*>(&eflags2));
    ecx7 = ecx - 1;
    if (ecx7) 
        goto 0x406414;
    edx8 = eax3;
    v9 = cs10;
    __asm__("cdq ");
    ecx11 = edx12;
    eax13 = ecx7 - 0x5d3e4e19;
    __asm__("fdivr st0, st0");
    bl14 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(bl15 + *edx8) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax13) < *reinterpret_cast<unsigned char*>(&edx8)));
    *reinterpret_cast<uint1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = bl14 == 0;
    *reinterpret_cast<int1_t*>(&eflags2) = reinterpret_cast<signed char>(bl14) < reinterpret_cast<signed char>(0);
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *edi4 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax13) - *reinterpret_cast<unsigned char*>(&edx8));
    esp16 = &v9->f4;
    do {
        __asm__("fcom qword [edi+0x8]");
        __asm__("out 0x65, al");
        --esp16;
        *esp16 = eflags2 & 0xfcffff;
        __asm__("aad 0x11");
        --ecx11;
    } while (ecx11);
    __asm__("int1 ");
}

void fun_40643c() {
    __asm__("stc ");
}

void fun_406493(int32_t ecx) {
    int32_t* eax2;
    int32_t ebx3;
    int32_t* edi4;
    int32_t* esi5;
    int32_t edx6;

    eax2 = reinterpret_cast<int32_t*>(*reinterpret_cast<int32_t*>(ebx3 - 97) * 0x3be12efc);
    if (!__undefined()) {
        if (__undefined()) 
            goto 0x406454;
        *edi4 = *esi5;
        __asm__("clc ");
        *eax2 = edx6;
        __asm__("cli ");
    }
}

void fun_4064bb(int32_t ecx) {
    __asm__("clc ");
}

void fun_4064cc(int32_t ecx) {
    int32_t eax2;

    if (eax2 - 1) {
    }
}

int16_t g453841c0;

void fun_40652d() {
    int1_t cf1;
    int16_t cs2;
    int16_t eip3;

    __asm__("aad 0xf4");
    if (!cf1) 
        goto "???";
    g453841c0 = cs2;
    eip3 = g453841c0;
    goto eip3;
}

void fun_4066bf(int32_t ecx) {
    int32_t edx2;
    int32_t edx3;
    int32_t ebp4;

    __asm__("aaa ");
    __asm__("retf 0x1a2");
    *reinterpret_cast<uint32_t*>(edx2 - 81) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(edx3 - 81) + ebp4);
}

void fun_4066ff(int32_t ecx) {
    void** esp2;
    int32_t ebx3;

    __asm__("sahf ");
    __asm__("out 0x7a, al");
    __asm__("salc ");
    __asm__("aaa ");
    __asm__("fxch st0, st3");
    esp2 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2 - 4) ^ *reinterpret_cast<uint32_t*>(ebx3 + 0x7888beb7)) + 1 + 4 - 4);
    *reinterpret_cast<void***>(esp2) = esp2;
    __asm__("aas ");
}

void fun_40672f(int32_t ecx) {
    uint1_t cf2;
    uint32_t* edi3;
    int32_t ebp4;
    uint1_t cf5;
    uint32_t* edi6;
    int32_t* edi7;
    int32_t ebp8;
    int32_t esi9;
    int32_t esi10;
    int32_t edi11;

    __asm__("insb ");
    cf2 = reinterpret_cast<uint1_t>(*edi3 < ebp4 + cf5);
    *edi6 = *edi7 - (ebp8 + cf2);
    if (ecx) 
        goto 0x4066ca;
    *reinterpret_cast<uint32_t*>(esi9 - 15) = *reinterpret_cast<int32_t*>(esi10 - 15) + edi11 + cf2;
    goto 0x4066f8;
}

int16_t fun_406742() {
    int1_t pf1;
    int32_t eax2;
    int32_t eax3;

    __asm__("lahf ");
    if (pf1) 
        goto 0x4067bd;
    __asm__("iretd ");
    eax2 = eax3 + 0x5dcce457;
    __asm__("rep aaa ");
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) & 0xff);
    __asm__("fdiv qword [edi-0x19]");
    __asm__("rcl dword [edi-0x56], cl");
    __asm__("rcr byte [eax], cl");
    return *reinterpret_cast<int16_t*>(&eax2);
}

struct s835 {
    signed char[47] pad47;
    int32_t f47;
};

void fun_406761(unsigned char cl) {
    uint32_t* esi2;
    uint32_t* esi3;
    uint32_t edx4;
    int32_t eax5;
    int32_t edi6;
    uint1_t cf7;
    uint1_t cf8;
    int32_t ebx9;
    unsigned char cl10;
    int32_t ebx11;
    uint1_t cf12;
    unsigned char bl13;
    signed char* ebx14;
    signed char bl15;
    unsigned char bl16;
    uint32_t* edx17;
    int32_t* edx18;
    int32_t edx19;
    int1_t less20;
    int32_t* edx21;
    struct s835* ebp22;
    unsigned char* eax23;
    signed char dl24;
    signed char dl25;
    signed char dl26;

    *esi2 = *esi3 | edx4;
    if (0) 
        goto 0x406729;
    __asm__("out 0x25, eax");
    eax5 = edi6;
    cf7 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1) < *reinterpret_cast<unsigned char*>(eax5 + 0x458464f4));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1) - *reinterpret_cast<unsigned char*>(eax5 + 0x458464f4));
    cf8 = reinterpret_cast<uint1_t>(cl < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx9 - 69) + cf7));
    cl10 = reinterpret_cast<unsigned char>(cl - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx11 - 69) + cf8));
    cf12 = reinterpret_cast<uint1_t>(bl13 < reinterpret_cast<unsigned char>(cl10 + cf8));
    *reinterpret_cast<unsigned char*>(&ebx14) = reinterpret_cast<unsigned char>(bl15 - reinterpret_cast<unsigned char>(cl10 + cf12));
    if (bl16 <= reinterpret_cast<unsigned char>(cl10 + cf12)) {
        *edx17 = *edx18 + edx19 + cf12;
        less20 = *edx21 < 0 != __intrinsic();
        ebp22->f47 = eax5;
        if (!less20) 
            goto 0x406729;
        *eax23 = reinterpret_cast<unsigned char>(*eax23 - reinterpret_cast<unsigned char>(dl24 + reinterpret_cast<uint1_t>(*eax23 < reinterpret_cast<unsigned char>(dl25 + __intrinsic()))));
        *ebx14 = reinterpret_cast<signed char>(*ebx14 - dl26);
        if (!__intrinsic()) 
            goto 0x4067f0;
        __asm__("rep in eax, dx");
        __asm__("outsb ");
    } else {
        goto 0x40670b;
    }
}

void fun_40677a() {
    int32_t esi1;
    int32_t esi2;
    int32_t esi3;
    uint1_t cf4;
    int32_t esi5;

    __asm__("sahf ");
    *reinterpret_cast<uint32_t*>(esi1 - 83) = *reinterpret_cast<int32_t*>(esi2 - 83) - (0x5673890d - reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(esi3 - 83) < 0x5673890d - cf4));
    *reinterpret_cast<int32_t*>(esi5 - 61)(__return_address());
}

void fun_40681d() {
    int32_t esi1;

    __asm__("fld tword [edx+0x89b5c70d]");
    *reinterpret_cast<signed char*>(esi1 + 4 + 0x7c017d6e) = 0x8f;
    __asm__("cli ");
    __asm__("enter 0x2467, 0x7f");
    __asm__("outsb ");
}

void fun_406843() {
    __asm__("in al, 0xf5");
    __asm__("hlt ");
}

void fun_406880() {
    int1_t of1;
    int1_t sf2;

    if (!of1) 
        goto 0x406845;
    __asm__("rcr byte [ebx+0x6141bf11], cl");
    if (sf2) 
        goto 0x4068b4; else 
        goto "???";
}

void fun_406967() {
}

struct s836 {
    signed char f0;
    signed char[578473077] pad578473078;
    unsigned char f578473078;
};

int32_t ge6785966;

void fun_406a11(struct s836* ecx, int32_t a2) {
    int1_t zf3;
    int32_t edx4;
    int1_t less_or_equal5;
    signed char dl6;

    __asm__("fcom dword [edx]");
    if (zf3) {
        __asm__("lds ebp, [esi+0x23456a19]");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx4) + 1) = 20;
        if (less_or_equal5) {
            ecx->f0 = dl6;
            __asm__("in eax, dx");
        }
    }
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__return_address()) - 18) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__return_address()) - 18) + 0x2f4fe1c3;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) + 0x227acc76) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) + 0x227acc76) + 0x69) + __intrinsic());
    __asm__("lodsb ");
    __asm__("aaa ");
    ge6785966 = ge6785966 - edx4;
    __asm__("sti ");
    __asm__("sahf ");
    __asm__("lds ebp, [ebx]");
}

int16_t g74ac45b5;

void fun_406a64(int32_t ecx) {
    int16_t ss2;

    __asm__("les eax, [edi]");
    g74ac45b5 = ss2;
    __asm__("aad 0x3a");
    __asm__("sti ");
    __asm__("out 0x92, eax");
}

void fun_406b2a() {
    __asm__("stc ");
    __asm__("out dx, al");
}

signed char g1834988e;

void fun_406b71() {
    int32_t* ebp1;
    int32_t eax2;
    int32_t* ebp3;
    int32_t eax4;

    ebp1[eax2] = ebp3[eax4] + 0x3e50000c;
    g1834988e = -2;
    if (!__intrinsic()) 
        goto 0x406b43;
    __asm__("salc ");
    __asm__("popad ");
    __asm__("out dx, al");
    __asm__("outsb ");
}

signed char gde6fc846;

void fun_406d07() {
    int1_t pf1;
    signed char al2;
    int32_t edi3;
    int32_t edi4;
    unsigned char al5;

    if (pf1) 
        goto 0x406cfc;
    gde6fc846 = al2;
    *reinterpret_cast<unsigned char*>(edi3 - 0x343d11b1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi4 - 0x343d11b1) | al5);
}

int32_t g2172069;

void fun_406fc0(int32_t ecx) {
    void* esp2;
    int32_t* esi3;

    esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 1);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esp2) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(esp2 == 0))) 
        goto 0x407016;
    __asm__("salc ");
    g2172069 = *esi3;
}

void fun_407027() {
    int1_t less1;

    if (less1) 
        goto 0x407098;
}

void fun_407084() {
    __asm__("iretd ");
}

void fun_4070f4() {
    int32_t eax1;
    int32_t eax2;
    signed char* edi3;
    signed char* esi4;

    __asm__("in eax, 0x66");
    __asm__("in eax, 0xfc");
    *reinterpret_cast<int32_t*>(eax1 - 0xdb1a4b2) = eax2;
    *edi3 = *esi4;
    __asm__("insb ");
    if (!__intrinsic()) 
        goto 0x4070b6;
    __asm__("ror bl, 1");
    __asm__("hlt ");
}

struct s837 {
    signed char[80] pad80;
    int32_t f80;
};

void fun_40710b(signed char* ecx) {
    int32_t edx2;
    struct s837* edx3;

    __asm__("wait ");
    *ecx = reinterpret_cast<signed char>(*ecx << 1);
    if (edx2 + edx3->f80 < 0 == __intrinsic()) {
        __asm__("arpl di, di");
    }
}

struct s838 {
    signed char[62] pad62;
    uint32_t f62;
};

void fun_40718b(struct s838* ecx) {
    uint32_t eax2;
    int32_t eax3;
    uint1_t cf4;
    uint32_t* edi5;

    eax2 = eax3 + 0x9197d06 + cf4;
    __asm__("in al, 0xfb");
    if (__intrinsic()) 
        goto 0x407153;
    ecx->f62 = ecx->f62 ^ 0x435bf62a;
    *reinterpret_cast<signed char*>(&eax2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax2) - 19);
    __asm__("stc ");
    *edi5 = eax2;
    __asm__("in al, dx");
}

struct s839 {
    signed char[127] pad127;
    int32_t f127;
};

struct s840 {
    signed char[127] pad127;
    int32_t f127;
};

signed char gd1edb55;

void fun_4071c1() {
    struct s839* ebx1;
    struct s840* ebx2;
    int32_t edi3;
    void* esp4;
    int16_t* esp5;
    int16_t es6;
    int16_t* esp7;
    int16_t cs8;
    void** esp9;
    signed char* esi10;

    ebx1->f127 = ebx2->f127 - edi3;
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    __asm__("arpl [edi], dx");
    if (__intrinsic()) {
        __asm__("popad ");
        esp5 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp4) + 4 - 2);
        *esp5 = es6;
        esp4 = reinterpret_cast<void*>(esp5 + 1);
    }
    __asm__("int1 ");
    __asm__("out 0xa, eax");
    esp7 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp4) - 2);
    *esp7 = cs8;
    esp9 = reinterpret_cast<void**>(esp7 - 2);
    *reinterpret_cast<void***>(esp9) = esp9;
    __asm__("das ");
    __asm__("fidiv word [eax+0x3b]");
    gd1edb55 = *esi10;
    __asm__("outsb ");
    __asm__("popad ");
    __asm__("outsb ");
}

struct s841 {
    signed char[71] pad71;
    signed char f71;
};

int32_t g3cf2833c;

void** g902648c2;

void fun_40721a(int32_t ecx) {
    struct s841* edi2;
    void* edi3;
    void** edx4;
    int16_t dx5;
    struct s841** esp6;
    int32_t edi7;
    struct s841* edx8;
    void** eax9;

    edi2 = reinterpret_cast<struct s841*>(reinterpret_cast<int32_t>(edi3) + 1);
    __asm__("fsubr dword [0x81e38ff9]");
    __asm__("fisubr dword [ebp+0xefb695de]");
    *reinterpret_cast<int16_t*>(&edx4) = reinterpret_cast<int16_t>(dx5 - 1);
    if (reinterpret_cast<uint1_t>(!!(reinterpret_cast<int32_t>(edi2) - 0x76a5e193 - 1)) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<int16_t*>(&edx4))) 
        goto 0x4071d5;
    esp6 = reinterpret_cast<struct s841**>(reinterpret_cast<int32_t>(__return_address()) + 4 - 4);
    *esp6 = edi2;
    edi7 = reinterpret_cast<int32_t>(edi2) - g3cf2833c;
    if (edi7 < 0) 
        goto 0x40720d;
    __asm__("arpl [ebp+0x728aecc1], sp");
    __asm__("cmpps xmm7, [ecx+edx*8+0xb548cfdb], 0x22");
    __asm__("sahf ");
    edx8 = *esp6;
    eax9 = edx4;
    *reinterpret_cast<int16_t*>(&eax9) = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax9)) * edx8->f71);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax9) + 1) = 24;
    g902648c2 = eax9;
    *(esp6 + 1 - 1) = edx8;
    *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) ^ 0x7c);
    *reinterpret_cast<void***>(eax9) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(eax9)) - (reinterpret_cast<uint32_t>(eax9) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(eax9)) < reinterpret_cast<uint32_t>(eax9))));
    __asm__("clc ");
    __asm__("out dx, al");
    __asm__("retf 0xefdc");
}

struct s842 {
    signed char[118] pad118;
    signed char f118;
};

void fun_4072ad() {
    struct s842* ebx1;
    signed char* esi2;
    int32_t tmp32_3;
    int32_t ebp4;
    int32_t eax5;
    int32_t eax6;
    int32_t tmp32_7;
    int32_t ecx8;

    __asm__("les ecx, [ecx-0x47]");
    __asm__("arpl [esi+eax*2-0x56], di");
    do {
        *reinterpret_cast<signed char*>(&ebx1) = reinterpret_cast<signed char>(0x6e - *esi2);
        tmp32_3 = ebp4;
        ebp4 = eax5;
        eax6 = tmp32_3;
        *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax6) - reinterpret_cast<unsigned char>(ebx1->f118 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax6) < reinterpret_cast<unsigned char>(ebx1->f118 + __intrinsic()))));
        ebx1 = reinterpret_cast<struct s842*>(0xe65ca92);
        __asm__("aad 0x76");
        __asm__("cli ");
        tmp32_7 = ecx8;
        ecx8 = eax6;
        eax5 = tmp32_7;
    } while (__intrinsic());
    *reinterpret_cast<int32_t*>(*reinterpret_cast<int32_t*>(eax5 + 0x4cd01d7e) * 0x2063edaf - 4) = 0xc3d1bde7;
}

void fun_4073a9() {
    unsigned char dh1;
    int32_t ebp2;

    __asm__("lds esp, [eax+eax*8]");
    if (!(dh1 | *reinterpret_cast<unsigned char*>(ebp2 - 0x7d183486))) 
        goto 0x40742f; else 
        goto "???";
}

void fun_4073ba() {
    int1_t of1;

    if (!of1) 
        goto 0x40741e;
    __asm__("fimul word [ecx-0x5a]");
}

void fun_407444() {
    __asm__("rcr dword [ebp+0x5c070e0d], 1");
    __asm__("a16 cdq ");
}

void fun_40758f() {
    if (__intrinsic()) {
        __asm__("fistp word [ecx]");
    }
}

struct s843 {
    signed char[100] pad100;
    signed char f100;
};

void fun_4075f0(struct s843* ecx) {
    int32_t eax2;
    int32_t eax3;
    signed char dh4;
    int32_t esi5;
    int32_t esi6;

    eax2 = eax3 - 0x366f4a69;
    ecx->f100 = dh4;
    __asm__("enter 0xc7ac, 0xb6");
    *reinterpret_cast<unsigned char*>(esi5 - 0x7a161c8e) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi6 - 0x7a161c8e) | *reinterpret_cast<unsigned char*>(&eax2));
    __asm__("insd ");
    __asm__("fimul word [eax-0x6b]");
}

signed char g39c9b8e2;

void fun_407623(signed char* a1) {
    uint32_t eax2;
    uint32_t eax3;
    signed char* esi4;
    signed char* edi5;
    void* esp6;
    void* edx7;
    unsigned char* ecx8;
    void* edx9;
    signed char bl10;
    signed char bl11;
    int1_t cf12;
    signed char bl13;
    int32_t edx14;
    int32_t edx15;
    unsigned char* v16;
    void* esp17;
    unsigned char** esp18;

    eax2 = eax3 | 0x47e4ba3b;
    __asm__("clc ");
    esi4 = reinterpret_cast<signed char*>(__return_address());
    *reinterpret_cast<signed char*>(&eax2) = g39c9b8e2;
    edi5 = a1;
    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 + 4);
    __asm__("lds edx, [edi+0xe8511d6e]");
    do {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx7) + reinterpret_cast<int32_t>(ecx8) - 0x7b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx9) + reinterpret_cast<int32_t>(ecx8) - 0x7b) >> -42);
        __asm__("les ebp, [es:eax]");
        *reinterpret_cast<unsigned char*>(esi4 - 0x13922e5a) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi4 - 0x13922e5a) - reinterpret_cast<unsigned char>(bl10 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(esi4 - 0x13922e5a) < reinterpret_cast<unsigned char>(bl11 + __intrinsic()))));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx8) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx8) + 1) ^ *ecx8);
        cf12 = eax2 < 0x8d3b3a9e;
        eax2 = eax2 + 0x72c4c562;
        if (cf12) 
            break;
        __asm__("aam 0x55");
        __asm__("cmc ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1) + bl13);
        *reinterpret_cast<int32_t*>(edx14 + eax2 * 8 - 8) = *reinterpret_cast<int32_t*>(edx15 + eax2 * 8 - 8) - 0x893159e;
        __asm__("retf 0x21bf");
        ecx8 = v16;
        esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) + 4 + 4);
    } while (ecx8);
    goto addr_0x40766a_4;
    __asm__("sti ");
    esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) + 1 - 4);
    __asm__("retf 0x4aea");
    do {
        __asm__("insb ");
        esp18 = reinterpret_cast<unsigned char**>((reinterpret_cast<uint32_t>(esp17) + 1 ^ reinterpret_cast<uint32_t>(edi5)) - 1 - 4);
        *esp18 = ecx8;
        *edi5 = *esi4;
        ++edi5;
        ++esi4;
        __asm__("ror byte [ebp+0xa7c4329b], 0x6c");
        esp17 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp18 + 1 + 1) + 2);
        if (1) 
            goto 0x40769c;
    } while (!__intrinsic());
    __asm__("das ");
    addr_0x40766a_4:
}

void fun_4076ad() {
}

void fun_4077ac() {
    int1_t zf1;

    if (zf1) 
        goto 0x407776;
}

void fun_407830(int32_t ecx) {
    __asm__("insb ");
    if (ecx) 
        goto 0x4077e3;
}

void fun_40784f() {
    int1_t cf1;

    if (cf1) 
        goto 0x407832;
}

struct s844 {
    signed char[85] pad85;
    uint32_t f85;
};

struct s845 {
    signed char[85] pad85;
    uint32_t f85;
};

struct s846 {
    signed char[4] pad4;
    signed char f4;
};

struct s847 {
    signed char[4] pad4;
    signed char f4;
};

void fun_407871(int32_t ecx) {
    struct s844* esi2;
    struct s845* esi3;
    int32_t esi4;
    int32_t esi5;
    signed char bl6;
    int32_t eax7;
    int32_t eax8;
    signed char* edi9;
    signed char* edi10;
    uint32_t edx11;
    signed char dl12;
    signed char dl13;
    uint32_t* edi14;
    int32_t esi15;
    uint32_t* edi16;
    int32_t esi17;
    int32_t* edi18;
    struct s846* edi19;
    struct s847* esi20;

    esi2->f85 = esi3->f85 | 0xffffffc9;
    __asm__("lodsd ");
    *reinterpret_cast<signed char*>(esi4 + 0x66bd2b04) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi5 + 0x66bd2b04) - bl6);
    __asm__("lahf ");
    __asm__("wait ");
    eax7 = eax8 + 0x4584e349;
    if (eax7 < 0) 
        goto 0x4078c5;
    *edi9 = reinterpret_cast<signed char>(*edi10 - 32);
    *reinterpret_cast<unsigned char*>(&edx11) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(dl12 + dl13) + __intrinsic());
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi14) + esi15 * 2) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi16) + esi17 * 2) ^ edx11;
    __asm__("out 0xbc, eax");
    *edi18 = eax7;
    edi19->f4 = esi20->f4;
    __asm__("fcomp st0, st6");
}

void fun_407a11(signed char cl) {
}

void fun_407a4b() {
    int1_t less1;

    if (!less1) 
        goto 0x4079f7;
    __asm__("ror dword [ecx+ebx*8+0x927d1490], cl");
    __asm__("wait ");
    __asm__("outsd ");
    __asm__("salc ");
}

void fun_407c7e() {
}

struct s848 {
    signed char[9] pad9;
    signed char f9;
};

void fun_407d09(int32_t ecx) {
    uint32_t eax2;
    unsigned char al3;
    int32_t* edi4;
    int32_t* esi5;
    struct s848* edi6;
    void* edi7;
    int32_t edx8;
    int32_t ebx9;
    signed char bh10;

    __asm__("outsd ");
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(al3 | 0xde);
    *edi4 = *esi5;
    edi6 = reinterpret_cast<struct s848*>(reinterpret_cast<int32_t>(edi7) + 4);
    __asm__("lodsb ");
    __asm__("fisttp word [ss:edi-0x20]");
    if (!(__intrinsic() | reinterpret_cast<uint1_t>(edx8 + *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi6) + ebx9 * 4 - 0x56e07aee) + reinterpret_cast<uint1_t>(eax2 < 0x79ac7f12) == 0))) 
        goto "???";
    edi6->f9 = reinterpret_cast<signed char>(edi6->f9 + bh10);
    if (edi6->f9 < 0 == __intrinsic()) 
        goto 0x407e0e;
    if (!__intrinsic()) 
        goto 0x407d59;
}

struct s849 {
    signed char[118] pad118;
    signed char f118;
};

struct s850 {
    signed char[118] pad118;
    signed char f118;
};

void fun_407d7c(int32_t ecx) {
    struct s849* eax2;
    struct s850* eax3;

    eax2->f118 = reinterpret_cast<signed char>(eax3->f118 - 1);
    __asm__("retf 0xaa20");
}

int32_t g527d71e9;

void fun_407e21(signed char cl) {
    int32_t* edi2;
    int32_t* esi3;
    int32_t esi4;
    int32_t esi5;
    uint1_t cf6;
    int32_t ebx7;
    int32_t ebx8;
    uint32_t edx9;
    int32_t eax10;

    __asm__("rcl byte [esi], 1");
    __asm__("outsb ");
    *edi2 = *esi3;
    esi4 = esi5 + 4;
    *reinterpret_cast<unsigned char*>(esi4 - 0x6f) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi4 - 0x6f) - reinterpret_cast<unsigned char>(cl + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(esi4 - 0x6f) < reinterpret_cast<unsigned char>(cl + cf6))));
    *reinterpret_cast<uint32_t*>(ebx7 - 0x6f7bcd36) = *reinterpret_cast<uint32_t*>(ebx8 - 0x6f7bcd36) | edx9;
    g527d71e9 = eax10 - 1;
    __asm__("das ");
}

void fun_407ecf() {
}

void fun_407edc() {
    uint32_t* ebx1;
    int32_t* ebx2;
    int32_t ebx3;
    uint32_t* ebx4;
    int32_t ebx5;
    uint1_t cf6;

    *ebx1 = *ebx2 - (ebx3 + reinterpret_cast<uint1_t>(*ebx4 < ebx5 + cf6));
}

void fun_407f0f(uint32_t ecx) {
    uint32_t ebp2;
    uint32_t ebp3;

    if (ecx > ebp2) {
        if (ecx != ebp3) 
            goto 0x407f47;
    } else {
        __asm__("xlatb ");
    }
}

void fun_407f5c() {
    int32_t ebp1;
    int32_t ebp2;
    int32_t edx3;
    uint32_t esi4;

    __asm__("das ");
    __asm__("out 0x35, al");
    ebp1 = ebp2 + 1;
    __asm__("out 0x44, eax");
    __asm__("int 0x1f");
    if (edx3 - 1 < 0) 
        goto 0x407efc;
    __asm__("ror byte [edi], cl");
    __asm__("aad 0x37");
    *reinterpret_cast<uint32_t*>(ebp1 + 0x3950eb09) = *reinterpret_cast<uint32_t*>(ebp1 + 0x3950eb09) | esi4;
}

void fun_40811d() {
}

void fun_d62d8bf7(int32_t a1);

void fun_408347() {
    int32_t* edi1;
    int32_t* esi2;
    int32_t edi3;

    *edi1 = *esi2;
    __asm__("insb ");
    __asm__("aas ");
    if (edi3 + 4 - 1) 
        goto 0x408309;
    fun_d62d8bf7(__return_address());
}

struct s851 {
    signed char[87] pad87;
    signed char f87;
};

void fun_4083f3(void* ecx) {
    void* esp2;
    void* ecx3;
    int32_t ebx4;
    int32_t esi5;
    int32_t esi6;
    void** ebp7;
    signed char* edx8;
    signed char* edx9;
    struct s851* edx10;
    signed char dl11;

    esp2 = __zero_stack_offset();
    ecx3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (!(reinterpret_cast<uint1_t>(!!ecx3) & reinterpret_cast<uint1_t>(ebx4 + 1 == 0))) {
        __asm__("lock fstp st3");
        esi5 = esi6 - 1;
        esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*ebp7) + 4);
        if (!esi5) 
            goto 0x4083c1;
        *edx8 = reinterpret_cast<signed char>(*edx9 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx3) + 1));
        __asm__("aaa ");
        __asm__("arpl [edx], bx");
        __asm__("lodsb ");
        ecx3 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(esi5 - 100) * 0xafde868);
    }
    __asm__("sti ");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp2) + reinterpret_cast<int32_t>(ecx3) - 70) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp2) + reinterpret_cast<int32_t>(ecx3) - 70) ^ reinterpret_cast<uint32_t>(esp2);
    __asm__("ror byte [edi+0x4e1824b6], 0xe6");
    edx10->f87 = dl11;
    __asm__("hlt ");
}

void fun_40842d(int32_t ecx) {
    int32_t ecx2;
    int32_t eax3;
    signed char dl4;
    int32_t edx5;

    __asm__("outsd ");
    __asm__("in eax, 0x74");
    ecx2 = ecx - 1;
    if (!ecx2) {
        __asm__("lahf ");
        __asm__("into ");
        *reinterpret_cast<signed char*>(eax3 + 0x12573bf9) = dl4;
        if (edx5 + ecx2) 
            goto 0x4084c0;
    }
    __asm__("lahf ");
}

struct s852 {
    signed char[1] pad1;
    signed char f1;
};

struct s853 {
    signed char[1] pad1;
    signed char f1;
};

void fun_408489() {
    int32_t ebp1;
    int32_t ebp2;
    int32_t esi3;
    signed char* edi4;
    signed char* esi5;
    struct s852* edi6;
    struct s853* esi7;

    *reinterpret_cast<int32_t*>(ebp1 - 0x304cd53e) = *reinterpret_cast<int32_t*>(ebp2 - 0x304cd53e) + esi3;
    *edi4 = *esi5;
    edi6->f1 = esi7->f1;
    __asm__("fcomp st0, st1");
    __asm__("wait ");
}

int32_t g1d30b94a;

void fun_408582() {
    int32_t* edi1;

    __asm__("into ");
    *edi1 = g1d30b94a;
    __asm__("ficom word [esi+0x1562017e]");
    goto 0x91;
}

void fun_4085a4() {
    int32_t edi1;

    __asm__("cmc ");
    if (!(edi1 - 1)) 
        goto 0x408536;
}

void fun_4085ff(int32_t ecx) {
    if (!(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2 - 1)) {
        __asm__("retf 0x9e06");
        __asm__("out 0xd5, al");
        __asm__("fidiv dword [esi+0x3f241b37]");
    } else {
        __asm__("fisttp qword [0xab3dbfca]");
    }
}

void fun_40861a() {
}

void fun_408624() {
    uint48_t v1;

    *reinterpret_cast<int32_t*>(&v1) = reinterpret_cast<int32_t>(__return_address());
    __asm__("arpl di, di");
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2);
}

void fun_4086df() {
}

void fun_408767(int32_t ecx) {
}

void fun_408834() {
    int32_t edi1;

    if (__intrinsic()) {
        __asm__("hlt ");
    } else {
        if (__intrinsic() | reinterpret_cast<uint1_t>(edi1 - 1 - 1 == 0)) 
            goto 0x408853;
    }
}

void fun_408c27() {
    int32_t edx1;
    int32_t edx2;
    int32_t* edi3;
    int32_t* esi4;

    *reinterpret_cast<int32_t*>(edx1 - 97) = ~*reinterpret_cast<int32_t*>(edx2 - 97);
    *edi3 = *esi4;
}

int16_t fun_408cc7() {
    int32_t eax1;
    int32_t eax2;

    __asm__("sahf ");
    eax1 = eax2 + 1;
    __asm__("in al, 0xdb");
    __asm__("sti ");
    if (__undefined()) {
        __asm__("out dx, eax");
        return *reinterpret_cast<int16_t*>(&eax1);
    }
}

struct s854 {
    signed char[1540] pad1540;
    signed char f1540;
};

struct s855 {
    signed char[1540] pad1540;
    signed char f1540;
};

unsigned char g1f76efad;

void fun_408e24(int32_t ecx) {
    uint1_t zf2;
    struct s854* bp3;
    struct s855* bp4;
    signed char bh5;
    uint32_t eax6;
    int32_t ecx7;
    int32_t ebx8;

    __asm__("rcr byte [edx+0x392e9e85], 1");
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & zf2) 
        goto 0x408e0c;
    *reinterpret_cast<signed char*>(&bp3->f1540) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&bp4->f1540) - bh5);
    __asm__("out 0x15, eax");
    __asm__("out dx, al");
    __asm__("fist word [ebp+0x8a488aa1]");
    __asm__("salc ");
    if (eax6 & 0xb734219c & 0x3ec3dfa6) {
        __asm__("wait ");
        ecx7 = ebx8;
        __asm__("fnstenv [edi+0x9a1cca32]");
        __asm__("rcl dl, 0xbb");
        g1f76efad = reinterpret_cast<unsigned char>(g1f76efad & *reinterpret_cast<unsigned char*>(&ecx7));
    } else {
        __asm__("fsub qword [edi]");
    }
}

void fun_408f2f(int32_t ecx) {
    __asm__("insd ");
}

void fun_408fb4(int32_t ecx) {
    int32_t* edi2;
    int32_t* esi3;
    int32_t eax4;

    __asm__("rcr ebx, 1");
    __asm__("lahf ");
    __asm__("sti ");
    *edi2 = *esi3;
    __asm__("sahf ");
    __asm__("int 0x9a");
    __asm__("iretd ");
    if (eax4 - 1) 
        goto 0x408f59;
    __asm__("int1 ");
    __asm__("in eax, dx");
    __asm__("into ");
    if (reinterpret_cast<int32_t>(__return_address()) + 1 < 0 != __intrinsic()) 
        goto 0x408f6a;
    __asm__("rol dword [edi+0xc44a5cb5], cl");
}

void fun_409054() {
    __asm__("insb ");
    __asm__("out 0xb0, eax");
    __asm__("sti ");
}

void fun_40907d() {
    int1_t of1;

    if (!of1) 
        goto 0x409032; else 
        goto "???";
}

void fun_40910b(int32_t a1) {
    goto 0x409098;
}

void fun_409182() {
}

void fun_409213() {
    int32_t esi1;
    signed char dl2;

    *reinterpret_cast<signed char*>(esi1 - 0x64aeeea8) = dl2;
}

void fun_4092f1() {
    __asm__("out dx, al");
}

void fun_97eb4e88(int32_t a1, int32_t a2);

void fun_4092fd() {
    int1_t less_or_equal1;
    int1_t zf2;

    if (!less_or_equal1) 
        goto 0x40932e;
    if (zf2) 
        goto 0x409289;
    fun_97eb4e88(0xd4, __return_address());
}

void fun_40933a(int32_t ecx) {
    uint32_t eax2;

    __asm__("out dx, al");
    if (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>((eax2 & 0x623c0f0b) - 1 == 0)))) 
        goto 0x409300;
    __asm__("out dx, eax");
}

struct s856 {
    signed char[81] pad81;
    signed char f81;
};

void fun_409358(uint32_t ecx) {
    struct s856* eax2;
    struct s856* eax3;
    int32_t ebx4;
    int32_t ebx5;
    uint1_t cf6;
    uint1_t cf7;
    int32_t* ebx8;
    uint32_t ecx9;
    int32_t* ebx10;
    int32_t* ebx11;

    __asm__("xlatb ");
    __asm__("stc ");
    __asm__("stc ");
    eax2 = eax3;
    *reinterpret_cast<uint32_t*>(ebx4 - 0x10367de1) = *reinterpret_cast<uint32_t*>(ebx5 - 0x10367de1) | reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2);
    cf6 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax2) < 97);
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) - 97);
    __asm__("les edi, [ebx+0xa1745c04]");
    __asm__("retf 0xdb0d");
    __asm__("aaa ");
    cf7 = reinterpret_cast<uint1_t>(ecx < *ebx8 + cf6);
    ecx9 = ecx - (*ebx10 + cf7);
    if (ecx > *ebx11 + cf7) 
        goto 0x40939b;
    if (cf7) 
        goto 0x40938c;
    eax2->f81 = reinterpret_cast<signed char>(eax2->f81 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1));
    __asm__("in eax, 0x77");
    if (reinterpret_cast<uint1_t>(!!(ecx9 - 1)) & reinterpret_cast<uint1_t>(!!eax2->f81)) 
        goto 0x409390; else 
        goto "???";
}

void fun_409403() {
    __asm__("aas ");
    __asm__("lodsd ");
}

void fun_409460() {
    int32_t* edi1;
    int32_t eax2;

    *edi1 = eax2;
}

struct s857 {
    signed char[113] pad113;
    unsigned char f113;
};

struct s858 {
    signed char[1] pad1;
    int32_t f1;
};

void* fun_4b7ce1b1();

int32_t fun_61d1c3d9();

void fun_40954f(void* ecx) {
    struct s857* ecx2;
    unsigned char dh3;
    int32_t edx4;
    signed char* edi5;
    signed char* esi6;
    uint1_t cf7;
    struct s858* edi8;
    int32_t eax9;
    int32_t esi10;
    int32_t esi11;
    void* eax12;
    void* esp13;
    int32_t* esp14;
    int32_t* esp15;
    int32_t ebx16;
    int32_t ebx17;
    int32_t ebx18;
    unsigned char bh19;

    ecx2 = reinterpret_cast<struct s857*>(reinterpret_cast<int32_t>(ecx) + 1);
    ecx2->f113 = reinterpret_cast<unsigned char>(ecx2->f113 | dh3);
    *reinterpret_cast<signed char*>(&edx4) = -41;
    __asm__("outsb ");
    __asm__("outsd ");
    __asm__("retf ");
    __asm__("salc ");
    *edi5 = *esi6;
    __asm__("popad ");
    __asm__("fist dword [edi]");
    cf7 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edx4 + reinterpret_cast<int32_t>(__return_address()) * 2 - 0x7e) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx2))));
    *reinterpret_cast<unsigned char*>(edx4 + reinterpret_cast<int32_t>(__return_address()) * 2 - 0x7e) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx4 + reinterpret_cast<int32_t>(__return_address()) * 2 - 0x7e) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx2) + cf7));
    edi8->f1 = eax9 + 1;
    esi10 = esi11 + 1 + 4;
    eax12 = fun_4b7ce1b1();
    __asm__("fstp tword [ebp+0x7]");
    esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax12) - 1);
    if (reinterpret_cast<uint1_t>(cf7 | reinterpret_cast<uint1_t>(esp13 == 0))) {
        esp14 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) - 4);
        *esp14 = esi10;
        esp15 = esp14 - 1;
        *esp15 = 0x409581;
        fun_61d1c3d9();
        esp13 = reinterpret_cast<void*>(esp15 + 1 + 1);
        __asm__("out 0x82, al");
        __asm__("cmc ");
        __asm__("out dx, eax");
        __asm__("les ebx, [eax+0xbd877804]");
    }
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) - 4) = ebx16;
    *reinterpret_cast<unsigned char*>(esi10 + ebx17 * 8 - 0x67) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi10 + ebx18 * 8 - 0x67) & bh19);
    __asm__("lodsb ");
}

void fun_89dd4c97(int32_t a1);

void fun_4095db(signed char cl) {
    int1_t sf2;
    int1_t less_or_equal3;

    __asm__("in al, 0x15");
    if (!sf2) 
        goto 0x409587;
    if (!less_or_equal3) 
        goto 0x40965f;
    __asm__("iretd ");
    __asm__("out dx, eax");
    fun_89dd4c97(__return_address());
}

void fun_4095f8(signed char cl) {
    __asm__("sahf ");
    __asm__("arpl [ecx+0x11], dx");
}

void fun_4096b5() {
    __asm__("fisubr dword [esi-0x7d]");
}

void fun_40979c() {
    __asm__("fsubr st2, st0");
    __asm__("fdiv qword [eax]");
    __asm__("rcl dword [ecx], cl");
    __asm__("retf 0x6bff");
}

void fun_40980c() {
    int32_t esi1;

    *reinterpret_cast<signed char*>(esi1 - 0x441091a2) = 0;
    goto 0x4097ff;
}

void fun_409822() {
    __asm__("in eax, 0x33");
    __asm__("out dx, al");
    __asm__("retf 0x7d23");
    __asm__("aas ");
    __asm__("lds edi, [ebx+0x6580e5d5]");
    __asm__("rcr dword [ebx+0x68], 0x73");
    __asm__("aaa ");
    __asm__("out 0x7d, eax");
    __asm__("enter 0xe93, 0x8a");
}

void fun_4099ec() {
    __asm__("sti ");
    __asm__("sti ");
}

struct s859 {
    signed char[110] pad110;
    uint32_t f110;
};

struct s860 {
    signed char[110] pad110;
    uint32_t f110;
};

uint32_t fun_a892487b();

uint32_t gd9a34fde;

struct s861 {
    signed char[36] pad36;
    signed char f36;
};

struct s862 {
    signed char[36] pad36;
    signed char f36;
};

struct s863 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_409a66() {
    uint32_t edx1;
    struct s859* ebx2;
    struct s860* ebx3;
    uint32_t* ebx4;
    uint32_t* ebx5;
    uint32_t eax6;
    int32_t ebp7;
    int32_t ebp8;
    int32_t ebx9;
    struct s861* ebp10;
    struct s862* ebp11;
    struct s863* ebp12;

    edx1 = reinterpret_cast<uint32_t>(__return_address());
    ebx2->f110 = ebx3->f110 | 75;
    *ebx4 = *ebx5 | edx1;
    __asm__("sti ");
    eax6 = fun_a892487b();
    *reinterpret_cast<uint32_t*>(ebp7 + 0x24acc834) = *reinterpret_cast<uint32_t*>(ebp8 + 0x24acc834) | eax6;
    *reinterpret_cast<uint32_t*>(ebx9 - 0x430bd0e) = eax6;
    gd9a34fde = gd9a34fde | reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 - 4 + 4 + 1);
    ebp10->f36 = reinterpret_cast<signed char>(ebp11->f36 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx1) + 1));
    __asm__("wait ");
    __asm__("insd ");
    __asm__("insd ");
    __asm__("retf 0xdb65");
    goto ebp12->f4;
}

void fun_409af7(signed char* ecx) {
    int32_t edx2;
    int32_t edx3;
    int32_t eax4;
    int32_t eax5;
    int32_t edi6;
    signed char* edi7;
    signed char* esi8;
    signed char al9;

    edx2 = edx3 + 1;
    *reinterpret_cast<unsigned char*>(eax4 + 0x2b9bba6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax5 + 0x2b9bba6) ^ *reinterpret_cast<unsigned char*>(&edx2));
    if (!__intrinsic()) 
        goto 0x409b7b;
    if (__intrinsic() | reinterpret_cast<uint1_t>(edx2 + *reinterpret_cast<int32_t*>(edi6 + 0x2dbf64b6) == 0)) {
        __asm__("insd ");
        __asm__("lodsd ");
        *edi7 = *esi8;
        if (!(ecx - 1)) 
            goto "???";
    } else {
        *ecx = reinterpret_cast<signed char>(*ecx - al9);
        __asm__("fcompp ");
    }
}

struct s864 {
    unsigned char f0;
    signed char[1915577504] pad1915577505;
    signed char f1915577505;
};

struct s865 {
    signed char[30] pad30;
    unsigned char f30;
};

struct s866 {
    signed char[30] pad30;
    unsigned char f30;
};

signed char g88efafe5;

void fun_409b17(struct s864* ecx) {
    struct s865* esi2;
    struct s866* esi3;
    int32_t ebp4;
    int32_t ebp5;
    signed char tmp8_6;
    signed char dh7;
    int32_t edx8;
    uint32_t* edi9;
    uint32_t* edi10;
    uint32_t eax11;
    uint32_t esi12;
    uint32_t eax13;
    int32_t edx14;

    *reinterpret_cast<unsigned char*>(ecx) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx) >> *reinterpret_cast<signed char*>(&ecx));
    esi2->f30 = reinterpret_cast<unsigned char>(esi3->f30 & 63);
    ebp4 = ebp5 + 1;
    tmp8_6 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + 0x722d64a1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + 0x722d64a1) = dh7;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = tmp8_6;
    if (ebp4) {
    }
    __asm__("aaa ");
    if (ebp4 < 0 == __intrinsic()) 
        goto 0x409ba0;
    __asm__("in al, 0xad");
    if (!0) 
        goto addr_0x409b2d_5;
    addr_0x409b4d_6:
    *edi9 = *edi10 & 0xffffff8a;
    addr_0x409b2d_5:
    __asm__("wait ");
    eax11 = esi12 | 0xb81a7c55;
    eax13 = eax11 + 0x614211f5;
    edx14 = edx8 - 1;
    g88efafe5 = *reinterpret_cast<signed char*>(&eax13);
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx14) + 1) >= reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx) + reinterpret_cast<uint1_t>(eax11 < 0x9ebdee0b))) 
        goto 0x409b74; else 
        goto addr_0x409b4d_6;
}

void fun_409b8f(int32_t ecx) {
}

void fun_409bb8(uint32_t* ecx) {
    uint32_t eax2;
    uint32_t ebp3;

    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>((eax2 & 0xb333db86) == 0))) 
        goto 0x409c01;
    if (1) 
        goto 0x409bae;
    *ecx = *ecx | ebp3;
    __asm__("sti ");
    __asm__("out 0xf2, eax");
    __asm__("sti ");
}

struct s867 {
    signed char[34] pad34;
    int32_t f34;
};

struct s868 {
    signed char[34] pad34;
    int32_t f34;
};

int32_t ga4453786;

void fun_409c18(int32_t ecx) {
    struct s867* ebx2;
    struct s868* ebx3;
    int32_t edi4;
    int32_t eax5;

    __asm__("fidivr dword [eax+0x49deb5b2]");
    ebx2->f34 = ebx3->f34 + edi4;
    __asm__("fadd dword [esi]");
    ga4453786 = eax5;
    __asm__("fdiv qword [edi+0x70]");
    __asm__("out dx, al");
}

void fun_409c95() {
}

signed char g6305627b;

signed char ge60765ce;

struct s869 {
    signed char f0;
    signed char[1145723216] pad1145723217;
    unsigned char f1145723217;
    signed char[1907609280] pad1979590674;
    unsigned char f1979590674;
};

signed char gffe0fe49;

struct s870 {
    int32_t f0;
    void* f4;
};

uint32_t fun_b68f4873();

signed char fun_1ea19176();

void fun_409dfd() {
    unsigned char bh1;
    signed char bh2;
    unsigned char* edx3;
    void** esp4;
    int32_t ebp5;
    void* es6;
    signed char al7;
    uint32_t eax8;
    uint32_t ebp9;
    uint32_t ebp10;
    void** esp11;
    void* ds12;
    struct s869* edi13;
    signed char* esi14;
    int32_t ecx15;
    void* esp16;
    uint1_t zf17;
    int1_t of18;
    uint1_t below_or_equal19;
    unsigned char bl20;
    struct s870* esp21;
    int1_t sf22;
    uint1_t less_or_equal23;
    uint1_t cf24;
    struct s870* esp25;

    __asm__("aas ");
    __asm__("int 0xdd");
    bh1 = reinterpret_cast<unsigned char>(bh2 + *edx3);
    __asm__("fdivr dword [edi+0x718a8e01]");
    esp4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - *reinterpret_cast<int32_t*>(ebp5 + 0x1b6208a7) - 2);
    *esp4 = es6;
    g6305627b = al7;
    while (1) {
        ge60765ce = *reinterpret_cast<signed char*>(&eax8);
        ebp9 = eax8;
        eax8 = ebp10;
        esp11 = esp4 - 1;
        *esp11 = ds12;
        edi13 = reinterpret_cast<struct s869*>(reinterpret_cast<int32_t>(edi13) + 1);
        ++esi14;
        ebp10 = ebp9 + 1;
        if (!ecx15) 
            break;
        while (1) {
            gffe0fe49 = *reinterpret_cast<signed char*>(&eax8);
            __asm__("ficom dword [ecx+0xe44cbb0b]");
            eax8 = eax8 & 0x1890d7e1;
            if (!ecx15) {
                __asm__("sahf ");
                __asm__("arpl [eax-0x79], ax");
                esp16 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp11) + 4 - 1);
                zf17 = reinterpret_cast<uint1_t>(esp16 == 0);
                of18 = __intrinsic();
                below_or_equal19 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf17));
                while (!below_or_equal19) {
                    while (of18) {
                        if (zf17) 
                            goto addr_0x409e55_11;
                        eax8 = eax8 | 0x7d8f569a;
                        *reinterpret_cast<unsigned char*>(eax8 - 0x2c1dc618) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax8 - 0x2c1dc618) | bl20);
                        zf17 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(eax8 - 0x2c1dc618) == 0);
                        of18 = 0;
                        below_or_equal19 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf17));
                    }
                }
                goto addr_0x409e9d_13;
                addr_0x409e55_11:
                __asm__("arpl [ebp+0xd8b205b5], bx");
                esp21 = reinterpret_cast<struct s870*>(reinterpret_cast<int32_t>(esp16) - 4);
                esp21->f0 = 0x409e62;
                eax8 = fun_b68f4873();
                esp4 = &esp21->f4;
                sf22 = reinterpret_cast<int32_t>(eax8 & 0x377948ec) < reinterpret_cast<int32_t>(0);
                less_or_equal23 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf22) | reinterpret_cast<uint1_t>((eax8 & 0x377948ec) == 0));
                if (!sf22) 
                    break;
                ds12 = *esp4;
                esp11 = esp4 + 1;
                --ecx15;
                if (ecx15) 
                    goto addr_0x409ecc_16;
                __asm__("clc ");
                if (ecx15) 
                    goto addr_0x409ebe_18;
                __asm__("arpl [esi+0xe055c29a], ax");
            }
            __asm__("insd ");
            *reinterpret_cast<signed char*>(edi13) = *esi14;
            edi13 = reinterpret_cast<struct s869*>(reinterpret_cast<int32_t>(edi13) + 1);
            ++esi14;
            ++esp11;
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax8) + 1) = 0;
        }
    }
    addr_0x409e9d_13:
    __asm__("retf 0xd9b0");
    *reinterpret_cast<uint32_t*>(ecx15 - 0x388670a8) = *reinterpret_cast<uint32_t*>(ecx15 - 0x388670a8) & 0x66ca3f8e;
    cf24 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi13) + 0x444a5951) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(bh1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi13) + 0x444a5951) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi13) + 0x444a5951) - reinterpret_cast<unsigned char>(bh1 + cf24));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi13) + 0x75fe2812) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi13) + 0x75fe2812) + bh1) + cf24);
    less_or_equal23 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi13) + 0x75fe2812)) < reinterpret_cast<signed char>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi13) + 0x75fe2812) == 0));
    __asm__("enter 0xf0dc, 0xeb");
    esp25 = reinterpret_cast<struct s870*>(reinterpret_cast<int32_t>(esp16) - 4);
    esp25->f0 = 0x409ec2;
    fun_1ea19176();
    esp11 = &esp25->f4;
    addr_0x409ebe_18:
    *reinterpret_cast<uint32_t*>(esp11 - 2) = ebp10;
    if (less_or_equal23) {
        __asm__("rol dword [esi-0x65], 1");
    }
    addr_0x409ecc_16:
}

void fun_409e33(signed char cl) {
    __asm__("in eax, 0x83");
    __asm__("ror dword [ecx+0xb], 0xfb");
}

void fun_40a0b3(int32_t ecx) {
    uint32_t eax2;

    if (ecx - 1 < 0 == __intrinsic()) 
        goto 0x40a04b;
    __asm__("cmc ");
    *reinterpret_cast<int32_t*>((eax2 | 0x9ffe6c06) + (eax2 | 0x9ffe6c06) * 2 + 0x30016c0d) = *reinterpret_cast<int32_t*>((eax2 | 0x9ffe6c06) + (eax2 | 0x9ffe6c06) * 2 + 0x30016c0d) >> 1;
}

struct s871 {
    signed char[113] pad113;
    signed char f113;
};

void fun_40a199(struct s871* ecx) {
    signed char tmp8_2;
    int32_t* eax3;
    uint32_t eax4;
    int32_t edx5;
    int32_t edx6;
    int32_t edx7;
    int32_t edx8;

    tmp8_2 = ecx->f113;
    ecx->f113 = *reinterpret_cast<signed char*>(&ecx);
    eax3 = reinterpret_cast<int32_t*>((eax4 ^ 0x28a2a29e) & 0x78aeb8a2);
    *reinterpret_cast<uint32_t*>(edx5 + edx6 * 2 - 89) = *reinterpret_cast<uint32_t*>(edx7 + edx8 * 2 - 89) >> tmp8_2;
    *eax3 = *eax3 - 1;
    __asm__("lahf ");
    __asm__("wait ");
    __asm__("fucomip st0, st4");
}

void fun_40a1ef() {
    int32_t ecx1;
    uint1_t zf2;
    signed char* edi3;
    signed char* esi4;
    int32_t eax5;
    signed char al6;
    unsigned char al7;
    uint1_t cf8;
    int32_t ebp9;

    __asm__("out 0xe, eax");
    *reinterpret_cast<signed char*>(&ecx1) = -48;
    __asm__("insb ");
    if (reinterpret_cast<uint1_t>(!!(ecx1 - 1)) & zf2) 
        goto 0x40a17d;
    *edi3 = *esi4;
    __asm__("cmc ");
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 - reinterpret_cast<unsigned char>(7 - reinterpret_cast<uint1_t>(al7 < reinterpret_cast<unsigned char>(7 - cf8))));
    *reinterpret_cast<int32_t*>(ebp9 - 0x7922a1ae) = eax5 - 0x45c6b4b6;
    __asm__("in eax, 0x91");
    __asm__("aas ");
    goto 0x40a1cd;
}

void fun_40a211() {
}

struct s872 {
    signed char[123] pad123;
    uint32_t f123;
};

struct s873 {
    unsigned char f0;
    signed char[86] pad87;
    unsigned char f87;
};

struct s874 {
    signed char[1] pad1;
    int32_t f1;
};

struct s875 {
    signed char[26] pad26;
    signed char f26;
};

void fun_40a24d(void* ecx) {
    signed char* eax2;
    int32_t eax3;
    int32_t esi4;
    struct s872* edx5;
    uint1_t cf6;
    uint1_t less7;
    uint1_t less_or_equal8;
    int32_t* esi9;
    struct s873* ecx10;
    uint1_t cf11;
    uint1_t cf12;
    struct s872* edi13;
    unsigned char* ebx14;
    uint1_t cf15;
    uint40_t v16;
    int16_t es17;
    struct s874* esi18;
    uint32_t ecx19;
    struct s875* ebp20;
    void* ebp21;
    uint1_t cf22;
    struct s872* eax23;
    signed char* ebx24;
    signed char tmp8_25;
    void* ecx26;

    __asm__("retf ");
    eax2 = reinterpret_cast<signed char*>(eax3 * *reinterpret_cast<int32_t*>(esi4 - 0x29989fb9));
    edx5 = __intrinsic();
    cf6 = __intrinsic();
    less7 = reinterpret_cast<uint1_t>(__undefined() != __intrinsic());
    less_or_equal8 = reinterpret_cast<uint1_t>(less7 | __undefined());
    __asm__("cdq ");
    esi9 = reinterpret_cast<int32_t*>(__return_address());
    ecx10 = reinterpret_cast<struct s873*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx10) & reinterpret_cast<uint1_t>(!__undefined())) 
        goto addr_0x40a2cd_3;
    __asm__("in al, dx");
    addr_0x40a267_5:
    __asm__("in eax, dx");
    __asm__("rcr dword [ecx+0x0], 1");
    addr_0x40a320_7:
    while (cf11 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax2) < 0x6965a18e), eax2 = eax2 - 0x6965a18e, cf12 = reinterpret_cast<uint1_t>(edi13->f123 < reinterpret_cast<uint32_t>(eax2) + cf11), edi13->f123 = edi13->f123 - (reinterpret_cast<uint32_t>(eax2) + cf12), ebx14 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebx14) - (*esi9 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(ebx14) < *esi9 + cf12))), cf15 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax2) < ecx10->f87), cf15) {
        *reinterpret_cast<int16_t*>(&v16) = es17;
        less7 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax2)) < reinterpret_cast<signed char>(87 + cf15));
        less_or_equal8 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax2)) <= reinterpret_cast<signed char>(87 + cf15));
        cf6 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax2) < reinterpret_cast<unsigned char>(87 + cf15));
        *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) - reinterpret_cast<unsigned char>(87 + cf6));
        if (*reinterpret_cast<unsigned char*>(&eax2) != static_cast<uint32_t>(cf6)) {
            __asm__("fbstp tword [edx]");
            addr_0x40a2cd_3:
            if (less7) 
                continue;
        }
        if (!less_or_equal8) {
            __asm__("aam 0x28");
            __asm__("fmulp st3, st0");
            *eax2 = 0;
            *reinterpret_cast<signed char*>(&ebx14) = 30;
            ecx10->f0 = reinterpret_cast<unsigned char>(ecx10->f0 >> *reinterpret_cast<signed char*>(&ecx10));
            cf6 = __intrinsic();
        }
        esi18 = reinterpret_cast<struct s874*>(reinterpret_cast<uint32_t>(esi9) + reinterpret_cast<uint32_t>(edx5) + cf6);
        ecx19 = reinterpret_cast<uint32_t>(ecx10) - 1;
        if (ecx19) 
            goto 0x40a27f;
        ebp20 = reinterpret_cast<struct s875*>(reinterpret_cast<int32_t>(ebp21) + 1);
        if (reinterpret_cast<int32_t>(ebp20) < 0 != __intrinsic()) 
            goto addr_0x40a267_5;
        cf22 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax2) + 1) < reinterpret_cast<unsigned char>(ebp20->f26 + __intrinsic()));
        *ebx14 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ebx14 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx14) + 1)) + cf22);
        eax23 = edx5;
        __asm__("cli ");
        *reinterpret_cast<signed char*>(&ecx19) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx19) - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx14) + 1));
        ebx24 = reinterpret_cast<signed char*>(ebx14 - 1);
        tmp8_25 = *reinterpret_cast<signed char*>(ecx19 + 0xffffffe3);
        *reinterpret_cast<signed char*>(ecx19 + 0xffffffe3) = *reinterpret_cast<signed char*>(&ecx19);
        *reinterpret_cast<signed char*>(&ecx19) = tmp8_25;
        edx5 = *reinterpret_cast<struct s872**>(reinterpret_cast<int32_t>(&v16) + 1);
        __asm__("insd ");
        __asm__("into ");
        esi9 = &esi18->f1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx24) + 1) = -29;
        edi13 = eax23;
        ecx26 = reinterpret_cast<void*>(ecx19 + reinterpret_cast<uint32_t>(edi13));
        if (reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx26) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(ecx26 == 0)) 
            goto 0x40a326;
        ebp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp20) - 1);
        ebx14 = reinterpret_cast<unsigned char*>(0x66a5cd0a);
        eax2 = ebx24;
        ecx10 = reinterpret_cast<struct s873*>(reinterpret_cast<uint32_t>(ecx26) - 1);
        __asm__("lodsb ");
        __asm__("les ecx, [ebx+esi-0x65]");
    }
    goto addr_0x40a320_7;
}

struct s876 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40a380(signed char* ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t* edi4;
    int32_t* esi5;
    unsigned char* esi6;
    struct s876* esi7;
    signed char bh8;

    eax2 = eax3 + 0x57fa88eb;
    *edi4 = *esi5;
    esi6 = &esi7->f4;
    __asm__("popad ");
    *esi6 = reinterpret_cast<unsigned char>(*esi6 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax2) + reinterpret_cast<uint1_t>(*esi6 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax2) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(__zero_stack_offset()) < reinterpret_cast<uint32_t>(__zero_stack_offset()))))));
    *ecx = bh8;
    __asm__("popad ");
    __asm__("fistp dword [ebx-0x21]");
}

void fun_40a3e3() {
    __asm__("psllw mm7, [eax]");
}

int32_t g2324b3d5;

void fun_40a4e7() {
    int1_t zf1;
    uint32_t eax2;
    int1_t less3;
    uint32_t eax4;
    int32_t ecx5;
    signed char* edx6;
    signed char* edx7;
    int32_t v8;
    int32_t eax9;
    uint32_t eax10;

    zf1 = (eax2 & 0xda19d96b) == 0;
    less3 = reinterpret_cast<int32_t>(eax4 & 0xda19d96b) < reinterpret_cast<int32_t>(0);
    do {
        __asm__("rcl dword [esp+ebx*2+0x62], 1");
        --ecx5;
        if (reinterpret_cast<uint1_t>(!!ecx5) & reinterpret_cast<uint1_t>(!zf1)) 
            break;
        __asm__("fldcw word [ecx-0x1e]");
    } while (!less3);
    goto addr_0x40a502_4;
    *edx6 = reinterpret_cast<signed char>(*edx7 + 0x7b);
    __asm__("outsb ");
    __asm__("rcl byte [eax], cl");
    goto v8;
    addr_0x40a502_4:
    __asm__("in al, dx");
    eax9 = g2324b3d5;
    *reinterpret_cast<unsigned char*>(eax9 - 80) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax9 - 80) + *reinterpret_cast<signed char*>(&ecx5)) + reinterpret_cast<uint1_t>(eax10 < 0xc7938ba6));
    __asm__("insd ");
    __asm__("pushad ");
}

void fun_40a551(signed char cl) {
    __asm__("into ");
    __asm__("popad ");
}

void fun_40a583() {
}

void fun_40a62e() {
    int32_t* ebx1;

    *ebx1 = 0;
}

void fun_40a76f() {
}

void fun_40a7b5(int32_t ecx) {
    __asm__("out dx, eax");
    __asm__("rol byte [ecx+0x77], cl");
    __asm__("hlt ");
}

void fun_40a7c6(int32_t ecx) {
    signed char bh2;

    *reinterpret_cast<signed char*>(ecx + 0x7b1176a5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx + 0x7b1176a5) + bh2);
    __asm__("ficom word [edi+0xaa65c488]");
    __asm__("retf ");
    __asm__("lodsb ");
    __asm__("out dx, al");
}

void fun_40a871() {
    __asm__("lahf ");
    __asm__("outsb ");
    __asm__("arpl [eax], sp");
}

void fun_40aa30(int32_t ecx) {
    unsigned char dl2;
    int32_t esi3;

    __asm__("lodsb ");
    if (!(reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!!(dl2 ^ *reinterpret_cast<unsigned char*>(esi3 - 15))))) 
        goto "???";
}

void fun_40abb4() {
    __asm__("hlt ");
}

void fun_40ac01() {
    int1_t pf1;

    if (pf1) 
        goto 0x40ac00;
    return;
}

void fun_40ac06() {
    int1_t pf1;
    int32_t edi2;
    int32_t eax3;
    int32_t edi4;
    int32_t eax5;
    uint32_t edi6;

    __asm__("out 0xe2, al");
    __asm__("das ");
    if (!pf1) 
        goto 0x40ac71;
    *reinterpret_cast<uint32_t*>(edi2 + eax3) = *reinterpret_cast<uint32_t*>(edi4 + eax5) ^ edi6;
}

unsigned char g4941fb00;

void fun_40ad05(int32_t ecx) {
    int1_t below_or_equal2;
    int1_t zf3;
    uint1_t cf4;
    unsigned char al5;
    signed char al6;

    if (!below_or_equal2) 
        goto 0x40accf;
    if (!(reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!zf3))) {
    }
    __asm__("out 0x30, eax");
    cf4 = reinterpret_cast<uint1_t>(g4941fb00 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(al5)));
    g4941fb00 = reinterpret_cast<unsigned char>(g4941fb00 - reinterpret_cast<unsigned char>(al6 + cf4));
}

void fun_40adf1() {
    int1_t less1;

    if (less1) 
        goto 0x40adb3;
    __asm__("insd ");
    __asm__("das ");
}

void fun_40ae3e() {
    int1_t pf1;
    int32_t ebx2;
    int32_t ebx3;
    unsigned char* edi4;
    unsigned char* edi5;

    if (!pf1) 
        goto 0x40ade6;
    __asm__("aas ");
    __asm__("out 0x41, al");
    ebx2 = ebx3 - 1;
    if (!(reinterpret_cast<int32_t>(__zero_stack_offset()) - 1)) {
        *edi4 = reinterpret_cast<unsigned char>(*edi5 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx2) + 1));
    }
}

unsigned char g70f3479a;

uint32_t g99cc48f0;

void fun_6b6211b6();

void fun_40aeb6(void* ecx) {
    int32_t edi2;
    int32_t edi3;
    int32_t edi4;
    int32_t ebx5;
    int32_t ebx6;
    int32_t ebx7;
    void* esp8;
    uint32_t eax9;
    uint32_t eax10;
    int32_t edx11;
    int32_t edx12;
    uint32_t ebp13;
    int32_t ecx14;
    int32_t edx15;
    int32_t esi16;

    *reinterpret_cast<uint32_t*>(edi2 + 0xdf9a64d) = *reinterpret_cast<uint32_t*>(edi3 + 0xdf9a64d) >> -41;
    __asm__("rcl ch, 1");
    if (*reinterpret_cast<int32_t*>(edi4 + 0xdf9a64d)) 
        goto 0x40ae7a;
    *reinterpret_cast<uint32_t*>(ebx5 - 0x558c775d) = *reinterpret_cast<int32_t*>(ebx6 - 0x558c775d) - (reinterpret_cast<int32_t>(ecx) + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx7 - 0x558c775d) < reinterpret_cast<int32_t>(ecx) + __intrinsic()));
    __asm__("lds edi, [eax+ecx*2+0xbf369099]");
    __asm__("lahf ");
    esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp8) + reinterpret_cast<int32_t>(ecx) - 0xd4f8907) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp8) + reinterpret_cast<int32_t>(ecx) - 0xd4f8907) + reinterpret_cast<int32_t>(ecx));
    eax9 = (eax10 | 0xbd771b6f) ^ 0x3967fd3d;
    __asm__("in al, 0x57");
    if (0) {
        *reinterpret_cast<signed char*>(eax9 + 0x79198c45) = reinterpret_cast<signed char>(~*reinterpret_cast<signed char*>(eax9 + 0x79198c45));
        *reinterpret_cast<uint32_t*>(edx11 + 0x4002e74d) = *reinterpret_cast<uint32_t*>(edx12 + 0x4002e74d) | ebp13;
        ecx14 = reinterpret_cast<int32_t>(ecx) - 1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx14) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx14) + 1) << *reinterpret_cast<unsigned char*>(&ecx14));
        edx15 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + esi16 * 8 - 0x705619f6) + 1;
        g70f3479a = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(g70f3479a + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx15) + 1)) + __intrinsic());
        g99cc48f0 = g99cc48f0 + ecx14 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(__return_address()) < 0x57e0265e);
        fun_6b6211b6();
    } else {
        __asm__("hlt ");
    }
}

int32_t ge8d956c6;

void fun_40aeec(int32_t ecx) {
    int32_t esi2;
    int32_t ebp3;

    if (!(ecx - esi2)) 
        goto 0x40ae83;
    ge8d956c6 = ebp3 + 4;
}

void fun_40af0c() {
    int32_t edi1;
    int32_t edi2;
    unsigned char dl3;

    __asm__("pushad ");
    __asm__("fcmovnb st0, st7");
    *reinterpret_cast<unsigned char*>(edi1 - 0x35674217) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi2 - 0x35674217) | dl3);
}

void fun_40af2c(int16_t a1) {
    signed char* edi2;
    signed char* esi3;

    *edi2 = *esi3;
    __asm__("fcom dword [edi]");
}

void fun_40af57() {
}

void fun_40afd3() {
    uint64_t v1;
    signed char* eax2;
    signed char ah3;
    int1_t zf4;
    int32_t* esi5;
    int32_t* esi6;
    int32_t eax7;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2) = reinterpret_cast<int32_t>(__return_address());
    *eax2 = ah3;
    if (zf4) {
        __asm__("aas ");
        if (__intrinsic()) 
            goto 0x40b072;
    } else {
        *(esi5 - 0x9e3e170) = *(esi6 - 0x9e3e170) + (eax7 - 1 - 1);
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 4);
    }
}

struct s877 {
    signed char[13] pad13;
    unsigned char f13;
};

int32_t g7aa99046;

void fun_40afe6(unsigned char cl) {
    uint32_t eflags2;
    int32_t* ecx3;
    struct s877* edx4;
    unsigned char* esp5;
    int32_t edi6;
    int32_t edi7;
    signed char ah8;
    unsigned char ebx9;
    int32_t* edi10;
    int32_t* esi11;
    int32_t ebp12;
    int32_t ebp13;
    void** esp14;
    int16_t fs15;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    __asm__("out 0xc4, eax");
    *reinterpret_cast<unsigned char*>(&ecx3) = reinterpret_cast<unsigned char>(cl & edx4->f13);
    *reinterpret_cast<uint1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
    *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
    *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
    *reinterpret_cast<int1_t*>(&eflags2) = __undefined();
    __asm__("frstor [ecx]");
    esp5 = reinterpret_cast<unsigned char*>(*ecx3 * 0x46f54ca + 4 - 4);
    *esp5 = reinterpret_cast<unsigned char>(eflags2 & 0xfcffff);
    __asm__("cdq ");
    esp5[edi6 * 8] = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esp5[edi7 * 8] + ah8) + *reinterpret_cast<uint1_t*>(&eflags2));
    ebx9 = *esp5;
    __asm__("salc ");
    *edi10 = *esi11;
    __asm__("outsd ");
    if (!__intrinsic()) 
        goto 0x40afc9;
    ebp12 = ebp13 + 1;
    __asm__("lodsb ");
    __asm__("retf ");
    esp14 = reinterpret_cast<void**>(esp5 + 4 - 4);
    *reinterpret_cast<void***>(esp14) = esp14;
    *reinterpret_cast<uint32_t*>(ebx9 - 0x1fe10e4a) = *reinterpret_cast<uint32_t*>(ebx9 - 0x1fe10e4a) - (ebp12 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx9 - 0x1fe10e4a) < ebp12 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esp14) < reinterpret_cast<uint32_t>(esp14))));
    __asm__("iretd ");
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp14) - reinterpret_cast<uint32_t>(esp14) - 2) = fs15;
    goto g7aa99046;
}

unsigned char ga4abf069;

void fun_40b02f(int32_t ecx) {
    int32_t* edi2;
    int32_t* edi3;
    signed char bl4;

    __asm__("aad 0xc4");
    *edi2 = *edi3 << 1;
    __asm__("rol edi, 1");
    ga4abf069 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(ga4abf069 + bl4)));
}

struct s878 {
    unsigned char f0;
    signed char[5] pad6;
    int32_t f6;
    signed char[1104075577] pad1104075587;
    int32_t f1104075587;
};

struct s879 {
    struct s878* f0;
    int32_t f4;
};

struct s880 {
    struct s878* f0;
    int32_t f4;
};

unsigned char gc3be49f1;

void fun_40b0d5(void* ecx) {
    int32_t ebx2;
    int32_t ebx3;
    uint32_t* edi4;
    uint32_t* edi5;
    struct s878* edx6;
    struct s878* tmp32_7;
    int32_t ebx8;
    int32_t ebx9;
    int32_t ebx10;
    struct s878* eax11;
    unsigned char al12;
    struct s879* esp13;
    int32_t esi14;
    int32_t esi15;
    struct s878* edi16;
    int32_t* esp17;
    struct s878* ebx18;
    struct s878* eax19;
    struct s878* ecx20;
    struct s878* esi21;
    struct s878* eax22;
    struct s878* esi23;
    struct s880* esp24;
    struct s878* ebp25;
    struct s878* tmp32_26;
    struct s878* eax27;
    int1_t pf28;
    struct s880* esp29;
    struct s878* tmp32_30;
    int1_t sf31;
    uint16_t fs32;
    struct s878* tmp32_33;

    *reinterpret_cast<signed char*>(ebx2 + 0x57192193) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx3 + 0x57192193) - *reinterpret_cast<signed char*>(&ecx));
    *edi4 = *edi5 & 69;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx6) + 1) = 0x69;
    tmp32_7 = *reinterpret_cast<struct s878**>(reinterpret_cast<uint32_t>(edx6) + ebx8 * 2 - 0x58bb8e4d);
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx6) + ebx9 * 2 - 0x58bb8e4d) = ebx10;
    *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(al12 | 0xdd);
    esp13 = reinterpret_cast<struct s879*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) | *reinterpret_cast<uint32_t*>(esi14 + esi15 + 0x13693bf1));
    edi16 = esp13->f0;
    esp17 = &esp13->f4;
    __asm__("retf 0x97e8");
    ebx18 = eax11;
    eax19 = tmp32_7;
    if (!__intrinsic()) 
        goto 0x40b0c0;
    ecx20 = reinterpret_cast<struct s878*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (!ecx20) {
        esi21 = eax19;
        eax22 = esi23;
        if (!esp13) 
            goto addr_0x40b122_4;
        esp24 = reinterpret_cast<struct s880*>(esp17 - 1);
        esp24->f0 = ebp25;
        __asm__("lodsd ");
        __asm__("fisubr word [eax+0x68c67bfa]");
        __asm__("xlatb ");
        tmp32_26 = ecx20;
        ecx20 = eax22;
        eax27 = tmp32_26;
        goto addr_0x40b10a_6;
    }
    while (1) {
        gc3be49f1 = reinterpret_cast<unsigned char>(gc3be49f1 & 0x69);
        pf28 = __intrinsic();
        esp29 = reinterpret_cast<struct s880*>(esp17 - 1);
        esp29->f0 = ebx18;
        __asm__("aad 0x40");
        esp17 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp29) - 4);
        *esp17 = 0xf9;
        edi16 = reinterpret_cast<struct s878*>(0xf75de561);
        do {
            edi16->f0 = reinterpret_cast<unsigned char>(~edi16->f0);
            if (!1) 
                goto addr_0x40b14c_9;
            if (!pf28) 
                goto addr_0x40b14c_9;
            *reinterpret_cast<unsigned char*>(&eax19) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax19) ^ 66);
            tmp32_30 = edi16;
            edi16 = eax19;
            eax27 = tmp32_30;
            __asm__("cdq ");
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax27) + 1) = 0;
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi21) * 4 - 0x3c4ddf5a) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi21) * 4 - 0x3c4ddf5a) + reinterpret_cast<uint32_t>(&edx6->pad6);
            sf31 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi21) * 4 - 0x3c4ddf5a) < 0;
            esp24 = reinterpret_cast<struct s880*>(esp17 - 1);
            esp24->f0 = edi16;
            if (sf31) 
                goto addr_0x40b173_12;
            addr_0x40b10a_6:
            edx6 = esp24->f0;
            esp17 = &esp24->f4;
            ebx18->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(ebx18->f0));
            *reinterpret_cast<signed char*>(&eax27) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax27) - 0x7b);
            __asm__("enter 0x1a37, 0x61");
            edx6->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(fs32));
            __asm__("in al, 0x24");
            tmp32_33 = ebx18;
            ebx18 = eax27;
            eax22 = tmp32_33;
            __asm__("insd ");
            ecx20 = reinterpret_cast<struct s878*>(reinterpret_cast<uint32_t>(ecx20) - *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx18) - 0x70ec74b8));
            __asm__("outsd ");
            addr_0x40b122_4:
            __asm__("into ");
            eax19 = reinterpret_cast<struct s878*>(reinterpret_cast<uint32_t>(eax22) & 0xae07c758);
            pf28 = __intrinsic();
        } while (ecx20);
        __asm__("fsubr qword [edi+0x758995a2]");
        ++esp17;
        edx6 = reinterpret_cast<struct s878*>(reinterpret_cast<uint32_t>(eax19) % *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi21) + 0x41cedb43));
        eax19 = reinterpret_cast<struct s878*>(reinterpret_cast<uint32_t>(eax19) / *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi21) + 0x41cedb43));
    }
    addr_0x40b14c_9:
    __asm__("daa ");
    __asm__("lds eax, [ecx-0x3f]");
    eax19->f6 = eax19->f6 - 0x66;
    __asm__("retf 0x39f7");
    __asm__("wait ");
    __asm__("hlt ");
    addr_0x40b173_12:
    if (!__intrinsic()) {
        __asm__("lock aas ");
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax27) - 1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax27) - 1) + *reinterpret_cast<signed char*>(&ebx18)) + __intrinsic());
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax27) - 1) = esi21->f0;
    }
}

void fun_40b159() {
    int32_t esi1;
    int32_t esi2;
    int32_t esi3;
    uint1_t cf4;

    *reinterpret_cast<uint32_t*>(esi1 - 69) = *reinterpret_cast<int32_t*>(esi2 - 69) - (0x37d73b87 - reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(esi3 - 69) < 0x37d73b87 - cf4));
}

void fun_40b196(unsigned char cl) {
    int32_t eax2;
    int32_t eax3;
    int32_t* eax4;
    int32_t edx5;
    int32_t edx6;
    int32_t edx7;
    int32_t ebp8;
    int32_t ebp9;

    eax2 = eax3 - *eax4;
    __asm__("ror dword [esi+0x6173d7e8], cl");
    __asm__("insb ");
    __asm__("into ");
    *reinterpret_cast<unsigned char*>(edx5 + eax2 + 48) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx6 + eax2 + 48) - reinterpret_cast<unsigned char>(cl + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edx7 + eax2 + 48) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cl)))));
    *reinterpret_cast<int32_t*>(ebp8 - 0x1862ddb0) = *reinterpret_cast<int32_t*>(ebp9 - 0x1862ddb0) - 1;
}

struct s881 {
    signed char[105] pad105;
    uint32_t f105;
};

struct s882 {
    signed char[105] pad105;
    int32_t f105;
};

struct s883 {
    signed char[105] pad105;
    uint32_t f105;
};

void fun_40b27e(int32_t ecx) {
    int32_t edx2;
    int32_t edx3;
    signed char dl4;
    int32_t edx5;
    struct s881* edi6;
    struct s882* edi7;
    struct s883* edi8;

    *reinterpret_cast<unsigned char*>(edx2 + 0x2641461d) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx3 + 0x2641461d) + dl4)));
    __asm__("enter 0x51ac, 0x9d");
    __asm__("lodsb ");
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<signed char*>(edx5 + 0x2641461d))) 
        goto 0x40b251;
    __asm__("enter 0x6486, 0x17");
    edi6->f105 = edi7->f105 - (20 - reinterpret_cast<uint1_t>(edi8->f105 < 20 - __intrinsic()));
}

void fun_40b2b0(int32_t ecx) {
    int32_t edx2;
    int32_t edx3;
    int32_t edi4;
    unsigned char* edi5;
    unsigned char al6;

    __asm__("pushad ");
    *reinterpret_cast<uint32_t*>(edx2 + 0x14903fcc) = *reinterpret_cast<int32_t*>(edx3 + 0x14903fcc) + (edi4 + 1) + reinterpret_cast<uint1_t>(*edi5 < al6);
}

void fun_40b363() {
}

void fun_40b377() {
    void* eax1;
    int16_t cs2;
    signed char ch3;
    int32_t ebx4;

    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(eax1) - 2) = cs2;
    __asm__("out dx, eax");
    __asm__("sti ");
    if (!(ch3 + *reinterpret_cast<signed char*>(ebx4 - 45))) 
        goto 0x40b346;
}

void fun_40b3d5() {
    __asm__("daa ");
    __asm__("lds eax, [edi+0x267431e6]");
}

struct s884 {
    int32_t f0;
    signed char[1718422794] pad1718422798;
    int32_t f1718422798;
};

struct s885 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_40b4c1(int32_t ecx) {
    struct s884* edi2;
    struct s885* edi3;
    uint32_t* ebx4;
    uint32_t* ebx5;
    uint32_t eax6;
    int32_t ebp7;
    int32_t ebp8;

    edi2 = reinterpret_cast<struct s884*>(&edi3->f1);
    __asm__("aaa ");
    *ebx4 = *ebx5 | eax6;
    if (1) 
        goto 0x40b523;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi2) + 0x666d0d0e) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi2) + 0x666d0d0e) >> *reinterpret_cast<signed char*>(&ecx);
    __asm__("rcr byte [ecx-0x7e], cl");
    *reinterpret_cast<unsigned char*>(ebp7 - 32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp8 - 32) ^ 0x7d);
    edi2->f0 = 0xbaa488eb;
    __asm__("lds edx, [eax]");
    __asm__("xlatb ");
    __asm__("popad ");
}

void fun_40b500(int32_t ecx) {
    signed char* esi2;
    signed char* esi3;
    signed char bl4;

    __asm__("clc ");
    *esi2 = reinterpret_cast<signed char>(*esi3 + bl4);
}

void fun_40b5c3() {
    return;
}

void fun_40b615() {
    return;
}

void fun_40b65e() {
    int1_t less1;

    if (less1) 
        goto 0x40b610;
}

void fun_f7775d1a(int32_t a1, int32_t a2);

void fun_40b6a4(int32_t ecx) {
    int32_t edi2;

    fun_f7775d1a(edi2, __return_address());
}

void fun_ecd5401e(int32_t a1);

void fun_40b75f() {
    fun_ecd5401e(__return_address());
    if (1) 
        goto 0x40b77e;
}

void fun_40b7a3() {
    __asm__("cmc ");
}

struct s886 {
    signed char[1] pad1;
    int32_t f1;
};

struct s887 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_40b803() {
    signed char* edi1;
    signed char al2;
    struct s886* edi3;
    struct s887* esi4;

    *edi1 = al2;
    edi3->f1 = esi4->f1;
}

void fun_40b80c() {
    __asm__("fucomi st0, st2");
}

void fun_40b86f(int32_t ecx) {
    signed char* esi2;
    uint32_t esi3;
    int32_t ebx4;
    int32_t edx5;
    signed char* edi6;

    esi2 = reinterpret_cast<signed char*>(esi3 & *reinterpret_cast<uint32_t*>(ebx4 + edx5 - 0x3501caf3));
    *edi6 = *esi2;
}

void fun_40b956() {
    __asm__("cli ");
}

void fun_40b9b1() {
    __asm__("wait ");
}

struct s888 {
    signed char[28] pad28;
    int32_t f28;
};

struct s888* g42e0cc = reinterpret_cast<struct s888*>(0);

int32_t fun_40c0d0() {
    struct s888* esi1;
    int32_t edi2;
    uint32_t ecx3;
    unsigned char dl4;
    uint32_t edx5;
    uint32_t edx6;
    unsigned char dl7;
    uint32_t ebx8;
    uint32_t ebx9;
    unsigned char bl10;
    uint32_t edx11;
    uint32_t edx12;
    unsigned char dl13;
    unsigned char al14;
    struct s888* ecx15;
    struct s888* ecx16;
    int32_t eax17;

    esi1 = g42e0cc;
    edi2 = 0;
    ecx3 = 0;
    do {
        dl4 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx3 + reinterpret_cast<int32_t>(esi1)) ^ *reinterpret_cast<unsigned char*>(&ecx3));
        *reinterpret_cast<unsigned char*>(ecx3 + reinterpret_cast<int32_t>(esi1)) = dl4;
        edx5 = g42e0d0;
        edx6 = edx5 >> 24;
        dl7 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx6) ^ dl4);
        *reinterpret_cast<unsigned char*>(ecx3 + reinterpret_cast<int32_t>(esi1)) = dl7;
        ebx8 = g42e0d0;
        ebx9 = ebx8 >> 16;
        bl10 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx9) ^ dl7);
        *reinterpret_cast<unsigned char*>(ecx3 + reinterpret_cast<int32_t>(esi1)) = bl10;
        edx11 = g42e0d0;
        edx12 = edx11 >> 8;
        dl13 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx12) ^ bl10);
        *reinterpret_cast<unsigned char*>(ecx3 + reinterpret_cast<int32_t>(esi1)) = dl13;
        al14 = *reinterpret_cast<unsigned char*>(&g42e0d0);
        *reinterpret_cast<unsigned char*>(ecx3 + reinterpret_cast<int32_t>(esi1)) = reinterpret_cast<unsigned char>(al14 ^ dl13);
        ++ecx3;
    } while (ecx3 < 48);
    ecx15 = g42e0cc;
    ecx15->f28 = ecx15->f28 - 1;
    ecx16 = g42e0cc;
    eax17 = ecx16->f28;
    if (!eax17) {
        eax17 = reinterpret_cast<int32_t>(UnmapViewOfFile(ecx16));
        edi2 = eax17;
    }
    *reinterpret_cast<int16_t*>(&eax17) = *reinterpret_cast<int16_t*>(&edi2);
    return eax17;
}

void fun_40c1a0(uint32_t ecx, void* a2, uint16_t a3) {
    uint32_t v4;
    uint16_t si5;
    signed char al6;
    void* edi7;
    signed char* ecx8;
    int32_t ebp9;
    uint32_t edx10;
    uint16_t dx11;

    v4 = ecx;
    si5 = a3;
    al6 = 0;
    edi7 = a2;
    *reinterpret_cast<signed char*>(&v4) = 0;
    ecx8 = reinterpret_cast<signed char*>(0x42e0d8);
    ebp9 = 16;
    do {
        edx10 = v4 & 0xff;
        al6 = reinterpret_cast<signed char>(al6 + 1);
        *reinterpret_cast<signed char*>(&v4) = al6;
        *ecx8 = *reinterpret_cast<signed char*>(edx10 + reinterpret_cast<int32_t>(edi7));
        dx11 = 0;
        *reinterpret_cast<signed char*>(&dx11) = al6;
        if (dx11 >= si5) {
            al6 = 0;
            *reinterpret_cast<signed char*>(&v4) = 0;
        }
        ++ecx8;
        --ebp9;
    } while (ebp9);
    return;
}

struct s889 {
    signed char[4] pad4;
    signed char f4;
};

struct s890 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40c8bd() {
    int1_t pf1;
    struct s889* ebx2;
    struct s890* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x40c8b8;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_40c8dd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40c8d8;
}

void fun_40c8f5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40c8f0;
}

void fun_40c94c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40c947;
}

struct s891 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s892 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40cacc() {
    int1_t pf1;
    struct s891* ebx2;
    struct s892* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40cac7;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_40cae4(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cadf;
}

struct s893 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cafc() {
    int1_t pf1;
    struct s893* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40caf7;
    ebx2->f4 = edi3;
}

void fun_40cb16() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cb0f;
}

void fun_40cb2c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cb27;
}

void fun_40cb50() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cb4b;
    __asm__("fidivr word [ebx+0x4]");
}

struct s894 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s895 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40cb68() {
    int1_t pf1;
    struct s894* ebx2;
    struct s895* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40cb63;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_40cb80() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cb7b;
}

struct s896 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cba4(int32_t ecx) {
    int1_t pf2;
    struct s896* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x40cb9f;
    ebx3->f4 = edi4;
}

void fun_40cbbc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cbb7;
}

void fun_40cbd4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cbcf;
}

void fun_40cbee() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cbe7;
}

void fun_40cc04() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cbff;
}

struct s897 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s898 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40cc51() {
    int1_t pf1;
    struct s897* ebx2;
    struct s898* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40cc4c;
    ebx2->f4 = ebx3->f4 | edi4;
}

void fun_40cc6b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cc64;
}

void fun_40cc81() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cc7c;
}

void fun_40cc99(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cc94;
}

void fun_40ccb1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ccac;
}

void fun_40ccc9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ccc4;
}

void fun_40cced(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cce8;
}

void fun_40cd05(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cd00;
}

void fun_40cd1d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cd18;
}

void fun_40cd35(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cd30;
}

struct s899 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40cd4d() {
    int1_t pf1;
    struct s899* ebx2;
    int32_t edi3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x40cd48;
    ebx2->f4 = ebx2->f4 - (edi3 + reinterpret_cast<uint1_t>(ebx2->f4 < edi4 + cf5));
}

struct s900 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s901 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40cd65() {
    int1_t pf1;
    struct s900* ebx2;
    struct s901* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40cd60;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_40cd7d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cd78;
}

void fun_40cd95() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cd90;
}

void fun_40cdb9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cdb4;
}

void fun_40cdd1(int32_t ecx, int32_t a2) {
    int1_t pf3;

    if (!pf3) {
    }
    goto a2;
}

void fun_40cde9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cde4;
}

void fun_40ce01() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x40cdfc;
    gff87047b = eax2;
}

struct s902 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40ce19() {
    int1_t pf1;
    struct s902* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40ce14;
    ebx2->f4 = edi3;
}

void fun_40ce31(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40ce2c;
}

void fun_40ce74() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ce6d;
}

void fun_40ce96() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ce91;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_40ceae(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cea9;
}

void fun_40cec6(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cec1;
}

struct s903 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s904 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40ceea() {
    int1_t pf1;
    struct s903* ebx2;
    struct s904* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40cee5;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

void fun_40cf02() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cefd;
}

void fun_40cf1a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cf15;
}

struct s905 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40cf32(int32_t ecx) {
    int1_t pf2;
    struct s905* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x40cf2d;
    ebx3->f4 = bh4;
}

struct s906 {
    signed char[4] pad4;
    int32_t f4;
};

struct s907 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cf4a() {
    int1_t pf1;
    struct s906* ebx2;
    struct s907* ebx3;

    if (!pf1) 
        goto 0x40cf45;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_40cf62() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cf5d;
    __asm__("fnstsw word [ebx+0x4]");
}

struct s908 {
    signed char[4] pad4;
    signed char f4;
};

struct s909 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40cf7a() {
    int1_t pf1;
    struct s908* ebx2;
    struct s909* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x40cf75;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

struct s910 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s911 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cf92() {
    int1_t pf1;
    struct s910* ebx2;
    struct s911* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x40cf8d;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_40cfaa(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cfa5;
    __asm__("fdivr qword [ebx+0x4]");
}

struct s912 {
    signed char[4] pad4;
    signed char f4;
};

struct s913 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40cfc2() {
    int1_t pf1;
    struct s912* ebx2;
    struct s913* ebx3;

    if (!pf1) 
        goto 0x40cfbd;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

struct s914 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s915 {
    signed char[4] pad4;
    int32_t f4;
};

struct s916 {
    signed char[4] pad4;
    uint32_t f4;
};

int32_t FreeLibrary = 0x32470;

int32_t g42f190;

int32_t g42f194;

int32_t g42f198;

struct s917 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cfda(int32_t ecx) {
    int1_t pf2;
    struct s914* ebx3;
    struct s915* ebx4;
    int32_t edi5;
    struct s916* ebx6;
    int32_t edi7;
    uint1_t cf8;
    int1_t pf9;
    int32_t ecx10;
    int32_t edx11;
    int32_t eax12;
    struct s917* ebx13;
    struct s917* ebx14;
    int32_t edi15;
    int32_t edi16;

    if (pf2) {
        ebx3->f4 = ebx4->f4 - (edi5 + reinterpret_cast<uint1_t>(ebx6->f4 < edi7 + cf8));
        pf9 = __intrinsic();
    }
    __asm__("in eax, dx");
    ecx10 = FreeLibrary;
    edx11 = GetProcAddress;
    g42f190 = eax12;
    g42f194 = ecx10;
    g42f198 = edx11;
    if (!(pf9 || !pf9)) {
        __asm__("fdivr dword [ebx+0x4]");
    }
    ebx13 = ebx14;
    __asm__("in eax, dx");
    edi15 = edi16;
    do {
    } while (!pf9);
    if (!(__intrinsic() || !__intrinsic())) {
        ebx13->f4 = ebx13->f4 - edi15;
    }
    goto ebx13;
}

struct s918 {
    signed char[4] pad4;
    int32_t f4;
};

struct s919 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cff2() {
    int1_t pf1;
    struct s918* ebx2;
    struct s919* ebx3;

    if (!pf1) 
        goto 0x40cfed;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_40d00a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d005;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_40d022() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d01d;
}

struct s920 {
    signed char[4] pad4;
    signed char f4;
};

struct s921 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d03a() {
    int1_t pf1;
    struct s920* ebx2;
    struct s921* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x40d035;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

struct s922 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d052() {
    int1_t pf1;
    struct s922* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40d04d;
    ebx2->f4 = edi3;
}

void fun_40d06a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d065;
}

struct s923 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d082() {
    int1_t pf1;
    struct s923* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x40d07d;
    ebx2->f4 = bh3;
}

void fun_40d09a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d095;
}

void fun_40d0b2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d0ad;
}

struct s924 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s925 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d0ca() {
    int1_t pf1;
    struct s924* ebx2;
    struct s925* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40d0c5;
    ebx2->f4 = ebx3->f4 | edi4;
}

void fun_40d11c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d117;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_40d134() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d12f;
}

struct s926 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s927 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40d14c() {
    int1_t pf1;
    struct s926* ebx2;
    struct s927* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40d147;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

void fun_40d164() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d15f;
}

void fun_40d17c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d177;
}

void fun_40d194() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d18f;
}

struct s928 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d1ac() {
    struct s928* ebx1;
    struct s928* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40d1a7;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

void fun_40d1c4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d1bf;
}

struct s929 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s930 {
    signed char[4] pad4;
    signed char f4;
};

struct s931 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40d1dc() {
    int1_t pf1;
    struct s929* ebx2;
    struct s930* ebx3;
    signed char bh4;
    struct s931* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40d1d7;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

struct s932 {
    signed char[4] pad4;
    int32_t f4;
};

struct s933 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d20c() {
    int1_t pf1;
    struct s932* ebx2;
    struct s933* ebx3;

    if (!pf1) 
        goto 0x40d207;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s934 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s935 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s936 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40d224(int32_t ecx) {
    int1_t pf2;
    struct s934* ebx3;
    struct s935* ebx4;
    unsigned char bh5;
    int1_t pf6;
    struct s936* ebx7;
    int32_t ecx8;
    struct s936* ebx9;
    uint1_t cf10;
    uint1_t below_or_equal11;
    int1_t pf12;
    struct s936* ebx13;

    if (pf2) {
        ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 & bh5);
        pf6 = __intrinsic();
    }
    if (pf6 || !pf6) {
    }
    if (!(pf6 || !pf6)) {
        ebx7->f4 = 0;
        pf6 = __intrinsic();
    }
    ecx8 = ecx;
    if (pf6 || !pf6) {
    }
    if (!(pf6 || !pf6)) {
        __asm__("fidivr dword [ebx+0x4]");
    }
    ebx9 = ebx7;
    do {
        *reinterpret_cast<unsigned char*>(&ebx9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx9) >> *reinterpret_cast<signed char*>(&ecx8));
    } while (!__intrinsic());
    cf10 = reinterpret_cast<uint1_t>(ebx9->f4 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx9) + 1) + __intrinsic()));
    below_or_equal11 = reinterpret_cast<uint1_t>(ebx9->f4 <= reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx9) + 1) + cf10));
    ebx9->f4 = reinterpret_cast<unsigned char>(ebx9->f4 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx9) + 1) + cf10));
    pf12 = __intrinsic();
    ebx13 = ebx9;
    while (1) {
        while (1) {
            if (!below_or_equal11) 
                goto addr_0x40d388_67;
            if (!pf12) 
                break;
            ebx13->f4 = 0;
            pf12 = __intrinsic();
            below_or_equal11 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(ebx13->f4 == 0)));
        }
    }
    addr_0x40d388_67:
}

void fun_40d23e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d237;
}

void fun_40d260() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d25b;
}

void fun_40d278() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d273;
}

void fun_40d29c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d297;
}

void fun_40d2c0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d2bb;
}

struct s937 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d2da() {
    int1_t pf1;
    struct s937* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40d2d3;
    ebx2->f4 = edi3;
}

struct s938 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s939 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d2f0() {
    int1_t pf1;
    struct s938* ebx2;
    struct s939* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40d2eb;
    ebx2->f4 = ebx3->f4 | edi4;
}

void fun_40d308() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d303;
}

void fun_40d33a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d333;
}

void fun_40d350(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d34b;
}

void fun_40d368() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x40d363;
    *reinterpret_cast<signed char*>(&gff87047b) = al2;
}

void fun_40d380(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d37b;
}

struct s940 {
    signed char[10] pad10;
    signed char f10;
};

struct s941 {
    signed char[1] pad1;
    signed char f1;
};

struct s942 {
    signed char[8] pad8;
    uint32_t f8;
};

int16_t g4292ec = 1;

uint32_t g42e500;

struct s943 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s944 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s945 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d38c(int32_t ecx, void** a2, void** a3, int32_t a4, int32_t a5, void** a6) {
    uint272_t v2;
    struct s940* ebp3;
    struct s941* eax4;
    void* eax5;
    void* ebp6;
    int32_t esi7;
    int32_t esi8;
    signed char* eax9;
    uint32_t edi10;
    struct s942* ebp11;
    int32_t ebp12;
    int32_t ebp13;
    void* ebp14;
    signed char* edx15;
    signed char* edx16;
    int32_t tmp32_17;
    int32_t ebx18;
    int32_t ebx19;
    int32_t eax20;
    void** ecx21;
    uint32_t eax22;
    struct s943* ebx23;
    struct s943* ebx24;
    struct s944* ebx25;
    struct s945* ebx26;
    uint32_t edi27;
    int1_t pf28;
    int16_t es29;
    int32_t ebp30;
    void** ecx31;
    struct s943* ebx32;
    uint32_t edi33;
    void** eax34;
    void** eax35;
    void** eax36;
    int1_t pf37;
    uint32_t edi38;
    void** ecx39;
    int1_t pf40;

    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 14) = a2;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 18) = a3;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 22) = a4;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 26) = a5;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 30) = a6;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10) = reinterpret_cast<void**>(__return_address());
    ebp3->f10 = 0;
    eax4 = reinterpret_cast<struct s941*>(reinterpret_cast<int32_t>(eax5) + reinterpret_cast<int32_t>(ebp6));
    *reinterpret_cast<unsigned char*>(&eax4) = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax4) + reinterpret_cast<int32_t>(eax4) + 0x4c48300);
    if (!(__intrinsic() || (esi7 = esi8, !__intrinsic()))) {
        *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) >> 70);
    }
    eax9 = &eax4->f1;
    *eax9 = reinterpret_cast<signed char>(*eax9 + *reinterpret_cast<signed char*>(&eax9));
    edi10 = ebp11->f8;
    fun_40c9c0(edi10, 0, "SafeDisc", *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10));
    *reinterpret_cast<int32_t*>(ebp12 - 24) = 0;
    *reinterpret_cast<uint32_t*>(ebp13 - 20) = edi10;
    fun_411c70(reinterpret_cast<int32_t>(ebp14) - 24, 0x67, reinterpret_cast<int32_t>(ebp14) - 24, 0x67);
    if (__intrinsic() || (esi7 = esi7, !__intrinsic())) {
        edx15 = edx16;
    } else {
        tmp32_17 = *reinterpret_cast<int32_t*>(ebx18 + 0x43228435);
        *reinterpret_cast<int32_t*>(ebx19 + 0x43228435) = ecx;
        ecx = tmp32_17;
    }
    *edx15 = reinterpret_cast<signed char>(*edx15 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 6) = reinterpret_cast<void**>(0x4296c4);
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 2) = reinterpret_cast<void**>(0x429584);
    eax20 = reinterpret_cast<int32_t>(esi7(0x429584, 0x4296c4, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10)));
    ecx21 = reinterpret_cast<void**>(0);
    *reinterpret_cast<unsigned char*>(&ecx21) = static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax20 != 99));
    g4292ec = *reinterpret_cast<int16_t*>(&ecx21);
    eax22 = fun_415320(0, 0x429584, 0x4296c4, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 14), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 18), *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 22), *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 26), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 30));
    g42e500 = eax22;
    fun_40f6a0(0x429584, 0x4296c4, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10));
    if (__intrinsic() || !__intrinsic()) {
        ebx23 = ebx24;
    } else {
        ebx25->f4 = ebx26->f4 - edi10;
    }
    edi27 = edi10;
    do {
        pf28 = __undefined();
        *reinterpret_cast<int16_t*>(&v2) = es29;
        ebp30 = ebp30;
    } while (!pf28);
    __asm__("fidivr dword [ebx+0x4]");
    if (pf28 || (edi27 = edi27, !pf28)) {
        ecx21 = ecx21;
    } else {
        __asm__("fstp tword [ebx+0x4]");
    }
    ecx31 = ecx21;
    ebx32 = ebx23;
    do {
    } while (!pf28);
    __asm__("fdivr dword [ebx+0x4]");
    edi33 = edi27;
    fun_40f6b0(ecx31, *reinterpret_cast<void***>(&v2), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 12), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 20), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 24), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 28));
    eax34 = fun_420230(ecx31, 0x429300, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 12), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 20), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 24), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 28));
    fun_40f6b0(ecx31, eax34, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 12), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 20), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 24), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 28));
    eax35 = fun_420230(ecx31, 0x429310, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 12), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 20), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 24), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 28));
    eax36 = fun_40f6b0(ecx31, eax35, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 4), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 8), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 12), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 16), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 20), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 24), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 28));
    if (__intrinsic() || (ebp30 = ebp30, !__intrinsic())) {
        ebx32 = ebx32;
    } else {
        eax36 = eax36 + 0xd287047b;
    }
    do {
        *reinterpret_cast<unsigned char*>(&ebx32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx32) >> *reinterpret_cast<signed char*>(&ecx31));
        ebp30 = ebp30;
    } while (!__intrinsic());
    pf37 = __intrinsic();
    do {
    } while (!pf37);
    edi38 = edi33 | ebx32->f4;
    ecx39 = ecx31;
    *reinterpret_cast<void**>(&eax36) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax36)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx39 + 1))) | 33);
    *reinterpret_cast<void***>(eax36) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax36)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax36)));
    fun_40f4f0(ecx39, 0x42f2c0, 0x4296c4, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 10), *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v2) + 14));
    pf40 = __intrinsic();
    *reinterpret_cast<int32_t*>(ebp30 - 12) = 100;
    if (!pf40 && (edi38 = edi38, pf40)) {
    }
    if (pf40) 
        goto addr_0x40d639_86;
    ebx32 = ebx32;
    if (pf40) 
        goto addr_0x40d642_88;
    addr_0x40d639_86:
    addr_0x40d643_89:
    if (!(pf40 || !pf40)) {
        ebx32->f4 = edi38;
    }
    if (!(pf40 || !pf40)) {
        pf40 = __intrinsic();
    }
    do {
        __asm__("fucomi st0, st3");
    } while (!pf40);
    addr_0x40d642_88:
    ebx32->f4 = ebx32->f4 & edi38;
    pf40 = __intrinsic();
    goto addr_0x40d643_89;
}

struct s946 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d437() {
    int1_t pf1;
    struct s946* ebx2;

    if (!pf1) 
        goto 0x40d432;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 0x87);
}

void fun_40d44f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d44a;
}

struct s947 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s948 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40d473() {
    int1_t pf1;
    struct s947* ebx2;
    struct s948* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40d46e;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

struct s949 {
    signed char[4] pad4;
    int32_t f4;
};

struct s950 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d48b() {
    int1_t pf1;
    struct s949* ebx2;
    struct s950* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x40d486;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_40d4a3(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d49e;
}

void fun_40d4bb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d4b6;
}

void fun_40d4d3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d4ce;
}

void fun_40d4eb() {
    int1_t pf1;
    int32_t eax2;
    int32_t eax3;
    unsigned char ch4;

    if (!pf1) 
        goto 0x40d4e6;
    *reinterpret_cast<unsigned char*>(eax2 - 16) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax3 - 16) | ch4);
}

void fun_40d55d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d558;
}

void fun_40d575() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d570;
}

void fun_40d58d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d588;
}

void fun_40d5a5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d5a0;
}

void fun_40d5bd(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d5b8;
}

void fun_40d5d5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d5d0;
}

struct s951 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d5ed() {
    int1_t pf1;
    struct s951* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40d5e8;
    ebx2->f4 = edi3;
}

void fun_40d605() {
    int1_t pf1;
    int32_t eax2;
    uint16_t gs3;

    if (!pf1) 
        goto 0x40d600;
    *reinterpret_cast<uint32_t*>(eax2 - 64) = static_cast<uint32_t>(gs3);
}

struct s952 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d656() {
    int1_t pf1;
    struct s952* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40d651;
    ebx2->f4 = edi3;
}

void fun_40d66e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d669;
}

struct s953 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s954 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d686() {
    int1_t pf1;
    struct s953* ebx2;
    struct s954* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40d681;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_40d69e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d699;
}

struct s955 {
    signed char[4] pad4;
    signed char f4;
};

struct s956 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d6c2(int32_t ecx) {
    int1_t pf2;
    struct s955* ebx3;
    struct s956* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x40d6bd;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 - bh5);
}

struct s957 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d6da() {
    int1_t pf1;
    struct s957* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x40d6d5;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_40d6f2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d6ed;
}

void fun_40d724() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d71d;
}

struct s958 {
    signed char[4] pad4;
    int32_t f4;
};

struct s959 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d73a(int32_t ecx) {
    int32_t ecx2;
    int1_t pf3;
    struct s958* ebx4;
    struct s959* ebx5;

    ecx2 = ecx;
    if (!pf3) 
        goto 0x40d735;
    ebx4->f4 = ebx5->f4 >> *reinterpret_cast<signed char*>(&ecx2);
}

void fun_40d752() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d74d;
}

void fun_40d76a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d765;
}

void fun_40d784() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d77d;
}

void fun_40d79c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d795;
}

void fun_40d7b2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d7ad;
}

void fun_40d7ca() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d7c5;
    __asm__("fidivr dword [ebx+0x4]");
}

struct s960 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d7e2() {
    struct s960* ebx1;
    struct s960* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40d7dd;
    ebx1->f4 = reinterpret_cast<signed char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_40d7fa() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d7f5;
    __asm__("fnstsw word [ebx+0x4]");
}

struct s961 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d812() {
    int1_t pf1;
    struct s961* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x40d80d;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_40d82a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d825;
}

struct s962 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s963 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d844() {
    int1_t pf1;
    struct s962* ebx2;
    struct s963* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x40d83d;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_40d85a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d855;
}

struct s964 {
    signed char[4] pad4;
    int32_t f4;
};

struct s965 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d872(signed char cl) {
    int1_t pf2;
    struct s964* ebx3;
    struct s965* ebx4;

    if (!pf2) 
        goto 0x40d86d;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_40d88c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d885;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_40d8a2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d89d;
}

void fun_40d902() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d8fd;
}

void fun_40d91a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d915;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_40d932() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d92d;
}

void fun_40d956() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d951;
}

void fun_40d97a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d975;
}

struct s966 {
    signed char[4] pad4;
    int32_t f4;
};

struct s967 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d99e(signed char cl) {
    int1_t pf2;
    struct s966* ebx3;
    struct s967* ebx4;

    if (!pf2) 
        goto 0x40d999;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_40d9b6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d9b1;
}

struct s968 {
    signed char[4] pad4;
    signed char f4;
};

struct s969 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d9ce(int32_t ecx) {
    int1_t pf2;
    struct s968* ebx3;
    struct s969* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x40d9c9;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 + bh5);
}

struct s970 {
    signed char[4] pad4;
    signed char f4;
};

struct s971 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d9e6() {
    int1_t pf1;
    struct s970* ebx2;
    struct s971* ebx3;

    if (!pf1) 
        goto 0x40d9e1;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_40d9fe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d9f9;
}

void fun_40da16() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40da11;
}

void fun_40da2e(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40da29;
}

void fun_40da46() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40da41;
}

void fun_40da5e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40da59;
}

struct s972 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s973 {
    signed char[4] pad4;
    int32_t f4;
};

struct s974 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40da76() {
    int1_t pf1;
    struct s972* ebx2;
    struct s973* ebx3;
    int32_t edi4;
    struct s974* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40da71;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_40da90() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40da89;
}

void fun_40dad5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dad0;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_40daed() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dae8;
}

void fun_40db13() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40db0c;
}

void fun_40db35() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40db30;
    __asm__("fistp qword [ebx+0x4]");
}

struct s975 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s976 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40db4d() {
    int1_t pf1;
    struct s975* ebx2;
    struct s976* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40db48;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_40db65() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40db60;
}

void fun_40db7d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40db78;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_40db95(int32_t ecx) {
    int1_t pf2;
    int32_t eax3;

    if (!pf2) 
        goto 0x40db90;
    gc987047b = eax3;
}

void fun_40dbad() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dba8;
}

void fun_40dbc5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dbc0;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_40dbdd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dbd8;
}

void fun_40dc01() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dbfc;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_40dc19() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dc14;
}

struct s977 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40dc31() {
    int1_t pf1;
    struct s977* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40dc2c;
    ebx2->f4 = edi3;
}

void fun_40dc4b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dc44;
    __asm__("arpl [ebx+0x4], di");
}

void fun_40dc61() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dc5c;
}

void fun_40dc79() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dc74;
}

struct s978 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s979 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40dc9d(int32_t ecx) {
    int1_t pf2;
    struct s978* ebx3;
    struct s979* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x40dc98;
    ebx3->f4 = ebx4->f4 & edi5;
}

void fun_40dcb5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dcb0;
}

void fun_40dccd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dcc8;
}

void fun_40dce5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dce0;
}

void fun_40dcfd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dcf8;
}

void fun_40dd15() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dd10;
}

void fun_40dd2d(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40dd28;
    __asm__("fnstsw word [ebx+0x4]");
}

struct s980 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40dd94(int32_t ecx) {
    int1_t pf2;
    struct s980* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x40dd8f;
    ebx3->f4 = bh4;
}

void fun_40ddac() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dda7;
}

void fun_40ddc4(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40ddbf;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_40dddc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ddd7;
}

void fun_40ddf6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ddef;
}

void fun_40de0c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40de07;
    __asm__("arpl [ebx+0x4], di");
}

void fun_40de26() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40de1f;
}

void fun_40de3e(int32_t ecx) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;

    if (!pf2) 
        goto 0x40de37;
    *reinterpret_cast<int32_t*>(ebp3 - 0x17af07bb) = *reinterpret_cast<int32_t*>(ebp4 - 0x17af07bb) + ecx;
}

struct s981 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40de8a() {
    int1_t pf1;
    struct s981* ebx2;
    int32_t edi3;
    uint1_t cf4;

    if (!pf1) 
        goto 0x40de85;
    ebx2->f4 = ebx2->f4 + edi3 + cf4;
}

void fun_40dea2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40de9d;
}

void fun_40deba(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40deb5;
}

void fun_40ded4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40decd;
}

struct s982 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s983 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40deea() {
    int1_t pf1;
    struct s982* ebx2;
    struct s983* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40dee5;
    ebx2->f4 = ebx3->f4 & edi4;
}

struct s984 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40df02() {
    int1_t pf1;
    struct s984* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x40defd;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_40df1c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40df15;
}

void fun_40df62() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40df5d;
}

struct s985 {
    signed char[4] pad4;
    signed char f4;
};

struct s986 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40df7a() {
    int1_t pf1;
    struct s985* ebx2;
    struct s986* ebx3;

    if (!pf1) 
        goto 0x40df75;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

struct s987 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s988 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40df9c() {
    int1_t pf1;
    struct s987* ebx2;
    struct s988* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40df97;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_40dfb6() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x40dfaf;
    gc087047b = eax2;
}

void fun_40dfe4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dfdf;
}

struct s989 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40dffc() {
    struct s989* ebx1;
    struct s989* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40dff7;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) + reinterpret_cast<uint1_t>(ebx1->f4 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) + cf4))));
}

void fun_40e014() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e00f;
}

void fun_40e02e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e027;
}

void fun_40e044() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e03f;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_40e05c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e057;
}

void fun_40e0c9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e0c4;
}

void fun_40e0e3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e0dc;
}

void fun_40e115() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e10e;
    __asm__("fstp tword [ebx+0x4]");
}

struct s990 {
    signed char[4] pad4;
    int32_t f4;
};

struct s991 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e12b() {
    int1_t pf1;
    struct s990* ebx2;
    struct s991* ebx3;

    if (!pf1) 
        goto 0x40e126;
    ebx2->f4 = ebx3->f4 >> 1;
}

struct s992 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e143() {
    int1_t pf1;
    struct s992* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x40e13e;
    ebx2->f4 = bh3;
}

struct s993 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s994 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e15b(int32_t ecx) {
    int1_t pf2;
    struct s993* ebx3;
    struct s994* ebx4;
    int32_t edi5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x40e156;
    ebx3->f4 = ebx4->f4 + edi5 + cf6;
}

struct s995 {
    signed char[4] pad4;
    int32_t f4;
};

struct s996 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e171() {
    int1_t pf1;
    struct s995* ebx2;
    struct s996* ebx3;
    int1_t pf4;

    if (!pf1) 
        goto 0x40e16e;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
    pf4 = __intrinsic();
    do {
        __asm__("fucomi st0, st3");
    } while (!pf4);
    __asm__("rol edi, 0x45");
}

void fun_40e1b6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e1b1;
}

void fun_40e1ce(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e1c9;
}

struct s997 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s998 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40e1e6() {
    int1_t pf1;
    struct s997* ebx2;
    struct s998* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40e1e1;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_40e200() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e1f9;
    __asm__("arpl [ebx+0x4], di");
}

void fun_40e216() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e211;
}

void fun_40e23a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e235;
}

struct s999 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1000 {
    signed char[4] pad4;
    signed char f4;
};

struct s1001 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e252() {
    int1_t pf1;
    struct s999* ebx2;
    struct s1000* ebx3;
    signed char bh4;
    struct s1001* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40e24d;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

struct s1002 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e29b() {
    struct s1002* ebx1;
    struct s1002* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40e296;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

struct s1003 {
    signed char[4] pad4;
    signed char f4;
};

struct s1004 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e2b3() {
    int1_t pf1;
    struct s1003* ebx2;
    struct s1004* ebx3;

    if (!pf1) 
        goto 0x40e2ae;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_40e2cd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e2c6;
}

void fun_40e2e3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e2de;
}

void fun_40e2fb(int32_t ecx) {
    int1_t pf2;
    void** eax3;

    if (!pf2) 
        goto 0x40e2f6;
    gd287047b = eax3;
}

struct s1005 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1006 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e313() {
    int1_t pf1;
    struct s1005* ebx2;
    struct s1006* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x40e30e;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_40e32b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e326;
}

void fun_40e343() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e33e;
}

struct s1007 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1008 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e367(int32_t ecx) {
    int32_t ecx2;
    int1_t pf3;
    struct s1007* ebx4;
    struct s1008* ebx5;

    ecx2 = ecx;
    if (!pf3) 
        goto 0x40e362;
    ebx4->f4 = ebx5->f4 >> *reinterpret_cast<signed char*>(&ecx2);
}

void fun_40e37f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e37a;
}

void fun_40e397() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e392;
}

struct s1009 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e3af() {
    int1_t pf1;
    struct s1009* ebx2;

    if (!pf1) 
        goto 0x40e3aa;
    ebx2->f4 = 0;
}

void fun_40e3c7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e3c2;
}

void fun_40e3df(uint32_t ecx) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;

    if (!pf2) 
        goto 0x40e3da;
    *reinterpret_cast<uint32_t*>(ebp3 + 0x16ae855) = *reinterpret_cast<uint32_t*>(ebp4 + 0x16ae855) | ecx;
}

void fun_40e41d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e418;
}

void fun_40e44d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e448;
}

void fun_40e465() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e460;
}

struct s1010 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40e47d() {
    int1_t pf1;
    struct s1010* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x40e478;
    ebx2->f4 = ebx2->f4 & edi3;
}

void fun_40e495() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e490;
}

void fun_40e4ad() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x40e4a8;
    ged87047b = eax2;
}

void fun_40e4c5() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x40e4c0;
    *reinterpret_cast<signed char*>(&gd287047b) = al2;
}

struct s1011 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e4dd() {
    struct s1011* ebx1;
    struct s1011* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40e4d8;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

struct s1012 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1013 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1014 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40e4f7() {
    int1_t pf1;
    struct s1012* ebx2;
    struct s1013* ebx3;
    int32_t edi4;
    struct s1014* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40e4f0;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_40e50d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e508;
}

struct s1015 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40e525() {
    int1_t pf1;
    struct s1015* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x40e520;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_40e53d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e538;
}

void fun_40e557() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e550;
}

struct s1016 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e56d(int32_t ecx) {
    int1_t pf2;
    struct s1016* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x40e568;
    ebx3->f4 = edi4;
}

void fun_40e585() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e580;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_40e59d(signed char cl) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e598;
}

void fun_40e5df() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x40e5da;
    gff87047b = eax2;
}

struct s1017 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e5f7() {
    int1_t pf1;
    struct s1017* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40e5f2;
    ebx2->f4 = edi3;
}

void fun_40e60f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e60a;
}

void fun_40e629() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e622;
}

void fun_40e641() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e63a;
}

struct s1018 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1020 {
    signed char[8] pad8;
    void** f8;
};

struct s1019 {
    signed char[12] pad12;
    int32_t f12;
    struct s1020* f16;
};

struct s1021 {
    int32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
    signed char[3] pad44;
    void** f44;
    signed char[3] pad48;
    void** f48;
    signed char[3] pad52;
    void** f52;
};

void fun_40e657(void* ecx) {
    int1_t pf2;
    int1_t pf3;
    void* ecx4;
    struct s1018* ebx5;
    struct s1018* ebx6;
    struct s1019** ebp7;
    struct s1019*** ebp8;
    uint32_t edi9;
    uint32_t edi10;
    struct s1018* ebx11;
    struct s1020* edx12;
    struct s1020* edx13;
    struct s1019* ebp14;
    int32_t* esp15;
    void** eax16;
    void* esp17;
    int1_t pf18;
    struct s1019* ebp19;
    int1_t pf20;
    struct s1019* ebp21;
    struct s1018* ebx22;
    int1_t zf23;
    int1_t pf24;
    void* ecx25;
    struct s1018* ebx26;
    void* ecx27;
    uint32_t edi28;
    void** ecx29;
    int32_t eax30;
    struct s1020** esp31;
    int32_t* esp32;
    uint32_t* esp33;
    int32_t* esp34;
    int32_t eax35;
    void*** esp36;
    struct s1021* esp37;

    if (pf2) {
        pf3 = __intrinsic();
    }
    ecx4 = ecx;
    ebx5 = ebx6;
    ebp7 = *ebp8;
    edi9 = edi10;
    if (!(pf3 || (ecx4 = ecx4, !pf3))) {
        ebx5->f4 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1);
    }
    ebx11 = ebx5;
    edx12 = edx13;
    ebp14 = *ebp7;
    esp15 = reinterpret_cast<int32_t*>(ebp7 + 1 - 1);
    *esp15 = 0x40e777;
    eax16 = fun_40a85f(ecx4);
    esp17 = reinterpret_cast<void*>(esp15 + 1 + 1);
    pf18 = __intrinsic();
    if (pf18 || !pf18) {
        ecx4 = ecx4;
    } else {
        ebx11->f4 = reinterpret_cast<unsigned char>(ebx11->f4 + edi9 + __intrinsic());
        pf18 = __intrinsic();
    }
    ebp19 = ebp14;
    do {
    } while (!pf18);
    ebx11->f4 = reinterpret_cast<unsigned char>(ebx11->f4 + edi9);
    pf20 = __intrinsic();
    ebp21 = ebp19;
    ebx22 = ebx11;
    do {
        ebx22 = ebx22;
    } while (!pf20);
    ebx22->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx22->f4) >> *reinterpret_cast<signed char*>(&ecx4));
    zf23 = ebx22->f4 == 0;
    pf24 = __intrinsic();
    ecx25 = ecx4;
    ebx26 = ebx22;
    if (pf24 || (ecx25 = ecx25, !pf24)) {
        edi9 = edi9;
    } else {
        ebx26->f4 = reinterpret_cast<unsigned char>(ebx26->f4 ^ edi9);
        pf24 = __intrinsic();
        zf23 = ebx26->f4 == 0;
    }
    ecx27 = ecx25;
    edi28 = edi9;
    do {
        edx12 = edx12;
    } while (!pf24);
    __asm__("fdivr qword [ebx+0x4]");
    ecx29 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx27) - 1);
    if (!(reinterpret_cast<uint1_t>(!!ecx29) & reinterpret_cast<uint1_t>(!zf23))) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx26) - 0x137c13b3) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx26) - 0x137c13b3) + *reinterpret_cast<signed char*>(&ecx29));
        __asm__("aam 0x89");
        ebp21 = reinterpret_cast<struct s1019*>(reinterpret_cast<int32_t>(ebp21) - 1);
        *reinterpret_cast<unsigned char*>(&eax16) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax16) | 0x8b) - 0x75) + 81) + __intrinsic());
        edx12->f8 = eax16;
        eax30 = ebp21->f12;
        esp31 = reinterpret_cast<struct s1020**>(reinterpret_cast<int32_t>(esp17) - 4);
        *esp31 = ebp21->f16;
        esp32 = reinterpret_cast<int32_t*>(esp31 - 1);
        *esp32 = eax30;
        esp33 = reinterpret_cast<uint32_t*>(esp32 - 1);
        *esp33 = edi28;
        esp34 = reinterpret_cast<int32_t*>(esp33 - 1);
        *esp34 = 0x40e87f;
        eax35 = fun_404e90();
        ecx29 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp21) + 0xffffffe8);
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp21) - 4) = eax35;
        esp36 = reinterpret_cast<void***>(esp34 + 1 - 1);
        *esp36 = ecx29;
        esp37 = reinterpret_cast<struct s1021*>(esp36 - 4);
        esp37->f0 = 0x40e88b;
        fun_4118a0(ecx29, esp37->f4, esp37->f8, esp37->f12, esp37->f16, esp37->f20, esp37->f24, esp37->f28, esp37->f32, esp37->f36, esp37->f40, esp37->f44, esp37->f48, esp37->f52);
        pf24 = __intrinsic();
        if (!(pf24 || !pf24)) {
            ebx26->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx26->f4) >> *reinterpret_cast<signed char*>(&ecx29));
            pf24 = __intrinsic();
        }
    }
    if (pf24 || !pf24) {
    }
}

void fun_40e66f(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e66a;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_40e687() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e682;
}

struct s1022 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e69f() {
    int1_t pf1;
    struct s1022* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x40e69a;
    ebx2->f4 = bh3;
}

void fun_40e6b7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e6b2;
}

void fun_40e6cf(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e6ca;
}

void fun_40e6e7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e6e2;
}

void fun_40e6ff() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e6fa;
}

void fun_40e717() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e712;
    __asm__("fdivr qword [ebx+0x4]");
}

struct s1023 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1024 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e747(int32_t ecx) {
    int1_t pf2;
    struct s1023* ebx3;
    struct s1024* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x40e742;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 | bh5);
}

void fun_40e75f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e75a;
}

void fun_40e79b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e794;
}

void fun_40e7b1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e7ac;
}

struct s1025 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e7c9() {
    struct s1025* ebx1;
    struct s1025* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40e7c4;
    ebx1->f4 = reinterpret_cast<signed char>(ebx1->f4 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_40e7ef() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e7e8;
}

void fun_40e81f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e818;
}

void fun_40e835() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e830;
}

void fun_40e84d(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;

    if (!pf2) 
        goto 0x40e848;
    *reinterpret_cast<int32_t*>(ebx3 - 0x179717bb) = ecx;
}

void fun_40e8ad(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e8a8;
}

void fun_40e8c5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e8c0;
    __asm__("fdivr qword [ebx+0x4]");
}

void fun_40e8df() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e8d8;
}

struct s1026 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e8f7() {
    int1_t pf1;
    struct s1026* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x40e8f0;
    ebx2->f4 = bh3;
}

struct s1027 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1028 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e90d() {
    int1_t pf1;
    struct s1027* ebx2;
    struct s1028* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x40e908;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_40e925(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e920;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_40e93d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e938;
}

void fun_40e963() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e95c;
}

void fun_40e9cd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e9c8;
}

struct s1029 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1030 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1031 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40ea15() {
    int1_t pf1;
    struct s1029* ebx2;
    struct s1030* ebx3;
    int32_t edi4;
    struct s1031* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40ea10;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

struct s1032 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40ea2d() {
    int1_t pf1;
    struct s1032* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x40ea28;
    ebx2->f4 = ebx2->f4 ^ edi3;
}

void fun_40ea45() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ea40;
}

void fun_40ea5d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ea58;
}

void fun_40ea75() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ea70;
}

struct s1033 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40eaee() {
    int1_t pf1;
    struct s1033* ebx2;

    if (!pf1) 
        goto 0x40eae9;
    ebx2->f4 = ebx2->f4 >> 0xffffff87;
}

struct s1034 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1035 {
    signed char[4] pad4;
    signed char f4;
};

int32_t GetMessageA = 0x3282a;

int32_t TranslateMessage = 0x32816;

int32_t DispatchMessageA = 0x32802;

void fun_40eb08(int32_t ecx) {
    int1_t pf2;
    struct s1034* ebx3;
    struct s1035* ebx4;
    signed char bh5;
    uint1_t cf6;
    int32_t ebp7;
    int32_t* ebp8;
    int32_t* esp9;
    int32_t* esp10;
    int32_t* esp11;
    int32_t* esp12;
    int32_t eax13;
    int32_t* esp14;
    int32_t* esp15;
    int32_t* esp16;

    if (pf2) {
        ebx3->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx4->f4 + bh5) + cf6);
    }
    ebp7 = *ebp8;
    esp9 = ebp8 + 1 - 1;
    *esp9 = 0;
    esp10 = esp9 - 1;
    *esp10 = 0;
    esp11 = esp10 - 1;
    *esp11 = ebp7 - 0xc8;
    esp12 = esp11 - 1;
    *esp12 = 0x40ebba;
    eax13 = reinterpret_cast<int32_t>(GetMessageA());
    if (eax13) {
        esp14 = esp12 + 1 - 1;
        *esp14 = ebp7 - 0xc8;
        esp15 = esp14 - 1;
        *esp15 = 0x40ebcb;
        TranslateMessage();
        esp16 = esp15 + 1 - 1;
        *esp16 = ebp7 - 0xc8;
        *(esp16 - 1) = 0x40ebd8;
        DispatchMessageA();
        goto "j";
    }
}

void fun_40eb1e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eb19;
}

struct s1036 {
    signed char[4] pad4;
    signed char f4;
};

struct s1037 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40eb36() {
    int1_t pf1;
    struct s1036* ebx2;
    struct s1037* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x40eb31;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

void fun_40eb4e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eb49;
}

void fun_40eb66() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eb61;
}

struct s1038 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40eb7e() {
    int1_t pf1;
    struct s1038* ebx2;
    int32_t edi3;
    uint1_t cf4;

    if (!pf1) 
        goto 0x40eb79;
    ebx2->f4 = ebx2->f4 + edi3 + cf4;
}

void fun_40eb96() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eb91;
}

void fun_40ec0a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40ec05;
    __asm__("arpl [ebx+0x4], di");
}

struct s1039 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1040 {
    signed char[4] pad4;
    signed char f4;
};

struct s1041 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40ec22(int32_t ecx) {
    int1_t pf2;
    struct s1039* ebx3;
    struct s1040* ebx4;
    signed char bh5;
    struct s1041* ebx6;
    signed char bh7;
    uint1_t cf8;

    if (!pf2) 
        goto 0x40ec1d;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 - reinterpret_cast<unsigned char>(bh5 + reinterpret_cast<uint1_t>(ebx6->f4 < reinterpret_cast<unsigned char>(bh7 + cf8))));
}

void fun_40ec46() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ec41;
}

struct s1042 {
    unsigned char f0;
    signed char[3] pad4;
    unsigned char f4;
    signed char[22] pad27;
    uint32_t f27;
    signed char[1126331414] pad1126331445;
    signed char f1126331445;
};

struct s1043 {
    signed char[29] pad29;
    signed char f29;
};

int32_t GetExitCodeProcess = 0x325cc;

struct s1044 {
    signed char f0;
    signed char[22] pad23;
    struct s1043* f23;
};

struct s1045 {
    signed char[4] pad4;
    int32_t f4;
};

uint32_t g74000000;

struct s7* g42e514;

struct s8* g42e510;

void fun_40ec5e(struct s8* ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10) {
    void* esp11;
    struct s1042* ebx12;
    struct s1042* ebx13;
    int1_t pf14;
    struct s1043* esi15;
    struct s1043* esi16;
    struct s8* ecx17;
    struct s1042* ebx18;
    int32_t ebp19;
    int32_t ebp20;
    uint1_t cf21;
    uint1_t zf22;
    int32_t ebp23;
    int1_t of24;
    uint1_t less_or_equal25;
    int32_t ebp26;
    uint1_t below_or_equal27;
    struct s1044* eax28;
    void* esp29;
    struct s1045* ebp30;
    struct s1045* ebp31;
    int32_t edx32;
    uint1_t zf33;
    void* esp34;
    int1_t cf35;
    int1_t sf36;
    int1_t of37;
    uint1_t less_or_equal38;
    void* esp39;
    void* esp40;
    void* esp41;
    void* esp42;
    void* esp43;
    void* esp44;
    void* esp45;
    void* esp46;
    void* esp47;
    void* esp48;
    void* esp49;
    void* esp50;
    int32_t edx51;
    struct s7* ecx52;
    struct s8* edx53;
    void* esp54;
    int1_t cf55;
    int1_t sf56;
    int1_t of57;
    uint1_t less_or_equal58;

    esp11 = __zero_stack_offset();
    ebx12 = ebx13;
    if (!pf14) {
        esi15 = esi16;
    } else {
        ebx12->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx12->f4) >> *reinterpret_cast<signed char*>(&ecx));
    }
    ecx17 = ecx;
    do {
        esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp11) - 2);
        esi15 = esi15;
    } while (!__undefined());
    ebx12->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx12->f4 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx12) + 1)) + __intrinsic());
    ebx18 = ebx12;
    *reinterpret_cast<signed char*>(ebp19 + 0x5251fc4d) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp20 + 0x5251fc4d) + *reinterpret_cast<signed char*>(&ecx17));
    cf21 = __intrinsic();
    zf22 = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(ebp23 + 0x5251fc4d) == 0);
    of24 = __intrinsic();
    less_or_equal25 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(ebp26 + 0x5251fc4d) < 0 != of24) | zf22);
    below_or_equal27 = reinterpret_cast<uint1_t>(cf21 | zf22);
    eax28 = reinterpret_cast<struct s1044*>(GetExitCodeProcess());
    esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp11) - 4 + 4);
    if (zf22) {
        ebp30 = ebp31;
        if (zf22) 
            goto addr_0x40ecfd_22;
        if (!below_or_equal27) 
            goto addr_0x40ecfd_22;
        if (zf22) 
            goto addr_0x40ecf1_25; else 
            goto addr_0x40ece2_26;
    }
    while (1) {
        edx32 = edx32;
        if (!zf22) {
            ecx17 = ecx17;
        }
        do {
            addr_0x40ecfd_22:
            if (!less_or_equal25) 
                goto addr_0x40ece1_29;
            ebx18 = ebx18;
            if (zf22) 
                goto addr_0x40ece1_29;
            if (!below_or_equal27) 
                goto addr_0x40ece1_29;
            edx32 = edx32;
            if (!less_or_equal25) 
                goto addr_0x40ed0b_33;
            addr_0x40ece1_29:
            addr_0x40ece2_26:
            g74000000 = g74000000 & 35;
            cf21 = 0;
            zf22 = reinterpret_cast<uint1_t>(g74000000 == 0);
            of24 = 0;
            less_or_equal25 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | zf22);
            below_or_equal27 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf22));
            ebx18 = ebx18;
            if (!below_or_equal27) 
                goto addr_0x40ed0c_34;
            ecx17 = ecx17;
            if (0) 
                goto addr_0x40ed0c_34;
            addr_0x40ecf1_25:
        } while (zf22 || (ebp30 = ebp30, !below_or_equal27));
    }
    addr_0x40ed0b_33:
    eax28->f23 = esi15;
    addr_0x40ed0c_34:
    if (!below_or_equal27) 
        goto addr_0x40ed25_36;
    if (zf22) 
        goto addr_0x40ed25_36;
    if (of24) 
        goto addr_0x40ed16_39;
    addr_0x40ed25_36:
    while (!less_or_equal25 || ((ecx17 = ecx17, zf22) || (!below_or_equal27 || less_or_equal25))) {
        addr_0x40ed16_39:
        ecx17->f0 = reinterpret_cast<unsigned char>(ecx17->f0 - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(ecx17->f0 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf21))))));
        eax28->f0 = reinterpret_cast<signed char>(eax28->f0 + *reinterpret_cast<signed char*>(&eax28));
        cf21 = __intrinsic();
        zf22 = reinterpret_cast<uint1_t>(eax28->f0 == 0);
        less_or_equal25 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(eax28->f0 < 0 != __intrinsic()) | zf22);
        below_or_equal27 = reinterpret_cast<uint1_t>(cf21 | zf22);
        if (!below_or_equal27) 
            goto addr_0x40ed34_41;
        if (!__intrinsic()) 
            goto addr_0x40ed34_41;
        if (zf22) 
            continue;
    }
    ebx18->f27 = ebx18->f27 ^ 0xd2871b74;
    cf21 = 0;
    zf22 = reinterpret_cast<uint1_t>(ebx18->f27 == 0);
    below_or_equal27 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf22));
    addr_0x40ed34_41:
    if (below_or_equal27 && (edx32 = edx32, !zf22)) {
        if (cf21) 
            goto addr_0x40ed51_47; else 
            goto addr_0x40ed42_48;
    }
    while (!cf21 || cf21) {
        addr_0x40ed42_48:
        ecx17->f0 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(ecx17->f0)) + cf21);
        eax28->f0 = reinterpret_cast<signed char>(eax28->f0 + *reinterpret_cast<signed char*>(&eax28));
        cf21 = __intrinsic();
        zf33 = reinterpret_cast<uint1_t>(eax28->f0 == 0);
        below_or_equal27 = reinterpret_cast<uint1_t>(cf21 | zf33);
        if (!below_or_equal27) 
            goto addr_0x40ed58_51;
        if (zf33) 
            goto addr_0x40ed58_51;
        if (!__intrinsic()) 
            goto addr_0x40ed58_51;
        ecx17 = ecx17;
        addr_0x40ed51_47:
    }
    cf21 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx32) + 1) < reinterpret_cast<unsigned char>(esi15->f29 + cf21));
    below_or_equal27 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx32) + 1) <= reinterpret_cast<unsigned char>(esi15->f29 + cf21));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx32) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx32) + 1) - reinterpret_cast<unsigned char>(esi15->f29 + cf21));
    zf33 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx32) + 1) == static_cast<uint32_t>(cf21));
    addr_0x40ed58_51:
    if (!zf33 && ((ebp30 = ebp30, below_or_equal27) && (ebx18 = ebx18, !zf33))) {
        if (!below_or_equal27) 
            goto addr_0x40ed77_57; else 
            goto addr_0x40ed68_58;
    }
    while (!cf21 || (zf33 || (!below_or_equal27 || (zf33 || cf21)))) {
        addr_0x40ed68_58:
        ebx18->f0 = reinterpret_cast<unsigned char>(ebx18->f0 - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(ebx18->f0 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf21))))));
        eax28->f0 = reinterpret_cast<signed char>(eax28->f0 + *reinterpret_cast<signed char*>(&eax28));
        cf21 = __intrinsic();
        zf33 = reinterpret_cast<uint1_t>(eax28->f0 == 0);
        below_or_equal27 = reinterpret_cast<uint1_t>(cf21 | zf33);
        if (!below_or_equal27) 
            goto addr_0x40ed88_61;
        if (!__intrinsic()) 
            goto addr_0x40ed88_61;
        if (zf33) 
            continue;
        ebx18 = ebx18;
        addr_0x40ed77_57:
    }
    ecx17->f4384028 = reinterpret_cast<unsigned char>(ecx17->f4384028 & 0x8b);
    addr_0x40ed88_61:
    fun_4116a0(ecx17, reinterpret_cast<uint32_t>(eax28) | 0x42e518);
    esp34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) - 4 - 4 - 4 + 4 + 8);
    cf35 = __intrinsic();
    sf36 = reinterpret_cast<int32_t>(esp34) < 0;
    of37 = __intrinsic();
    less_or_equal38 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf36 != of37) | reinterpret_cast<uint1_t>(esp34 == 0));
    do {
    } while (cf35 && !cf35);
    while (less_or_equal38 && !less_or_equal38) {
    }
    while (!of37 && of37) {
    }
    esp39 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp34) + 2);
    while ((ecx17 = ecx17, !sf36) && sf36) {
    }
    esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp39) + 2);
    while ((ebx18 = ebx18, cf35) && !cf35) {
    }
    while (esp40 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) - 2), !less_or_equal38) {
    }
    esp41 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp40) + 2);
    while (!of37 && of37) {
    }
    while (!sf36 && sf36) {
    }
    esp42 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp41) + 2);
    while ((edx32 = edx32, cf35) && !cf35) {
    }
    esp43 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp42) + 2);
    while (less_or_equal38 && !less_or_equal38) {
    }
    esp44 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp43) + 2);
    while ((edx32 = edx32, !of37) && of37) {
    }
    esp45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp44) + 2);
    while ((ebx18 = ebx18, !sf36) && sf36) {
    }
    while (cf35 && !cf35) {
    }
    esp46 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp45) + 2);
    while ((ebp30 = ebp30, less_or_equal38) && !less_or_equal38) {
    }
    esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp46) + 2);
    while ((edx32 = edx32, !of37) && of37) {
    }
    esp48 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp47) + 2);
    while (!sf36 && sf36) {
    }
    esp49 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp48) + 2);
    while (cf35 && !cf35) {
    }
    esp50 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp49) + 2);
    while (less_or_equal38 && !less_or_equal38) {
    }
    edx51 = edx32 + 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx18) + 0x43227435) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx18) + 0x43227435) + *reinterpret_cast<signed char*>(&ecx17));
    *reinterpret_cast<signed char*>(edx51 - 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx51 - 1) + *reinterpret_cast<signed char*>(&edx51));
    __asm__("salc ");
    esi15();
    ecx52 = g42e514;
    edx53 = g42e510;
    fun_4116a0(edx53, ecx52);
    esp54 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp50) - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 8);
    cf55 = __intrinsic();
    sf56 = reinterpret_cast<int32_t>(esp54) < 0;
    of57 = __intrinsic();
    less_or_equal58 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf56 != of57) | reinterpret_cast<uint1_t>(esp54 == 0));
    do {
    } while (!of57 && of57);
    while (!sf56 && sf56) {
    }
    while (cf55 && !cf55) {
    }
    while (less_or_equal58 && !less_or_equal58) {
    }
    while (!of57 && of57) {
    }
    while (!sf56 && sf56) {
    }
    while (cf55 && !cf55) {
    }
    while (less_or_equal58 && !less_or_equal58) {
    }
    while (!of57 && of57) {
    }
    while (!sf56 && sf56) {
    }
    while (cf55 && !cf55) {
    }
    while (less_or_equal58 && !less_or_equal58) {
    }
    goto ebp30->f4;
}

void fun_40ec76() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ec71;
}

void fun_40ec9c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ec95;
    __asm__("fdivr dword [ebx+0x4]");
}

struct s1046 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1047 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40ecb2(int32_t ecx) {
    int1_t pf2;
    struct s1046* ebx3;
    struct s1047* ebx4;

    if (!pf2) 
        goto 0x40ecad;
    ebx3->f4 = ebx4->f4 >> 1;
}

void fun_40eda8() {
    __asm__("por mm0, [edi]");
}

void fun_40edb4() {
}

void fun_40edc0() {
}

void fun_40edcc() {
}

void fun_40edd8() {
}

void fun_40ede4() {
}

void fun_40edf0() {
}

void fun_40edfc() {
}

void fun_40ee08() {
}

void fun_40ee14() {
}

void fun_40ee20(signed char cl) {
}

void fun_40ee2c() {
}

void fun_40ee38() {
}

void fun_40ee44() {
}

void fun_40ee50() {
}

void fun_40ee5c() {
    __asm__("fsubr st0, st3");
}

void fun_40ee68() {
    __asm__("fucomp st3");
}

int32_t ge0e8158b;

void fun_40ee74() {
    int32_t eax1;

    ge0e8158b = eax1;
}

void fun_40eead() {
}

void fun_40eeb9() {
}

void fun_40eec5() {
}

void fun_40eed1() {
}

void fun_40eedd() {
}

void fun_40eee9() {
}

void fun_40eef5() {
    __asm__("fucomp st3");
}

void fun_40ef01() {
}

void fun_40ef0d() {
}

void fun_40ef19() {
    __asm__("fucomp st3");
}

void fun_40ef25() {
}

void fun_40ef31(int32_t ecx) {
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx2 + 0x5e5ffc45) = ecx;
}

void fun_40f720() {
    void* esp1;
    void* esp2;
    int32_t eax3;
    void** esp4;
    signed char* v5;
    int32_t v6;
    signed char* v7;
    int32_t v8;

    esp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x104);
    GetModuleFileNameA(0, esp1, 0x104);
    esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) - 4 - 4 - 4 - 4 + 4);
    eax3 = reinterpret_cast<int32_t>(GetDriveTypeA(esp2, 0, esp1, 0x104));
    esp4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp2) - 4 - 4 + 4);
    if (eax3 != 5) {
        fun_40f780(esp4, v5, esp2, 0, esp1, 0x104);
        goto v6;
    } else {
        fun_40fa20(esp4, v7, esp2, 0, esp1, 0x104);
        goto v8;
    }
}

void fun_40fab6() {
}

void fun_40fac2() {
}

void fun_40face() {
}

void fun_40fada() {
}

void fun_40fae6() {
}

void fun_40faf2() {
    __asm__("fucomi st0, st3");
}

void fun_40fafe() {
}

void fun_40fb0a() {
}

void fun_40fb16(signed char cl) {
}

void fun_40fb22() {
}

void fun_40fb2e() {
}

void fun_40fb3a() {
}

void fun_40fb46() {
}

void fun_40fb52() {
}

void fun_40fb5e() {
}

void fun_40fb76() {
}

void fun_40fb82() {
}

void fun_40fb8e() {
}

void fun_40fb9a() {
}

void fun_40fba6() {
}

void fun_40fbb2() {
}

void fun_40fbca() {
}

void fun_40fbd6() {
}

void fun_40fbe2(unsigned char cl) {
    int32_t ebx2;
    int32_t ebx3;

    *reinterpret_cast<unsigned char*>(ebx2 - 0x335cf3bb) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx3 - 0x335cf3bb) | cl);
}

void fun_40fbf6() {
}

void fun_40fc02() {
    __asm__("fucomp st3");
}

void fun_40fc0e() {
    __asm__("fucomip st0, st3");
}

void fun_40fc1a() {
}

void fun_40fc26() {
}

void fun_40fc32() {
}

void fun_40fc3e() {
}

void fun_40fc4a() {
}

void fun_40fc56() {
}

void fun_40fc62() {
}

void fun_40fc6e() {
}

void fun_40fc7a() {
}

void fun_40fc86() {
}

void fun_40fc92() {
}

void fun_40fc9e() {
}

void fun_40fcaa() {
}

void fun_40fcb6() {
}

void fun_40fcc2() {
    __asm__("por mm0, [edi]");
}

void fun_40fcce() {
}

void fun_40fcda() {
}

void fun_40fce6() {
}

void fun_40fcf2() {
}

void fun_40fcfe() {
}

void fun_40fd0a() {
}

void fun_40fd16() {
    __asm__("fsub st3, st0");
}

void fun_40fd22() {
    __asm__("fldlpi ");
}

void fun_40fd2e() {
}

void fun_40fd3a() {
}

void fun_40fd46() {
}

void fun_40fd52() {
}

void fun_40fd5e() {
}

void fun_40fd6a() {
}

void fun_40fd76() {
}

void fun_40fd82() {
}

void fun_40fd8e() {
}

void fun_40fd9a() {
}

void fun_40fda6() {
}

void fun_40fdb2() {
}

void fun_40fdbe(signed char cl) {
}

void fun_40fdca() {
    __asm__("fsub st3, st0");
}

void fun_40fde2() {
}

void fun_40fdee() {
}

void fun_40fdfa(signed char cl) {
}

void fun_40fe06() {
}

void fun_40fe12() {
}

void fun_40fe1e() {
}

void fun_40fe2a() {
    __asm__("fucomp st3");
}

void fun_40fe36() {
}

void fun_40fe42() {
}

void fun_40fe4e() {
}

void fun_40fe5a() {
    __asm__("fnstcw word [edx+0x40]");
}

void fun_40fe6b() {
}

void fun_40fe77() {
}

void fun_40fe83(int32_t ecx) {
    signed char ah2;

    *reinterpret_cast<signed char*>(ecx + 0x42e5cc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx + 0x42e5cc) - ah2);
}

void fun_40feab() {
}

void fun_40feb7() {
}

struct s1048 {
    signed char[117] pad117;
    signed char f117;
};

void fun_40fec3(signed char cl) {
    struct s1048* edx2;

    edx2->f117 = cl;
}

void fun_40fed2() {
}

void fun_40fede() {
}

void fun_40feea() {
}

void fun_40fef6() {
}

void fun_40ff02() {
}

void fun_40ff0e() {
    __asm__("fucomp st3");
}

void fun_40ff1a() {
}

void fun_40ff26() {
}

void fun_40ff32() {
}

void fun_40ff3e() {
}

void fun_40ff4a() {
}

void fun_40ff56() {
}

void fun_40ff62() {
}

void fun_40ff6e() {
    __asm__("por mm0, [edi]");
}

void fun_40ff7a() {
}

void fun_40ff86() {
}

void fun_40ff92() {
}

void fun_40ff9e() {
}

void fun_40ffaa() {
}

void fun_40ffb6() {
}

void fun_40ffc2() {
}

void fun_40ffce() {
}

void fun_40ffe6() {
    __asm__("fsubr st0, st3");
}

void fun_40fff2() {
}

void fun_40fffe() {
}

void fun_41000a() {
}

void fun_410016() {
    __asm__("fsubp st3, st0");
}

void fun_410022() {
    __asm__("fsubp st3, st0");
}

void fun_41002e() {
}

void fun_41003a() {
}

void fun_410046() {
}

void fun_410052() {
}

void fun_41005e() {
}

void fun_41006a() {
}

void fun_410076() {
}

void fun_410082() {
}

void fun_41009a() {
}

void fun_4100a6() {
}

void fun_4100b2() {
}

void fun_4100be() {
}

void fun_4100ca() {
}

void fun_4100d6() {
    __asm__("fsubp st3, st0");
}

void fun_4100e2() {
}

void fun_4100ee(signed char cl) {
}

void fun_4100fa() {
}

void fun_410106() {
}

void fun_410112() {
}

void fun_41011e() {
}

void fun_41012a() {
}

void fun_410136() {
    int32_t eax1;
    int32_t eax2;
    signed char dl3;
    uint1_t cf4;

    *reinterpret_cast<unsigned char*>(eax1 - 0x75) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax2 - 0x75) + dl3) + cf4);
}

void fun_410153() {
}

void fun_41016b() {
}

void fun_410177() {
    __asm__("fsub st3, st0");
}

void fun_410183() {
    __asm__("fucomp st3");
}

void fun_41018f() {
}

void fun_41019b() {
}

void fun_4101a7() {
    __asm__("fsubr st0, st3");
}

void fun_4101b3() {
}

void fun_4101bf() {
}

void fun_4101cb() {
}

void fun_4101d7() {
}

void fun_4101e3() {
}

void fun_4101ef() {
}

void fun_4101fb() {
}

void fun_410207() {
}

void fun_410213() {
}

void fun_41021f() {
}

void fun_410237() {
}

void fun_410243() {
}

void fun_41024f() {
}

void fun_41025b() {
}

void fun_410267() {
}

void fun_410273() {
}

void fun_41028b() {
}

void fun_410297() {
}

void fun_4102a3() {
}

void fun_4102af(signed char cl) {
}

void fun_4102bb() {
}

void fun_4102c7() {
    __asm__("fldlpi ");
}

void fun_4102d3() {
}

void fun_4102df() {
    __asm__("fucomi st0, st3");
}

void fun_4102eb() {
}

void fun_4102f7() {
}

void fun_410303() {
}

void fun_41030f() {
    __asm__("fucomi st0, st3");
}

void fun_41031b() {
}

void fun_410327() {
}

void fun_410333() {
}

void fun_41033f() {
    __asm__("fsubp st3, st0");
}

void fun_41034b() {
}

void fun_410363() {
    __asm__("fsubr st0, st3");
}

void fun_41036f() {
}

void fun_41037b() {
}

void fun_410387() {
}

void fun_410393() {
}

void fun_41039f() {
}

void fun_4103ab() {
}

void fun_4103b7(int32_t ecx) {
}

void fun_4103de() {
}

void fun_4103f6() {
    __asm__("fsubr st0, st3");
}

void fun_410402() {
}

void fun_41040e() {
}

void fun_41041a() {
}

void fun_410426() {
}

void fun_410432() {
}

void fun_41043e() {
}

void fun_41044a() {
}

void fun_410456() {
    __asm__("arpl bx, bp");
}

void fun_410462() {
}

void fun_41046e(signed char cl) {
}

void fun_41047a() {
}

void fun_410486() {
}

void fun_410492() {
}

void fun_4104aa() {
}

int32_t gd28b07eb;

void fun_4104c2() {
    int32_t eax1;

    gd28b07eb = eax1;
}

void fun_4104ce() {
}

void fun_4104da() {
}

void fun_4104e6(signed char cl) {
}

void fun_4104f2() {
}

void fun_4104fe() {
}

int32_t g83c58b50;

void fun_41050a() {
    signed char al1;

    *reinterpret_cast<signed char*>(&g83c58b50) = al1;
}

void fun_410527() {
}

void fun_410533() {
}

void fun_41053f() {
}

void fun_41054b() {
    __asm__("fsubr st0, st3");
}

int32_t gff8b07eb;

void fun_410557() {
    int32_t eax1;

    gff8b07eb = eax1;
}

void fun_410563() {
}

void fun_41056f() {
}

void fun_41057b() {
}

void fun_410587() {
}

void fun_410593() {
}

void fun_41059f() {
    __asm__("arpl bx, bp");
}

void fun_4105ab(signed char cl) {
}

void fun_4105b7() {
}

void fun_4105c3() {
}

void fun_4105cf() {
}

void fun_4105db() {
}

void fun_4105f3() {
}

void fun_41060b() {
}

void fun_410617() {
}

void fun_410623() {
}

void fun_41062f() {
}

void fun_41063b() {
    __asm__("arpl bx, bp");
}

void fun_410647() {
    __asm__("fsubp st3, st0");
}

void fun_410653(int32_t ecx) {
}

struct s1049 {
    signed char[12] pad12;
    int32_t* f12;
};

void fun_410690(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10, int32_t a11, int32_t a12, int32_t a13, int32_t a14, int32_t a15, int32_t a16, int32_t a17, int32_t a18, int32_t a19, int32_t a20, int32_t a21, int32_t a22, int32_t a23, int32_t a24, int32_t a25, int32_t a26, int32_t a27, int32_t a28, int32_t a29, int32_t a30, int32_t a31, int32_t a32, int32_t a33, int32_t a34, int32_t a35, int32_t a36, int16_t a37) {
    uint1_t zf38;
    unsigned char ch39;
    unsigned char bl40;
    int1_t sf41;
    uint1_t less_or_equal42;
    struct s1049* ebp43;
    int32_t ecx44;
    int32_t* esi45;
    int32_t* edi46;

    zf38 = reinterpret_cast<uint1_t>((ch39 & bl40) == 0);
    sf41 = __intrinsic();
    less_or_equal42 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf41) | zf38);
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while ((ebp43 = ebp43, !sf41) && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    do {
    } while (!sf41 && sf41);
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    do {
    } while (!1 && !0);
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while ((ebp43 = ebp43, less_or_equal42) && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while ((ebp43 = ebp43, !sf41) && sf41) {
    }
    while ((ebp43 = ebp43, !1) && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while ((ebp43 = ebp43, !0) && !1) {
    }
    while (!sf41 && sf41) {
    }
    while ((ebp43 = ebp43, !1) && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    if (!zf38) 
        goto 0x41139c;
    ecx44 = 16;
    esi45 = ebp43->f12;
    edi46 = reinterpret_cast<int32_t*>(&(ebp43 - 4)->pad12);
    while (ecx44) {
        --ecx44;
        *edi46 = *esi45;
        ++edi46;
        ++esi45;
    }
    do {
    } while (!0 && !1);
    do {
    } while (!sf41 && sf41);
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    do {
    } while (!0 && !1);
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    do {
    } while (less_or_equal42 && !less_or_equal42);
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    do {
    } while (!0 && !1);
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    do {
    } while (!0 && !1);
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    do {
    } while (less_or_equal42 && !less_or_equal42);
    while (!0 && !1) {
    }
    while (!sf41 && sf41) {
    }
    while (!1 && !0) {
    }
    while (less_or_equal42 && !less_or_equal42) {
    }
    __asm__("rcl byte [esi+0x50], 0xe8");
}

void fun_41069c() {
}

void fun_4106a8() {
}

void fun_4106b4() {
}

void fun_4106c0(signed char cl) {
}

void fun_4106cc() {
}

void fun_4106d8() {
}

void fun_4106f0() {
    __asm__("fucomip st0, st3");
}

void fun_4106fc() {
}

void fun_410708() {
}

void fun_410714() {
}

void fun_410720() {
}

void fun_41072c() {
}

void fun_410738() {
}

void fun_410744() {
}

void fun_410750() {
    __asm__("por mm0, [edi]");
}

void fun_41075c() {
}

void fun_410768() {
}

void fun_410774() {
}

void fun_410780() {
    __asm__("fucomp st3");
}

void fun_41078c() {
}

void fun_410798() {
}

void fun_4107a4() {
}

void fun_4107bc() {
}

void fun_4107c8() {
}

void fun_4107d4() {
}

void fun_4107e0() {
}

void fun_4107ec() {
}

void fun_4107f8() {
}

int32_t ged8b07eb;

void fun_410804() {
    int32_t eax1;

    ged8b07eb = eax1;
}

void fun_410810() {
}

void fun_41081c() {
}

void fun_410828() {
}

void fun_410834() {
}

int32_t gf68b07eb;

void fun_410840() {
    int32_t eax1;

    gf68b07eb = eax1;
}

void fun_41084c() {
}

void fun_410858() {
}

void fun_410864() {
}

void fun_410870(signed char cl) {
}

void fun_41087c() {
}

void fun_410888() {
}

void fun_410894() {
}

void fun_4108a0() {
}

void fun_4108ac() {
}

void fun_4108b8() {
}

void fun_4108c4() {
}

void fun_4108d0() {
}

void fun_4108dc() {
}

void fun_4108e8(int32_t ecx) {
}

void fun_41091a() {
}

void fun_410926() {
}

void fun_410932() {
}

void fun_41093e() {
}

int32_t gc08b07eb;

void fun_41094a() {
    signed char al1;

    *reinterpret_cast<signed char*>(&gc08b07eb) = al1;
}

void fun_410956() {
    __asm__("fsubr st0, st3");
}

void fun_410962() {
}

void fun_41096e() {
}

void fun_41097a() {
}

void fun_410986() {
    __asm__("fsubr st0, st3");
}

void fun_41099e() {
}

int32_t gdb8b07eb;

void fun_4109aa() {
    int32_t eax1;

    gdb8b07eb = eax1;
}

void fun_4109c2() {
}

void fun_4109ce() {
}

void fun_4109da() {
}

void fun_4109e6() {
    __asm__("por mm0, [edi]");
}

void fun_4109f2() {
}

void fun_4109fe() {
}

void fun_410a0a() {
}

void fun_410a16() {
}

void fun_410a22() {
}

void fun_410a2e() {
}

void fun_410a3a() {
}

void fun_410a46() {
}

void fun_410a52() {
}

void fun_410a5e() {
}

void fun_410a6a() {
}

void fun_410a76() {
    __asm__("fucomp st3");
}

void fun_410a82() {
}

void fun_410a8e() {
}

void fun_410a9a() {
}

void fun_410aa6() {
}

void fun_410abe() {
}

void fun_410aca() {
    __asm__("fsub st3, st0");
}

void fun_410ad6() {
}

void fun_410aee() {
}

void fun_410afa() {
}

void fun_410b06() {
}

void fun_410b12() {
}

void fun_410b1e() {
    __asm__("fsubp st3, st0");
}

void fun_410b2a() {
    __asm__("fucomp st3");
}

void fun_410b42() {
}

void fun_410b4e() {
}

void fun_410b5a() {
}

void fun_410b66() {
}

void fun_410b72(unsigned char cl) {
    int32_t ebx2;
    int32_t ebx3;

    *reinterpret_cast<unsigned char*>(ebx2 + 0x458d1075) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx3 + 0x458d1075) ^ cl);
}

void fun_410b97() {
}

void fun_410ba3(signed char cl) {
}

void fun_410baf() {
    int32_t eax1;

    ged8b07eb = eax1;
}

void fun_410bc7() {
}

void fun_410bd3() {
}

void fun_410bdf() {
}

void fun_410beb() {
}

void fun_410bf7() {
}

void fun_410c03() {
}

void fun_410c0f() {
}

void fun_410c1b() {
}

void fun_410c27() {
}

void fun_410c33() {
}

void fun_410c3f() {
}

void fun_410c4b(signed char cl) {
}

void fun_410c57() {
}

void fun_410c63() {
}

void fun_410c6f() {
}

void fun_410c7b() {
}

void fun_410c87() {
}

void fun_410c93() {
}

void fun_410c9f() {
    __asm__("fsub st3, st0");
}

void fun_410cb7() {
}

void fun_410cc3() {
}

void fun_410cdb() {
}

void fun_410ce7() {
}

void fun_410cf3() {
}

void fun_410cff() {
    __asm__("fsub st3, st0");
}

void fun_410d0b() {
}

void fun_410d17() {
}

void fun_410d23() {
    __asm__("fsubp st3, st0");
}

void fun_410d2f() {
}

void fun_410d3b() {
}

void fun_410d47() {
}

void fun_410d53() {
}

int32_t g69e85356;

void fun_410d5f() {
    int32_t eax1;

    g69e85356 = eax1;
}

void fun_410d77() {
}

void fun_410d83() {
}

void fun_410d8f() {
}

void fun_410d9b() {
}

void fun_410da7() {
}

void fun_410db3() {
}

void fun_410dbf() {
}

void fun_410dcb() {
}

void fun_410dd7() {
}

void fun_410de3() {
}

void fun_410def() {
}

void fun_410dfb() {
}

void fun_410e07() {
}

void fun_410e13() {
}

void fun_410e1f() {
    __asm__("por mm0, [edi]");
}

void fun_410e2b() {
}

void fun_410e43() {
}

void fun_410e4f() {
}

void fun_410e5b() {
    __asm__("arpl bx, bp");
}

void fun_410e67() {
    __asm__("fsubp st3, st0");
}

void fun_410e73() {
}

void fun_410e7f() {
}

void fun_410e8b() {
    __asm__("fsub st3, st0");
}

void fun_410e97() {
}

void fun_410ea3() {
}

void fun_410eb4() {
}

void fun_410ec0() {
}

void fun_410ed8() {
}

void fun_410ee4() {
    __asm__("fsubr st0, st3");
}

void fun_410ef0() {
}

void fun_410efc() {
}

void fun_410f08() {
}

void fun_410f14() {
}

void fun_410f20() {
    __asm__("fsub st3, st0");
}

void fun_410f2c() {
}

void fun_410f38() {
}

void fun_410f44() {
}

void fun_410f50() {
}

void fun_410f5c() {
}

void fun_410f68() {
}

void fun_410f74() {
}

void fun_410f80() {
}

void fun_410f8c() {
}

void fun_410f98() {
    __asm__("por mm0, [edi]");
}

void fun_410fa4() {
    __asm__("por mm0, [edi]");
}

void fun_410fb0() {
    __asm__("fucomp st3");
}

void fun_410fbc() {
}

void fun_410fc8() {
}

void fun_410fd4() {
}

void fun_410fe0(int32_t ecx) {
}

void fun_410ffd() {
}

void fun_411009() {
}

void fun_411015() {
}

void fun_411021() {
}

void fun_41102d() {
}

void fun_411039() {
    __asm__("fsubp st3, st0");
}

void fun_411045() {
}

void fun_411051() {
}

void fun_41105d() {
}

void fun_411069() {
}

void fun_411075() {
}

void fun_411081() {
}

void fun_41108d() {
}

void fun_411099() {
}

void fun_4110a5() {
    __asm__("fldlpi ");
}

void fun_4110b1() {
}

void fun_4110bd() {
}

void fun_4110c9() {
}

void fun_4110d5() {
}

void fun_4110e1() {
}

void fun_4110ed() {
}

int32_t gc98b07eb;

void fun_4110f9() {
    int32_t eax1;

    gc98b07eb = eax1;
}

void fun_411105() {
}

void fun_411111() {
}

void fun_41111d() {
}

void fun_411129() {
}

void fun_411135() {
    signed char al1;

    *reinterpret_cast<signed char*>(&gf68b07eb) = al1;
}

void fun_411141() {
}

void fun_41114d() {
    __asm__("fucomi st0, st3");
}

void fun_411159(signed char cl) {
}

void fun_411165() {
}

void fun_411171() {
    __asm__("fsubp st3, st0");
}

void fun_41117d() {
    __asm__("fucomp st3");
}

void fun_411189() {
}

void fun_411195() {
}

void fun_4111a1() {
}

void fun_4111b9() {
    __asm__("fldlpi ");
}

void fun_4111c5() {
}

void fun_4111d1() {
}

void fun_4111dd() {
    __asm__("fsubp st3, st0");
}

void fun_4111f5() {
}

void fun_411201() {
}

void fun_41120d() {
}

void fun_411219() {
}

void fun_411225() {
}

void fun_411231() {
}

void fun_41123d() {
}

void fun_411249(signed char cl) {
}

void fun_411255() {
}

void fun_411261() {
}

void fun_41126d() {
}

void fun_411279() {
}

void fun_411285() {
}

void fun_411291() {
}

void fun_41129d() {
}

void fun_4112a9() {
}

void fun_4112b5() {
}

void fun_4112c1() {
}

void fun_4112cd() {
}

void fun_4112d9() {
}

void fun_4112e5() {
    __asm__("fsubp st3, st0");
}

void fun_4112f1() {
    __asm__("fucomip st0, st3");
}

void fun_4112fd(signed char cl) {
}

void fun_411309() {
    int32_t eax1;

    gff8b07eb = eax1;
}

void fun_411315() {
}

void fun_411321() {
}

void fun_41132d() {
}

void fun_411339() {
}

void fun_411345() {
}

void fun_411351() {
    signed char al1;

    *reinterpret_cast<signed char*>(&gf68b07eb) = al1;
}

void fun_41135d() {
}

void fun_411369() {
}

void fun_411381() {
}

void fun_41138d() {
}

void fun_411399() {
}

void fun_411550(uint32_t ecx, int32_t a2, signed char* a3) {
    uint32_t ecx4;
    void** v5;
    void** ebx6;
    void** v7;
    void** esi8;
    void*** esp9;
    void** v10;
    void** edi11;
    signed char* edi12;
    uint32_t ecx13;
    uint32_t eax14;
    uint32_t ecx15;
    uint32_t ecx16;
    void** ecx17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    signed char v23;
    signed char v24;
    signed char v25;
    int32_t eax26;
    int32_t* v27;
    int32_t v28;

    ecx4 = 0xffffffff;
    v5 = ebx6;
    v7 = esi8;
    esp9 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x104 - 4 - 4 - 4);
    v10 = edi11;
    edi12 = a3;
    do {
        if (!ecx4) 
            break;
        --ecx4;
        ++edi12;
    } while (*edi12);
    ecx13 = ~ecx4;
    eax14 = ecx13;
    ecx15 = ecx13 >> 2;
    while (ecx15) {
        --ecx15;
    }
    ecx16 = eax14 & 3;
    while (ecx16) {
        --ecx16;
    }
    ecx17 = reinterpret_cast<void**>(esp9 + 12);
    fun_41e830(ecx17, ecx17, v10, v7, v5, v18, v19, v20, v21, v22);
    if (v23) {
        do {
            if (v24 == 92) {
            }
        } while (v25);
    }
    eax26 = reinterpret_cast<int32_t>(CreateFileMappingA());
    *v27 = eax26;
    if (eax26) {
        MapViewOfFile(eax26, 2, 0, 0, 0);
    }
    goto v28;
}

void fun_413742() {
}

void fun_413ab1() {
}

void fun_413abd() {
    signed char al1;

    *reinterpret_cast<signed char*>(&ged8b07eb) = al1;
}

void fun_413ac9() {
}

void fun_413ad5() {
    __asm__("por mm0, [edi]");
}

void fun_413ae1() {
}

void fun_413aed() {
}

void fun_413af9() {
}

void fun_413b05() {
}

struct s1050 {
    signed char[1] pad1;
    int32_t f1;
};

struct s1051 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_413b11() {
    struct s1050* edx1;
    struct s1051* edx2;

    edx1->f1 = edx2->f1 + 0x75;
}

void fun_413b37() {
}

void fun_413b43() {
}

void fun_413b4f() {
    __asm__("fsub dword [esi-0x75]");
}

void fun_413b74() {
    signed char* eax1;
    int32_t eax2;
    int1_t cf3;
    uint1_t less_or_equal4;
    int1_t cf5;
    int1_t sf6;
    int1_t of7;

    eax1 = reinterpret_cast<signed char*>(eax2 - 0x2474f815);
    cf3 = __intrinsic();
    less_or_equal4 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax1) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(eax1 == 0));
    while (cf3 && !cf3) {
    }
    while (less_or_equal4 && !less_or_equal4) {
    }
    __asm__("clc ");
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
    cf5 = __intrinsic();
    sf6 = *eax1 < 0;
    of7 = __intrinsic();
    do {
    } while (!of7 && of7);
    while (!sf6 && sf6) {
    }
    while (cf5 && !cf5) {
    }
    __asm__("hlt ");
}

void fun_413b80() {
}

void fun_413b8c() {
}

void fun_413b9e() {
}

void fun_413baa() {
    __asm__("fucomip st0, st3");
}

void fun_413bb6() {
    __asm__("fadd st7, st0");
}

struct s1052 {
    signed char[8] pad8;
    void** f8;
};

void fun_fc8ec807(struct s64* a1);

void fun_ec31829c();

void fun_413bd7(void** ecx, int16_t a2) {
    int1_t cf3;
    uint32_t ebx4;
    uint32_t ebp5;
    int1_t sf6;
    int32_t ebx7;
    int32_t ebp8;
    int1_t of9;
    int1_t less_or_equal10;
    int32_t ebx11;
    int32_t ebp12;
    struct s64* ebp13;
    void** edx14;
    void** v15;
    void** ecx16;
    void** v17;
    void** eax18;
    uint1_t cf19;
    int1_t sf20;
    int1_t of21;
    int1_t less_or_equal22;
    struct s1052* ebp23;
    void** v24;
    void** v25;
    void** ecx26;
    uint32_t v27;
    int16_t v28;
    signed char* eax29;
    uint32_t edx30;
    int1_t cf31;
    uint1_t zf32;
    int1_t sf33;
    uint1_t less_or_equal34;
    int32_t ebx35;
    int32_t ebx36;
    int32_t ebx37;

    cf3 = ebx4 < ebp5;
    sf6 = ebx7 < ebp8;
    of9 = __intrinsic();
    less_or_equal10 = ebx11 <= ebp12;
    while ((ebp13 = ebp13, !of9) && of9) {
    }
    do {
    } while (!sf6 && sf6);
    while (cf3 && !cf3) {
    }
    do {
    } while (less_or_equal10 && !less_or_equal10);
    while (!of9 && of9) {
    }
    __asm__("in al, dx");
    edx14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp13) + 0xffffffe4);
    v15 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp13) - 12);
    ecx16 = ebp13->f8;
    eax18 = fun_41fa00(ecx16, 1, v15, edx14, ecx, v17);
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp13) - 12) = eax18;
    cf19 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp13) - 12)) < reinterpret_cast<unsigned char>(0));
    sf20 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp13) - 12)) < reinterpret_cast<signed char>(0);
    of21 = __intrinsic();
    less_or_equal22 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp13) - 12)) <= reinterpret_cast<signed char>(0);
    if (!*reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp13) - 12)) 
        goto 0x413d38;
    do {
    } while (!sf20 && sf20);
    while (cf19 && !cf19) {
    }
    do {
    } while (less_or_equal22 && !less_or_equal22);
    while (!of21 && of21) {
    }
    while ((ebp13 = ebp13, !sf20) && sf20) {
    }
    while (cf19 && !cf19) {
    }
    while ((ecx16 = ecx16, less_or_equal22) && !less_or_equal22) {
    }
    while ((edx14 = edx14, !of21) && of21) {
    }
    while (!sf20 && sf20) {
    }
    *reinterpret_cast<unsigned char*>(edx14 + 0xffffff8d) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx14 + 0xffffff8d) + *reinterpret_cast<signed char*>(&edx14)) + cf19);
    ebp23 = reinterpret_cast<struct s1052*>(reinterpret_cast<int32_t>(ebp13) + 1);
    fun_fc8ec807(ebp13);
    v24 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp23) - 20);
    v25 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp23) - 28);
    ecx26 = ebp23->f8;
    eax29 = fun_413f78(ecx26, ecx26, v25, v24, ecx16, ebp13, v27, v28);
    *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(ebp23) - 8) = *reinterpret_cast<uint16_t*>(&eax29);
    edx30 = *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(ebp23) - 8) & 0xffff;
    cf31 = 0;
    zf32 = reinterpret_cast<uint1_t>(edx30 == 0);
    sf33 = reinterpret_cast<int32_t>(edx30) < reinterpret_cast<int32_t>(0);
    less_or_equal34 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf33) | zf32);
    if (zf32) {
        do {
        } while (!1 && !0);
        while (less_or_equal34 && !less_or_equal34) {
        }
        while (!0 && !1) {
        }
        *reinterpret_cast<unsigned char*>(&ecx26) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx26) >> 0x8a);
        *eax29 = reinterpret_cast<signed char>(*eax29 + *reinterpret_cast<signed char*>(&eax29));
        *reinterpret_cast<unsigned char*>(ebx35 + 0x4503f045) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx36 + 0x4503f045) + *reinterpret_cast<unsigned char*>(&ecx26));
        cf31 = __intrinsic();
        sf33 = *reinterpret_cast<signed char*>(ebx37 + 0x4503f045) < 0;
    }
    fun_ec31829c();
    while (!sf33 && sf33) {
    }
    while (cf31 && !cf31) {
    }
    *reinterpret_cast<unsigned char*>(ecx26 + 0xdce9f44d) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx26 + 0xdce9f44d) - *reinterpret_cast<unsigned char*>(&ecx26));
}

void fun_413bef() {
    __asm__("fsubp st3, st0");
}

void fun_413c07() {
}

void fun_413c13() {
    int32_t ebp1;
    int32_t ebp2;

    *reinterpret_cast<unsigned char*>(ebp1 - 0x72af03bb) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp2 - 0x72af03bb) | 77);
}

void fun_413c4a() {
}

void fun_413c62() {
    __asm__("por mm0, [edi]");
}

void fun_413c6e() {
    __asm__("fsub st3, st0");
}

void fun_413c7a() {
}

void fun_413c86() {
}

void fun_413c92() {
}

void fun_413c9e() {
}

void fun_413caa() {
}

void fun_413ce8() {
}

void fun_413cf4() {
}

void fun_413d00() {
}

void fun_413d1d() {
}

void fun_413d29() {
    __asm__("fmul qword [ebx+0xc183f44d]");
}

void fun_413d56() {
}

void fun_413d62() {
}

void fun_413d6e(signed char cl) {
    int32_t ebx2;
    int32_t ebx3;
    uint1_t cf4;

    *reinterpret_cast<unsigned char*>(ebx2 + 0x4d8b0c45) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx3 + 0x4d8b0c45) + cl) + cf4);
}

void fun_413d82() {
}

void fun_413d8e() {
    int32_t esi1;
    int32_t esi2;

    *reinterpret_cast<int32_t*>(esi1 - 72) = *reinterpret_cast<int32_t*>(esi2 - 72) + reinterpret_cast<int32_t>(__zero_stack_offset());
}

void fun_413dc1() {
    __asm__("fucomi st0, st3");
}

void fun_413dd9() {
}

void fun_413de5() {
}

void fun_413df1(unsigned char cl) {
    int32_t ebp2;
    int32_t ebp3;

    *reinterpret_cast<unsigned char*>(ebp2 - 0x72af03bb) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp3 - 0x72af03bb) ^ cl);
}

void fun_413e48() {
    __asm__("fsub st3, st0");
}

void fun_413e54() {
    __asm__("fldlpi ");
}

void fun_413e7f() {
}

void fun_413e8b() {
}

void fun_413e97() {
}

void fun_413ea3() {
}

void fun_413eaf() {
    __asm__("fisub dword [esi+0x33]");
}

void fun_413ec3(signed char cl) {
}

void fun_413ecf() {
}

void fun_413edb() {
}

void fun_413ee7() {
    int32_t eax1;

    gc98b07eb = eax1;
}

void fun_413ef3() {
}

void fun_413eff() {
}

void fun_413f0b() {
}

void fun_413f17() {
}

void fun_413f23() {
    int32_t esi1;
    int32_t esi2;
    signed char ah3;
    uint1_t cf4;

    *reinterpret_cast<unsigned char*>(esi1 - 0x75) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi2 - 0x75) + ah3) + cf4);
}

void fun_413f54() {
}

void fun_413f60() {
}

void fun_413f6c() {
    int32_t esi1;
    int32_t esi2;

    *reinterpret_cast<uint32_t*>(esi1 - 0x75) = *reinterpret_cast<uint32_t*>(esi2 - 0x75) | reinterpret_cast<uint32_t>(__zero_stack_offset());
}

void fun_413f9d() {
}

void fun_413fa9() {
}

void fun_413fb5() {
}

void fun_413fc1() {
}

void fun_413fd9() {
    __asm__("fucomi st0, st3");
}

void fun_413fe5() {
    __asm__("arpl bx, bp");
}

void fun_413ff1() {
}

void fun_413ffd() {
}

void fun_414009() {
}

void fun_414015() {
}

void fun_414021() {
}

void fun_41402d() {
}

void fun_414039() {
}

void fun_414045() {
}

void fun_414051() {
}

void fun_41405d() {
}

void fun_414069() {
    int32_t eax1;

    gc08b07eb = eax1;
}

void fun_414075() {
}

void fun_414081() {
    __asm__("fucomi st0, st3");
}

void fun_41408d() {
}

void fun_4140b1() {
}

void fun_4140bd() {
}

void fun_4140c9() {
}

void fun_4140d5() {
}

void fun_4140e1() {
}

void fun_4140f9() {
    __asm__("fild word [ebx+0xf00107d]");
}

void fun_414143() {
}

void fun_41414f() {
}

void fun_41415b() {
}

void fun_414173() {
}

void fun_41417f() {
}

void fun_4141d9() {
}

void fun_4141e5() {
}

void fun_4141f1() {
}

void fun_4141fd() {
}

void fun_414209() {
}

void fun_414215(signed char cl) {
}

void fun_414288() {
    __asm__("fldlpi ");
}

void fun_414294() {
}

void fun_4142a0() {
}

void fun_4142ac() {
}

void fun_4142b8() {
}

void fun_4142c4() {
}

void fun_4142d0() {
    signed char al1;

    *reinterpret_cast<signed char*>(&gc98b07eb) = al1;
}

void fun_4142dc() {
}

void fun_4142e8() {
    int32_t esi1;
    signed char ah2;

    *reinterpret_cast<signed char*>(esi1 - 0x75) = ah2;
}

void fun_414312() {
}

void fun_41431e() {
}

void fun_41432a() {
}

void fun_414336() {
}

void fun_41434e(signed char cl) {
}

void fun_414362(int32_t a1, int16_t a2) {
    int1_t of3;
    int1_t of4;
    int1_t sf5;
    int1_t sf6;
    int1_t cf7;
    int1_t cf8;
    int1_t less_or_equal9;
    int1_t less_or_equal10;
    int1_t of11;
    int1_t of12;
    int1_t sf13;
    int1_t sf14;

    while (!of3 && of4) {
    }
    while (!sf5 && sf6) {
    }
    while (cf7 && !cf8) {
    }
    while (less_or_equal9 && !less_or_equal10) {
    }
    while (!of11 && of12) {
    }
    while (!sf13 && sf14) {
    }
}

void fun_41436c() {
    __asm__("fldlpi ");
}

void fun_414378() {
}

void fun_414384() {
}

void fun_414390() {
}

void fun_41439c() {
    __asm__("fsub st3, st0");
}

void fun_4143a8() {
}

void fun_4143dd(int32_t a1) {
    int1_t cf2;
    unsigned char bl3;
    unsigned char ch4;
    int1_t sf5;
    signed char bl6;
    signed char ch7;
    int1_t of8;
    int1_t less_or_equal9;
    signed char bl10;
    signed char ch11;
    void* esp12;
    void* esp13;
    void* esp14;
    void* esp15;
    void* esp16;
    uint32_t eax17;
    uint1_t less_or_equal18;
    int1_t sf19;

    cf2 = bl3 < ch4;
    sf5 = bl6 < ch7;
    of8 = __intrinsic();
    less_or_equal9 = bl10 <= ch11;
    esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 2);
    while (less_or_equal9 && !less_or_equal9) {
    }
    esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp12) + 2);
    while (!of8 && of8) {
    }
    esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) + 2);
    while (!sf5 && sf5) {
    }
    esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) + 2);
    while (cf2 && !cf2) {
    }
    __asm__("lds eax, [ebx+0x8b04c0]");
    esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp15) + (eax17 >> 31 << 4));
    less_or_equal18 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esp16) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(esp16 == 0));
    do {
    } while (less_or_equal18 && !less_or_equal18);
    sf19 = __intrinsic();
    while (!0 && !1) {
    }
    while (!sf19 && sf19) {
    }
}

void fun_4143e9() {
}

void fun_4143f5() {
    __asm__("fucomp st3");
}

void fun_414401() {
}

void fun_41440d() {
    __asm__("fist word [eax-0x75]");
}

void fun_41442a() {
    int32_t ebx1;
    int32_t ebx2;
    int32_t eax3;
    uint1_t cf4;

    *reinterpret_cast<uint32_t*>(ebx1 + 0x7400187d) = *reinterpret_cast<int32_t*>(ebx2 + 0x7400187d) + eax3 + cf4;
}

void fun_41443c() {
    __asm__("por mm0, [edi]");
}

void fun_414448() {
}

struct s1053 {
    signed char f0;
    signed char[132843596] pad132843597;
    int32_t f132843597;
};

int32_t fun_41445e(int32_t ecx, struct s1053* a2, uint32_t a3, int32_t a4, int32_t a5, int32_t a6, int16_t a7) {
    void* esp8;
    int1_t cf9;
    int1_t cf10;
    int1_t less_or_equal11;
    int1_t less_or_equal12;
    int1_t of13;
    int1_t of14;
    void* esp15;
    int1_t sf16;
    int1_t sf17;
    void* esp18;
    int1_t cf19;
    int1_t cf20;
    int1_t less_or_equal21;
    int1_t less_or_equal22;
    void* esp23;
    signed char* eax24;
    int1_t of25;
    int1_t of26;
    int1_t sf27;
    int1_t sf28;
    void* esp29;
    int1_t cf30;
    int1_t cf31;
    int1_t less_or_equal32;
    int1_t less_or_equal33;
    int1_t of34;
    int1_t of35;
    int1_t sf36;
    int1_t sf37;
    int1_t cf38;
    int1_t cf39;
    int1_t less_or_equal40;
    int1_t less_or_equal41;
    int1_t of42;
    int1_t of43;
    int1_t sf44;
    int1_t sf45;
    int1_t cf46;
    int1_t cf47;
    void* esp48;
    int1_t less_or_equal49;
    int1_t less_or_equal50;
    void* esp51;
    int1_t of52;
    int1_t of53;
    void* esp54;
    int1_t sf55;
    int1_t sf56;
    void* esp57;
    int1_t cf58;
    int1_t cf59;
    int1_t less_or_equal60;
    int1_t less_or_equal61;
    void* esp62;
    int1_t of63;
    int1_t of64;
    void* esp65;
    int1_t sf66;
    int1_t sf67;
    int1_t cf68;
    int1_t cf69;
    void* esp70;
    int1_t less_or_equal71;
    int1_t less_or_equal72;
    void* esp73;
    int1_t of74;
    int1_t of75;
    void* esp76;
    int1_t sf77;
    int1_t sf78;
    void* esp79;
    int1_t cf80;
    int1_t cf81;
    void* esp82;
    int1_t less_or_equal83;
    int1_t less_or_equal84;
    void* esp85;
    int1_t of86;
    int1_t of87;
    int1_t sf88;
    int1_t sf89;
    void* esp90;
    int1_t cf91;
    int1_t cf92;
    void* esp93;
    int1_t less_or_equal94;
    int1_t less_or_equal95;
    void* esp96;
    int1_t of97;
    int1_t of98;
    int1_t sf99;
    int1_t sf100;
    int1_t sf101;
    uint1_t less_or_equal102;
    void* esp103;
    void* esp104;
    void* esp105;
    int32_t* esp106;
    int32_t* esp107;
    int1_t cf108;
    int1_t sf109;
    int1_t of110;
    uint1_t less_or_equal111;
    int32_t eax112;
    struct s1053* ecx113;
    int32_t edx114;
    int32_t edx115;
    int32_t eax116;
    int32_t eax117;
    int1_t cf118;
    int1_t of119;
    uint1_t less_or_equal120;
    int1_t cf121;
    int1_t sf122;
    int32_t edx123;
    uint1_t less_or_equal124;

    esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    do {
    } while (cf9 && !cf10);
    while (less_or_equal11 && !less_or_equal12) {
    }
    while (!of13 && of14) {
    }
    esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) + 2);
    while (!sf16 && sf17) {
    }
    esp18 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp15) + 2);
    while (cf19 && !cf20) {
    }
    while (less_or_equal21 && !less_or_equal22) {
    }
    esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp18) + 2);
    while ((eax24 = eax24, !of25) && of26) {
    }
    while (!sf27 && sf28) {
    }
    esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) + 2);
    while (cf30 && !cf31) {
    }
    while ((eax24 = eax24, less_or_equal32) && !less_or_equal33) {
    }
    while (!of34 && of35) {
    }
    while (!sf36 && sf37) {
    }
    while (cf38 && !cf39) {
    }
    while (less_or_equal40 && !less_or_equal41) {
    }
    while (!of42 && of43) {
    }
    while (!sf44 && sf45) {
    }
    while (cf46 && !cf47) {
    }
    esp48 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) + 2);
    while (less_or_equal49 && !less_or_equal50) {
    }
    esp51 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp48) + 2);
    while (!of52 && of53) {
    }
    esp54 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp51) + 2);
    while (!sf55 && sf56) {
    }
    esp57 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp54) + 2);
    while ((eax24 = eax24, cf58) && !cf59) {
    }
    while (less_or_equal60 && !less_or_equal61) {
    }
    esp62 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp57) + 2);
    while (!of63 && of64) {
    }
    esp65 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp62) + 2);
    while (!sf66 && sf67) {
    }
    do {
    } while (cf68 && !cf69);
    esp70 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp65) + 2);
    while (less_or_equal71 && !less_or_equal72) {
    }
    esp73 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp70) + 2);
    while (!of74 && of75) {
    }
    esp76 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp73) + 2);
    while (!sf77 && sf78) {
    }
    esp79 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp76) + 2);
    while (cf80 && !cf81) {
    }
    esp82 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp79) + 2);
    while (less_or_equal83 && !less_or_equal84) {
    }
    esp85 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp82) + 2);
    while ((eax24 = eax24, !of86) && of87) {
    }
    do {
    } while (!sf88 && sf89);
    esp90 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp85) + 2);
    while (cf91 && !cf92) {
    }
    esp93 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp90) + 2);
    while (less_or_equal94 && !less_or_equal95) {
    }
    esp96 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp93) + 2);
    while (!of97 && of98) {
    }
    while (!sf99 && sf100) {
    }
    *eax24 = reinterpret_cast<signed char>(*eax24 + *reinterpret_cast<signed char*>(&eax24));
    sf101 = reinterpret_cast<int32_t>(eax24) < reinterpret_cast<int32_t>(0);
    less_or_equal102 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf101) | reinterpret_cast<uint1_t>(eax24 == 0));
    if (less_or_equal102) {
        esp103 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp96) + 2);
        while ((eax24 = eax24, !0) && !1) {
        }
        esp104 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp103) + 2);
        while ((eax24 = eax24, !sf101) && sf101) {
        }
        esp105 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp104) + 2);
        while (!1 && !0) {
        }
        while (less_or_equal102 && !less_or_equal102) {
        }
        esp106 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp105) + 2);
        while (!0 && !1) {
        }
        __asm__("rol byte [ebx+ecx*4], 0x0");
        esp107 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp106) + (reinterpret_cast<uint32_t>(eax24) >> 31 << 4));
        cf108 = __intrinsic();
        sf109 = reinterpret_cast<int32_t>(esp107) < reinterpret_cast<int32_t>(0);
        of110 = __intrinsic();
        less_or_equal111 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf109 != of110) | reinterpret_cast<uint1_t>(esp107 == 0));
        eax112 = *esp107;
        do {
            eax112 = eax112;
        } while (!sf109 && sf109);
        while (cf108 && !cf108) {
        }
        while (less_or_equal111 && !less_or_equal111) {
        }
        while (!of110 && of110) {
        }
        while (!sf109 && sf109) {
        }
        while (cf108 && !cf108) {
        }
        return eax112;
    } else {
        ecx113 = a2;
        edx114 = 0;
        *reinterpret_cast<signed char*>(&edx114) = ecx113->f0;
        edx115 = edx114 * 0xfd379ab1;
        eax116 = g42e4f8;
        eax117 = eax116 + edx115;
        cf118 = __intrinsic();
        of119 = __intrinsic();
        less_or_equal120 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(eax117 < 0 != of119) | reinterpret_cast<uint1_t>(eax117 == 0));
        g42e4f8 = eax117;
        do {
        } while (cf118 && !cf118);
        while (less_or_equal120 && !less_or_equal120) {
        }
        while (!of119 && of119) {
        }
        ecx113->f132843597 = ecx113->f132843597 + reinterpret_cast<int32_t>(ecx113);
        cf121 = __intrinsic();
        sf122 = ecx113->f132843597 < 0;
        while (!sf122 && sf122) {
        }
        while (cf121 && !cf121) {
        }
        edx123 = edx115 - 1;
        *reinterpret_cast<int16_t*>(&a3) = *reinterpret_cast<int16_t*>(&edx123);
        less_or_equal124 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>((a3 & 0xffff) == 0));
        do {
        } while (less_or_equal124 && !less_or_equal124);
    }
}

void fun_414477() {
}

void fun_414483() {
}

void fun_41448f() {
}

void fun_41449b() {
}

void fun_4144a7() {
    signed char al1;

    *reinterpret_cast<signed char*>(&gff8b07eb) = al1;
}

void fun_4144b3(signed char cl) {
}

void fun_4144bf() {
}

void fun_4144cb() {
}

void fun_4144d7() {
}

void fun_4144e3() {
}

void fun_4144ef() {
}

void fun_4144fb() {
    __asm__("por mm0, [edi]");
}

void fun_414507() {
}

void fun_414513() {
}

void fun_41451f() {
    signed char al1;

    *reinterpret_cast<signed char*>(&gc08b07eb) = al1;
}

void fun_41452b() {
    int32_t eax1;

    ged8b07eb = eax1;
}

void fun_414537() {
}

void fun_414543() {
}

void fun_41454f() {
}

void fun_41455b() {
}

void fun_414567() {
}

void fun_414573() {
    __asm__("fucomip st0, st3");
}

void fun_41457f() {
}

void fun_414597() {
}

void fun_4145a3() {
    __asm__("fsub st3, st0");
}

void fun_4145af() {
}

void fun_4145bb() {
}

void fun_4145c7() {
}

void fun_4145d3() {
    __asm__("fsub st3, st0");
}

void fun_4145eb() {
}

void fun_4145f7() {
}

void fun_414603() {
}

void fun_41460f() {
}

void fun_41461b() {
    int32_t ebx1;

    *reinterpret_cast<unsigned char*>(ebx1 - 0xdaf3bb) = 0xff;
}

void fun_41464e() {
}

void fun_41465a() {
}

void fun_414666(signed char cl) {
}

void fun_41467b() {
}

void fun_414687() {
}

void fun_4146bb(int16_t cx) {
}

void fun_4146cc() {
}

void fun_4146d8() {
    __asm__("fucomp st3");
}

void fun_4146e4() {
}

void fun_4146f0() {
}

void fun_4146fc() {
}

void fun_414719() {
}

void fun_414725() {
}

void fun_414731() {
}

void fun_41473d() {
}

void fun_414749() {
}

void fun_414755() {
    __asm__("rcr dword [edi+0x5e], 0x5b");
}

void fun_414ad1() {
}

void fun_414add() {
}

void fun_414ae9() {
    __asm__("fimul word [ebx+0x4d8b0c45]");
}

void fun_414aff() {
    __asm__("arpl bx, bp");
}

void fun_414b0b() {
}

void fun_414b22() {
}

void fun_414b2e() {
}

void fun_414b3a() {
}

void fun_414b46() {
}

void fun_414b52() {
}

void fun_414b5e() {
}

void fun_414b6a() {
}

void fun_414b76() {
    __asm__("fsubp st3, st0");
}

void fun_414b82() {
    __asm__("fucomip st0, st3");
}

void fun_414b8e(int32_t ecx) {
}

void fun_414bb0() {
}

void fun_414bbc() {
    __asm__("arpl bx, bp");
}

void fun_414bc8() {
}

void fun_414bd4() {
}

void fun_414be0() {
}

void fun_414bec() {
    signed char al1;

    *reinterpret_cast<signed char*>(&gc98b07eb) = al1;
}

void fun_414bf8() {
}

void fun_414c04() {
}

void fun_414c10() {
    __asm__("fldlpi ");
}

void fun_414c1c() {
}

void fun_414c28() {
}

void fun_414c34(int32_t ecx) {
}

void*** fun_414f20(void** a1) {
    void*** eax2;

    eax2 = fun_414e80(a1);
    return eax2;
}

int32_t fun_415960(signed char* a1, signed char* a2, int32_t a3) {
    int32_t ecx4;
    int32_t ebx5;
    signed char* edi6;
    signed char* esi7;
    int32_t ecx8;
    signed char* edi9;
    signed char* esi10;

    ecx4 = a3;
    if (ecx4) 
        goto addr_0x415991_2;
    ebx5 = ecx4;
    edi6 = a1;
    esi7 = edi6;
    do {
        if (!ecx4) 
            break;
        --ecx4;
        ++edi6;
        ++esi7;
    } while (*edi6);
    ecx8 = -ecx4 + ebx5;
    edi9 = esi7;
    esi10 = a2;
    while (ecx8) {
        --ecx8;
        *edi9 = *esi10;
        ++edi9;
        ++esi10;
    }
    ecx4 = 0;
    if (*reinterpret_cast<unsigned char*>(esi10 - 1) <= *reinterpret_cast<unsigned char*>(edi9 - 1)) 
        goto addr_0x41598b_10;
    addr_0x41598f_11:
    ecx4 = ~ecx4;
    goto addr_0x415991_2;
    addr_0x41598b_10:
    if (*reinterpret_cast<unsigned char*>(esi10 - 1) == *reinterpret_cast<unsigned char*>(edi9 - 1)) {
        addr_0x415991_2:
        return ecx4;
    } else {
        ecx4 = -2;
        goto addr_0x41598f_11;
    }
}

void** fun_415a80(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** edi7;
    void** esi8;
    void** eax9;
    void** eax10;

    if (a2) {
        fun_4171c0(ecx, a2, edi7, esi8, __return_address(), a2, a3, a4, a5, a6);
        eax9 = fun_415ac0(a2);
        fun_417230(a2);
        return eax9;
    } else {
        eax10 = fun_415b80(ecx, a2, esi8, __return_address(), a2, a3);
        return eax10;
    }
}

struct s1054 {
    signed char[1] pad1;
    signed char f1;
};

struct s1055 {
    signed char[1] pad1;
    signed char f1;
};

struct s1056 {
    signed char[2] pad2;
    int32_t f2;
};

struct s1057 {
    signed char[2] pad2;
    int32_t f2;
};

void fun_416bd9(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    uint32_t ecx6;
    struct s1054* edi7;
    struct s1055* esi8;
    int32_t* esi9;
    struct s1056* esi10;
    int32_t* edi11;
    struct s1057* edi12;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    ecx6 = ecx >> 2;
    edi7->f1 = esi8->f1;
    esi9 = &esi10->f2;
    edi11 = &edi12->f2;
    if (ecx6 < 8) 
        goto 0x416b9c;
    while (ecx6) {
        --ecx6;
        *edi11 = *esi9;
        ++edi11;
        ++esi9;
    }
    switch (edx2) {
    case 3:
        goto 0x416cc0;
    case 2:
        goto 0x416cac;
    case 1:
        goto 0x416ca0;
    case 0:
        goto 0x416c98;
    }
}

struct s1058 {
    signed char[1] pad1;
    int32_t f1;
};

struct s1059 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_416c00(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    int32_t* esi6;
    struct s1058* esi7;
    uint32_t ecx8;
    int32_t* edi9;
    struct s1059* edi10;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    esi6 = &esi7->f1;
    ecx8 = ecx >> 2;
    edi9 = &edi10->f1;
    if (ecx8 < 8) 
        goto 0x416b9c;
    while (ecx8) {
        --ecx8;
        *edi9 = *esi6;
        ++edi9;
        ++esi6;
    }
    switch (edx2) {
    case 3:
        goto 0x416cc0;
    case 2:
        goto 0x416cac;
    case 1:
        goto 0x416ca0;
    case 0:
        goto 0x416c98;
    }
}

void fun_416c19() {
}

void fun_416c86() {
}

void fun_416cfe() {
}

struct s1060 {
    signed char[3] pad3;
    signed char f3;
};

struct s1061 {
    signed char[3] pad3;
    signed char f3;
};

struct s1062 {
    signed char[2] pad2;
    signed char f2;
};

struct s1063 {
    signed char[2] pad2;
    signed char f2;
};

void fun_416d55(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s1060* edi4;
    struct s1061* esi5;
    uint32_t ecx6;
    struct s1062* edi7;
    struct s1063* esi8;
    int32_t* esi9;
    void* esi10;
    int32_t* edi11;
    void* edi12;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    ecx6 = ecx >> 2;
    edi7->f2 = esi8->f2;
    esi9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) - 2);
    edi11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi12) - 2);
    if (ecx6 < 8) 
        goto 0x416d00;
    while (ecx6) {
        --ecx6;
        *edi11 = *esi9;
        --edi11;
        --esi9;
    }
    switch (edx2) {
    case 3:
        goto 0x416e5c;
    case 2:
        goto 0x416e48;
    case 1:
        goto 0x416e38;
    case 0:
        goto 0x416e30;
    }
}

struct s1064 {
    signed char[3] pad3;
    signed char f3;
};

struct s1065 {
    signed char[3] pad3;
    signed char f3;
};

struct s1066 {
    signed char[2] pad2;
    signed char f2;
};

struct s1067 {
    signed char[2] pad2;
    signed char f2;
};

struct s1068 {
    signed char[1] pad1;
    signed char f1;
};

struct s1069 {
    signed char[1] pad1;
    signed char f1;
};

void fun_416d80(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s1064* edi4;
    struct s1065* esi5;
    struct s1066* edi6;
    struct s1067* esi7;
    uint32_t ecx8;
    struct s1068* edi9;
    struct s1069* esi10;
    int32_t* esi11;
    void* esi12;
    int32_t* edi13;
    void* edi14;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    edi6->f2 = esi7->f2;
    ecx8 = ecx >> 2;
    edi9->f1 = esi10->f1;
    esi11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi12) - 3);
    edi13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi14) - 3);
    if (ecx8 < 8) 
        goto 0x416d00;
    while (ecx8) {
        --ecx8;
        *edi13 = *esi11;
        --edi13;
        --esi11;
    }
    switch (edx2) {
    case 3:
        goto 0x416e5c;
    case 2:
        goto 0x416e48;
    case 1:
        goto 0x416e38;
    case 0:
        goto 0x416e30;
    }
}

void fun_416db1() {
}

void fun_416e1e() {
}

int32_t DeleteCriticalSection = 0x32a5a;

void** fun_419490(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void** eax13;
    void** v14;
    void** ebp15;
    void** v16;
    void** esi17;
    void** ebp18;
    void** eax19;
    void** esi20;
    void** v21;
    void** edi22;
    int32_t edi23;
    void** v24;
    void** ebx25;
    void** eax26;
    void** v27;
    void** eax28;
    void** ecx29;
    void** v30;
    void** eax31;
    void** edx32;
    void** eax33;

    v12 = reinterpret_cast<void**>(__return_address());
    eax13 = fun_415b70(ecx, v12, a2, a3);
    *reinterpret_cast<signed char*>(&eax13) = g42ec98;
    if (!*reinterpret_cast<signed char*>(&eax13)) {
        return eax13;
    }
    v14 = ebp15;
    v16 = esi17;
    ebp18 = reinterpret_cast<void**>(0);
    fun_417120(ecx, 2, v16, v14, v12, a2, a3, a4, a5, a6, a7, a8, a9);
    eax19 = g4313a0;
    esi20 = reinterpret_cast<void**>(3);
    if (reinterpret_cast<signed char>(eax19) > reinterpret_cast<signed char>(3)) 
        goto addr_0x41d1bc_5;
    addr_0x41d224_6:
    fun_4171a0(2);
    return ebp18;
    addr_0x41d1bc_5:
    v21 = edi22;
    edi23 = DeleteCriticalSection;
    v24 = ebx25;
    do {
        eax26 = g430384;
        if (*reinterpret_cast<void***>(eax26 + reinterpret_cast<unsigned char>(esi20) * 4)) {
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(eax26 + reinterpret_cast<unsigned char>(esi20) * 4) + 12)) & 0x83 && (v27 = *reinterpret_cast<void***>(eax26 + reinterpret_cast<unsigned char>(esi20) * 4), eax28 = fun_4159d0(ecx, v27, v24, v21, v16, v14, v12, a2, a3, a4), eax28 != 0xffffffff)) {
                ++ebp18;
            }
            if (reinterpret_cast<signed char>(esi20) >= reinterpret_cast<signed char>(20)) {
                ecx29 = g430384;
                v30 = *reinterpret_cast<void***>(ecx29 + reinterpret_cast<unsigned char>(esi20) * 4) + 32;
                edi23(v30);
                eax31 = g430384;
                ecx = *reinterpret_cast<void***>(eax31 + reinterpret_cast<unsigned char>(esi20) * 4);
                fun_414d40(ecx, ecx, v30, v24, v21, v16, v14, v12, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                edx32 = g430384;
                *reinterpret_cast<void***>(edx32 + reinterpret_cast<unsigned char>(esi20) * 4) = reinterpret_cast<void**>(0);
            }
        }
        eax33 = g4313a0;
        ++esi20;
    } while (reinterpret_cast<signed char>(esi20) < reinterpret_cast<signed char>(eax33));
    goto addr_0x41d224_6;
}

void** g42ed58;

int16_t g42f0d2;

void** g42f09c;

void** g42f0a0;

void** g42f0a4;

void** __image_base = reinterpret_cast<void**>(0x78);

void** g4295c4 = reinterpret_cast<void**>(46);

int32_t g42add4 = 1;

void** g42add0 = reinterpret_cast<void**>(46);

int32_t fun_41c2c0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** eax14;
    void** esi15;
    void** eax16;
    void** edi17;
    void** esi18;
    void** ebx19;
    void** ecx20;
    void** edx21;
    void** eax22;
    void** ecx23;
    void** edx24;
    void** eax25;
    void** cx26;
    void** eax27;
    void** edx28;
    void** eax29;
    void** eax30;
    void** eax31;
    void** ecx32;
    void** edx33;
    uint32_t eax34;
    uint32_t eax35;
    uint32_t eax36;
    void** eax37;
    void** ecx38;
    void** v39;
    void** edx40;
    void** v41;
    void** ecx42;
    void** v43;
    void** ecx44;
    void** eax45;
    void** edx46;
    void** eax47;
    void** ecx48;
    void** edx49;
    void** ecx50;
    void** edx51;
    void** eax52;
    void** eax53;
    void** dl54;

    eax14 = g42ed58;
    esi15 = reinterpret_cast<void**>(0);
    *reinterpret_cast<int16_t*>(&esi15) = g42f0d2;
    if (!eax14) {
        eax16 = g42f09c;
        fun_414d40(ecx, eax16, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
        ecx20 = g42f0a0;
        fun_414d40(ecx20, ecx20, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
        edx21 = g42f0a4;
        fun_414d40(ecx20, edx21, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
        g42f09c = reinterpret_cast<void**>(0);
        g42f0a0 = reinterpret_cast<void**>(0);
        g42f0a4 = reinterpret_cast<void**>(0);
        eax22 = fun_414db0(2, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8);
        ecx23 = __image_base;
        *reinterpret_cast<void***>(ecx23) = eax22;
        edx24 = __image_base;
        eax25 = *reinterpret_cast<void***>(edx24);
        if (eax25) {
            cx26 = g4295c4;
            *reinterpret_cast<void***>(eax25) = cx26;
            eax27 = fun_414db0(2, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8);
            edx28 = __image_base;
            *reinterpret_cast<void***>(edx28 + 4) = eax27;
            eax29 = __image_base;
            eax30 = *reinterpret_cast<void***>(eax29 + 4);
            if (eax30) {
                *reinterpret_cast<void***>(eax30) = reinterpret_cast<void**>(0);
                eax31 = fun_414db0(2, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8);
                ecx32 = __image_base;
                *reinterpret_cast<void***>(ecx32 + 8) = eax31;
                edx33 = __image_base;
                if (*reinterpret_cast<void***>(edx33 + 8)) {
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(edx33 + 8)) = reinterpret_cast<void**>(0);
                } else {
                    return -1;
                }
            } else {
                return -1;
            }
        } else {
            return -1;
        }
    } else {
        eax34 = fun_41d9c0(1, esi15, 14, 0x42f09c);
        eax35 = fun_41d9c0(1, esi15, 15, 0x42f0a0);
        eax36 = fun_41d9c0(1, esi15, 16, 0x42f0a4);
        eax37 = g42f0a4;
        fun_41c4c0(eax37);
        if (!(eax34 | eax35 | eax36)) {
            ecx38 = __image_base;
            if (*reinterpret_cast<void***>(ecx38) != 0x42e070) {
                v39 = *reinterpret_cast<void***>(ecx38);
                fun_414d40(ecx38, v39, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                edx40 = __image_base;
                v41 = *reinterpret_cast<void***>(edx40 + 4);
                fun_414d40(ecx38, v41, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                ecx42 = __image_base;
                v43 = *reinterpret_cast<void***>(ecx42 + 8);
                fun_414d40(ecx42, v43, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
            }
            ecx44 = __image_base;
            eax45 = g42f09c;
            *reinterpret_cast<void***>(ecx44) = eax45;
            edx46 = __image_base;
            eax47 = g42f0a0;
            *reinterpret_cast<void***>(edx46 + 4) = eax47;
            ecx48 = __image_base;
            edx49 = g42f0a4;
            *reinterpret_cast<void***>(ecx48 + 8) = edx49;
        } else {
            ecx50 = g42f09c;
            fun_414d40(ecx50, ecx50, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
            edx51 = g42f0a0;
            fun_414d40(ecx50, edx51, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
            eax52 = g42f0a4;
            fun_414d40(ecx50, eax52, edi17, esi18, ebx19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
            g42f09c = reinterpret_cast<void**>(0);
            g42f0a0 = reinterpret_cast<void**>(0);
            g42f0a4 = reinterpret_cast<void**>(0);
            return -1;
        }
    }
    eax53 = __image_base;
    dl54 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax53));
    g42add4 = 1;
    g42add0 = dl54;
    return 0;
}

int32_t g42ed54;

void** __image_base = reinterpret_cast<void**>(0x70);

void** __image_base = reinterpret_cast<void**>(0);

void** g42f0a8;

void** __image_base = reinterpret_cast<void**>(0);

int32_t fun_41c500(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    int32_t eax16;
    void** eax17;
    void** ecx18;
    void** eax19;
    void** esi20;
    void** ecx21;
    void** eax22;
    uint32_t eax23;
    void** eax24;
    void** edx25;
    void** ecx26;
    void** eax27;
    void** ecx28;

    eax16 = g42ed54;
    if (!eax16) {
        eax17 = __image_base;
        __image_base = *reinterpret_cast<void***>(eax17);
        ecx18 = *reinterpret_cast<void***>(eax17 + 4);
        __image_base = ecx18;
        eax19 = g42f0a8;
        __image_base = *reinterpret_cast<void***>(eax17 + 8);
        __image_base = reinterpret_cast<void**>(0x42e078);
        fun_41c740(ecx18, eax19, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
        ecx21 = g42f0a8;
        fun_414d40(ecx21, ecx21, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        g42f0a8 = reinterpret_cast<void**>(0);
        return 0;
    } else {
        eax22 = fun_41d0f0(1, 48, esi20, __return_address(), a2, a3, a4, a5, a6);
        if (eax22) {
            eax23 = fun_41c5f0(eax22);
            if (!eax23) {
                eax24 = __image_base;
                *reinterpret_cast<void***>(eax22) = *reinterpret_cast<void***>(eax24);
                edx25 = __image_base;
                *reinterpret_cast<void***>(eax22 + 4) = *reinterpret_cast<void***>(edx25 + 4);
                ecx26 = __image_base;
                *reinterpret_cast<void***>(eax22 + 8) = *reinterpret_cast<void***>(ecx26 + 8);
                eax27 = g42f0a8;
                __image_base = eax22;
                fun_41c740(ecx26, eax27, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                ecx28 = g42f0a8;
                fun_414d40(ecx28, ecx28, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                g42f0a8 = eax22;
                return 0;
            } else {
                fun_41c740(ecx, eax22, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                fun_414d40(ecx, eax22, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                return 1;
            }
        } else {
            return 1;
        }
    }
}

void* fun_41cab0(signed char* a1, signed char* a2) {
    signed char* edx3;
    void* eax4;
    signed char* esi5;

    edx3 = a2;
    eax4 = reinterpret_cast<void*>(0);
    while (*edx3) {
        ++edx3;
        __asm__("bts [esp], eax");
    }
    esi5 = a1;
    do {
        *reinterpret_cast<signed char*>(&eax4) = *esi5;
        if (!*reinterpret_cast<signed char*>(&eax4)) 
            break;
        ++esi5;
    } while (!static_cast<int1_t>(0 >> reinterpret_cast<int32_t>(eax4)));
    goto addr_0x41cae1_7;
    addr_0x41cae4_8:
    return eax4;
    addr_0x41cae1_7:
    eax4 = reinterpret_cast<void*>(esi5 - 1);
    goto addr_0x41cae4_8;
}

struct s1070 {
    signed char[1] pad1;
    signed char f1;
};

struct s1071 {
    signed char[1] pad1;
    signed char f1;
};

struct s1072 {
    signed char[2] pad2;
    int32_t f2;
};

struct s1073 {
    signed char[2] pad2;
    int32_t f2;
};

void fun_41d619(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    uint32_t ecx6;
    struct s1070* edi7;
    struct s1071* esi8;
    int32_t* esi9;
    struct s1072* esi10;
    int32_t* edi11;
    struct s1073* edi12;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    ecx6 = ecx >> 2;
    edi7->f1 = esi8->f1;
    esi9 = &esi10->f2;
    edi11 = &edi12->f2;
    if (ecx6 < 8) 
        goto 0x41d5dc;
    while (ecx6) {
        --ecx6;
        *edi11 = *esi9;
        ++edi11;
        ++esi9;
    }
    switch (edx2) {
    case 3:
        goto 0x41d700;
    case 2:
        goto 0x41d6ec;
    case 1:
        goto 0x41d6e0;
    case 0:
        goto 0x41d6d8;
    }
}

struct s1074 {
    signed char[1] pad1;
    int32_t f1;
};

struct s1075 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_41d640(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    signed char* edi4;
    signed char* esi5;
    int32_t* esi6;
    struct s1074* esi7;
    uint32_t ecx8;
    int32_t* edi9;
    struct s1075* edi10;

    edx2 = edx3 & ecx;
    *edi4 = *esi5;
    esi6 = &esi7->f1;
    ecx8 = ecx >> 2;
    edi9 = &edi10->f1;
    if (ecx8 < 8) 
        goto 0x41d5dc;
    while (ecx8) {
        --ecx8;
        *edi9 = *esi6;
        ++edi9;
        ++esi6;
    }
    switch (edx2) {
    case 3:
        goto 0x41d700;
    case 2:
        goto 0x41d6ec;
    case 1:
        goto 0x41d6e0;
    case 0:
        goto 0x41d6d8;
    }
}

void fun_41d659() {
}

void fun_41d6c6() {
}

void fun_41d73e() {
}

struct s1076 {
    signed char[3] pad3;
    signed char f3;
};

struct s1077 {
    signed char[3] pad3;
    signed char f3;
};

struct s1078 {
    signed char[2] pad2;
    signed char f2;
};

struct s1079 {
    signed char[2] pad2;
    signed char f2;
};

void fun_41d795(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s1076* edi4;
    struct s1077* esi5;
    uint32_t ecx6;
    struct s1078* edi7;
    struct s1079* esi8;
    int32_t* esi9;
    void* esi10;
    int32_t* edi11;
    void* edi12;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    ecx6 = ecx >> 2;
    edi7->f2 = esi8->f2;
    esi9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) - 2);
    edi11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi12) - 2);
    if (ecx6 < 8) 
        goto 0x41d740;
    while (ecx6) {
        --ecx6;
        *edi11 = *esi9;
        --edi11;
        --esi9;
    }
    switch (edx2) {
    case 3:
        goto 0x41d89c;
    case 2:
        goto 0x41d888;
    case 1:
        goto 0x41d878;
    case 0:
        goto 0x41d870;
    }
}

struct s1080 {
    signed char[3] pad3;
    signed char f3;
};

struct s1081 {
    signed char[3] pad3;
    signed char f3;
};

struct s1082 {
    signed char[2] pad2;
    signed char f2;
};

struct s1083 {
    signed char[2] pad2;
    signed char f2;
};

struct s1084 {
    signed char[1] pad1;
    signed char f1;
};

struct s1085 {
    signed char[1] pad1;
    signed char f1;
};

void fun_41d7c0(uint32_t ecx) {
    uint32_t edx2;
    uint32_t edx3;
    struct s1080* edi4;
    struct s1081* esi5;
    struct s1082* edi6;
    struct s1083* esi7;
    uint32_t ecx8;
    struct s1084* edi9;
    struct s1085* esi10;
    int32_t* esi11;
    void* esi12;
    int32_t* edi13;
    void* edi14;

    edx2 = edx3 & ecx;
    edi4->f3 = esi5->f3;
    edi6->f2 = esi7->f2;
    ecx8 = ecx >> 2;
    edi9->f1 = esi10->f1;
    esi11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi12) - 3);
    edi13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi14) - 3);
    if (ecx8 < 8) 
        goto 0x41d740;
    while (ecx8) {
        --ecx8;
        *edi13 = *esi11;
        --edi13;
        --esi11;
    }
    switch (edx2) {
    case 3:
        goto 0x41d89c;
    case 2:
        goto 0x41d888;
    case 1:
        goto 0x41d878;
    case 0:
        goto 0x41d870;
    }
}

void fun_41d7f1() {
}

void fun_41d85e() {
}

void fun_41f060() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f05b;
}

void fun_41f0b7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f0b2;
}

void fun_41f142() {
    int1_t pf1;
    int32_t ebp2;
    int32_t ebp3;
    signed char al4;

    if (!pf1) 
        goto 0x41f13d;
    *reinterpret_cast<signed char*>(ebp2 - 0x3e7af00a) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp3 - 0x3e7af00a) - al4);
}

void fun_41f1f7(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x41f1f2;
}

struct s1086 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1087 {
    signed char[4] pad4;
    signed char f4;
};

void fun_41f220(uint32_t ecx, signed char* a2) {
    int32_t edi3;
    int32_t esi4;
    int32_t ebp5;
    struct s1086* ebx6;
    struct s1087* ebx7;
    signed char bh8;

    fun_415450(ecx, a2, 92, edi3, esi4, ebp5, __return_address());
    if (!(__intrinsic() || !__intrinsic())) {
        ebx6->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx7->f4 + bh8) + __intrinsic());
    }
}

void fun_41f300() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f2f9;
}

void fun_41f369(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;

    if (!pf2) 
        goto 0x41f364;
    *reinterpret_cast<unsigned char*>(ebx3 - 0xaef3b3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx4 - 0xaef3b3) | 21);
}

void fun_41f398(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x41f393;
}

void fun_41f87e() {
}

struct s1088 {
    signed char[4] pad4;
    signed char f4;
};

struct s1089 {
    signed char[4] pad4;
    signed char f4;
};

void fun_41fe07() {
    int1_t pf1;
    struct s1088* ebx2;
    struct s1089* ebx3;

    if (!pf1) 
        goto 0x41fe02;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

struct s1090 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_41fefb() {
    struct s1090* ebx1;
    struct s1090* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x41fef6;
    ebx1->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1)) + cf4);
}

int32_t fun_41ff16(void** ecx, void** a2, void** a3) {
    void** eax4;
    void** v5;
    void** eax6;
    int32_t ebx7;
    int32_t eax8;

    eax4 = fun_41fe22(ecx, a2);
    v5 = eax4;
    if (!v5) {
        ecx = a2;
        eax6 = fun_41fdb0(ecx, ecx);
        v5 = eax6;
        if (!(__intrinsic() || (ecx = ecx, !__intrinsic()))) {
            *reinterpret_cast<void***>(ebx7 + 0x7400f87d) = eax6;
        }
    }
    eax8 = fun_41fe94(ecx, v5, a3);
    if (__intrinsic() || !__intrinsic()) {
    }
    return eax8;
}

void** fun_420352(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** v14;
    void** v15;
    void** ebp16;
    void** eax17;
    void** eax18;
    void** v19;

    eax17 = fun_420230(ecx, a3, v14, v15, ebp16, __return_address(), a2, a3, a4);
    if (eax17) {
        eax18 = fun_416ac0(a2, eax17);
        v19 = eax18;
        fun_414d40(eax17, eax17, v19, eax17, ebp16, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
    } else {
        v19 = reinterpret_cast<void**>(0);
    }
    return v19;
}

void fun_42049a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420493;
}

struct s1091 {
    signed char[28] pad28;
    int32_t f28;
};

struct s1092 {
    signed char[24] pad24;
    int32_t f24;
};

struct s1093 {
    signed char[4] pad4;
    int32_t f4;
    void** f8;
    signed char[11] pad20;
    int32_t f20;
};

void fun_4204af(int32_t a1) {
    int32_t ebp2;
    struct s1091* ebp3;
    struct s1092* ebp4;
    int32_t ebp5;
    int32_t ebp6;
    int1_t pf7;
    int1_t pf8;
    int32_t ebx9;
    int32_t ebx10;
    int1_t pf11;
    int1_t pf12;
    int1_t cf13;
    struct s1093* v14;
    struct s1093* ebp15;
    void** eax16;
    uint32_t edx17;
    void** ecx18;

    *reinterpret_cast<int32_t*>(ebp2 - 4) = ebp3->f28 + ebp4->f24 - 1;
    *reinterpret_cast<int32_t*>(ebp5 - 20) = *reinterpret_cast<int32_t*>(ebp6 - 4);
    if (pf7 || !pf8) {
    }
    ebx9 = ebx10;
    if (!(pf11 || !pf12)) {
        cf13 = __intrinsic();
    }
    while ((v14 = ebp15, cf13) && (eax16 = fun_4119a0(&ebp15->f8, reinterpret_cast<int32_t>(ebp15) - 12, reinterpret_cast<int32_t>(ebp15) - 20, 3, 1, *reinterpret_cast<int24_t*>(&v14)), !!(reinterpret_cast<unsigned char>(eax16) & 0xffff))) {
        if (__intrinsic() || !__intrinsic()) {
        }
        ebp15 = reinterpret_cast<struct s1093*>(reinterpret_cast<int32_t>(ebp15) + 1 + 1);
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp15) - 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp15) - 20)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp15) - 12)) + 1;
        while (edx17 = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp15) - 8), *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp15) - 8) = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp15) - 8) - 1, !!edx17) {
            *reinterpret_cast<signed char*>(ebp15->f20 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp15) - 16)) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp15) - 16);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp15) - 16) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp15) - 16) + 1);
        }
        ecx18 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp15) - 20) + 1;
        cf13 = __intrinsic();
        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp15) - 12) = ecx18;
        if (!(__intrinsic() || !__intrinsic())) {
            cf13 = *reinterpret_cast<unsigned char*>(ebx9 + 0x5589fc55) < *reinterpret_cast<unsigned char*>(&ecx18);
            *reinterpret_cast<unsigned char*>(ebx9 + 0x5589fc55) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx9 + 0x5589fc55) - *reinterpret_cast<unsigned char*>(&ecx18));
        }
        __asm__("in al, dx");
    }
    goto ebp15->f4;
}

void fun_4204e1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4204dc;
}

struct s1094 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_420542() {
    int1_t pf1;
    struct s1094* ebx2;
    int32_t edi3;
    uint1_t cf4;

    if (!pf1) 
        goto 0x42053d;
    ebx2->f4 = ebx2->f4 + edi3 + cf4;
}

void fun_4205e4(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4205df;
}

void fun_42063f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42063a;
}

void fun_420663(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42065e;
}

void fun_42067b(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420676;
}

void fun_420693() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42068e;
}

void fun_4206ab(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4206a6;
}

void fun_4206fe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4206f9;
}

struct s1095 {
    signed char[4] pad4;
    signed char f4;
};

struct s1096 {
    signed char[4] pad4;
    signed char f4;
};

void fun_420759() {
    int1_t pf1;
    struct s1095* ebx2;
    struct s1096* ebx3;

    if (!pf1) 
        goto 0x420754;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_420789() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420784;
}

struct s1097 {
    signed char[8] pad8;
    void** f8;
};

struct s1098 {
    signed char[28] pad28;
    int16_t f28;
};

struct s1099 {
    signed char[8] pad8;
    int32_t f8;
};

struct s1100 {
    signed char[12] pad12;
    int32_t f12;
};

struct s1101 {
    signed char[16] pad16;
    void** f16;
};

void fun_4207a1(int32_t ecx) {
    int1_t pf2;
    void** v3;
    int32_t ebp4;
    void** ecx5;
    struct s1097* ebp6;
    void** eax7;
    int32_t edx8;
    int32_t edx9;
    struct s1098* ebp10;
    unsigned char* v11;
    int32_t ebp12;
    signed char* v13;
    int32_t ebp14;
    int32_t v15;
    int32_t ebp16;
    int32_t v17;
    int32_t ebp18;
    int32_t v19;
    int32_t ebp20;
    int32_t v21;
    int32_t ebp22;
    int32_t v23;
    struct s1099* ebp24;
    int32_t v25;
    struct s1100* ebp26;
    struct s1101* ebp27;

    if (!pf2) {
    }
    v3 = *reinterpret_cast<void***>(ebp4 - 16);
    ecx5 = reinterpret_cast<void**>(&ebp6->f8);
    eax7 = fun_41fd00(ecx5, v3, __return_address());
    if (eax7) {
        if (__intrinsic() || !__intrinsic()) {
        }
        edx8 = edx9;
        *reinterpret_cast<int16_t*>(&edx8) = ebp10->f28;
        v11 = *reinterpret_cast<unsigned char**>(ebp12 - 28);
        v13 = *reinterpret_cast<signed char**>(ebp14 - 20);
        v15 = *reinterpret_cast<int32_t*>(ebp16 - 12);
        v17 = *reinterpret_cast<int32_t*>(ebp18 - 4);
        v19 = *reinterpret_cast<int32_t*>(ebp20 - 24);
        v21 = *reinterpret_cast<int32_t*>(ebp22 - 8);
        v23 = ebp24->f8;
        v25 = ebp26->f12;
        ecx5 = ebp27->f16;
        fun_4208de(ecx5, v23, v25, ecx5, v21, v19, v17, v15, v13, v11, edx8);
        if (__intrinsic() || !__intrinsic()) {
        }
    }
    *reinterpret_cast<signed char*>(ecx5 + 0x47bf055) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx5 + 0x47bf055) - *reinterpret_cast<signed char*>(&ecx5));
}

void fun_4207b9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4207b4;
}

void fun_4207d1() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x4207cc;
    gff87047b = eax2;
}

struct s1102 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4207e9() {
    int1_t pf1;
    struct s1102* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4207e4;
    ebx2->f4 = edi3;
}

void fun_420835() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420830;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_4208b7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4208b0;
}

void fun_4208cd(int16_t cx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4208c8;
}

void fun_42094c() {
    int1_t pf1;
    unsigned char* eax2;
    unsigned char* eax3;
    unsigned char ch4;

    if (!pf1) 
        goto 0x420947;
    *eax2 = reinterpret_cast<unsigned char>(*eax3 ^ ch4);
}

void fun_42099c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420997;
    __asm__("fnstcw word [ebx+0x4]");
}

struct s1103 {
    signed char[4] pad4;
    signed char f4;
};

struct s1104 {
    signed char[4] pad4;
    signed char f4;
};

struct s1105 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4209b8(int32_t ecx) {
    int32_t eax2;
    int32_t edx3;
    int32_t edx4;
    struct s1103* ebx5;
    struct s1104* ebx6;
    signed char bh7;
    struct s1105* ebx8;
    struct s1105* ebx9;
    signed char* eax10;
    signed char* eax11;
    signed char* eax12;
    signed char* eax13;
    signed char al14;
    int32_t ebp15;
    int32_t ebp16;
    int32_t ebp17;
    int32_t ebp18;
    int32_t ebp19;
    int32_t ebp20;
    int32_t ebp21;
    int32_t ebp22;
    int32_t ebp23;
    int32_t ebp24;
    int32_t ebp25;
    int32_t ebp26;
    int32_t ebp27;

    if (eax2 >= 1) 
        goto 0x420de7;
    if (!(__intrinsic() || (edx3 = edx4, !__intrinsic()))) {
        ebx5->f4 = reinterpret_cast<signed char>(ebx6->f4 + bh7);
    }
    ebx8 = ebx9;
    *eax10 = reinterpret_cast<signed char>(*eax11 + *reinterpret_cast<signed char*>(&edx3));
    *eax12 = reinterpret_cast<signed char>(*eax13 + al14);
    if (!__intrinsic()) {
        *reinterpret_cast<int32_t*>(ebp15 - 0x2024) = 0x1000;
    } else {
        *reinterpret_cast<int32_t*>(ebp16 - 0x2024) = *reinterpret_cast<int32_t*>(ebp17 - 0x2020);
    }
    *reinterpret_cast<int32_t*>(ebp18 - 0x1014) = *reinterpret_cast<int32_t*>(ebp19 - 0x2024);
    if (*reinterpret_cast<uint32_t*>(ebp20 - 0x100c) >= *reinterpret_cast<uint32_t*>(ebp21 - 0x1014)) {
        *reinterpret_cast<int32_t*>(ebp22 - 0x2028) = *reinterpret_cast<int32_t*>(ebp23 - 0x1014);
    } else {
        *reinterpret_cast<int32_t*>(ebp24 - 0x2028) = *reinterpret_cast<int32_t*>(ebp25 - 0x100c);
    }
    *reinterpret_cast<int32_t*>(ebp26 - 0x1018) = *reinterpret_cast<int32_t*>(ebp27 - 0x2028);
    if (!(__intrinsic() || !__intrinsic())) {
        ebx8->f4 = reinterpret_cast<signed char>(ebx8->f4 >> 0xffffff87);
    }
    do {
    } while (!__undefined());
    ebx8->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx8) + 1);
}

void fun_4209e0(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4209db;
    *reinterpret_cast<signed char*>(ecx - 0x201f43) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx - 0x201f43) - 1);
}

void fun_420a68() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420a63;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_420ada(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;
    uint1_t cf5;

    if (!pf2) 
        goto 0x420ad5;
    *reinterpret_cast<uint32_t*>(ebx3 - 0xdad3bb) = *reinterpret_cast<int32_t*>(ebx4 - 0xdad3bb) + ecx + cf5;
}

void fun_420b3d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420b38;
}

struct s1106 {
    signed char[8] pad8;
    int32_t f8;
    int32_t f12;
    int32_t f16;
};

struct s1107 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
};

void fun_420b53() {
    int1_t pf1;
    struct s1106* ebp2;
    void** ebp3;
    int32_t* esp4;
    int32_t* esp5;
    int32_t* esp6;
    int32_t* esp7;
    struct s1107* esp8;
    int32_t ecx9;
    int32_t* esp10;

    if (!pf1) 
        goto 0x420b50;
    ebp2 = reinterpret_cast<struct s1106*>(reinterpret_cast<int32_t>(*ebp3) + 1);
    esp4 = reinterpret_cast<int32_t*>(ebp3 + 1 - 1);
    *esp4 = reinterpret_cast<int32_t>(ebp2) - 0x2018;
    esp5 = esp4 - 1;
    *esp5 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp2) - 0x1008);
    esp6 = esp5 - 1;
    *esp6 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp2) - 0x1014);
    esp7 = esp6 - 1;
    *esp7 = reinterpret_cast<int32_t>(ebp2 - 0xcd);
    esp8 = reinterpret_cast<struct s1107*>(esp7 - 3);
    esp8->f0 = ebp2->f8;
    ecx9 = ebp2->f12;
    esp8->f4 = ecx9;
    esp8->f8 = ebp2->f16;
    esp10 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp8) - 4);
    *esp10 = 0x420bea;
    fun_420dee();
    if (__intrinsic() || !__intrinsic()) {
    }
    *(esp10 + 1 + 8 - 1) = 0x420c0d;
    *reinterpret_cast<int32_t*>(ecx9 - 0x75)();
    __asm__("in al, dx");
    __asm__("out dx, eax");
}

struct s1108 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1109 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1110 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_420b61() {
    int1_t pf1;
    struct s1108* ebx2;
    struct s1109* ebx3;
    int32_t edi4;
    struct s1110* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x420b5c;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

struct s1111 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1112 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_420b79() {
    int1_t pf1;
    struct s1111* ebx2;
    struct s1112* ebx3;

    if (!pf1) 
        goto 0x420b74;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_420b91(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420b8c;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_420ba9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420ba4;
}

void fun_420c2d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420c28;
}

struct s1113 {
    signed char[4] pad4;
    signed char f4;
};

struct s1114 {
    signed char[4] pad4;
    signed char f4;
};

void fun_420c45() {
    int1_t pf1;
    struct s1113* ebx2;
    struct s1114* ebx3;

    if (!pf1) 
        goto 0x420c40;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_420c5d() {
    __asm__("in al, dx");
    __asm__("out dx, eax");
}

void fun_420cfe() {
    return;
}

struct s1115 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1116 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_420d26() {
    int1_t pf1;
    struct s1115* ebx2;
    struct s1116* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x420d21;
    ebx2->f4 = ebx3->f4 | edi4;
}

void fun_420d3e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420d39;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_420d56() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420d51;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_420d6e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420d69;
}

struct s1117 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1118 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_420d86() {
    int1_t pf1;
    struct s1117* ebx2;
    struct s1118* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x420d81;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

struct s1119 {
    signed char[4] pad4;
    signed char f4;
};

void fun_420e22() {
    struct s1119* ebx1;
    struct s1119* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x420e1d;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

void fun_420e3a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420e35;
}

struct s1120 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1121 {
    signed char[4] pad4;
    signed char f4;
};

struct s1122 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_420e52() {
    int1_t pf1;
    struct s1120* ebx2;
    struct s1121* ebx3;
    signed char bh4;
    struct s1122* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x420e4d;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

struct s1123 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1124 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_420e82() {
    int1_t pf1;
    struct s1123* ebx2;
    struct s1124* ebx3;

    if (!pf1) 
        goto 0x420e7d;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s1125 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1126 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_420e9a(int32_t ecx) {
    int1_t pf2;
    struct s1125* ebx3;
    struct s1126* ebx4;
    unsigned char bh5;
    int1_t pf6;

    if (pf2) {
        ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 & bh5);
        pf6 = __intrinsic();
    }
    if (pf6 || !pf6) {
    }
    __asm__("hlt ");
}

void fun_420eb4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420ead;
}

void fun_420ed6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420ed1;
}

struct s1127 {
    signed char[4] pad4;
    unsigned char* f4;
    signed char[1300888648] pad1300888653;
    unsigned char f1300888653;
};

struct s1129 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1128 {
    struct s1129** f0;
    signed char[4] pad8;
    void** f8;
    signed char[27] pad36;
    uint32_t f36;
};

void fun_c9c91397(int24_t a1);

signed char* fun_39b926d(int24_t a1);

signed char g4f3;

void fun_420eed(unsigned char cl) {
    int32_t v2;
    int1_t pf3;
    int1_t pf4;
    unsigned char* edi5;
    unsigned char* edi6;
    int32_t eax7;
    signed char al8;
    unsigned char al9;
    uint1_t cf10;
    struct s1127* ebx11;
    unsigned char bh12;
    int1_t pf13;
    int32_t ebp14;
    struct s1128* ebp15;
    struct s1128* ebp16;
    unsigned char* edi17;
    signed char* eax18;
    uint32_t eax19;
    uint32_t eax20;
    uint32_t v21;
    void*** ecx22;
    void** eax23;
    signed char* eax24;
    int1_t pf25;
    int1_t pf26;
    struct s1127* ebx27;
    unsigned char* edi28;
    struct s1127* ebx29;
    struct s1128* ebp30;
    void*** ecx31;
    struct s1128* ebp32;
    struct s1129* ebp33;

    v2 = reinterpret_cast<int32_t>(__return_address());
    if (pf3 || !pf4) {
        edi5 = edi6;
    }
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 - reinterpret_cast<unsigned char>(0x73 - reinterpret_cast<uint1_t>(al9 < reinterpret_cast<unsigned char>(0x73 - cf10))));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx11) + 1) = bh12;
    pf13 = __intrinsic();
    *reinterpret_cast<int32_t*>(ebp14 - 4) = eax7;
    if (pf13 || !pf13) {
        ebp15 = ebp16;
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx11) + 0x4d89fc4d) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx11) + 0x4d89fc4d) & cl);
        pf13 = __intrinsic();
    }
    fun_c9c91397(*reinterpret_cast<int24_t*>(reinterpret_cast<int32_t>(&v2) + 1));
    if (!(pf13 || !pf13)) {
        edi5 = ebx11->f4;
    }
    edi17 = edi5;
    eax18 = fun_39b926d(*reinterpret_cast<int24_t*>(reinterpret_cast<int32_t>(&v2) + 1));
    *eax18 = reinterpret_cast<signed char>(*eax18 + *reinterpret_cast<signed char*>(&eax18));
    eax19 = ebp15->f36 & 0xffff;
    eax20 = -eax19;
    v21 = eax20 - (eax20 + reinterpret_cast<uint1_t>(eax20 < eax20 + reinterpret_cast<uint1_t>(!!eax19))) + 1;
    ecx22 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp15) - 24);
    eax23 = fun_4119a0(&ebp15->f8, reinterpret_cast<int32_t>(ebp15) - 12, ecx22, 4, *reinterpret_cast<int16_t*>(&v21), *reinterpret_cast<int24_t*>(reinterpret_cast<int32_t>(&v2) + 1));
    eax24 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax23) & 0xffff);
    pf25 = __intrinsic();
    if (eax24) {
        if (!(pf25 || (edi17 = edi17, !pf25))) {
            edi17 = ebx11->f4;
        }
        pf26 = __intrinsic();
        __asm__("in al, dx");
        if (!(pf26 || !pf26)) {
            ebx11->f4 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebx11->f4) | reinterpret_cast<unsigned char>(edi17));
            pf26 = __intrinsic();
        }
        if (!(pf26 || !pf26)) {
            __asm__("fidivr dword [ebx+0x4]");
        }
        ebx27 = ebx11;
        do {
            *reinterpret_cast<unsigned char*>(&ebx27) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx27) >> *reinterpret_cast<signed char*>(&ecx22));
        } while (!__intrinsic());
        ebx27->f4 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebx27->f4) - reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx27) + 1)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ebx27->f4) < reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx27) + 1)) + __intrinsic()))));
        __asm__("hlt ");
    }
    if (pf25 || !pf25) {
        ecx22 = ecx22;
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx11) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx11) + 1) + reinterpret_cast<unsigned char>(ebx11->f4));
        pf25 = __intrinsic();
    }
    if (!pf25 && (edi17 = edi17, pf25)) {
    }
    if (pf25) 
        goto addr_0x4212df_54;
    ebx11 = ebx11;
    if (pf25) 
        goto addr_0x4212e8_56;
    addr_0x4212df_54:
    addr_0x4212e9_57:
    edi28 = edi17;
    ebx29 = ebx11;
    ebp30 = ebp15;
    if (pf25 || !pf25) {
        ebp30 = ebp30;
    } else {
        ebx29->f4 = edi28;
    }
    ecx31 = ecx22;
    ebp32 = ebp30;
    if (!(pf25 || !pf25)) {
        pf25 = __intrinsic();
    }
    do {
        __asm__("fucomi st0, st3");
    } while (!pf25);
    *reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(&ebx29) + 1) = ebx29->f4;
    ebp33 = *ebp32->f0;
    *reinterpret_cast<unsigned char*>(&eax24) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax24) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx31) + 1));
    *reinterpret_cast<unsigned char*>(&eax24) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax24) - reinterpret_cast<unsigned char>(*eax24 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax24) < reinterpret_cast<unsigned char>(*eax24 + reinterpret_cast<uint1_t>(*edi28 < *reinterpret_cast<unsigned char*>(&eax24))))));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx29) - 0xdafb3c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx29) - 0xdafb3c) + *reinterpret_cast<unsigned char*>(&eax24));
    *eax24 = reinterpret_cast<signed char>(*eax24 + 1);
    __asm__("fcomp dword [ebx]");
    g4f3 = 0;
    g42eb08 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx31) + (reinterpret_cast<uint32_t>(eax24) | 0x42eb08));
    if (__intrinsic() || !__intrinsic()) {
        ebp33 = ebp33;
    }
    goto ebp33->f4;
    addr_0x4212e8_56:
    ebx11->f4 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebx11->f4) & reinterpret_cast<unsigned char>(edi17));
    pf25 = __intrinsic();
    goto addr_0x4212e9_57;
}

void fun_420f2b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420f26;
}

void fun_420f4f(signed char cl) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420f4a;
}

void fun_420fb0(signed char cl) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420fab;
}

void fun_420fdd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420fd8;
}

void fun_42100f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421008;
}

struct s1130 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1131 {
    signed char[8] pad8;
    int32_t f8;
    void** f12;
    signed char[3] pad16;
    int32_t f16;
    void* f20;
};

void fun_421024(int32_t ecx) {
    int16_t* esp2;
    int32_t v3;
    int32_t ebp4;
    int32_t edx5;
    int32_t ecx6;
    unsigned char edi7;
    unsigned char edi8;
    struct s1130* ebx9;
    int32_t v10;
    int16_t es11;
    struct s1130* ebx12;
    struct s1131* ebp13;
    void* ebp14;
    struct s61* v15;
    int32_t* edx16;
    int32_t v17;
    void** ecx18;
    int32_t v19;
    uint32_t eax20;
    int16_t es21;
    int32_t* edx22;
    void* v23;
    int32_t v24;
    void** v25;
    int32_t v26;
    int1_t pf27;

    esp2 = reinterpret_cast<int16_t*>(__zero_stack_offset());
    v3 = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int32_t*>(ebp4 - 8) = edx5 + 1;
    if (__intrinsic() || (ecx = ecx, !__intrinsic())) {
        ecx = ecx;
    }
    ecx6 = ecx;
    edi7 = edi8;
    do {
        *reinterpret_cast<unsigned char*>(&ebx9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx9) >> *reinterpret_cast<signed char*>(&ecx6));
        --esp2;
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v10) + 2) = es11;
    } while (!__intrinsic());
    ebx9->f4 = edi7;
    ebx12 = ebx9;
    ebp13 = reinterpret_cast<struct s1131*>(reinterpret_cast<int32_t>(ebp14) + 1);
    __asm__("clc ");
    v15 = reinterpret_cast<struct s61*>(reinterpret_cast<int32_t>(ebp13->f20) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp13) - 20)));
    edx16 = reinterpret_cast<int32_t*>(esp2 - 2 - 2 - 6);
    v17 = ebp13->f8;
    ecx18 = ebp13->f12;
    v19 = ebp13->f16;
    fun_421505(ecx18, v17, ecx18, v19, v15, eax20, *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v10) + 2));
    if (!(__intrinsic() || (ebx12 = ebx12, !__intrinsic()))) {
        ebx12->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx12->f4) >> 0x87);
    }
    do {
        *reinterpret_cast<int16_t*>(&v10) = es21;
        ebp13 = ebp13;
    } while (!__undefined());
    __asm__("fidivr dword [ebx+0x4]");
    edx22 = edx16;
    if (__undefined() || !__undefined()) {
        ecx18 = ecx18;
    } else {
        __asm__("fisttp dword [ebx+0x4d03204d]");
    }
    __asm__("in al, dx");
    *reinterpret_cast<int16_t*>(&edx22) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(ebp13) - 8);
    v23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp13->f20) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp13) - 20)));
    v24 = ebp13->f8;
    v25 = ebp13->f12;
    v26 = ebp13->f16;
    fun_4219a0(v24, v25, v26, v23, edx22, ecx18, v10, v3);
    pf27 = __intrinsic();
    if (!(pf27 || !pf27)) {
        ebx12->f4 = 0;
        pf27 = __intrinsic();
    }
    do {
    } while (!pf27);
    __asm__("fdivr dword [ebx+0x4]");
    do {
    } while (!__intrinsic());
}

void fun_421049() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x421044;
    *reinterpret_cast<signed char*>(&gff87047b) = al2;
}

struct s1132 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1133 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421061(int32_t ecx) {
    int1_t pf2;
    struct s1132* ebx3;
    struct s1133* ebx4;

    if (!pf2) 
        goto 0x42105c;
    ebx3->f4 = ebx4->f4 >> 1;
}

struct s1134 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1135 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421085() {
    int1_t pf1;
    struct s1134* ebx2;
    struct s1135* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x421080;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_4210df() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4210da;
}

void fun_421142() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42113b;
}

void fun_421158() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421153;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_421170() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42116b;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_421194() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42118f;
}

struct s1136 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1137 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4211ac() {
    int1_t pf1;
    struct s1136* ebx2;
    struct s1137* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4211a7;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_4211c4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4211bf;
}

void fun_421240() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42123b;
}

void fun_421258() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421253;
}

void fun_421270(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42126b;
}

void fun_421288(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421283;
}

struct s1138 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4212fc() {
    int1_t pf1;
    struct s1138* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4212f7;
    ebx2->f4 = edi3;
}

void fun_421314() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42130f;
}

struct s1139 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1140 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42132c() {
    int1_t pf1;
    struct s1139* ebx2;
    struct s1140* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x421327;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_421344() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42133f;
}

struct s1141 {
    signed char[4] pad4;
    signed char f4;
};

struct s1142 {
    signed char[4] pad4;
    signed char f4;
};

void fun_421368(int32_t ecx) {
    int1_t pf2;
    struct s1141* ebx3;
    struct s1142* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x421363;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 - bh5);
}

struct s1143 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_421380() {
    int1_t pf1;
    struct s1143* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x42137b;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_421398(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421393;
}

void fun_4213ca() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4213c3;
}

struct s1144 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1145 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4213e0(int32_t ecx) {
    int32_t ecx2;
    int1_t pf3;
    struct s1144* ebx4;
    struct s1145* ebx5;

    ecx2 = ecx;
    if (!pf3) 
        goto 0x4213db;
    ebx4->f4 = ebx5->f4 >> *reinterpret_cast<signed char*>(&ecx2);
}

void fun_4213f8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4213f3;
}

void fun_421410() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42140b;
}

void fun_42142a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421423;
}

void fun_421481(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42147c;
}

void fun_421499() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421494;
    __asm__("fidivr dword [ebx+0x4]");
}

struct s1146 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4214b1() {
    struct s1146* ebx1;
    struct s1146* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x4214ac;
    ebx1->f4 = reinterpret_cast<signed char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_4214c9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4214c4;
    __asm__("fnstsw word [ebx+0x4]");
}

struct s1147 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4214e1() {
    int1_t pf1;
    struct s1147* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x4214dc;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_4214f9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4214f4;
}

void fun_42155e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421559;
}

void fun_421576() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421571;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1148 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1149 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1150 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42158e() {
    int1_t pf1;
    struct s1148* ebx2;
    struct s1149* ebx3;
    int32_t edi4;
    struct s1150* ebx5;
    uint1_t cf6;

    if (!pf1) 
        goto 0x421589;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi4 + cf6));
}

struct s1151 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1152 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4215a6() {
    int1_t pf1;
    struct s1151* ebx2;
    struct s1152* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x4215a1;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_4215be(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4215b9;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_4215d6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4215d1;
}

void fun_4215ee() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4215e9;
}

void fun_4216c7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4216c2;
}

struct s1153 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1154 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421701(signed char cl) {
    int1_t pf2;
    struct s1153* ebx3;
    struct s1154* ebx4;

    if (pf2) {
        ebx3->f4 = ebx4->f4 >> cl;
    }
    goto 0x421712;
}

struct s1155 {
    signed char[4] pad4;
    signed char f4;
};

struct s1156 {
    signed char[4] pad4;
    signed char f4;
};

void fun_421736(int32_t ecx) {
    int1_t pf2;
    struct s1155* ebx3;
    struct s1156* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x421731;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 + bh5);
}

struct s1157 {
    signed char[4] pad4;
    signed char f4;
};

struct s1158 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42174e() {
    int1_t pf1;
    struct s1157* ebx2;
    struct s1158* ebx3;

    if (!pf1) 
        goto 0x421749;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_421766() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421761;
}

void fun_42177e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421779;
}

void fun_421796(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421791;
}

void fun_4217ae() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4217a9;
}

void fun_4217c6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4217c1;
}

struct s1159 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1160 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1161 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4217de() {
    int1_t pf1;
    struct s1159* ebx2;
    struct s1160* ebx3;
    int32_t edi4;
    struct s1161* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x4217d9;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_4217f8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4217f1;
    __asm__("fnstsw word [ebx+0x4]");
}

struct s1162 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42180e() {
    int1_t pf1;
    struct s1162* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x421809;
    ebx2->f4 = bh3;
}

struct s1163 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1164 {
    signed char[4] pad4;
    signed char f4;
};

void fun_421826() {
    int1_t pf1;
    struct s1163* ebx2;
    struct s1164* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x421821;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

void fun_421a2b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a26;
}

void fun_421a43() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a3e;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_421a5b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a56;
}

void fun_421a7f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a7a;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_421a97() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a92;
}

struct s1165 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421aaf() {
    int1_t pf1;
    struct s1165* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x421aaa;
    ebx2->f4 = edi3;
}

void fun_421ac9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421ac2;
    __asm__("arpl [ebx+0x4], di");
}

void fun_421adf() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421ada;
}

void fun_421af7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421af2;
}

struct s1166 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1167 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_421b1b(int32_t ecx) {
    int1_t pf2;
    struct s1166* ebx3;
    struct s1167* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x421b16;
    ebx3->f4 = ebx4->f4 & edi5;
}

void fun_421b33() {
    int1_t pf1;
    int32_t ebx2;

    if (!pf1) 
        goto 0x421b2e;
    *reinterpret_cast<unsigned char*>(ebx2 - 0xdae7bb) = 0xff;
}

void fun_421c1a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421c15;
}

struct s1168 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1169 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1170 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_421c32() {
    int1_t pf1;
    struct s1168* ebx2;
    struct s1169* ebx3;
    int32_t edi4;
    struct s1170* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x421c2d;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

struct s1171 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1172 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421c4a(int32_t ecx) {
    int1_t pf2;
    struct s1171* ebx3;
    struct s1172* ebx4;

    if (!pf2) 
        goto 0x421c45;
    ebx3->f4 = ebx4->f4 >> 1;
}

void fun_421c62(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421c5d;
    __asm__("fstp tword [ebx+0x4]");
}

struct s1173 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1174 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_421c7a() {
    int1_t pf1;
    struct s1173* ebx2;
    struct s1174* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x421c75;
    ebx2->f4 = ebx3->f4 & edi4;
}

struct s1175 {
    signed char[4] pad4;
    signed char f4;
};

struct s1176 {
    signed char[4] pad4;
    signed char f4;
};

void fun_421c92() {
    int1_t pf1;
    struct s1175* ebx2;
    struct s1176* ebx3;

    if (!pf1) 
        goto 0x421c8d;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

struct s1177 {
    signed char[4] pad4;
    signed char f4;
};

void fun_421caa(int32_t ecx) {
    int1_t pf2;
    struct s1177* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x421ca5;
    ebx3->f4 = bh4;
}

void fun_421cc2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421cbd;
}

void fun_421cda(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421cd5;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_421cf2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421ced;
}

void fun_421d0c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421d05;
}

void fun_421d64() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421d5d;
}

struct s1178 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1179 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421d7c() {
    int1_t pf1;
    struct s1178* ebx2;
    struct s1179* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x421d75;
    ebx2->f4 = ebx3->f4 + edi4;
}

struct s1180 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421d92() {
    struct s1180* ebx1;
    struct s1180* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x421d8d;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) + reinterpret_cast<uint1_t>(ebx1->f4 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) + cf4))));
}

void fun_421db8(signed char cl) {
    int32_t ebx2;
    int32_t ebx3;

    *reinterpret_cast<signed char*>(ebx2 - 0xdae7bb) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx3 - 0xdae7bb) + cl);
}

void fun_421df4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421def;
}

void fun_421e0c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421e07;
}

void fun_421e24() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421e1f;
}

void fun_421e3c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421e37;
}

void fun_421e78() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421e73;
}

void fun_421eb4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421eaf;
}

struct s1181 {
    signed char[4] pad4;
    signed char f4;
};

struct s1182 {
    signed char[4] pad4;
    signed char f4;
};

void fun_421ecc() {
    int1_t pf1;
    struct s1181* ebx2;
    struct s1182* ebx3;

    if (!pf1) 
        goto 0x421ec7;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

struct s1183 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1184 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421ee4() {
    int1_t pf1;
    struct s1183* ebx2;
    struct s1184* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x421edf;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_421efe() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x421ef7;
    gc087047b = eax2;
}

void fun_421f2c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421f27;
}

struct s1185 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421f44() {
    struct s1185* ebx1;
    struct s1185* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x421f3f;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) + reinterpret_cast<uint1_t>(ebx1->f4 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) + cf4))));
}

void fun_421f5c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421f57;
}

void fun_421f76(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421f6f;
}

void fun_421fa5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421fa0;
}

void fun_422000() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421ffb;
}

void fun_42201a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422013;
}

struct s1186 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_422030() {
    int1_t pf1;
    struct s1186* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x42202b;
    ebx2->f4 = ebx2->f4 ^ edi3;
}

void fun_422048() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422043;
}

void fun_422060() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42205b;
    __asm__("fstp tword [ebx+0x4]");
}

struct s1187 {
    signed char[4] pad4;
    signed char f4;
};

struct s1188 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422078() {
    int1_t pf1;
    struct s1187* ebx2;
    struct s1188* ebx3;

    if (!pf1) 
        goto 0x422073;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_422090() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42208b;
}

struct s1189 {
    signed char[4] pad4;
    signed char f4;
};

struct s1190 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4220c1() {
    int32_t ebp1;
    int32_t ebp2;
    int32_t ebp3;
    struct s1189* ebx4;
    struct s1190* ebx5;

    *reinterpret_cast<int16_t*>(ebp1 - 4) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(ebp2 - 4) + 1);
    if ((*reinterpret_cast<uint32_t*>(ebp3 - 4) & 0xffff) >= 16) 
        goto 0x422192;
    if (!(__intrinsic() || !__intrinsic())) {
        ebx4->f4 = reinterpret_cast<signed char>(ebx5->f4 >> 0x87);
    }
    do {
    } while (!__intrinsic());
}

void fun_4220fe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4220f9;
}

struct s1191 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1192 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_422170(int32_t ecx) {
    int1_t pf2;
    struct s1191* ebx3;
    struct s1192* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x42216b;
    ebx3->f4 = ebx4->f4 & edi5;
}

void fun_422188() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422183;
}

void fun_4221cd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4221c8;
}

struct s1193 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1194 {
    signed char[4] pad4;
    signed char f4;
};

struct s1195 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4221e5() {
    int1_t pf1;
    struct s1193* ebx2;
    struct s1194* ebx3;
    signed char bh4;
    struct s1195* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x4221e0;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

void fun_4221fd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4221f8;
}

struct s1196 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_422215() {
    struct s1196* ebx1;
    struct s1196* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x422210;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

struct s1197 {
    signed char[4] pad4;
    signed char f4;
};

struct s1198 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42222d() {
    int1_t pf1;
    struct s1197* ebx2;
    struct s1198* ebx3;

    if (!pf1) 
        goto 0x422228;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_422247() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422240;
}

void fun_42225d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422258;
}

void fun_422275(int32_t ecx) {
    int1_t pf2;
    void** eax3;

    if (!pf2) 
        goto 0x422270;
    gd287047b = eax3;
}

struct s1199 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1200 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42228d() {
    int1_t pf1;
    struct s1199* ebx2;
    struct s1200* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x422288;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_4222a5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4222a0;
}

void fun_4222bd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4222b8;
}

struct s1201 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1202 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4222e1(int32_t ecx) {
    int32_t ecx2;
    int1_t pf3;
    struct s1201* ebx4;
    struct s1202* ebx5;

    ecx2 = ecx;
    if (!pf3) 
        goto 0x4222dc;
    ebx4->f4 = ebx5->f4 >> *reinterpret_cast<signed char*>(&ecx2);
}

void fun_4222f9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4222f4;
}

void fun_422311() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42230c;
}

void fun_42234a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422345;
}

struct s1203 {
    signed char[4] pad4;
    signed char f4;
};

struct s1204 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422387() {
    int1_t pf1;
    struct s1203* ebx2;
    struct s1204* ebx3;

    if (!pf1) 
        goto 0x422380;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_42239d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422398;
}

void fun_4223f3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4223ee;
}

void fun_422431() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42242c;
}

void fun_422449() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x422444;
    ged87047b = eax2;
}

void fun_422461() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x42245c;
    *reinterpret_cast<signed char*>(&gd287047b) = al2;
}

struct s1205 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422483() {
    struct s1205* ebx1;
    struct s1205* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x42247e;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

struct s1206 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1207 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1208 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42249d() {
    int1_t pf1;
    struct s1206* ebx2;
    struct s1207* ebx3;
    int32_t edi4;
    struct s1208* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x422496;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_4224b3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4224ae;
}

struct s1209 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4224cb() {
    int1_t pf1;
    struct s1209* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x4224c6;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_42252a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422523;
}

struct s1210 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42254c(int32_t ecx) {
    int1_t pf2;
    struct s1210* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x422547;
    ebx3->f4 = edi4;
}

void fun_422564() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42255f;
    __asm__("fnstsw word [ebx+0x4]");
}

struct s1211 {
    signed char[4] pad4;
    signed char f4;
};

struct s1212 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42257c(int32_t ecx) {
    int32_t ebx2;
    signed char bh3;
    struct s1211* ebx4;
    unsigned char bh5;
    struct s1212* ebx6;

    if (!(__intrinsic() || !__intrinsic())) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx2) + 1) = reinterpret_cast<unsigned char>(bh3 - reinterpret_cast<unsigned char>(ebx4->f4 + reinterpret_cast<uint1_t>(bh5 < reinterpret_cast<unsigned char>(ebx6->f4 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) < 12)))));
    }
    goto ebx2;
}

struct s1213 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1214 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4225a6(signed char cl) {
    int1_t pf2;
    struct s1213* ebx3;
    struct s1214* ebx4;

    if (!pf2) 
        goto 0x42259f;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_4225be() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4225b7;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_4225d6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4225cf;
}

void fun_4225ec(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4225e7;
}

void fun_422604() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4225ff;
}

struct s1215 {
    signed char[12] pad12;
    int32_t f12;
};

struct s1216 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1217 {
    int32_t f0;
    void** f4;
};

struct s1218 {
    int32_t f0;
    struct s10* f4;
    void** f8;
};

struct s1219 {
    int32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
};

void fun_42261a(void** ecx) {
    int1_t pf2;
    struct s1215* ebp3;
    struct s1215** ebp4;
    struct s1216* ebx5;
    struct s1216* ebx6;
    int32_t eax7;
    uint1_t cf8;
    int32_t* esp9;
    struct s1217* esp10;
    void** eax11;
    int32_t* esp12;
    uint32_t* ecx13;
    uint32_t** esp14;
    struct s1218* esp15;
    unsigned char tmp8_16;
    uint32_t edi17;
    uint32_t edi18;
    int32_t edx19;
    int32_t edx20;
    uint32_t* ecx21;
    struct s1219* esp22;
    void* esp23;
    int1_t pf24;
    int32_t esi25;
    int32_t esi26;
    struct s1216* ebx27;
    int1_t pf28;
    uint32_t* ecx29;
    struct s1216* ebx30;
    uint32_t* ecx31;
    struct s1216* ebx32;
    struct s72* eax33;
    uint1_t cf34;
    int1_t pf35;
    int32_t edx36;
    int32_t edx37;

    if (!pf2) 
        goto 0x422617;
    __asm__("fistp qword [ebx+0x4]");
    ebp3 = *ebp4;
    ebx5 = ebx6;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp3) - 12) = eax7 + 0x432358 + cf8;
    esp9 = reinterpret_cast<int32_t*>(ebp4 + 1 - 1);
    *esp9 = ebp3->f12;
    esp10 = reinterpret_cast<struct s1217*>(esp9 - 1);
    esp10->f0 = 0x422687;
    eax11 = fun_41fe22(ecx, esp10->f4);
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebp3) - 8) = eax11;
    esp12 = reinterpret_cast<int32_t*>(&esp10->f4 + 4 - 4);
    *esp12 = 0x67;
    ecx13 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp3) - 12);
    esp14 = reinterpret_cast<uint32_t**>(esp12 - 1);
    *esp14 = ecx13;
    esp15 = reinterpret_cast<struct s1218*>(esp14 - 1);
    esp15->f0 = 0x422698;
    fun_411c70(esp15->f4, esp15->f8);
    if (!(__intrinsic() || (ebx5 = ebx5, !__intrinsic()))) {
        tmp8_16 = ebx5->f4;
        ebx5->f4 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1) = tmp8_16;
    }
    edi17 = edi18;
    if (!(__intrinsic() || (ecx13 = ecx13, !__intrinsic()))) {
        ebx5->f4 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1);
    }
    edx19 = edx20;
    ecx21 = ecx13;
    esp22 = reinterpret_cast<struct s1219*>(reinterpret_cast<int32_t>(ebp3) + 4 - 4);
    esp22->f0 = 0x422796;
    fun_4117e0(esp22->f4, esp22->f8, esp22->f12, esp22->f16);
    esp23 = reinterpret_cast<void*>(&esp22->f4 + 8);
    pf24 = __intrinsic();
    if (pf24 || !pf24) {
        edi17 = edi17;
    } else {
        ebx5->f4 = reinterpret_cast<unsigned char>(ebx5->f4 + edi17);
        pf24 = __intrinsic();
    }
    esi25 = esi26;
    ebx27 = ebx5;
    do {
        ebx27 = ebx27;
    } while (!pf24);
    ebx27->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx27->f4) >> *reinterpret_cast<signed char*>(&ecx21));
    pf28 = __intrinsic();
    ecx29 = ecx21;
    ebx30 = ebx27;
    if (!(pf28 || (ecx29 = ecx29, !pf28))) {
        ebx30->f4 = reinterpret_cast<unsigned char>(ebx30->f4 ^ edi17);
        pf28 = __intrinsic();
    }
    ecx31 = ecx29;
    do {
        edx19 = edx19;
    } while (!pf28);
    __asm__("fdivr qword [ebx+0x4]");
    ebx32 = ebx30;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp23) - 4) = 0x422890;
    eax33 = fun_421fc2(ecx31);
    cf34 = __intrinsic();
    pf35 = __intrinsic();
    if (!(pf35 || !pf35)) {
        cf34 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx32) + 1) < ebx32->f4);
        pf35 = __intrinsic();
    }
    edx36 = edx19;
    if (pf35 || !pf35) {
        edx36 = edx36;
    } else {
        eax33 = reinterpret_cast<struct s72*>(reinterpret_cast<uint32_t>(eax33) - 0x3f78fb85 + cf34);
    }
    edx37 = edx36 + 1;
    eax33->f0 = reinterpret_cast<signed char>(eax33->f0 + *reinterpret_cast<signed char*>(&eax33));
    eax33->f0 = reinterpret_cast<signed char>(eax33->f0 + *reinterpret_cast<signed char*>(&eax33));
    *reinterpret_cast<signed char*>(esi25 - 0x75) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi25 - 0x75) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax33) + 1));
    eax33->f104 = reinterpret_cast<unsigned char>(eax33->f104 | *reinterpret_cast<unsigned char*>(&edx37));
}

void fun_422628() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422623;
}

void fun_422640(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42263b;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_422658() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422653;
}

void fun_422670() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42266b;
}

struct s1220 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1221 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4226bc() {
    int1_t pf1;
    struct s1220* ebx2;
    struct s1221* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x4226b5;
    ebx2->f4 = ebx3->f4 | edi4;
}

void fun_4226d2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4226cd;
}

void fun_4226ea(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4226e5;
}

struct s1222 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1223 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422702(int32_t ecx) {
    int1_t pf2;
    struct s1222* ebx3;
    struct s1223* ebx4;
    int32_t edi5;

    if (!pf2) 
        goto 0x4226fd;
    ebx3->f4 = ebx4->f4 - edi5;
}

void fun_42271a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422715;
}

struct s1224 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1225 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_42273e(int32_t ecx) {
    int1_t pf2;
    struct s1224* ebx3;
    struct s1225* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x422739;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 | bh5);
}

void fun_422756() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422751;
}

struct s1226 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1227 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422770() {
    int1_t pf1;
    struct s1226* ebx2;
    struct s1227* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x422769;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

struct s1228 {
    signed char[1] pad1;
    int32_t f1;
};

struct s1229 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_422788() {
    int1_t pf1;
    struct s1228* edx2;
    struct s1229* edx3;

    if (!pf1) 
        goto 0x422781;
    edx2->f1 = edx3->f1 - 0x52f4558d;
}

void fun_4227b8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4227b3;
}

void fun_4227d0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4227cb;
}

void fun_4227ea() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4227e3;
}

void fun_42281a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422813;
}

void fun_422830() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42282b;
}

struct s1230 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422848() {
    int1_t pf1;
    struct s1230* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x422843;
    ebx2->f4 = edi3;
}

struct s1231 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1232 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_422860() {
    int1_t pf1;
    struct s1231* ebx2;
    struct s1232* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x42285b;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_422878() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422873;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_4228b2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4228ad;
}

void fun_4228ca() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4228c5;
}

void fun_4228e2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4228dd;
}

void fun_4228fa() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4228f5;
}

void fun_42292c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422925;
}

struct s1233 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422942() {
    int1_t pf1;
    struct s1233* ebx2;

    if (!pf1) 
        goto 0x42293d;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 1);
}

struct s1234 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_422b6b() {
    int1_t pf1;
    struct s1234* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x422b66;
    ebx2->f4 = ebx2->f4 ^ edi3;
}

void fun_422bba() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422bb5;
}

int32_t gc4830000;

void fun_422c4d(signed char cl) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;
    uint1_t cf5;
    int32_t eax6;
    signed char al7;
    int32_t ebp8;

    if (pf2) {
        *reinterpret_cast<unsigned char*>(ebx3 - 0x17adf7ab) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx4 - 0x17adf7ab) + cl) + cf5);
    }
    *reinterpret_cast<signed char*>(&gc4830000) = cl;
    *reinterpret_cast<signed char*>(&eax6) = reinterpret_cast<signed char>(al7 + 0x66);
    *reinterpret_cast<int32_t*>(ebp8 - 0x98) = eax6;
    goto 0x422ca4;
}

void fun_422c8b(signed char cl) {
    int1_t pf2;
    int32_t ebx3;
    uint1_t cf4;

    if (!pf2) 
        goto 0x422c86;
    *reinterpret_cast<unsigned char*>(ebx3 + 0x88b0845) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx3 + 0x88b0845) + cl) + cf4);
}

struct s1235 {
    signed char[4] pad4;
    int32_t f4;
    uint32_t* f8;
};

struct s1236 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_422cd6(int32_t* ecx, int32_t a2, int32_t a3) {
    struct s1235* ebp4;
    struct s1235* ebp5;
    int1_t pf6;
    uint32_t edi7;
    uint32_t edi8;
    struct s1236* ebx9;
    struct s1236* ebx10;
    int32_t eax11;
    int32_t eax12;
    int32_t eax13;
    uint32_t edi14;
    int32_t eax15;
    uint32_t* eax16;
    int1_t pf17;
    int32_t* ecx18;
    uint1_t cf19;
    int32_t esi20;

    ebp4 = ebp5;
    if (!pf6) {
        edi7 = edi8;
    }
    ebx9 = ebx10;
    eax13 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax11 + eax12 + 0x47b0000)());
    edi14 = edi7;
    eax15 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax13 - 1)());
    eax16 = reinterpret_cast<uint32_t*>(eax15 + 0x43229c);
    pf17 = __intrinsic();
    if (!eax16) {
        if (pf17 || (ebx9 = ebx9, !pf17)) {
            edi14 = edi14;
        } else {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx9) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx9) + 1) + ebx9->f4);
        }
    } else {
        if (pf17 || !pf17) {
            edi14 = edi14;
        } else {
            __asm__("fistp qword [ebx+0x4]");
        }
        edi14 = edi14;
        *ecx = *ecx + 1;
        if (*ecx) 
            goto addr_0x422db2_28; else 
            goto addr_0x422d6f_29;
    }
    ecx18 = ecx;
    do {
        *reinterpret_cast<int16_t*>(&eax16) = reinterpret_cast<int16_t>(*reinterpret_cast<signed char*>(&eax16) * *reinterpret_cast<signed char*>(&ebx9));
    } while (!__undefined());
    ebx9->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx9->f4 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx9) + 1)) + __intrinsic());
    *ebp4->f8 = reinterpret_cast<uint32_t>(ecx18) & 0xff;
    if (!(__intrinsic() || !__intrinsic())) {
        ebx9->f4 = reinterpret_cast<unsigned char>(ebx9->f4 ^ edi14);
    }
    do {
    } while (!__intrinsic());
    __asm__("fistp qword [ebx+0x4]");
    ebp4 = ebp4;
    *eax16 = *eax16 + reinterpret_cast<uint32_t>(eax16);
    addr_0x422eea_60:
    goto ebp4->f4;
    addr_0x422db2_28:
    cf19 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(&(ebp4 - 11)->pad4) < 2);
    pf17 = __intrinsic();
    if (*reinterpret_cast<uint32_t*>(&(ebp4 - 11)->pad4) == 2) {
        if (!(pf17 || !pf17)) {
            cf19 = reinterpret_cast<uint1_t>(ebx9->f4 < reinterpret_cast<unsigned char>(0x6ebff87));
            pf17 = __intrinsic();
        }
        do {
        } while (!pf17);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx9) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx9) + 1) - reinterpret_cast<unsigned char>(ebx9->f4 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx9) + 1) < reinterpret_cast<unsigned char>(ebx9->f4 + cf19))));
        goto ebx9;
    }
    addr_0x422d6f_29:
    if (!(__intrinsic() || !__intrinsic())) {
        __asm__("arpl [ebx+0x4], di");
    }
    gc4830000 = esi20;
    *reinterpret_cast<signed char*>(&eax16) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax16) + 0x66);
    *reinterpret_cast<uint32_t**>(reinterpret_cast<int32_t>(ebp4) - 0x98) = eax16;
    goto addr_0x422eea_60;
}

void fun_422cee() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422ce9;
}

struct s1237 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_422d10() {
    int1_t pf1;
    struct s1237* ebx2;
    int32_t edi3;
    uint1_t cf4;

    if (!pf1) 
        goto 0x422d0b;
    ebx2->f4 = ebx2->f4 + edi3 + cf4;
}

void fun_422d28(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422d23;
}

void fun_422d63() {
    int1_t pf1;
    int32_t ebx2;
    int32_t eax3;

    if (!pf1) 
        goto 0x422d5c;
    *reinterpret_cast<int32_t*>(ebx2 - 0x8343) = eax3;
}

void fun_422d8e(int32_t ecx) {
    int32_t ecx2;
    int1_t pf3;
    int32_t ebx4;
    int32_t ebx5;
    int32_t ebx6;
    uint1_t cf7;

    ecx2 = ecx;
    if (!pf3) 
        goto 0x422d89;
    *reinterpret_cast<unsigned char*>(ebx4 - 0x17aef7b3) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx5 - 0x17aef7b3) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx2) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx6 - 0x17aef7b3) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&ecx2) + cf7))));
}

void fun_422dda() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422dd5;
}

struct s1238 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422df2(int32_t ecx) {
    int1_t pf2;
    struct s1238* ebx3;
    int32_t ebp4;
    int32_t eax5;

    if (pf2) {
        ebx3->f4 = ebx3->f4 >> *reinterpret_cast<signed char*>(&ecx);
    }
    __asm__("les eax, [esi]");
    *reinterpret_cast<int32_t*>(ebp4 - 0x98) = eax5;
    goto 0x422eea;
}

void fun_422e4f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422e48;
    __asm__("fdivr dword [ebx+0x4]");
}

struct s1239 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1240 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422e65(int32_t ecx) {
    int1_t pf2;
    struct s1239* ebx3;
    struct s1240* ebx4;

    if (!pf2) 
        goto 0x422e60;
    ebx3->f4 = ebx4->f4 >> 1;
}

void fun_422e7d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422e78;
}

struct s1241 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1242 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422ecb() {
    int1_t pf1;
    struct s1241* ebx2;
    struct s1242* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x422ec4;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_422ee1(unsigned char cl) {
    int1_t pf2;
    int32_t esi3;

    if (!pf2) 
        goto 0x422edc;
    *reinterpret_cast<int32_t*>(esi3 - 72) = *reinterpret_cast<int32_t*>(esi3 - 72) << cl;
}

struct s1243 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1244 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422f1c(int32_t ecx) {
    int1_t pf2;
    uint1_t cf3;
    int1_t pf4;
    struct s1243* ebx5;
    struct s1244* ebx6;
    int32_t edi7;

    if (pf2) {
        cf3 = __intrinsic();
        pf4 = __intrinsic();
    }
    __asm__("in eax, dx");
    if (!(pf4 || !pf4)) {
        ebx5->f4 = ebx6->f4 + edi7 + cf3;
        pf4 = __intrinsic();
    }
    if (pf4 || !pf4) {
    }
}

void fun_422f34() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422f2f;
}

struct s1245 {
    signed char[4] pad4;
    signed char f4;
};

struct s1246 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422f4e() {
    int1_t pf1;
    struct s1245* ebx2;
    struct s1246* ebx3;

    if (!pf1) 
        goto 0x422f47;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_422f64(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422f5f;
}

void fun_422f7c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422f77;
}

struct s1247 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1248 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_422f96() {
    int1_t pf1;
    struct s1247* ebx2;
    struct s1248* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x422f8f;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_422fc4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422fbf;
}

void fun_422fe6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422fe1;
}

struct s1249 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422ffe() {
    int1_t pf1;
    struct s1249* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x422ff9;
    ebx2->f4 = edi3;
}

void fun_423016() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423011;
}

void fun_42302e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423029;
}

void fun_423046() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423041;
}

struct s1250 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1251 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42305e(int32_t ecx) {
    int32_t ecx2;
    int1_t pf3;
    struct s1250* ebx4;
    struct s1251* ebx5;

    ecx2 = ecx;
    if (!pf3) 
        goto 0x423059;
    ebx4->f4 = ebx5->f4 >> *reinterpret_cast<signed char*>(&ecx2);
}

struct s1252 {
    signed char[4] pad4;
    signed char f4;
};

struct s1253 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423076() {
    int1_t pf1;
    struct s1252* ebx2;
    struct s1253* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x423071;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_423090() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423089;
}

void fun_4230a6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4230a1;
}

struct s1254 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1255 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4230be() {
    int1_t pf1;
    struct s1254* ebx2;
    struct s1255* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4230b9;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

struct s1256 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4230d8() {
    int1_t pf1;
    struct s1256* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x4230d1;
    ebx2->f4 = bh3;
}

void fun_4230fa(int32_t ecx) {
    int1_t pf2;
    signed char al3;

    if (!pf2) 
        goto 0x4230f5;
    *reinterpret_cast<signed char*>(&gdb87047b) = al3;
}

void fun_423112(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42310d;
}

struct s1257 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423159() {
    int1_t pf1;
    struct s1257* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x423152;
    ebx2->f4 = edi3;
}

void fun_423189() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423182;
}

void fun_42319f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42319a;
}

void fun_4231b7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4231b2;
}

struct s1258 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1259 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4231cf() {
    int1_t pf1;
    struct s1258* ebx2;
    struct s1259* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4231ca;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_4231e7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4231e2;
}

struct s1260 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1261 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4231ff() {
    int1_t pf1;
    struct s1260* ebx2;
    struct s1261* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x4231fa;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_42323c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423237;
}

void fun_423254() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42324f;
}

struct s1262 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1263 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42326c() {
    int1_t pf1;
    struct s1262* ebx2;
    struct s1263* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x423267;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_423286() {
    int1_t pf1;
    int32_t ebx2;
    uint16_t cs3;

    if (!pf1) 
        goto 0x42327f;
    *reinterpret_cast<uint32_t*>(ebx2 - 0x17aef7b3) = static_cast<uint32_t>(cs3);
}

void fun_4232d3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4232ce;
}

struct s1264 {
    signed char[4] pad4;
    signed char f4;
};

struct s1265 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423303(signed char cl) {
    int1_t pf2;
    struct s1264* ebx3;
    struct s1265* ebx4;

    if (!pf2) 
        goto 0x4232fe;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_423340() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42333b;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_423358(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x423353;
}

void fun_42337c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423377;
}

void fun_423394() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42338f;
}

struct s1266 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4233ac() {
    struct s1266* ebx1;
    struct s1266* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x4233a7;
    ebx1->f4 = reinterpret_cast<signed char>(ebx1->f4 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_4233c4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4233bf;
}

void fun_4233dc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4233d7;
}

void fun_423434(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42342f;
}

struct s1267 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1268 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42344c() {
    int1_t pf1;
    struct s1267* ebx2;
    struct s1268* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x423447;
    ebx2->f4 = ebx3->f4 | edi4;
}

struct s1269 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1270 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423464() {
    int1_t pf1;
    struct s1269* ebx2;
    struct s1270* ebx3;

    if (!pf1) 
        goto 0x42345f;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_42347c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423477;
}

struct s1271 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1272 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1273 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1274 {
    int32_t f0;
    int16_t f4;
};

void fun_4234b7(int32_t ecx) {
    int1_t pf2;
    struct s1271* ebx3;
    int32_t edi4;
    int32_t ecx5;
    struct s1272* ebx6;
    struct s1272* ebx7;
    struct s1273*** ebp8;
    struct s1273*** ebp9;
    int1_t pf10;
    int1_t pf11;
    int32_t* edi12;
    int32_t* edi13;
    void** eax14;
    int1_t pf15;
    int1_t pf16;
    void** eax17;
    int32_t eax18;
    int32_t eax19;
    int32_t eax20;
    uint1_t cf21;
    int1_t pf22;
    struct s1272* ebx23;
    struct s1273** ebp24;
    struct s1273* ebp25;
    int32_t ecx26;
    struct s1272* ebx27;
    int32_t* edi28;
    struct s1274* esp29;
    int32_t eax30;
    int16_t* esp31;
    uint32_t* eax32;
    struct s1273* ebp33;
    int16_t es34;
    struct s1272* ebx35;
    struct s1273* ebp36;
    int16_t ax37;

    if (!pf2) {
        ecx = ecx;
    } else {
        ebx3->f4 = edi4;
    }
    ecx5 = ecx;
    ebx6 = ebx7;
    ebp8 = ebp9;
    __asm__("in eax, dx");
    if (pf10 || !pf11) {
        edi12 = edi13;
    } else {
        gd287047b = eax14;
    }
    if (!(pf15 || (ebx6 = ebx6, !pf16))) {
        ged87047b = eax17;
    }
    eax20 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax18 + eax19 + 0x47b0000)(__return_address()));
    do {
        *reinterpret_cast<unsigned char*>(&ebx6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx6) >> 6);
    } while (!__intrinsic());
    do {
        *reinterpret_cast<int16_t*>(&eax20) = reinterpret_cast<int16_t>(*reinterpret_cast<signed char*>(&eax20) * reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&ebx6)));
        ebx6 = ebx6;
    } while (!__undefined());
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) + ebx6->f4);
    cf21 = __intrinsic();
    pf22 = __intrinsic();
    if (!(pf22 || !pf22)) {
        ebx6->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx6->f4) >> 1);
        cf21 = __intrinsic();
        pf22 = __intrinsic();
    }
    ebx23 = ebx6;
    ebp24 = *ebp8;
    if (pf22 || (ebx23 = ebx23, !pf22)) {
        ebp24 = ebp24;
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx23) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx23) + 1) + ebx23->f4) + cf21);
        cf21 = __intrinsic();
    }
    ebp25 = *ebp24;
    ecx26 = ecx5;
    ebx27 = ebx23;
    edi28 = edi12;
    esp29 = reinterpret_cast<struct s1274*>(ebp24 + 1 - 1);
    esp29->f0 = 0x4236c6;
    eax30 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax20 - 1)());
    esp31 = &esp29->f4;
    eax32 = reinterpret_cast<uint32_t*>(eax30 + 0x43229c + cf21);
    if (!eax32) {
        if (!(__intrinsic() || !__intrinsic())) {
            __asm__("fidivr word [ebx+0x4]");
        }
        ebp33 = ebp25;
        *eax32 = *eax32 + reinterpret_cast<uint32_t>(eax32);
    } else {
        if (__intrinsic() || (ecx26 = ecx26, !__intrinsic())) {
        }
        do {
            *reinterpret_cast<unsigned char*>(&ebx27) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx27) >> *reinterpret_cast<signed char*>(&ecx26));
            --esp31;
            *esp31 = es34;
            ecx26 = ecx26;
        } while (!__intrinsic());
        ebx35 = ebx27;
        ebp36 = ebp25;
        *edi28 = *edi28 + ecx26;
        do {
            *reinterpret_cast<unsigned char*>(&ebx35) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx35) >> 6);
        } while (!__intrinsic());
        ebx35->f4 = reinterpret_cast<unsigned char>(ebx35->f4 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx35) + 1) + reinterpret_cast<uint1_t>(ebx35->f4 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx35) + 1) + __intrinsic()))));
        ebp33 = ebp36;
        *reinterpret_cast<int32_t*>(esp31 - 2) = 0x42382d;
        ax37 = fun_40b7e0();
        *reinterpret_cast<int16_t*>(&(ebp33 - 19)->pad4) = ax37;
    }
    goto ebp33->f4;
}

void fun_4234cf() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4234ca;
}

struct s1275 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4234e7() {
    int1_t pf1;
    struct s1275* ebx2;

    if (!pf1) 
        goto 0x4234e2;
    ebx2->f4 = 0;
}

struct s1276 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4234ff() {
    int1_t pf1;
    struct s1276* ebx2;

    if (!pf1) 
        goto 0x4234fa;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 0x87);
}

void fun_423517() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423512;
}

void fun_42353b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423536;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_42356b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423566;
    __asm__("rol bh, 1");
}

void fun_42358d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423588;
}

struct s1277 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1278 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4235b3() {
    int1_t pf1;
    struct s1277* ebx2;
    struct s1278* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x4235ac;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

struct s1279 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1280 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1281 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4235c9() {
    int1_t pf1;
    struct s1279* ebx2;
    struct s1280* ebx3;
    int32_t edi4;
    struct s1281* ebx5;
    uint1_t cf6;

    if (!pf1) 
        goto 0x4235c4;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi4 + cf6));
}

struct s1282 {
    signed char[4] pad4;
    signed char f4;
};

struct s1283 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4235f9() {
    int1_t pf1;
    struct s1282* ebx2;
    struct s1283* ebx3;

    if (!pf1) 
        goto 0x4235f4;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_423613() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42360c;
}

void fun_423641() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42363c;
}

void fun_423659() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423654;
}

void fun_423673() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42366c;
}

void fun_423689() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423684;
}

struct s1284 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1285 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4236a3() {
    int1_t pf1;
    struct s1284* ebx2;
    struct s1285* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x42369c;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_4236b9(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4236b4;
}

void fun_4236f2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4236ed;
}

void fun_42370a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423705;
}

void fun_423722() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42371d;
}

void fun_42373a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423735;
}

void fun_423752(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42374d;
}

void fun_42376a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423765;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_423782() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42377d;
}

void fun_42379a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423795;
}

struct s1286 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1287 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4237cd() {
    int1_t pf1;
    struct s1286* ebx2;
    struct s1287* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x4237c6;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

struct s1288 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1289 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4237e3() {
    int1_t pf1;
    struct s1288* ebx2;
    struct s1289* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4237de;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_4237fb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4237f6;
}

struct s1290 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1291 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_423815() {
    int1_t pf1;
    struct s1290* ebx2;
    struct s1291* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x42380e;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

struct s1292 {
    signed char[4] pad4;
    signed char f4;
};

struct s1293 {
    signed char[8] pad8;
    int32_t f8;
};

void fun_423843(int32_t ecx) {
    int1_t pf2;
    struct s1292* ebx3;
    struct s1292* ebx4;
    int1_t pf5;
    int32_t* edx6;
    int32_t v7;
    struct s1293* ebp8;
    int16_t ax9;

    if (pf2 || (ebx3 = ebx4, !pf5)) {
        ecx = ecx;
    } else {
        ebx3->f4 = reinterpret_cast<signed char>(ebx3->f4 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx3) + 1));
    }
    *edx6 = *edx6 + 1;
    if (*edx6) 
        goto 0x4238d0;
    v7 = ebp8->f8;
    ax9 = fun_40b1c0(ecx, v7, __return_address());
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(ebp8) - 0x98) = ax9;
    goto 0x423940;
}

void fun_423862() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42385d;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_42387a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423875;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_423892() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42388d;
}

void fun_4238ac() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4238a5;
    __asm__("fild word [ebx+0xffff7cbd]");
}

struct s1294 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4238ef() {
    int1_t pf1;
    struct s1294* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4238ea;
    ebx2->f4 = ebx2->f4 + edi3;
}

struct s1295 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1296 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_423907() {
    int1_t pf1;
    struct s1295* ebx2;
    struct s1296* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x423902;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

struct s1297 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1298 {
    signed char[4] pad4;
    signed char f4;
};

struct s1299 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_42391f() {
    int1_t pf1;
    struct s1297* ebx2;
    struct s1298* ebx3;
    signed char bh4;
    struct s1299* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x42391a;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

void fun_423937() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423932;
}

struct s1300 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1301 {
    signed char[4] pad4;
    signed char f4;
};

struct s1302 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423a20(signed char cl) {
    int1_t pf2;
    struct s1300* ebx3;
    struct s1301* ebx4;
    signed char bh5;
    uint1_t cf6;
    int1_t pf7;
    struct s1302* ebx8;
    struct s1302* tmp32_9;
    uint1_t cf10;
    int1_t pf11;
    struct s1302* ebx12;
    int1_t pf13;
    struct s1302* ebx14;
    int32_t* eax15;
    int32_t* eax16;
    int32_t eax17;
    signed char* eax18;
    signed char* eax19;
    signed char al20;

    if (pf2) {
        ebx3->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx4->f4 + bh5) + cf6);
        pf7 = __intrinsic();
    }
    do {
        __asm__("fucomi st0, st3");
        ebx8 = tmp32_9;
    } while (!pf7);
    ebx8->f4 = reinterpret_cast<signed char>(ebx8->f4 >> cl);
    cf10 = __intrinsic();
    pf11 = __intrinsic();
    ebx12 = ebx8;
    if (!(pf11 || !pf11)) {
        ebx12->f4 = reinterpret_cast<signed char>(ebx12->f4 >> 0x87);
        cf10 = __intrinsic();
        pf11 = __intrinsic();
    }
    do {
        __asm__("fucomi st0, st3");
    } while (!pf11);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx12) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx12) + 1) - reinterpret_cast<unsigned char>(ebx12->f4 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx12) + 1) < reinterpret_cast<unsigned char>(ebx12->f4 + cf10))));
    pf13 = __intrinsic();
    ebx14 = ebx12;
    do {
        __asm__("fucomi st0, st3");
    } while (!pf13);
    __asm__("rol edi, 0x45");
    __asm__("clc ");
    *eax15 = *eax16 + eax17;
    *eax18 = reinterpret_cast<signed char>(*eax19 + al20);
    if (__intrinsic() || !__intrinsic()) {
    }
    goto ebx14;
}

void fun_423a38() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423a33;
}

void fun_423a50() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423a4b;
}

void fun_423a68() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423a63;
}

struct s1303 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1304 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_423a8e() {
    int1_t pf1;
    struct s1303* ebx2;
    struct s1304* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x423a87;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_423aa6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423a9f;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1305 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1306 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423abc() {
    int1_t pf1;
    struct s1305* ebx2;
    struct s1306* ebx3;

    if (!pf1) 
        goto 0x423ab7;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s1307 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423b8a() {
    int1_t pf1;
    struct s1307* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x423b85;
    ebx2->f4 = edi3;
}

void fun_423ba4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423b9d;
}

void fun_423bf9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423bf4;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1308 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_423c46() {
    struct s1308* ebx1;
    struct s1308* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x423c41;
    ebx1->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1)) + cf4);
}

void fun_423c85() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423c80;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_423ca6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423ca1;
}

struct s1309 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_423cbe() {
    int1_t pf1;
    struct s1309* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x423cb9;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_423d64() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423d5f;
}

void fun_423dda() {
    int1_t pf1;
    unsigned char* edx2;
    unsigned char* edx3;
    unsigned char ch4;

    if (!pf1) 
        goto 0x423dd5;
    *edx2 = reinterpret_cast<unsigned char>(*edx3 ^ ch4);
}

void fun_423ebe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423eb9;
}

void fun_423ed6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423ed1;
    __asm__("rol byte [ebx+0xffff38bd], cl");
}

struct s1310 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1311 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423f10() {
    int1_t pf1;
    struct s1310* ebx2;
    struct s1311* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x423f0b;
    ebx2->f4 = ebx3->f4 - edi4;
}

struct s1312 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1313 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423f3b() {
    int1_t pf1;
    struct s1312* ebx2;
    struct s1313* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x423f36;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_423f55() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423f4e;
}

void fun_423fd1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423fcc;
}

void fun_423fe8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423fe1;
    __asm__("fdivr qword [ebx+0x4]");
}

void fun_423ffe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423ff9;
}

struct s1314 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1315 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424034() {
    int1_t pf1;
    struct s1314* ebx2;
    struct s1315* ebx3;

    if (!pf1) 
        goto 0x42402f;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_424077() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424072;
}

void fun_42408f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42408a;
}

struct s1316 {
    uint32_t f0;
    signed char[16777181] pad16777185;
    int32_t f16777185;
};

struct s1317 {
    signed char[8] pad8;
    struct s1316* f8;
};

struct s1318 {
    signed char[8] pad8;
    void** f8;
};

struct s1319 {
    signed char[4] pad4;
    unsigned char f4;
    signed char[803874045] pad803874050;
    unsigned char f803874050;
};

struct s1320 {
    signed char[4] pad4;
    signed char f4;
};

struct s1321 {
    signed char[8] pad8;
    int32_t** f8;
};

void fun_4240ab() {
    int32_t eax1;
    struct s1316* ecx2;
    struct s1317* ebp3;
    void** eax4;
    struct s1318* ebp5;
    uint32_t edi6;
    uint32_t edi7;
    struct s1319* ebx8;
    signed char bh9;
    struct s1320* ebx10;
    struct s1319* ebx11;
    struct s1321* ebp12;
    struct s1321* ebp13;
    struct s1321* ebp14;
    uint32_t edi15;
    int32_t* eax16;
    uint32_t edi17;
    uint32_t edi18;

    if (eax1) {
        ecx2 = ebp3->f8;
        eax4 = ebp5->f8;
        *eax4 = reinterpret_cast<void*>(ecx2->f0 & 0xf3456732);
        if (__intrinsic() || !__intrinsic()) {
            edi6 = edi7;
        } else {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx8) + 1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(bh9 + ebx10->f4)));
        }
        ebx11 = ebx8;
        *eax4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(*eax4) + reinterpret_cast<int32_t>(eax4));
        if (__intrinsic() || !__intrinsic()) {
            ebp12 = ebp13;
        } else {
            ebx11->f4 = reinterpret_cast<unsigned char>(ebx11->f4 + edi6 + __intrinsic());
        }
        ebp14 = ebp12;
        edi15 = edi6;
    }
    ecx2->f16777185 = ecx2->f16777185 + 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp14) - 0x748a8b37) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebp14) - 0x748a8b37) + *reinterpret_cast<signed char*>(&eax4));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx11) + 0x2fea2502) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx11) + 0x2fea2502) | *reinterpret_cast<unsigned char*>(&ecx2));
    eax16 = reinterpret_cast<int32_t*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax4)));
    *ebp14->f8 = eax16;
    if (!(__intrinsic() || !__intrinsic())) {
        ebx11->f4 = reinterpret_cast<unsigned char>(ebx11->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx11) + 1));
    }
    edi17 = edi15;
    do {
        *reinterpret_cast<unsigned char*>(&ebx11) = 0;
    } while (!__intrinsic());
    edi18 = edi17 | ebx11->f4;
    *eax16 = *eax16 + reinterpret_cast<int32_t>(eax16);
    if (!(__intrinsic() || !__intrinsic())) {
        ebx11->f4 = reinterpret_cast<unsigned char>(ebx11->f4 + edi18 + __intrinsic());
    }
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp14) + 1 + 1 + 4);
}

void fun_4240de() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4240d9;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_424114() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42410f;
}

void fun_42416f(int32_t ecx) {
    int1_t pf2;
    int32_t esi3;
    int32_t esi4;
    signed char ah5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x42416a;
    *reinterpret_cast<unsigned char*>(esi3 - 57) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi4 - 57) + ah5) + cf6);
}

void fun_42419b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424194;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_4241b5(int32_t* ecx) {
    int32_t* edi2;
    int32_t* edi3;
    int32_t* ecx4;
    signed char* eax5;
    signed char* eax6;
    int32_t eax7;

    if (__intrinsic() || !__intrinsic()) {
        edi2 = edi3;
    }
    __asm__("in eax, dx");
    ecx4 = ecx;
    *ecx4 = *ecx4 + 1;
    *eax5 = reinterpret_cast<signed char>(*eax6 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx4) + 1));
    *edi2 = eax7;
}

void fun_4241e2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4241db;
}

void fun_4241f8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4241f3;
}

void fun_424210() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42420b;
}

void fun_424228(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424223;
    __asm__("fbld tword [esi-0x39]");
}

void fun_424268() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424263;
}

struct s1322 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1323 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424280() {
    int1_t pf1;
    struct s1322* ebx2;
    struct s1323* ebx3;

    if (!pf1) 
        goto 0x42427b;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_42429a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424293;
}

void fun_424315() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424310;
}

void fun_4243a0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42439b;
}

void fun_4243b8(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4243b3;
}

void fun_4243d0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4243cb;
    __asm__("arpl [ebx+0x4], di");
}

void fun_4243e8(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4243e3;
}

void fun_42443b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424436;
}

struct s1324 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4244ab() {
    int1_t pf1;
    struct s1324* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4244a6;
    ebx2->f4 = ebx2->f4 + edi3;
}

struct s1325 {
    signed char[24] pad24;
    signed char f24;
};

struct s1326 {
    signed char[24] pad24;
    signed char f24;
};

void fun_4244c0() {
    struct s1325* eax1;
    struct s1326* eax2;
    signed char ch3;

    eax1->f24 = reinterpret_cast<signed char>(eax2->f24 + ch3);
    goto 0x424507;
}

struct s1327 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4244e1() {
    int1_t pf1;
    signed char* ebx2;
    signed char* ebx3;
    unsigned char bh4;
    struct s1327* ebx5;
    signed char al6;
    struct s708* edx7;

    if (!pf1) {
        ebx2 = ebx3;
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx2) + 1) = reinterpret_cast<unsigned char>(bh4 & ebx5->f4);
    }
    *ebx2 = reinterpret_cast<signed char>(*ebx2 + al6);
    g42ec24 = edx7;
}

void fun_424523() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42451e;
}

void fun_42458b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424586;
    __asm__("arpl di, ax");
}

void fun_4245a1(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42459c;
}

struct s1328 {
    signed char[20] pad20;
    signed char* f20;
};

void fun_4245c6() {
    signed char* ecx1;
    int32_t ebp2;
    struct s1328* eax3;
    uint32_t* edx4;
    int32_t ebp5;
    void** eax6;
    int32_t ebp7;
    int32_t ebp8;
    int32_t ebx9;
    int32_t ebx10;

    ecx1 = *reinterpret_cast<signed char**>(ebp2 - 0xbc);
    if (reinterpret_cast<uint32_t>(ecx1) >= reinterpret_cast<uint32_t>(eax3->f20)) 
        goto 0x42468f;
    edx4 = *reinterpret_cast<uint32_t**>(ebp5 - 0xac);
    eax6 = g42ec20;
    *reinterpret_cast<uint32_t*>(ebp7 - 8) = reinterpret_cast<unsigned char>(eax6) + *edx4;
    if (__intrinsic() || !__intrinsic()) {
        ecx1 = ecx1;
    } else {
        __asm__("fidivr dword [ebx+0x4]");
    }
    *reinterpret_cast<signed char*>(&edx4) = *ecx1;
    if (reinterpret_cast<int1_t>(edx4 == 0xcc)) {
        *reinterpret_cast<int32_t*>(ebp8 - 0xa8) = *reinterpret_cast<int32_t*>(ebp8 - 0xa8) + 1;
        if (__intrinsic() || !__intrinsic()) {
            ebx9 = ebx10;
        }
    }
    *reinterpret_cast<int32_t*>(ebx9 - 0x7276fb3f) = *reinterpret_cast<int32_t*>(ebx9 - 0x7276fb3f) + 1;
}

struct s1329 {
    signed char[4] pad4;
    signed char f4;
};

struct s1330 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424606() {
    int1_t pf1;
    struct s1329* ebx2;
    struct s1330* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x4245ff;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_4246c1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4246bc;
}

void fun_42471e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424719;
    __asm__("fadd dword [ebx+0xffff6cbd]");
}

struct s1331 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1332 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42474b() {
    int1_t pf1;
    struct s1331* ebx2;
    struct s1332* ebx3;

    if (!pf1) 
        goto 0x424746;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s1333 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42476c() {
    int1_t pf1;
    struct s1333* ebx2;
    int32_t edi3;
    uint1_t cf4;

    if (!pf1) 
        goto 0x424767;
    ebx2->f4 = ebx2->f4 + edi3 + cf4;
}

void fun_424784() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42477f;
}

struct s1334 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1335 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1336 {
    signed char[8] pad8;
    uint32_t* f8;
};

struct s1337 {
    signed char[8] pad8;
    uint32_t* f8;
};

void fun_4247ba(int32_t ecx) {
    int1_t pf2;
    struct s1334* ebx3;
    struct s1335* ebx4;
    uint32_t edi5;
    void* ebp6;
    uint32_t eax7;
    struct s1336* ebp8;
    struct s1337* ebp9;

    if (pf2) {
        ebx3->f4 = ebx4->f4 & edi5;
    }
    eax7 = fun_423950(ecx, 60, 0, 0, reinterpret_cast<int32_t>(ebp6) + 0xffffff40, __return_address());
    if (!(eax7 & 0xffff)) {
        *ebp8->f8 = *ebp9->f8 & 0x2d325697;
        if (__intrinsic() || !__intrinsic()) {
        }
        __asm__("hlt ");
    }
}

void fun_4247d2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4247cd;
}

void fun_42482f(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;

    *eax2 = *eax3 + eax4;
    if (!(__intrinsic() || !__intrinsic())) {
        __asm__("fsubp st3, st0");
    }
}

void fun_4248c5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4248c0;
}

void fun_42490e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424909;
}

struct s1338 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1339 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424928() {
    int1_t pf1;
    struct s1338* ebx2;
    struct s1339* ebx3;

    if (!pf1) 
        goto 0x424921;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s1340 {
    signed char[4] pad4;
    signed char f4;
};

struct s1341 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42493e() {
    int1_t pf1;
    struct s1340* ebx2;
    struct s1341* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x424939;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_424956() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424951;
}

void fun_42496e(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424969;
}

struct s1342 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_424986() {
    int1_t pf1;
    struct s1342* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x424981;
    ebx2->f4 = ebx2->f4 & edi3;
}

struct s1343 {
    signed char[4] pad4;
    signed char f4;
};

struct s1344 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42499e() {
    int1_t pf1;
    struct s1343* ebx2;
    struct s1344* ebx3;

    if (!pf1) 
        goto 0x424999;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

struct s1345 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4249b6() {
    int1_t pf1;
    struct s1345* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x4249b1;
    ebx2->f4 = ebx2->f4 ^ edi3;
}

void fun_4249ce() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4249c9;
}

void fun_4249e6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4249e1;
}

void fun_4249fe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4249f9;
}

void fun_424a22() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424a1d;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1346 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1347 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_424a3a(int32_t ecx) {
    int1_t pf2;
    struct s1346* ebx3;
    struct s1347* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x424a35;
    ebx3->f4 = ebx4->f4 ^ edi5;
}

void fun_424a52(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;

    if (!pf2) 
        goto 0x424a4d;
    *reinterpret_cast<int32_t*>(ebx3 + 0x28b0855) = ecx;
}

void fun_424aa3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424a9e;
}

struct s1348 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424ad0(int32_t a1, int32_t a2) {
    struct s1348* ebp3;

    goto ebp3->f4;
}

struct s1349 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1350 {
    signed char[4] pad4;
    int16_t f4;
};

void fun_424b02(int32_t ecx) {
    int1_t pf2;
    int32_t ecx3;
    struct s1349* ebx4;
    int1_t pf5;
    struct s1349* ebx6;
    int16_t* esp7;
    struct s1350** ebp8;
    struct s1349* ebx9;
    int32_t ecx10;
    int16_t es11;

    if (!pf2) {
    }
    ecx3 = ecx;
    do {
        *reinterpret_cast<unsigned char*>(&ebx4) = 0;
        ecx3 = ecx3;
    } while (!__intrinsic());
    pf5 = __intrinsic();
    ebx6 = ebx4;
    if (!(pf5 || !pf5)) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) - reinterpret_cast<unsigned char>(ebx6->f4 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) < reinterpret_cast<unsigned char>(ebx6->f4 + __intrinsic()))));
        pf5 = __intrinsic();
    }
    esp7 = &(*ebp8)->f4;
    if (!(pf5 || (ebx6 = ebx6, !pf5))) {
        __asm__("fdivr qword [ebx+0x4]");
    }
    ebx9 = ebx6;
    ecx10 = ecx3;
    do {
        *reinterpret_cast<unsigned char*>(&ebx9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx9) >> *reinterpret_cast<signed char*>(&ecx10));
        --esp7;
        *esp7 = es11;
        ecx10 = ecx10;
    } while (!__intrinsic());
    ebx9->f4 = 0;
}

void fun_424b1a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424b15;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1351 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1352 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424b3e() {
    int1_t pf1;
    struct s1351* ebx2;
    struct s1352* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x424b39;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_424b56() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424b51;
}

void fun_424b6e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424b69;
    __asm__("fidivr word [ebx+0x4]");
}

struct s1353 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1354 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_424b86() {
    int1_t pf1;
    struct s1353* ebx2;
    struct s1354* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x424b81;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_424ba0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424b99;
}

void fun_424bb6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424bb1;
}

void fun_424be6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424be1;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_424bfe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424bf9;
}

struct s1355 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1356 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424c22() {
    int1_t pf1;
    struct s1355* ebx2;
    struct s1356* ebx3;

    if (!pf1) 
        goto 0x424c1d;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_424c3c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424c35;
}

struct s1357 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424c52() {
    int1_t pf1;
    struct s1357* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x424c4d;
    ebx2->f4 = bh3;
}

void fun_424c76() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424c71;
}

void fun_424c95() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x424c90;
    *reinterpret_cast<signed char*>(&gff87047b) = al2;
}

void fun_424cad(signed char cl) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424ca8;
}

void fun_424ce6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424ce1;
}

void fun_424d21() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424d1a;
}

void fun_424d40() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424d3b;
    __asm__("arpl [ebx+0x4], di");
}

void fun_424d58() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x424d53;
    gff87047b = eax2;
}

void fun_424daf(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424daa;
}

struct s1358 {
    signed char[4] pad4;
    signed char f4;
};

struct s1359 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424de9(signed char cl) {
    int1_t pf2;
    struct s1358* ebx3;
    struct s1359* ebx4;

    if (!pf2) 
        goto 0x424de4;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_424e01() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424dfc;
}

void fun_424e19() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424e14;
}

void fun_424e31() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x424e2c;
    *reinterpret_cast<signed char*>(&gc087047b) = al2;
}

struct s1360 {
    signed char[4] pad4;
    signed char f4;
};

struct s1361 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424e49(int32_t ecx) {
    int1_t pf2;
    struct s1360* ebx3;
    struct s1361* ebx4;

    if (!pf2) 
        goto 0x424e44;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> 1);
}

void fun_424e89() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424e84;
}

struct s1362 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1363 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_424ec1() {
    int1_t pf1;
    struct s1362* ebx2;
    struct s1363* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x424eba;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_424f16() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424f0f;
}

void fun_424f2e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424f27;
}

struct s1364 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424f44() {
    int1_t pf1;
    struct s1364* ebx2;

    if (!pf1) 
        goto 0x424f3f;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 0x87);
}

struct s1365 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1366 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_424f5c(int32_t a1, int32_t a2) {
    int1_t pf3;
    struct s1365* ebx4;
    struct s1366* ebx5;
    uint32_t edi6;
    int1_t pf7;
    int32_t esi8;
    int32_t esi9;
    void* ebp10;

    if (pf3) {
        ebx4->f4 = ebx5->f4 ^ edi6;
        pf7 = __intrinsic();
    }
    do {
    } while (!pf7);
    *reinterpret_cast<signed char*>(esi8 - 0x75) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi9 - 0x75) << 1);
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp10) + 1 + 4);
}

void fun_424f74() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424f6f;
}

struct s1367 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424f90(int32_t ecx) {
    struct s1367* ebx2;
    int32_t edi3;

    g0 = reinterpret_cast<struct s46*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    if (!(__intrinsic() || !__intrinsic())) {
        ebx2->f4 = edi3;
    }
    do {
    } while (!__undefined());
}

void fun_424fdc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424fd7;
}

struct s1368 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424ff4() {
    int1_t pf1;
    struct s1368* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x424fef;
    ebx2->f4 = bh3;
}

void fun_42500e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425007;
}

void fun_425024() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42501f;
}

void fun_42503c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425037;
}

struct s1369 {
    signed char[4] pad4;
    signed char f4;
};

struct s1370 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425054() {
    int1_t pf1;
    struct s1369* ebx2;
    struct s1370* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x42504f;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_42506c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425067;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_425084() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42507f;
    __asm__("arpl [ebx+0x4], di");
}

struct s1371 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42509c() {
    int1_t pf1;
    struct s1371* ebx2;

    if (!pf1) 
        goto 0x425097;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 1);
}

void fun_4250b4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4250af;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_4250f2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4250eb;
}

void fun_425108() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425103;
}

void fun_425120() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42511b;
}

void fun_425138() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425133;
}

void fun_425152() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42514b;
}

void fun_425168() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425163;
}

void fun_425198(int16_t cx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425193;
}

void fun_4251b2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4251ad;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_4251ca(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4251c5;
}

void fun_4251ee(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4251e9;
}

struct s1372 {
    signed char[4] pad4;
    signed char f4;
};

struct s1373 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425206() {
    int1_t pf1;
    struct s1372* ebx2;
    struct s1373* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x425201;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

void fun_42521e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425219;
}

void fun_425236() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425231;
}

void fun_42525a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425255;
}

void fun_425272() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42526d;
}

void fun_42528a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425285;
}

struct s1374 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1375 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4252a2(int32_t ecx) {
    int1_t pf2;
    struct s1374* ebx3;
    struct s1375* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x42529d;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 & bh5);
}

void fun_4252ba() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4252b5;
}

void fun_4252d2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4252cd;
}

struct s1376 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1377 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4252ea(int32_t ecx) {
    int1_t pf2;
    struct s1376* ebx3;
    struct s1377* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x4252e5;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 & bh5);
}

struct s1378 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1379 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_425302() {
    int1_t pf1;
    struct s1378* ebx2;
    struct s1379* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4252fd;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_42531a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425315;
    __asm__("fadd st7, st0");
}

void fun_f6c957ba(int32_t a1);

void fun_425327(signed char cl) {
    int16_t bx2;
    int16_t si3;
    int16_t bx4;
    int16_t si5;
    int32_t eax6;
    int32_t ebx7;
    int32_t ebx8;
    int32_t* eax9;
    int32_t* eax10;
    int32_t eax11;
    int32_t ebx12;
    int32_t ebx13;
    signed char al14;
    int32_t ebx15;

    *reinterpret_cast<int32_t*>(bx2 + si3) = *reinterpret_cast<int32_t*>(bx4 + si5) + eax6;
    *reinterpret_cast<signed char*>(ebx7 - 0x17af13bb) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx8 - 0x17af13bb) + cl);
    __asm__("outsd ");
    *eax9 = *eax10 + eax11;
    *reinterpret_cast<signed char*>(ebx12 - 0x743cfb3c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx13 - 0x743cfb3c) + al14);
    fun_f6c957ba(__return_address());
    goto ebx15;
}

void fun_42534e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425349;
}

struct s1380 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425364(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    struct s1380* ebx4;

    if (!pf2) 
        goto 0x425361;
    pf3 = __intrinsic();
    if (!(pf3 || !pf3)) {
        ebx4->f4 = ebx4->f4 >> 0xffffff87;
        pf3 = __intrinsic();
    }
    __asm__("in eax, dx");
    if (pf3 || !pf3) {
    }
    do {
    } while (!__undefined());
}

void fun_425372() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42536d;
}

void fun_42538a() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x425385;
    *reinterpret_cast<signed char*>(&gd287047b) = al2;
}

struct s1381 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1382 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1383 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4253a4() {
    int1_t pf1;
    struct s1381* ebx2;
    struct s1382* ebx3;
    int32_t edi4;
    struct s1383* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x42539d;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_4253ba() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4253b5;
}

void fun_4253d2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4253cd;
}

void fun_4253ea() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4253e5;
}

void fun_425402() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4253fd;
}

struct s1384 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1385 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425426() {
    int1_t pf1;
    struct s1384* ebx2;
    struct s1385* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x425421;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

void fun_42543e(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425439;
}

void fun_425462() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42545d;
}

struct s1386 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42547a(signed char cl) {
    int1_t pf2;
    struct s1386* ebx3;

    if (!pf2) 
        goto 0x425475;
    ebx3->f4 = ebx3->f4 >> cl;
}

struct s1387 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1388 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4254a3(int32_t ecx) {
    int1_t pf2;
    uint32_t edi3;
    uint32_t edi4;
    int1_t pf5;
    struct s1387* ebx6;
    uint32_t edi7;
    struct s1388* ebx8;
    int1_t pf9;
    struct s1388* ebx10;
    uint32_t edi11;

    if (pf2 || (edi3 = edi4, !pf5)) {
        ecx = ecx;
    } else {
        edi3 = edi3 & ebx6->f4;
    }
    edi7 = edi3;
    do {
        *reinterpret_cast<unsigned char*>(&ebx8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx8) >> *reinterpret_cast<signed char*>(&ecx));
    } while (!__intrinsic());
    pf9 = __intrinsic();
    ebx10 = ebx8;
    edi11 = edi7 + ebx8->f4 + __intrinsic();
    do {
    } while (!pf9);
    ebx10->f4 = edi11;
    goto ebx10;
}

struct s1389 {
    signed char[4] pad4;
    signed char f4;
};

struct s1390 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4254c8() {
    int1_t pf1;
    struct s1389* ebx2;
    struct s1390* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x4254c3;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

void fun_4254e0() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x4254db;
    *reinterpret_cast<signed char*>(&gf687047b) = al2;
}

struct s1391 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1392 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425504(signed char cl) {
    int1_t pf2;
    struct s1391* ebx3;
    struct s1392* ebx4;

    if (!pf2) 
        goto 0x4254ff;
    ebx3->f4 = ebx4->f4 >> cl;
}

struct s1393 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42551c(signed char cl) {
    int1_t pf2;
    struct s1393* ebx3;

    if (!pf2) 
        goto 0x425517;
    ebx3->f4 = ebx3->f4 >> cl;
}

void fun_425536() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42552f;
}

void fun_42554c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425547;
}

struct s1394 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1395 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_425564(int32_t ecx) {
    int1_t pf2;
    struct s1394* ebx3;
    struct s1395* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x42555f;
    ebx3->f4 = ebx4->f4 & edi5;
}

void fun_42557c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425577;
}

void fun_425594() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42558f;
}

void fun_4255ac() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4255a7;
}

void fun_4255c4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4255bf;
    __asm__("fnstcw word [ebx+0x4]");
}

struct s1396 {
    signed char[4] pad4;
    signed char f4;
};

struct s1397 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4255dc() {
    int1_t pf1;
    struct s1396* ebx2;
    struct s1397* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x4255d7;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

void fun_4255f6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4255ef;
}

void fun_42560c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425607;
}

void fun_425624() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42561f;
}

void fun_42563c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425637;
}

void fun_425652(int32_t* ecx) {
    int1_t pf2;
    int1_t pf3;

    if (!pf2) 
        goto 0x42564f;
    pf3 = __intrinsic();
    if (!(pf3 || !pf3)) {
        pf3 = __intrinsic();
    }
    g42ec28 = *ecx;
    if (pf3 || !pf3) {
    }
    do {
    } while (!__intrinsic());
}

void fun_425660() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42565b;
}

void fun_425678() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425673;
}

void fun_4256b5(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4256b0;
}

void fun_4256e5(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4256e0;
}

void fun_4256fd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4256f8;
}

struct s1398 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1399 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425715() {
    int1_t pf1;
    struct s1398* ebx2;
    struct s1399* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x425710;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

struct s1400 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42572d() {
    int1_t pf1;
    struct s1400* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x425728;
    ebx2->f4 = bh3;
}

struct s1401 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_425745() {
    int1_t pf1;
    struct s1401* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x425740;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_42575d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425758;
}

void fun_425775(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425770;
}

void fun_42578d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425788;
}

struct s1402 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4257a5() {
    int1_t pf1;
    struct s1402* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4257a0;
    ebx2->f4 = edi3;
}

struct s1403 {
    signed char f0;
    signed char[4385835] pad4385836;
    unsigned char f4385836;
    signed char[6330594] pad10716431;
    signed char f10716431;
};

struct s1404 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1405 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1406 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1407 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4257c0(int32_t ecx) {
    struct s1403* eax2;
    uint32_t eax3;
    struct s1404* ebx4;
    struct s1405* ebx5;
    unsigned char* eax6;
    struct s1406* ebx7;
    struct s1407* ebx8;

    if (__intrinsic() || !__intrinsic()) {
    }
    if (!(__intrinsic() || (ecx = ecx, !__intrinsic()))) {
        eax2 = reinterpret_cast<struct s1403*>(eax3 & 0xdb87047b);
    }
    eax2->f10716431 = reinterpret_cast<signed char>(eax2->f10716431 + *reinterpret_cast<signed char*>(&eax2));
    eax2->f0 = reinterpret_cast<signed char>(eax2->f0 + *reinterpret_cast<signed char*>(&eax2));
    if (!(__intrinsic() || (ecx = ecx, !__intrinsic()))) {
        ebx4->f4 = ebx5->f4 >> *reinterpret_cast<signed char*>(&ecx);
    }
    eax6 = &eax2->f4385836;
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + reinterpret_cast<uint32_t>(eax6));
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<signed char*>(&eax6));
    if (!(__intrinsic() || !__intrinsic())) {
        ebx7->f4 = ebx8->f4 >> 1;
    }
    __asm__("clc ");
}

void fun_4257ea() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4257e3;
}

void fun_425800() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4257fb;
}

struct s1408 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1409 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1410 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42583a() {
    int1_t pf1;
    struct s1408* ebx2;
    struct s1409* ebx3;
    int32_t edi4;
    struct s1410* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x425835;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

struct s1411 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1412 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425854(signed char cl) {
    int1_t pf2;
    struct s1411* ebx3;
    struct s1412* ebx4;

    if (!pf2) 
        goto 0x42584d;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_42586a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425865;
}

struct s1413 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1414 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_425882() {
    int1_t pf1;
    struct s1413* ebx2;
    struct s1414* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x42587d;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

void fun_42589a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425895;
}

void fun_4258d7(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4258d2;
}

void fun_4258ef() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4258ea;
}

struct s1415 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1416 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42592b() {
    int1_t pf1;
    struct s1415* ebx2;
    struct s1416* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x425924;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_425941(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42593c;
}

struct s1417 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1418 {
    signed char[4] pad4;
    signed char f4;
};

struct s1419 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42595a(int32_t ecx, int32_t a2) {
    struct s1417* ebx3;
    signed char bh4;
    struct s1418* ebx5;
    uint1_t cf6;
    struct s1419* ebp7;
    void* ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;
    signed char* eax12;
    signed char* eax13;
    signed char al14;

    if (__intrinsic() || !__intrinsic()) {
    }
    if (!(__intrinsic() || !__intrinsic())) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(bh4 + ebx5->f4) + cf6);
    }
    ebp7 = reinterpret_cast<struct s1419*>(reinterpret_cast<int32_t>(ebp8) + 1);
    __asm__("clc ");
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
    *eax12 = reinterpret_cast<signed char>(*eax13 + al14);
    if (__intrinsic() || !__intrinsic()) {
        ebp7 = ebp7;
    } else {
        ebx3->f4 = ebx3->f4 >> 1;
    }
    goto ebp7->f4;
}

struct s1420 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1421 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42597c() {
    int1_t pf1;
    struct s1420* ebx2;
    struct s1421* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x425975;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_4259c9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4259c4;
}

struct s1422 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4259e1() {
    struct s1422* ebx1;
    struct s1422* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x4259dc;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

void fun_4259fe(int32_t ecx) {
    int32_t* edi2;
    int32_t* edi3;
    int32_t eax4;

    if (!(__intrinsic() || (edi2 = edi3, !__intrinsic()))) {
        __asm__("fstp tword [ebx+0x4]");
    }
    *edi2 = eax4;
}

void fun_425a33() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425a2e;
}

void fun_425a4b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425a46;
}

struct s1423 {
    signed char[4] pad4;
    signed char f4;
};

struct s1424 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425a63() {
    int1_t pf1;
    struct s1423* ebx2;
    struct s1424* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x425a5e;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

struct s1425 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425a7d() {
    int1_t pf1;
    struct s1425* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x425a76;
    ebx2->f4 = bh3;
}

void fun_425a93() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425a8e;
}

void fun_425aab() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425aa6;
}

void fun_425ac3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425abe;
}

void fun_425adb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425ad6;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_425b69() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425b64;
}

void fun_425b81() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425b7c;
}

void fun_425bf7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425bf2;
    __asm__("fsubr dword [edx+0x0]");
}

void fun_425c40() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425c3b;
    __asm__("rol dword [ebx+0xffff4cbd], 0xff");
}

void fun_425c7a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425c75;
}

void fun_425ce7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425ce2;
    __asm__("rol byte [ebx+0xffff4cbd], 0xff");
}

struct s1426 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1427 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1428 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_425db2() {
    int1_t pf1;
    struct s1426* ebx2;
    struct s1427* ebx3;
    int32_t edi4;
    struct s1428* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x425dab;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_425dc8() {
    int1_t pf1;
    int32_t ebx2;
    signed char al3;

    if (!pf1) 
        goto 0x425dc3;
    *reinterpret_cast<signed char*>(ebx2 - 0xb343) = al3;
}

void fun_425e24() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425e1f;
    __asm__("fdivr dword [ebx+0x4]");
}

struct s1429 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1430 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425e3c() {
    int1_t pf1;
    struct s1429* ebx2;
    struct s1430* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x425e37;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_425e56() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425e4f;
}

void fun_425e6e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425e67;
    __asm__("rol dword [ebx+0x42ec2c3d], 0x0");
}

void fun_425e99() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425e94;
}

struct s1431 {
    signed char[4] pad4;
    signed char f4;
    signed char[25757768] pad25757773;
    int32_t f25757773;
};

void fun_425ebb(int32_t* ecx) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;
    int1_t pf5;
    struct s1431* ebx6;
    struct s1431* ebx7;
    int1_t pf8;
    struct s1431* ebx9;
    int32_t eax10;
    int32_t* ecx11;
    int32_t eax12;
    int1_t pf13;
    int1_t pf14;
    int1_t pf15;

    if (pf2) {
    }
    ebp3 = ebp4;
    if (pf5) 
        goto addr_0x425ec2_5;
    ebx6 = ebx7;
    if (pf8) 
        goto addr_0x425ecb_7;
    addr_0x425ec2_5:
    addr_0x425ecc_8:
    ebx9 = ebx6;
    *reinterpret_cast<int32_t*>(eax10 + eax10 + 0x47b0000)(__return_address());
    ecx11 = ecx;
    eax12 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx11) - 1)(__return_address()));
    pf13 = __intrinsic();
    if (!(eax12 + 0x43229c)) {
        addr_0x425fca_19:
        ebx9->f25757773 = ebx9->f25757773 - 1;
        pf14 = __intrinsic();
        if (!(pf14 || !pf14)) {
            pf14 = __intrinsic();
        }
    } else {
        if (pf13 || !pf13) {
            ecx11 = ecx11;
        } else {
            pf13 = __intrinsic();
        }
        do {
        } while (!pf13);
        ecx11 = ecx11;
        *ecx11 = *ecx11 + 1;
        pf15 = __intrinsic();
        if (!*ecx11) 
            goto addr_0x425fca_19; else 
            goto addr_0x425f60_32;
    }
    do {
    } while (!pf14);
    addr_0x425f60_32:
    if (pf15 || !pf15) {
        ebx9 = ebx9;
    } else {
        ebx9->f4 = reinterpret_cast<signed char>(ebx9->f4 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx9) + 1));
        pf15 = __intrinsic();
    }
    if (!pf15 && pf15) {
    }
    *reinterpret_cast<int32_t*>(ebp3 - 0xb4) = 5;
    if (pf15) 
        goto addr_0x425f9c_46;
    if (pf15) 
        goto addr_0x425fa5_48;
    addr_0x425f9c_46:
    ebx9 = ebx9;
    addr_0x425fa6_49:
    goto addr_0x425fca_19;
    addr_0x425fa5_48:
    goto addr_0x425fa6_49;
    addr_0x425ecb_7:
    *reinterpret_cast<signed char*>(&eax10) = *reinterpret_cast<signed char*>(&ged87047b);
    goto addr_0x425ecc_8;
}

void fun_425edf() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425eda;
}

struct s1432 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1433 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_425f01() {
    int1_t pf1;
    struct s1432* ebx2;
    struct s1433* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x425efc;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

struct s1434 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1435 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425f48() {
    int1_t pf1;
    struct s1434* ebx2;
    struct s1435* ebx3;

    if (!pf1) 
        goto 0x425f41;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_425f7f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425f7a;
}

void fun_425fb9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425fb4;
}

void fun_426011() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42600c;
}

void fun_426029() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426024;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1436 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426041() {
    int1_t pf1;
    struct s1436* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x42603c;
    ebx2->f4 = bh3;
}

struct s1437 {
    signed char[4] pad4;
    signed char f4;
};

struct s1438 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426059() {
    int1_t pf1;
    struct s1437* ebx2;
    struct s1438* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x426054;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_426071() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42606c;
}

void fun_426089() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426084;
}

void fun_4260a1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42609c;
}

struct s1439 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4260b9() {
    int1_t pf1;
    struct s1439* ebx2;

    if (!pf1) 
        goto 0x4260b4;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 0x87);
}

struct s1440 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1441 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1442 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4260cf(int32_t ecx, int32_t a2) {
    struct s1440* ebp3;
    struct s1440* ebp4;
    int1_t pf5;
    int32_t ebx6;
    struct s1441* ebx7;
    struct s1442* ebx8;
    uint32_t edi9;

    ebp3 = ebp4;
    if (!pf5) {
        goto ebx6;
    } else {
        ebx7->f4 = ebx8->f4 ^ edi9;
        do {
            ebp3 = ebp3;
        } while (!__intrinsic());
        goto ebp3->f4;
    }
}

void fun_4260dd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4260d8;
}

void fun_4260f5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4260f0;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_426120(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;
    struct s707* eax4;

    if (pf2 || !pf3) {
    }
    eax4 = g18;
    if (!eax4->f32) {
    }
    __asm__("popad ");
}

void fun_42614f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426148;
}

void fun_4261a5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4261a0;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_4261bd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4261b8;
}

struct s1443 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1444 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426251() {
    int1_t pf1;
    struct s1443* ebx2;
    struct s1444* ebx3;

    if (!pf1) 
        goto 0x42624a;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_426269() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426262;
}

void fun_426281() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42627a;
}

struct s1445 {
    signed char[104] pad104;
    int32_t f104;
};

struct s1446 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_426323(struct s1445* ecx) {
    int32_t esi2;
    int32_t esi3;
    int32_t edx4;
    int32_t edx5;
    struct s1446* ebx6;
    struct s1446* ebx7;
    int32_t edx8;
    int32_t edi9;
    int32_t* esi10;
    int32_t ebx11;
    unsigned char* eax12;
    uint32_t* eax13;
    int1_t pf14;
    uint32_t edi15;
    uint32_t edi16;
    uint32_t edi17;

    if (!__intrinsic() && (esi2 = esi3, __intrinsic())) {
    }
    if (__intrinsic()) 
        goto addr_0x426347_5;
    edx4 = edx5;
    if (__intrinsic()) 
        goto addr_0x426350_7;
    addr_0x426347_5:
    ecx = ecx;
    addr_0x426351_8:
    ebx6 = ebx7;
    *reinterpret_cast<signed char*>(esi2 - 95) = 0;
    edx8 = edx4;
    eax12 = reinterpret_cast<unsigned char*>(ecx->f104(edi9, esi10, ebx11));
    *eax12 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<signed char*>(&edx8)) + __intrinsic());
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<signed char*>(&eax12));
    eax13 = fun_42617d(edi9, esi10, ebx11);
    pf14 = __intrinsic();
    if (!1) {
        if (pf14 || !pf14) {
            ebx6 = ebx6;
        } else {
            pf14 = __intrinsic();
        }
        do {
            edi15 = edi15;
        } while (!pf14);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) = ebx6->f4;
        ebx6 = ebx6;
        edi16 = edi15;
        eax13 = eax13 + 0x10bac3;
        *eax13 = *eax13 + reinterpret_cast<uint32_t>(eax13);
        pf14 = __intrinsic();
        if (pf14 || (edi16 = edi16, !pf14)) {
            ebx6 = ebx6;
        } else {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx6) + 1) = 0xff;
            pf14 = __intrinsic();
        }
        edi17 = edi16;
    }
    if (!(pf14 || !pf14)) {
        ebx6->f4 = reinterpret_cast<unsigned char>(ebx6->f4 | edi17);
    }
    addr_0x426350_7:
    goto addr_0x426351_8;
}

void fun_426364() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42635f;
}

void fun_42637c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426377;
}

void fun_426394() {
    int1_t pf1;
    int32_t* ebx2;
    int32_t esi3;

    if (!pf1) 
        goto 0x42638f;
    *ebx2 = esi3;
}

void fun_4263e5() {
    int1_t pf1;

    if (pf1) {
        __asm__("fnstcw word [ebx+0x4]");
    }
}

void fun_4263fd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4263f8;
}

void fun_426451(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42644c;
}

void fun_426469() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426464;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_426481() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42647c;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_4264bc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4264b5;
}

void fun_4264d2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4264cd;
}

struct s1447 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1448 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4264ea() {
    int1_t pf1;
    struct s1447* ebx2;
    struct s1448* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x4264e5;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_426502() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4264fd;
}

void fun_42651a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426515;
}

void fun_426532() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42652d;
}

void fun_426560() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42655b;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_42657a(int32_t ecx) {
    int1_t pf2;
    int32_t ebp3;

    if (!pf2) 
        goto 0x426573;
    *reinterpret_cast<int32_t*>(ebp3 - 0x976b) = ecx;
}

struct s1449 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1450 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1451 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4265b1(int32_t ecx) {
    int1_t pf2;
    struct s1449* ebx3;
    struct s1450* ebx4;
    int32_t edi5;
    struct s1451* ebx6;
    int32_t edi7;
    uint1_t cf8;

    if (!pf2) 
        goto 0x4265ac;
    ebx3->f4 = ebx4->f4 - (edi5 + reinterpret_cast<uint1_t>(ebx6->f4 < edi7 + cf8));
}

struct s1452 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4265ea() {
    int1_t pf1;
    struct s1452* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4265e5;
    ebx2->f4 = edi3;
}

void fun_426648() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426643;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_426660() {
    int1_t pf1;
    unsigned char* eax2;
    signed char* eax3;
    signed char ch4;
    unsigned char* eax5;
    signed char ch6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x42665b;
    *eax2 = reinterpret_cast<unsigned char>(*eax3 - reinterpret_cast<unsigned char>(ch4 + reinterpret_cast<uint1_t>(*eax5 < reinterpret_cast<unsigned char>(ch6 + cf7))));
}

void fun_4266a3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42669e;
}

void fun_4266bb(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4266b6;
}

struct s1453 {
    signed char[80] pad80;
    uint32_t f80;
};

struct s1454 {
    signed char[80] pad80;
    uint32_t f80;
};

void fun_4266d3() {
    int1_t pf1;
    struct s1453* eax2;
    struct s1454* eax3;
    uint32_t ebp4;

    if (!pf1) 
        goto 0x4266ce;
    eax2->f80 = eax3->f80 & ebp4;
}

void fun_42674d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426748;
}

void fun_426759() {
}

void fun_426795() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426790;
}

void fun_4267ad(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4267a8;
}

struct s1455 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_426809(int32_t ecx) {
    struct s1455* ebx2;
    struct s1455* ebx3;
    int1_t pf4;
    uint32_t edi5;
    uint32_t edi6;
    signed char al7;
    struct s1455* ebx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    ebx2 = ebx3;
    if (!pf4) {
        edi5 = edi6;
    } else {
        *reinterpret_cast<signed char*>(&gf687047b) = al7;
    }
    if (!(__undefined() || (ebx2 = ebx2, !__undefined()))) {
        ebx2->f4 = reinterpret_cast<unsigned char>(ebx2->f4 & edi5);
    }
    ebx8 = ebx2;
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
    ebx8->f4 = reinterpret_cast<unsigned char>(ebx8->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx8) + 1));
    if (__intrinsic() || !__intrinsic()) {
    }
    goto 0x426969;
}

struct s1456 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1457 {
    signed char[4] pad4;
    signed char f4;
};

struct s1458 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_426821() {
    int1_t pf1;
    struct s1456* ebx2;
    struct s1457* ebx3;
    signed char bh4;
    struct s1458* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x42681c;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

struct s1459 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_426839() {
    int1_t pf1;
    struct s1459* ebx2;
    int32_t edi3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x426834;
    ebx2->f4 = ebx2->f4 - (edi3 + reinterpret_cast<uint1_t>(ebx2->f4 < edi4 + cf5));
}

struct s1460 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1461 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426851(int32_t ecx) {
    int1_t pf2;
    struct s1460* ebx3;
    struct s1461* ebx4;
    int32_t edi5;

    if (!pf2) 
        goto 0x42684c;
    ebx3->f4 = ebx4->f4 - edi5;
}

void fun_426869(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426864;
}

void fun_426881() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42687c;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_4268c0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4268bb;
}

void fun_4268d8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4268d3;
}

void fun_4268f2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4268eb;
}

void fun_426910() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42690b;
}

void fun_426934(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42692f;
}

struct s1462 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1463 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42694c() {
    int1_t pf1;
    struct s1462* ebx2;
    struct s1463* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x426947;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_426966() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42695f;
}

void fun_42697c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426977;
}

void fun_426994() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42698f;
}

struct s1464 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1465 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4269ac() {
    int1_t pf1;
    struct s1464* ebx2;
    struct s1465* ebx3;

    if (!pf1) 
        goto 0x4269a7;
    ebx2->f4 = ebx3->f4 >> 1;
}

struct s1466 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1467 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4269c4() {
    int1_t pf1;
    struct s1466* ebx2;
    struct s1467* ebx3;

    if (!pf1) 
        goto 0x4269bf;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_4269dc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4269d7;
}

void fun_4269f4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4269ef;
}

struct s1468 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1469 {
    signed char[4] pad4;
    signed char f4;
};

struct s1470 {
    signed char[4] pad4;
    signed char f4;
};

struct s1471 {
    void*** f0;
    int16_t f4;
};

struct s1472 {
    int32_t f0;
    int16_t f4;
};

void fun_426a45(int32_t* ecx) {
    int1_t pf2;
    struct s1468* ebx3;
    struct s1468* ebx4;
    signed char bh5;
    struct s1469* ebx6;
    unsigned char bh7;
    struct s1470* ebx8;
    uint1_t cf9;
    unsigned char edi10;
    unsigned char edi11;
    struct s1468* ebx12;
    int32_t* ecx13;
    void*** ebp14;
    struct s1471* ebp15;
    int16_t* esp16;
    int16_t es17;
    void** ebp18;
    struct s1468* ebx19;
    int32_t* ecx20;
    unsigned char edi21;
    struct s1468* ebx22;
    int32_t* esp23;
    uint32_t eax24;
    void* esp25;
    signed char* eax26;
    int1_t pf27;
    struct s1468* ebx28;
    void** ebp29;
    void** ebp30;
    int32_t* ecx31;
    int1_t pf32;
    struct s1472* esp33;
    int32_t eax34;
    int16_t* esp35;
    unsigned char edi36;
    int16_t es37;
    int32_t eax38;

    if (!pf2) {
        ebx3 = ebx4;
    } else {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx3) + 1) = reinterpret_cast<unsigned char>(bh5 - reinterpret_cast<unsigned char>(ebx6->f4 + reinterpret_cast<uint1_t>(bh7 < reinterpret_cast<unsigned char>(ebx8->f4 + cf9))));
    }
    edi10 = edi11;
    ebx12 = ebx3;
    ecx13 = ecx;
    ebp14 = ebp15->f0;
    esp16 = &ebp15->f4;
    do {
        *reinterpret_cast<unsigned char*>(&ebx12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx12) >> *reinterpret_cast<signed char*>(&ecx13));
        --esp16;
        *esp16 = es17;
        ebp14 = ebp14;
    } while (!__intrinsic());
    ebx12->f4 = 0;
    ebp18 = *ebp14;
    ebx19 = ebx12;
    if (__intrinsic() || (ecx13 = ecx13, !__intrinsic())) {
        ecx13 = ecx13;
    } else {
        ebx19->f4 = edi10;
    }
    ecx20 = ecx13;
    edi21 = edi10;
    if (__intrinsic() || (ebx19 = ebx19, !__intrinsic())) {
        ebp18 = ebp18;
    } else {
        edi21 = reinterpret_cast<unsigned char>(edi21 ^ ebx19->f4);
    }
    ebx22 = ebx19;
    esp23 = reinterpret_cast<int32_t*>(ebp14 + 1 - 1);
    *esp23 = 0x426ccb;
    eax24 = fun_42708c(ecx20);
    esp25 = reinterpret_cast<void*>(esp23 + 1);
    eax26 = reinterpret_cast<signed char*>(eax24 & 0xffff);
    if (eax26) {
        if (__intrinsic() || !__intrinsic()) {
            ebp18 = ebp18;
        }
        ecx20 = ecx20;
        esp25 = reinterpret_cast<void*>(ebp18 + 1);
        ebp18 = *reinterpret_cast<void***>(ebp18);
        edi21 = edi21;
        *eax26 = reinterpret_cast<signed char>(*eax26 + 1);
        ebx22 = reinterpret_cast<struct s1468*>(reinterpret_cast<int32_t>(ebx22) + 1);
        *eax26 = reinterpret_cast<signed char>(*eax26 + *reinterpret_cast<signed char*>(&eax26));
        pf27 = __intrinsic();
        *reinterpret_cast<signed char**>(ebp18 - 38) = reinterpret_cast<signed char*>(0);
    } else {
        __asm__("pushad ");
        eax26 = reinterpret_cast<signed char*>(0);
        *reinterpret_cast<int16_t*>(&eax26) = 0x4300;
        __asm__("int 0x68");
        *reinterpret_cast<signed char**>(ebp18 - 39) = reinterpret_cast<signed char*>(0x4300);
        pf27 = __intrinsic();
        if (!1) {
            eax26 = reinterpret_cast<signed char*>(1);
            *reinterpret_cast<signed char**>(ebp18 - 38) = reinterpret_cast<signed char*>(1);
        }
        __asm__("popad ");
    }
    if (!(pf27 || (ecx20 = ecx20, !pf27))) {
        __asm__("fstp tword [ebx+0x4]");
    }
    ebx28 = ebx22;
    ebp29 = ebp18;
    if (pf27 || (edi21 = edi21, !pf27)) {
        ebp29 = ebp29;
    } else {
        ebx28->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx28->f4) >> 1);
    }
    ebp30 = ebp29;
    ecx31 = ecx20;
    pf32 = __intrinsic();
    esp33 = reinterpret_cast<struct s1472*>(reinterpret_cast<int32_t>(esp25) - 4);
    esp33->f0 = 0x426e50;
    eax34 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax26) + reinterpret_cast<uint32_t>(eax26) + 0x47b0000)());
    esp35 = &esp33->f4;
    edi36 = edi21;
    do {
        __asm__("fucomi st0, st3");
        --esp35;
        *esp35 = es37;
        ecx31 = ecx31;
    } while (!pf32);
    *reinterpret_cast<unsigned char*>(&ecx31) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx31) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebp30) - 0x937b));
    *reinterpret_cast<int32_t*>(esp35 - 2) = 0x426e7a;
    eax38 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(eax34 - 1)());
    if (!(eax38 + 0x43229c)) 
        goto 0x426f2a;
    if (__intrinsic() || (ebx28 = ebx28, !__intrinsic())) {
    }
    *ecx31 = *ecx31 + 1;
    if (!*ecx31) 
        goto 0x426f2a;
    if (!(__intrinsic() || !__intrinsic())) {
        ebx28->f4 = reinterpret_cast<unsigned char>(ebx28->f4 ^ edi36);
    }
}

struct s1473 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1474 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426a5f() {
    int1_t pf1;
    struct s1473* ebx2;
    struct s1474* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x426a58;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

struct s1475 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1476 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426a75(int32_t ecx) {
    int1_t pf2;
    struct s1475* ebx3;
    struct s1476* ebx4;
    int32_t edi5;

    if (!pf2) 
        goto 0x426a70;
    ebx3->f4 = ebx4->f4 - edi5;
}

struct s1477 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1478 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_426a8d() {
    int1_t pf1;
    struct s1477* ebx2;
    struct s1478* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x426a88;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

struct s1479 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426aa5() {
    int1_t pf1;
    struct s1479* ebx2;

    if (!pf1) 
        goto 0x426aa0;
    ebx2->f4 = ebx2->f4 >> 1;
}

struct s1480 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426abf() {
    int1_t pf1;
    struct s1480* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x426ab8;
    ebx2->f4 = bh3;
}

struct s1481 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1482 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426ad5() {
    int1_t pf1;
    struct s1481* ebx2;
    struct s1482* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x426ad0;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_426aed() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426ae8;
}

void fun_426b07() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426b00;
}

struct s1483 {
    signed char[4] pad4;
    signed char f4;
};

struct s1484 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426b1d() {
    int1_t pf1;
    struct s1483* ebx2;
    struct s1484* ebx3;

    if (!pf1) 
        goto 0x426b18;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_426b35() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426b30;
}

void fun_426b4d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426b48;
}

struct s1485 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1486 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_426b65() {
    int1_t pf1;
    struct s1485* ebx2;
    struct s1486* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x426b60;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_426b7d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426b78;
}

struct s1487 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1488 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1489 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_426b97() {
    int1_t pf1;
    struct s1487* ebx2;
    struct s1488* ebx3;
    int32_t edi4;
    struct s1489* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x426b90;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

struct s1490 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_426bad() {
    int1_t pf1;
    struct s1490* ebx2;
    int32_t edi3;
    uint1_t cf4;

    if (!pf1) 
        goto 0x426ba8;
    ebx2->f4 = ebx2->f4 + edi3 + cf4;
}

struct s1491 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1492 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_426bd1() {
    int1_t pf1;
    struct s1491* ebx2;
    struct s1492* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x426bcc;
    ebx2->f4 = ebx3->f4 | edi4;
}

struct s1493 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1494 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_426beb() {
    int1_t pf1;
    struct s1493* ebx2;
    struct s1494* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x426be4;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_426c01() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426bfc;
}

void fun_426c19() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426c14;
}

struct s1495 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1496 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426c31() {
    int1_t pf1;
    struct s1495* ebx2;
    struct s1496* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x426c2c;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_426c49() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426c44;
}

void fun_426c61() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426c5c;
}

struct s1497 {
    signed char[4] pad4;
    signed char f4;
};

struct s1498 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426c85() {
    int1_t pf1;
    struct s1497* ebx2;
    struct s1498* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x426c80;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

void fun_426c9d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426c98;
    __asm__("fdivr dword [ebx+0x4]");
}

struct s1499 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1500 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_426d17(int32_t ecx) {
    int1_t pf2;
    struct s1499* ebx3;
    struct s1500* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x426d12;
    ebx3->f4 = ebx4->f4 & edi5;
}

void fun_426d2f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426d2a;
}

void fun_426d47(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426d42;
}

void fun_426d8b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426d86;
    __asm__("fstp tword [ebx+0x4]");
}

struct s1501 {
    signed char[4] pad4;
    signed char f4;
};

struct s1502 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426da3() {
    int1_t pf1;
    struct s1501* ebx2;
    struct s1502* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x426d9e;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

struct s1503 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1504 {
    signed char[4] pad4;
    signed char f4;
};

struct s1505 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_426dbb(int32_t ecx) {
    int1_t pf2;
    struct s1503* ebx3;
    struct s1504* ebx4;
    signed char bh5;
    struct s1505* ebx6;
    signed char bh7;
    uint1_t cf8;

    if (!pf2) 
        goto 0x426db6;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 - reinterpret_cast<unsigned char>(bh5 + reinterpret_cast<uint1_t>(ebx6->f4 < reinterpret_cast<unsigned char>(bh7 + cf8))));
}

void fun_426dd5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426dce;
}

void fun_426df7() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x426df2;
    *reinterpret_cast<signed char*>(&gd287047b) = al2;
}

void fun_426e0f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426e0a;
}

struct s1506 {
    signed char[4] pad4;
    signed char f4;
};

struct s1507 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426e29() {
    int1_t pf1;
    struct s1506* ebx2;
    struct s1507* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x426e22;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_426e3f(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426e3a;
}

void fun_426e61() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426e5c;
}

void fun_426ea6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426ea1;
}

struct s1508 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426edf() {
    int1_t pf1;
    struct s1508* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x426eda;
    ebx2->f4 = bh3;
}

void fun_426f01(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426efc;
}

void fun_426f19() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426f14;
}

void fun_426f56() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426f51;
}

struct s1509 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1510 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1511 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_426f6e() {
    int1_t pf1;
    struct s1509* ebx2;
    struct s1510* ebx3;
    int32_t edi4;
    struct s1511* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x426f69;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

struct s1512 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1513 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426f86() {
    int1_t pf1;
    struct s1512* ebx2;
    struct s1513* ebx3;

    if (!pf1) 
        goto 0x426f81;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_426fe4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426fdf;
}

void fun_427013() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42700c;
}

void fun_427029() {
    int1_t pf1;

    if (!pf1) 
        goto 0x427024;
    __asm__("fidivr word [ebx+0x4]");
}

struct s1514 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_427041() {
    struct s1514* ebx1;
    struct s1514* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x42703c;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_427065(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x427060;
}

void fun_42707f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x427078;
}

struct s1515 {
    signed char[115] pad115;
    uint32_t f115;
};

struct s1516 {
    signed char[115] pad115;
    uint32_t f115;
};

void fun_401068(int32_t ecx) {
    int32_t ecx2;
    struct s1515* ebp3;
    struct s1516* ebp4;

    ecx2 = ecx + 1;
    __asm__("clc ");
    if (reinterpret_cast<uint1_t>(ecx2 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(ecx2 == 0)) 
        goto 0x401045;
    __asm__("rcr byte [esi+0x51], 1");
    ebp3->f115 = ebp4->f115 ^ reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2);
}

void fun_4011bf(unsigned char cl) {
    int32_t ebx2;
    int32_t ebx3;
    signed char* eax4;
    signed char* eax5;

    *reinterpret_cast<unsigned char*>(ebx2 - 0x79aba1cf) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx3 - 0x79aba1cf) & cl);
    *eax4 = reinterpret_cast<signed char>(*eax5 - 12);
}

signed char fun_401349() {
    signed char al1;

    __asm__("xlatb ");
    return al1 - 23;
}

int16_t g3b2c1859;

void fun_4016a6() {
    int16_t cs1;

    __asm__("aas ");
    __asm__("cmc ");
    g3b2c1859 = cs1;
}

void fun_40165d(int32_t ecx) {
    int32_t ebp2;
    int32_t ebp3;
    int32_t edi4;
    int32_t edi5;
    int16_t es6;
    int32_t eax7;

    ebp2 = ebp3 - 1;
    *reinterpret_cast<int32_t*>(ebp2 - 0x79) = *reinterpret_cast<int32_t*>(ebp2 - 0x79) >> 0x68;
    if (!__intrinsic()) 
        goto 0x401682;
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) - (edi4 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(__zero_stack_offset()) < edi5 + __intrinsic())) - 2) = es6;
    if (eax7 >= *reinterpret_cast<int32_t*>(eax7 - 0x5864015e)) 
        goto 0x4016c1;
    __asm__("insb ");
}

int32_t fun_3c780b2b();

void fun_4017f9(int32_t ecx) {
    uint64_t v2;
    uint32_t ebp3;
    int32_t* esp4;
    int32_t* esp5;
    int32_t edx6;
    int32_t esi7;
    int1_t sf8;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 4) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int32_t*>(&v2) = 0x4017ff;
    fun_3c780b2b();
    *reinterpret_cast<uint32_t*>(ecx + 0x56039030) = *reinterpret_cast<uint32_t*>(ecx + 0x56039030) & ebp3;
    __asm__("in eax, dx");
    esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&v2) + 3)) + 4 + 4);
    do {
        esp5 = esp4 - 1;
        *esp5 = edx6;
        esp4 = esp5 - 1;
        *esp4 = esi7;
        --ecx;
        sf8 = ecx < 0;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) = -20;
    } while (sf8 == __intrinsic());
    __asm__("fnstcw word [edi]");
    if (!sf8) 
        goto 0x401899;
}

void fun_40189a() {
    __asm__("iretd ");
    __asm__("cli ");
    __asm__("fisub dword [ds:esp+ebx*8+0xdf840930]");
    __asm__("salc ");
    __asm__("clc ");
    __asm__("int1 ");
    __asm__("outsd ");
}

void fun_401aef() {
}

void fun_401cd7() {
    int1_t of1;

    __asm__("out 0x93, eax");
    if (of1) 
        goto 0x401cf4;
}

void fun_401c7c() {
    __asm__("fsubr st3, st0");
    __asm__("wait ");
    return;
}

void fun_401dc7(int32_t ecx) {
    uint1_t cf2;
    uint32_t* esi3;
    uint32_t* edi4;
    int32_t* edi5;
    int32_t* esi6;
    int32_t eax7;
    int32_t edx8;
    uint1_t cf9;
    uint32_t ebp10;
    int32_t ebx11;
    int32_t esi12;
    int32_t ebp13;
    int32_t ebx14;
    uint16_t fs15;
    unsigned char* ebx16;
    signed char* ebx17;
    signed char bh18;
    signed char* ebx19;

    cf2 = reinterpret_cast<uint1_t>(*esi3 < *edi4);
    *edi5 = *esi6;
    *reinterpret_cast<int32_t*>(eax7 - 0x62bcb6ed) = edx8;
    cf9 = reinterpret_cast<uint1_t>(ebp10 < ebx11 + cf2);
    *reinterpret_cast<uint32_t*>(esi12 + 4 - 0x9a72a05) = ebp13 - (ebx14 + cf9);
    if (ecx) 
        goto 0x401db4;
    *reinterpret_cast<uint32_t*>(0xa71355d4 - (0x3d6da209 + reinterpret_cast<uint1_t>(0xa71355d4 < 0x3d6da209 + cf9))) = static_cast<uint32_t>(fs15);
    *ebx16 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*ebx17 + bh18) + __intrinsic());
    if (!reinterpret_cast<uint1_t>(__intrinsic() | reinterpret_cast<uint1_t>(*ebx19 == 0))) 
        goto 0x401e07;
}

void fun_401f0c() {
    __asm__("arpl [eax+0x43bbe18e], bp");
}

void fun_401f5a() {
    signed char* edi1;
    signed char al2;
    int32_t eax3;
    int32_t eax4;
    signed char al5;

    *edi1 = al2;
    __asm__("popad ");
    *reinterpret_cast<signed char*>(eax3 - 0x7044056) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax4 - 0x7044056) - al5);
    __asm__("xlatb ");
}

struct s1517 {
    signed char[6] pad6;
    uint32_t f6;
};

struct s1518 {
    signed char[6] pad6;
    int32_t f6;
};

void fun_4024c4() {
    struct s1517* ebp1;
    struct s1518* ebp2;

    __asm__("outsd ");
    ebp1->f6 = reinterpret_cast<uint32_t>(ebp2->f6 + reinterpret_cast<int32_t>(__zero_stack_offset()));
}

void fun_4025a8() {
    int32_t* ebx1;
    int32_t eax2;

    *ebx1 = eax2;
    __asm__("hlt ");
}

struct s1519 {
    signed char[121] pad121;
    uint32_t f121;
};

struct s1520 {
    signed char[121] pad121;
    int32_t f121;
};

void fun_40260e() {
    struct s1519* edx1;
    struct s1520* edx2;
    int32_t ebp3;

    __asm__("cdq ");
    __asm__("iretd ");
    edx1->f121 = reinterpret_cast<uint32_t>(edx2->f121 + ebp3);
}

void fun_402995(int32_t ecx) {
    int32_t edi2;
    int32_t edi3;
    int32_t edx4;
    signed char* eax5;
    signed char* eax6;
    signed char ah7;
    signed char* eax8;
    unsigned char* edi9;
    unsigned char al10;

    __asm__("fdivr qword [0xb5bf1c17]");
    __asm__("ficomp dword [ecx+0xbe1ed06f]");
    do {
        *reinterpret_cast<int32_t*>(edi2 - 39) = *reinterpret_cast<int32_t*>(edi3 - 39) - edx4;
        __asm__("in al, dx");
        __asm__("stc ");
        if (ecx) 
            goto 0x402987;
        *eax5 = reinterpret_cast<signed char>(*eax6 + ah7);
    } while (__intrinsic() | reinterpret_cast<uint1_t>(*eax8 == 0));
    __asm__("fsub st0, st7");
    if (*edi9 > al10) {
        __asm__("fsub st0, st2");
        if (ecx + 1 - 1) 
            goto 0x402a21;
    }
    __asm__("ror dword [edi-0x1e], cl");
}

struct s1521 {
    signed char[1] pad1;
    signed char f1;
};

void fun_402d78(int32_t ecx) {
    signed char* eax2;
    struct s1521* eax3;
    int32_t eflags4;
    unsigned char al5;
    int32_t edx6;
    int32_t edx7;
    int32_t ebp8;
    uint1_t cf9;
    signed char** edi10;
    int32_t ebx11;
    signed char bl12;
    int32_t ebx13;
    uint32_t edi14;
    int32_t edi15;

    eax2 = &eax3->f1;
    *reinterpret_cast<uint1_t*>(&eflags4) = reinterpret_cast<uint1_t>(eax2 == 0);
    __asm__("into ");
    if (*reinterpret_cast<uint1_t*>(&eflags4)) {
        addr_0x402d9b_2:
    } else {
        if (reinterpret_cast<uint1_t>(al5 < 7) | *reinterpret_cast<uint1_t*>(&eflags4)) 
            goto 0x402d02;
        *reinterpret_cast<int32_t*>(edx6 + 0x5346febc) = *reinterpret_cast<int32_t*>(edx7 + 0x5346febc) + ebp8;
        cf9 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(*edi10) < reinterpret_cast<uint32_t>(eax2));
        __asm__("sahf ");
        if (!cf9) 
            goto addr_0x402d8e_8;
    }
    if (0) 
        goto 0x402e63;
    addr_0x402d8e_8:
    *reinterpret_cast<unsigned char*>(&ebx11) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(bl12 + *eax2) + cf9);
    __asm__("rcr cl, cl");
    ebx13 = ebx11 - 1;
    edi14 = reinterpret_cast<uint32_t>(edi15 + 4) & *reinterpret_cast<uint32_t*>(ecx - 96);
    *reinterpret_cast<unsigned char*>(edi14 + 0x64c44390) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi14 + 0x64c44390) & *reinterpret_cast<unsigned char*>(&ebx13));
    goto addr_0x402d9b_2;
}

int32_t g14e1c23b;

void fun_402dd5(int32_t a1, int32_t a2) {
    void* eax3;
    int32_t edi4;
    void* eax5;
    int32_t edi6;
    int32_t ebp7;
    uint1_t cf8;
    int32_t eax9;
    int32_t edx10;
    int32_t edx11;
    signed char al12;
    uint32_t ebx13;
    int32_t edx14;

    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax3) + edi4 * 2 + 13) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax5) + edi6 * 2 + 13) + ebp7 + cf8;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax9) + 1) = -69;
    *reinterpret_cast<unsigned char*>(edx10 - 0xc2ab439) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx11 - 0xc2ab439) & 0x87);
    *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al12 - 26) + reinterpret_cast<uint1_t>(ebx13 < *reinterpret_cast<uint32_t*>(eax9 + edx14 * 4 - 64)));
    g14e1c23b = eax9;
}

void fun_40302a(int32_t ecx) {
    __asm__("cdq ");
}

void fun_20cd99(int32_t a1);

void fun_403508() {
    int32_t* edi1;
    int32_t* esi2;

    __asm__("in eax, 0x63");
    fun_20cd99(__return_address());
    __asm__("rol byte [esi], cl");
    *edi1 = *esi2;
}

unsigned char g5b24ebc2;

void fun_4035df() {
    int1_t less_or_equal1;
    unsigned char ch2;

    if (!less_or_equal1) 
        goto 0x403628;
    g5b24ebc2 = reinterpret_cast<unsigned char>(g5b24ebc2 ^ ch2);
}

void fun_403697() {
}

void fun_4037c7() {
}

signed char* fun_84bf8807();

signed char* fun_4038b3() {
    uint32_t* edi1;
    uint16_t cs2;
    signed char* eax3;
    uint1_t cf4;

    __asm__("pushad ");
    *edi1 = static_cast<uint32_t>(cs2);
    eax3 = fun_84bf8807();
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax3) + *eax3) + cf4);
    return eax3;
}

unsigned char ga27c0f36;

void fun_403af2() {
    unsigned char al1;

    __asm__("iretd ");
    ga27c0f36 = reinterpret_cast<unsigned char>(al1 ^ 77);
}

struct s1522 {
    signed char[1] pad1;
    unsigned char f1;
};

int32_t g3f65c248;

int32_t ge8836a99;

void fun_403e3c(unsigned char cl) {
    struct s1522* eax2;
    uint1_t cf3;
    int32_t edx4;
    int32_t edx5;
    signed char* edi6;
    signed char* esi7;
    unsigned char* eax8;
    int32_t eax9;

    eax2 = reinterpret_cast<struct s1522*>(0x6a391ab0 + cf3);
    __asm__("out dx, eax");
    __asm__("out 0xa7, al");
    edx4 = edx5 + 1;
    *edi6 = *esi7;
    if (!__intrinsic()) 
        goto 0x403e07;
    *reinterpret_cast<unsigned char*>(&(eax2 - 33)->pad1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&(eax2 - 33)->pad1) | *reinterpret_cast<unsigned char*>(&edx4));
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) ^ 61);
    eax8 = &eax2->f1;
    __asm__("out 0x81, al");
    __asm__("cli ");
    __asm__("aam 0x87");
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl ^ 0xc3) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx4) + 1)));
    eax9 = g3f65c248;
    __asm__("pushad ");
    __asm__("lds esi, [esi+0x72]");
    ge8836a99 = eax9;
}

struct s1523 {
    signed char[36] pad36;
    signed char f36;
};

unsigned char g49782115;

void fun_403f05() {
    void* eax1;
    int32_t ecx2;
    struct s1523* esi3;
    uint1_t cf4;
    unsigned char* edi5;
    int32_t* eax6;
    int32_t ecx7;
    int32_t edx8;
    int32_t esi9;
    int32_t ebx10;
    uint32_t ebx11;

    __asm__("out 0x63, eax");
    eax1 = __return_address();
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = esi3->f36;
    g49782115 = *reinterpret_cast<unsigned char*>(&eax1);
    cf4 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax1) < 0x4112c60e - reinterpret_cast<uint1_t>(*edi5 < *reinterpret_cast<unsigned char*>(&eax1)));
    eax6 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax1) - (0x4112c60e - cf4));
    __asm__("aam 0x28");
    ecx7 = ecx2 + *reinterpret_cast<int32_t*>(edx8 - 0x47217b29);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax6) - 19) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax6) - 19) - (ecx7 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax6) - 19) < ecx7 + __intrinsic()));
    *eax6 = esi9 + 1;
    *reinterpret_cast<int32_t*>(ebx10 - (0x139a6f97 + reinterpret_cast<uint1_t>(ebx11 < 0x139a6f97 + cf4)) - 0x1dcd0819) = ecx7;
    __asm__("outsd ");
    if (__undefined() == __intrinsic()) 
        goto 0x403f53;
    __asm__("hlt ");
}

void fun_403f59() {
    goto 0x403f1d;
}

void fun_404230(int32_t ecx) {
    void* ebp2;
    int16_t ss3;
    int1_t less_or_equal4;

    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(ebp2) + 4 - 2) = ss3;
    if (!less_or_equal4) 
        goto 0x404295;
    __asm__("lodsb ");
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__undefined() != __intrinsic()) | __undefined())) 
        goto 0x404207;
    __asm__("int1 ");
    if (!__intrinsic()) 
        goto 0x4042a0;
    __asm__("aas ");
    __asm__("popad ");
    if (__intrinsic()) 
        goto 0x4042b0;
    __asm__("iretd ");
    __asm__("arpl [edi], bx");
}

struct s1524 {
    signed char[126] pad126;
    int32_t f126;
};

struct s1525 {
    signed char[126] pad126;
    int32_t f126;
};

struct s1526 {
    signed char[126] pad126;
    int32_t f126;
};

void fun_4043b5() {
    unsigned char ah1;
    signed char al2;
    uint1_t cf3;
    struct s1524* esi4;
    struct s1525* esi5;
    int32_t ebp6;
    struct s1526* esi7;

    if (reinterpret_cast<signed char>(ah1) > reinterpret_cast<signed char>(al2 + cf3)) 
        goto 0x404402;
    if (0) 
        goto 0x4043fd;
    __asm__("cli ");
    esi4->f126 = esi5->f126 + ebp6;
    if (esi7->f126 >= 0) {
        goto 0x4043f5;
    } else {
        __asm__("rcl dword [edx], 0x48");
        __asm__("outsd ");
        __asm__("rcl dword [eax+0xdb8986ae], cl");
    }
}

void fun_40438c() {
    int1_t less_or_equal1;
    int32_t ebx2;
    signed char ah3;
    int32_t ebx4;
    int32_t ebx5;
    signed char ah6;
    int32_t ebx7;
    int32_t* edi8;
    int32_t* esi9;

    less_or_equal1 = *reinterpret_cast<signed char*>(ebx2 - 5) <= ah3;
    *reinterpret_cast<signed char*>(ebx4 - 5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx5 - 5) - ah6);
    if (*reinterpret_cast<signed char*>(ebx7 - 5)) 
        goto 0x404353;
    if (less_or_equal1) 
        goto 0x404368;
    __asm__("movq [edi], mm5");
    *edi8 = *esi9;
}

void fun_40446e() {
}

void fun_4049bf() {
    int32_t esi1;
    signed char dh2;

    *reinterpret_cast<signed char*>(esi1 + 0x3831521f) = dh2;
}

void fun_404a76() {
    __asm__("fisubr word [edi]");
    __asm__("cmc ");
    __asm__("aam 0x36");
    __asm__("cdq ");
}

void fun_405299() {
    int32_t edi1;
    int32_t edi2;
    uint32_t eax3;

    *reinterpret_cast<uint32_t*>(edi1 + 0x2db74362) = *reinterpret_cast<uint32_t*>(edi2 + 0x2db74362) & eax3;
}

void fun_5b0e64a0();

void fun_4056bf() {
    int1_t sf1;

    if (sf1) 
        goto 0x4056d6;
    fun_5b0e64a0();
}

struct s1527 {
    unsigned char f0;
    signed char[49] pad50;
    uint32_t f50;
    signed char[1648140770] pad1648140824;
    signed char f1648140824;
};

struct s1528 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1529 {
    signed char[22] pad22;
    uint32_t f22;
};

void fun_4057ac() {
    uint32_t eflags1;
    uint32_t* esp2;
    void* ebp3;
    void* ebp4;
    uint32_t esi5;
    int32_t esi6;
    int32_t edi7;
    int32_t esi8;
    int32_t edi9;
    int32_t edx10;
    int32_t esi11;
    int32_t edi12;
    struct s1527* esi13;
    int32_t* esp14;
    int32_t ebx15;
    uint32_t eax16;
    uint32_t edx17;
    void** esp18;
    int32_t edx19;
    uint1_t cf20;
    struct s1528** esp21;
    struct s1528* ecx22;
    unsigned char* edi23;
    unsigned char tmp32_24;
    unsigned char ebp25;
    int1_t cf26;
    int1_t pf27;
    uint32_t edx28;
    int16_t* esp29;
    int16_t es30;
    void* esp31;
    uint32_t* esp32;
    void* esp33;
    unsigned char al34;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
    esp2 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp2) + reinterpret_cast<uint32_t>(ebp3) - 0x7f) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp2) + reinterpret_cast<uint32_t>(ebp4) - 0x7f) | esi5;
    *reinterpret_cast<int32_t*>(esi6 + edi7 * 8 - 0x33de98a2) = *reinterpret_cast<int32_t*>(esi8 + edi9 * 8 - 0x33de98a2) + edx10;
    if (*reinterpret_cast<int32_t*>(esi11 + edi12 * 8 - 0x33de98a2) >= 0) {
        addr_0x405815_2:
        esi13->f50 = esi13->f50 | reinterpret_cast<uint32_t>(esi13);
        esp14 = reinterpret_cast<int32_t*>(esp2 - 1);
        *esp14 = ebx15;
        eax16 = edx17;
        __asm__("popad ");
        esp18 = reinterpret_cast<void**>(esp14 + 1 - 1);
        *reinterpret_cast<void***>(esp18) = esp18;
    } else {
        eax16 = *esp2;
        ++esp2;
        *reinterpret_cast<int32_t*>(eax16 - 43) = *reinterpret_cast<int32_t*>(eax16 - 43) + edx19;
        cf20 = __intrinsic();
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax16) + 1) = -88;
        do {
            __asm__("in al, 0xa0");
            __asm__("int1 ");
            esp21 = reinterpret_cast<struct s1528**>(reinterpret_cast<uint32_t>(esp2) + 2 - 4);
            *esp21 = ecx22;
            esp2 = &(*esp21)->f4;
            __asm__("retf 0x4a74");
            __asm__("fisttp qword [edi+0x80d5f339]");
            *reinterpret_cast<uint32_t*>(&(*reinterpret_cast<struct s1529**>(&edi23))->f22) = *reinterpret_cast<uint32_t*>(&(*reinterpret_cast<struct s1529**>(&edi23))->f22) - (ebx15 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(&(*reinterpret_cast<struct s1529**>(&edi23))->f22) < ebx15 + cf20));
            *edi23 = reinterpret_cast<unsigned char>(*edi23 ^ reinterpret_cast<uint32_t>(ecx22));
            if (__intrinsic()) 
                break;
            --ebx15;
            ecx22 = reinterpret_cast<struct s1528*>(reinterpret_cast<uint32_t>(ecx22) - 1);
            if (!(reinterpret_cast<uint1_t>(!!ecx22) & reinterpret_cast<uint1_t>(!!ebx15))) {
                tmp32_24 = *edi23;
                *edi23 = ebp25;
                cf26 = *reinterpret_cast<unsigned char*>(&eax16) < 0xb6;
                *reinterpret_cast<unsigned char*>(&eax16) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax16) + 74);
                pf27 = __intrinsic();
                if (!cf26) 
                    goto addr_0x405809_7;
                __asm__("aaa ");
                ebp25 = reinterpret_cast<unsigned char>(tmp32_24 - *reinterpret_cast<int32_t*>(edx28 + 0x76));
            }
            esi13->f0 = reinterpret_cast<unsigned char>(esi13->f0 + *reinterpret_cast<signed char*>(&edx28));
            esp29 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp2) - 2);
            *esp29 = es30;
            *edi23 = esi13->f0;
            ++edi23;
            esi13 = reinterpret_cast<struct s1527*>(&esi13->pad50);
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi13) + 0x623ca218) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi13) + 0x623ca218) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx15) + 1));
            *reinterpret_cast<uint1_t*>(&eflags1) = __intrinsic();
            esp31 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp29) - 1);
            *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags1) = esp31 == 0;
            *reinterpret_cast<int1_t*>(&eflags1) = reinterpret_cast<int32_t>(esp31) < reinterpret_cast<int32_t>(0);
            *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
            __asm__("out dx, al");
            esp32 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp31) - 4);
            *esp32 = eflags1 & 0xfcffff;
            __asm__("fisttp dword [ebp-0x2d]");
            edx28 = *esp32;
            esp33 = reinterpret_cast<void*>(esp32 + 1);
            esp2 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp33) - (reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebx15 - 31)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esp33) < reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebx15 - 31)) + *reinterpret_cast<uint1_t*>(&eflags1))));
            *reinterpret_cast<uint32_t*>(edx28 - 82) = *reinterpret_cast<uint32_t*>(edx28 - 82) | reinterpret_cast<uint32_t>(esp2);
            al34 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax16) - 77) + __intrinsic()) ^ 0x8f);
            *reinterpret_cast<unsigned char*>(&ecx22) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx22) & *reinterpret_cast<unsigned char*>(&ebx15));
            cf20 = reinterpret_cast<uint1_t>(al34 < 0x68);
            *reinterpret_cast<unsigned char*>(&eax16) = reinterpret_cast<unsigned char>(al34 - 0x68);
        } while (!cf20);
        goto addr_0x405806_13;
    }
    if (eax16 - 1) 
        goto "???";
    addr_0x405806_13:
    pf27 = __intrinsic();
    __asm__("cli ");
    addr_0x405809_7:
    __asm__("lodsd ");
    if (pf27) {
        __asm__("xlatb ");
        edx17 = edx28 * 26;
        goto addr_0x405815_2;
    }
}

void fun_405c55() {
    __asm__("sahf ");
    __asm__("insd ");
}

unsigned char g941de12b;

void fun_405dbf(void* ecx) {
    unsigned char* ecx2;
    int1_t zf3;
    int32_t esi4;
    unsigned char al5;
    signed char al6;

    ecx2 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx2) & reinterpret_cast<uint1_t>(!zf3)) 
        goto 0x405def;
    __asm__("lahf ");
    __asm__("xlatb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1) - *reinterpret_cast<signed char*>(esi4 - 0x2bef5cd6));
    __asm__("int 0x84");
    __asm__("salc ");
    __asm__("aad 0xe2");
    al5 = reinterpret_cast<unsigned char>(al6 - 95);
    *ecx2 = reinterpret_cast<unsigned char>(*ecx2 ^ al5);
    g941de12b = al5;
}

void fun_405fd1() {
    __asm__("fdiv st0, st7");
    __asm__("hlt ");
}

void fun_40611a(int32_t ecx) {
    if (ecx) 
        goto 0x4060f4;
    __asm__("pushad ");
}

void fun_4062a5() {
    int32_t edi1;

    __asm__("fdivr qword [ecx+0xdb1038cb]");
    __asm__("outsb ");
    __asm__("out 0xa5, eax");
    __asm__("int 0xb8");
    __asm__("into ");
    __asm__("wait ");
    if (!(edi1 - 1)) 
        goto 0x4062ea;
    __asm__("aaa ");
    __asm__("xlatb ");
    __asm__("fcomp qword [esi+0x6a5d7210]");
}

void fun_406584() {
}

struct s1530 {
    signed char[14] pad14;
    unsigned char f14;
};

int32_t fun_f0f3c435();

struct s1530* gd243bbf0;

signed char g79191503;

void fun_406645(uint32_t ecx) {
    int32_t* ds2;
    int32_t** esp3;
    int32_t edi4;
    uint32_t ecx5;
    uint32_t* eax6;
    int1_t pf7;
    int32_t* edi8;
    void* esp9;
    struct s1530* eax10;
    signed char ah11;
    int32_t* ebp12;
    signed char* ebx13;
    int32_t edx14;
    int32_t* esp15;
    int32_t eax16;
    struct s1530** esp17;

    ds2 = reinterpret_cast<int32_t*>(static_cast<uint16_t>(reinterpret_cast<int32_t>(__zero_stack_offset())));
    __asm__("ror esp, 0x9e");
    __asm__("aam 0xc1");
    esp3 = reinterpret_cast<int32_t**>(edi4 * -67);
    ecx5 = ecx & *eax6;
    pf7 = __intrinsic();
    __asm__("retf ");
    do {
        if (pf7) 
            goto 0x406608;
        edi8 = *esp3;
        esp9 = reinterpret_cast<void*>(esp3 + 2);
        eax10->f14 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax10->f14 + ah11) + reinterpret_cast<uint1_t>(reinterpret_cast<uint16_t>(edi8) < reinterpret_cast<uint16_t>(ebp12)));
        do {
            ++ecx5;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx13) + 1) = 0x9a;
            if (!__intrinsic()) 
                goto addr_0x4066d7_5;
            if (ecx5) 
                goto 0x4066c9;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx14) + 1) = 47;
            *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax10) ^ 0xd5);
        } while (1);
        ebp12 = reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(ebp12) - 1);
        esp15 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp9) - 4);
        *esp15 = 0xf8;
        esp3 = reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(esp15) - 2);
        *esp3 = ds2;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp3 + edx14 * 2) - 45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp3 + edx14 * 2) - 45) | *reinterpret_cast<unsigned char*>(&edx14));
        --edx14;
        __asm__("aaa ");
        pf7 = __intrinsic();
        __asm__("in eax, 0xf6");
    } while (!(*reinterpret_cast<unsigned char*>(edx14 + 0x36c32990) & *reinterpret_cast<unsigned char*>(&eax10)));
    goto addr_0x406685_9;
    addr_0x4066d7_5:
    __asm__("outsb ");
    __asm__("iretd ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp9) - 4) = 0x4066e4;
    eax16 = fun_f0f3c435();
    *ebx13 = 47;
    __asm__("retf ");
    while (1) {
        if (!ecx5) 
            goto "???";
        --ecx5;
        ++edi8;
        if (*edi8 != eax16) 
            goto "???";
    }
    addr_0x406685_9:
    gd243bbf0 = eax10;
    __asm__("aam 0x38");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint16_t>(edi8) - 1) = g79191503;
    __asm__("lds ebp, [eax-0x5c]");
    __asm__("rcr byte [edi-0x26], 1");
    __asm__("iretd ");
    __asm__("bts eax, 0x5f");
    esp17 = reinterpret_cast<struct s1530**>(esp3 - 2);
    *esp17 = eax10;
    *reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(esp17) - 2) = ds2;
}

struct s1531 {
    signed char[1] pad1;
    signed char f1;
};

struct s1532 {
    signed char[88] pad88;
    uint32_t f88;
};

void fun_406942() {
    signed char* edi1;
    signed char al2;
    signed char* edi3;
    struct s1531* edi4;
    signed char ch5;
    uint32_t eax6;
    uint32_t eax7;
    struct s1532* ebx8;

    *edi1 = al2;
    edi3 = &edi4->f1;
    *edi3 = reinterpret_cast<signed char>(*edi3 - ch5);
    eax6 = eax7 & ebx8->f88;
    *reinterpret_cast<int32_t*>(eax6 - 75) = *reinterpret_cast<int32_t*>(eax6 - 75) + 1;
}

void fun_406a0d() {
    int1_t sf1;

    __asm__("outsd ");
    if (sf1) {
        __asm__("hlt ");
    }
}

void fun_406be1() {
    __asm__("ror byte [eax-0x23], cl");
}

void fun_369c8ee3(int32_t a1, int32_t a2);

void fun_406e6f(int32_t ecx) {
    __asm__("lodsd ");
    fun_369c8ee3(ecx, __return_address());
    __asm__("in eax, dx");
}

void fun_406fe6() {
}

void fun_40752e() {
    int1_t zf1;

    if (zf1) 
        goto 0x407593;
    __asm__("les ebx, [ecx]");
    __asm__("aaa ");
}

void fun_407911(int32_t ecx, int16_t a2) {
    int32_t ebx3;
    int32_t ebx4;

    __asm__("rep lds esi, [edi+0x5]");
    ebx3 = ebx4 - 1;
    __asm__("daa ");
    __asm__("sahf ");
    __asm__("aam 0x76");
    *reinterpret_cast<signed char*>(ebx3 - 52) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx3 - 52) >> 0x8a);
    __asm__("rcr dword [esi+0xa3bdc98b], 1");
}

struct s1533 {
    signed char[1] pad1;
    unsigned char f1;
};

void fun_4084c2(int16_t cx) {
    int32_t ebx2;
    int32_t ebx3;
    int32_t eax4;
    int16_t ax5;
    int32_t ebp6;
    int32_t ebp7;
    signed char* edi8;
    signed char* esi9;
    unsigned char* edi10;
    struct s1533* edi11;

    __asm__("xlatb ");
    ebx2 = ebx3;
    __asm__("fiadd dword [edi+0x93fe6fee]");
    eax4 = static_cast<int32_t>(ax5);
    ebp6 = ebp7;
    __asm__("das ");
    *edi8 = *esi9;
    edi10 = &edi11->f1;
    __asm__("out 0x92, al");
    do {
        *reinterpret_cast<signed char*>(ebx2 - 0x236bbe8b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx2 - 0x236bbe8b) << 1);
        __asm__("outsd ");
    } while (__intrinsic() | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(ebx2 - 0x236bbe8b) == 0));
    if (reinterpret_cast<signed char>(*edi10) >= reinterpret_cast<signed char>(*reinterpret_cast<unsigned char*>(&eax4))) 
        goto 0x4084a4;
    *reinterpret_cast<unsigned char*>(ebp6 - 0x1e479a10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp6 - 0x1e479a10) - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx2) + 1) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebp6 - 0x1e479a10) < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx2) + 1) + reinterpret_cast<uint1_t>(*edi10 < *reinterpret_cast<unsigned char*>(&eax4))))));
}

struct s1534 {
    signed char[1] pad1;
    signed char f1;
};

struct s1535 {
    signed char[1] pad1;
    signed char f1;
};

void fun_408633() {
    signed char* edi1;
    signed char al2;
    struct s1534* edi3;
    struct s1535* esi4;

    *edi1 = al2;
    __asm__("rol dword [eax+0xd764aac4], cl");
    edi3->f1 = esi4->f1;
    __asm__("wait ");
    __asm__("fsub st0, st0");
    __asm__("cmc ");
}

void fun_408750(int32_t ecx) {
    uint1_t zf2;
    int32_t edx3;

    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & zf2) 
        goto 0x408721;
    __asm__("clc ");
    __asm__("cdq ");
    __asm__("in al, dx");
    __asm__("insb ");
    goto *reinterpret_cast<int32_t*>(edx3 - 93);
}

void fun_4087ff() {
    int32_t* eax1;
    int32_t* eax2;
    int32_t edi3;
    int32_t eax4;
    signed char ah5;

    *eax1 = *eax2 + edi3;
    __asm__("aad 0xd2");
    *reinterpret_cast<signed char*>(eax4 - 0x6d74404b) = ah5;
}

int32_t g4f0c616e;

int32_t g96fa9f54;

void fun_4088c6(int32_t ecx) {
    signed char* eax2;
    int32_t ebp3;
    signed char* eax4;
    int32_t ebp5;
    signed char bl6;
    int32_t eax7;

    __asm__("wait ");
    __asm__("lahf ");
    __asm__("wait ");
    eax2[ebp3 * 4] = reinterpret_cast<signed char>(eax4[ebp5 * 4] + bl6);
    eax7 = g4f0c616e;
    __asm__("sti ");
    g96fa9f54 = eax7;
}

void fun_408c8f(int16_t cx) {
    int32_t eax2;
    int32_t eax3;
    int32_t edi4;
    uint1_t cf5;

    eax2 = eax3;
    __asm__("rcr byte [ebp-0x48], 1");
    if (!__intrinsic()) 
        goto 0x408d19;
    *reinterpret_cast<unsigned char*>(edi4 + 0x71372ae0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi4 + 0x71372ae0) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) - reinterpret_cast<unsigned char>(25 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax2) < reinterpret_cast<unsigned char>(25 + cf5)))));
    __asm__("sahf ");
    __asm__("pushad ");
}

void fun_409062() {
    int1_t less1;

    __asm__("stc ");
    if (!less1) 
        goto 0x4090a9;
}

void fun_409157(int32_t ecx) {
    int16_t v2;
    int16_t ss3;
    int16_t ds4;
    int32_t* edi5;
    int32_t* esi6;
    int1_t of7;
    signed char* edx8;
    int16_t ecx9;
    int16_t ebp10;
    signed char bh11;

    if (ecx - 1) 
        goto 0x4091b5;
    (&v2)[1] = ss3;
    __asm__("sahf ");
    v2 = ds4;
    __asm__("retf 0x2a8e");
    *edi5 = *esi6;
    if (!of7) 
        goto 0x4091b2;
    __asm__("enter 0xf2ac, 0xbc");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = -63;
    __asm__("in al, dx");
    do {
        ecx9 = v2;
        v2 = ebp10;
        __asm__("aam 0x3b");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1) - bh11);
        if (__intrinsic()) 
            goto 0x4091da;
    } while (reinterpret_cast<uint1_t>(!!(ecx9 - 1)) & reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1) == 0));
    *edx8 = reinterpret_cast<signed char>(*edx8 << 1);
    __asm__("hlt ");
}

struct s1536 {
    signed char[37] pad37;
    uint32_t f37;
};

struct s1537 {
    signed char[37] pad37;
    int32_t f37;
};

struct s1538 {
    signed char[37] pad37;
    uint32_t f37;
};

void fun_409110(int32_t ecx) {
    int1_t below_or_equal2;
    struct s1536* esi3;
    struct s1537* esi4;
    int32_t ebp5;
    struct s1538* esi6;
    int32_t ebp7;

    if (below_or_equal2) 
        goto 0x4090c0;
    __asm__("packuswb mm5, [edi+0x67e11d]");
    esi3->f37 = esi4->f37 - (ebp5 + reinterpret_cast<uint1_t>(esi6->f37 < ebp7 + __intrinsic()));
    __asm__("lodsb ");
    __asm__("int1 ");
    __asm__("int 0x8");
    __asm__("ror dword [ebx+0x1ec53bda], 0x7");
}

void fun_4095ae() {
    signed char* edi1;
    signed char* esi2;

    *edi1 = *esi2;
}

void fun_40971d() {
}

void fun_409815(int32_t ecx) {
    uint32_t esi2;

    __asm__("les edx, [eax]");
    if (1) 
        goto 0x409855;
    if (!(esi2 ^ *reinterpret_cast<uint32_t*>(ecx + 0x4aeb3d95))) 
        goto 0x4097c9;
    return;
}

int32_t fun_ef796b16(int32_t a1);

struct s1539 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4097ca() {
    int32_t eax1;
    int32_t* edi2;
    int32_t* esi3;
    struct s1539* edi4;

    eax1 = fun_ef796b16(__return_address());
    *edi2 = *esi3;
    edi4->f4 = eax1;
}

void fun_409a35() {
}

struct s1540 {
    signed char[86] pad86;
    signed char f86;
};

int32_t g251a;

struct s1541 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_409aa5() {
    int32_t eax1;
    int16_t ax2;
    struct s1540* ebp3;
    signed char* edi4;
    signed char* esi5;
    struct s1541* edi6;

    *reinterpret_cast<uint16_t*>(&eax1) = reinterpret_cast<uint16_t>(ax2 / reinterpret_cast<uint16_t>(static_cast<int16_t>(ebp3->f86)));
    g251a = eax1;
    *edi4 = *esi5;
    edi6->f1 = eax1;
}

struct s1542 {
    signed char[26] pad26;
    unsigned char f26;
};

struct s1543 {
    signed char[26] pad26;
    unsigned char f26;
};

void fun_409c52() {
    struct s1542* edx1;
    struct s1543* edx2;
    unsigned char bh3;
    void* edi4;
    int32_t* esi5;
    int32_t esi6;
    int32_t esi7;
    unsigned char bl8;
    uint32_t eax9;

    edx1->f26 = reinterpret_cast<unsigned char>(edx2->f26 ^ bh3);
    if (!__intrinsic()) 
        goto 0x409c79;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi4) - 1) = *esi5;
    esi6 = esi7 + 4;
    if (__intrinsic()) 
        goto 0x409c2b;
    __asm__("in al, dx");
    *reinterpret_cast<unsigned char*>(esi6 - 70) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi6 - 70) | bl8);
    __asm__("fstp tword [eax+0x6f]");
    __asm__("xlatb ");
    if (eax9 ^ 0xe742b2f9) 
        goto 0x409c19; else 
        goto "???";
}

void fun_409dd5(int32_t a1) {
    int32_t ebx2;
    int32_t ebx3;

    __asm__("enter 0x76be, 0x3e");
    __asm__("retf 0x88aa");
    __asm__("out 0x96, al");
    *reinterpret_cast<int32_t*>(ebx2 - 78) = *reinterpret_cast<int32_t*>(ebx3 - 78) - 91;
    __asm__("insd ");
    __asm__("fcos ");
}

void fun_409ed7(int32_t ecx) {
    int1_t sf2;
    int1_t sf3;
    int1_t zf4;

    if (!sf2) 
        goto 0x409f3f;
    if (sf3) 
        goto 0x409e62;
    if (reinterpret_cast<uint1_t>(!!(ecx - 1)) & reinterpret_cast<uint1_t>(!zf4)) 
        goto 0x409f35;
    __asm__("sysret ");
}

signed char gc86dcb4f;

void fun_409fd1() {
    signed char al1;

    gc86dcb4f = al1;
    return;
}

void* gf7a49814;

uint32_t g7b8abbbf;

void fun_40a286(void* ecx) {
    int32_t edx2;
    int32_t edx3;
    void* eax4;
    void* ecx5;
    void* eax6;
    void* esp7;
    int32_t ebp8;
    int32_t ebp9;
    signed char* eax10;
    void* edi11;
    void* edi12;

    edx2 = edx3 + 1;
    __asm__("das ");
    eax4 = gf7a49814;
    ecx5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx5) & reinterpret_cast<uint1_t>(edx2 == 0)) 
        goto 0x40a251;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx5) - 63) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx5) - 63) << *reinterpret_cast<unsigned char*>(&ecx5));
    __asm__("enter 0x750e, 0x35");
    __asm__("int 0xfc");
    eax6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax4) - 0x7e39b87b);
    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 2);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp7) + ebp8 * 4 - 0x6f) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp7) + ebp9 * 4 - 0x6f) + 0x7b45102 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax4) < 0x7e39b87b);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx5) + 1) = *eax10;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax6) + reinterpret_cast<int32_t>(edi11) + 0x34a3eba8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax6) + reinterpret_cast<int32_t>(edi12) + 0x34a3eba8) & *reinterpret_cast<unsigned char*>(&edx2));
    g7b8abbbf = reinterpret_cast<uint32_t>(eax6) / *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax6) + reinterpret_cast<int32_t>(ecx5) + 45);
    __asm__("lodsb ");
}

struct s1544 {
    signed char[55] pad55;
    signed char f55;
};

void fun_40a482(int32_t ecx) {
    void* esp2;
    int32_t edx3;
    uint16_t ds4;
    signed char* edi5;
    signed char* esi6;
    void* esi7;
    void* esi8;
    int32_t ecx9;
    int32_t eax10;
    struct s1544* edx11;
    signed char bh12;
    int32_t edx13;
    int32_t edx14;
    int32_t edx15;
    int32_t edx16;
    int32_t ebp17;
    int32_t ebp18;
    int32_t ebp19;

    esp2 = __zero_stack_offset();
    __asm__("fisttp word [esi-0x18]");
    *reinterpret_cast<uint32_t*>(edx3 + 0x6cca5093) = static_cast<uint32_t>(ds4);
    __asm__("in eax, 0xa0");
    *edi5 = *esi6;
    esi7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi8) + 1);
    __asm__("iretd ");
    ecx9 = eax10 - 1;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi7) + reinterpret_cast<int32_t>(esi7) * 8 + 0x68) = ecx;
    do {
        ++ecx9;
    } while (ecx9 < 0 != __intrinsic());
    if (__intrinsic()) 
        goto 0x40a455;
    edx11->f55 = bh12;
    __asm__("outsb ");
    *reinterpret_cast<unsigned char*>(edx13 + 0x61075186) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx14 + 0x61075186) | 62);
    __asm__("sti ");
    __asm__("aaa ");
    edx15 = edx16 - 1;
    *reinterpret_cast<signed char*>(&edx15) = -22;
    __asm__("fnsave [edi+0x7c]");
    *reinterpret_cast<uint32_t*>(edx15 - 0x4764ab12) = *reinterpret_cast<uint32_t*>(edx15 - 0x4764ab12) ^ reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(esp2) - 4 - 4);
    *reinterpret_cast<int32_t*>(ebp17 + 0x4b7ecba8) = *reinterpret_cast<int32_t*>(ebp18 + 0x4b7ecba8) >> -73;
    if (!*reinterpret_cast<int32_t*>(ebp19 + 0x4b7ecba8)) 
        goto 0x40a47d;
}

void fun_40a8a7() {
}

unsigned char g97573289;

struct s1545 {
    signed char[71] pad71;
    uint32_t f71;
};

struct s1546 {
    signed char[71] pad71;
    uint32_t f71;
};

void fun_40a92f(int32_t ecx) {
    uint32_t* edx2;
    int16_t ax3;
    signed char* ebx4;
    int32_t eax5;
    int16_t ax6;
    signed char* ebx7;
    unsigned char* ebx8;
    unsigned char* ebx9;
    struct s1545* edi10;
    struct s1546* edi11;

    __asm__("fcomp qword [ds:esi]");
    *reinterpret_cast<uint16_t*>(&edx2) = reinterpret_cast<uint16_t>(ax3 % reinterpret_cast<uint16_t>(static_cast<int16_t>(*ebx4)));
    *reinterpret_cast<uint16_t*>(&eax5) = reinterpret_cast<uint16_t>(ax6 / reinterpret_cast<uint16_t>(static_cast<int16_t>(*ebx7)));
    g97573289 = reinterpret_cast<unsigned char>(g97573289 >> 1);
    __asm__("outsd ");
    __asm__("fimul dword [eax]");
    *ebx8 = reinterpret_cast<unsigned char>(*ebx9 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    *edx2 = *edx2 ^ 0xb0e119b7;
    if (*edx2) 
        goto 0x40a914;
    edi10->f71 = edi11->f71 >> -52;
    __asm__("insd ");
    __asm__("retf 0x6953");
    __asm__("aaa ");
}

void fun_40b50b() {
}

int32_t fun_d14feeb0();

struct s1547 {
    signed char[21] pad21;
    signed char f21;
};

struct s1548 {
    signed char[21] pad21;
    signed char f21;
};

void fun_40b5c4(int32_t ecx) {
    uint32_t edx2;
    unsigned char* edx3;
    signed char* edx4;
    struct s1547* esi5;
    struct s1548* esi6;
    signed char bl7;
    signed char* edi8;
    signed char* esi9;

    *reinterpret_cast<uint32_t*>(ecx - 0x2713d0bf) = *reinterpret_cast<uint32_t*>(ecx - 0x2713d0bf) ^ edx2;
    __asm__("fldenv [edi+0x6866f8a0]");
    *edx3 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*edx4 - 0x6d)));
    fun_d14feeb0();
    esi5->f21 = reinterpret_cast<signed char>(esi6->f21 - bl7);
    *edi8 = *esi9;
    if (__intrinsic()) 
        goto 0x40b631;
    __asm__("int 0xbb");
}

int32_t g32e3526d;

void fun_40b618() {
    int32_t ebx1;

    g32e3526d = ebx1;
}

signed char g2251aa0d;

void fun_40b9c2(int32_t ecx) {
    int32_t edi2;
    int32_t edi3;
    int32_t ebp4;
    int32_t* edi5;
    int32_t* esi6;
    int32_t ecx7;
    int32_t eax8;
    int32_t edi9;

    *reinterpret_cast<int32_t*>(edi2 - 0x7a65e55d) = *reinterpret_cast<int32_t*>(edi3 - 0x7a65e55d) - ebp4;
    *edi5 = *esi6;
    ecx7 = eax8;
    __asm__("fidivr word [edi]");
    g2251aa0d = reinterpret_cast<signed char>(g2251aa0d + 61);
    *reinterpret_cast<signed char*>(edi9 + 4 - 0x48de86bb) = *reinterpret_cast<signed char*>(&ecx7);
}

void fun_40c050() {
    struct s888* eax1;
    struct s888* esi2;
    uint32_t eax3;
    unsigned char cl4;
    uint32_t ecx5;
    uint32_t ecx6;
    unsigned char cl7;
    uint32_t edx8;
    uint32_t edx9;
    unsigned char dl10;
    uint32_t ecx11;
    uint32_t ecx12;
    unsigned char cl13;
    unsigned char dl14;

    eax1 = reinterpret_cast<struct s888*>(MapViewOfFile());
    g42e0cc = eax1;
    if (eax1) {
        eax1->f28 = 1;
        esi2 = g42e0cc;
        eax3 = 0;
        do {
            cl4 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax3 + reinterpret_cast<int32_t>(esi2)) ^ *reinterpret_cast<unsigned char*>(&eax3));
            *reinterpret_cast<unsigned char*>(eax3 + reinterpret_cast<int32_t>(esi2)) = cl4;
            ecx5 = g42e0d0;
            ecx6 = ecx5 >> 24;
            cl7 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx6) ^ cl4);
            *reinterpret_cast<unsigned char*>(eax3 + reinterpret_cast<int32_t>(esi2)) = cl7;
            edx8 = g42e0d0;
            edx9 = edx8 >> 16;
            dl10 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx9) ^ cl7);
            *reinterpret_cast<unsigned char*>(eax3 + reinterpret_cast<int32_t>(esi2)) = dl10;
            ecx11 = g42e0d0;
            ecx12 = ecx11 >> 8;
            cl13 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx12) ^ dl10);
            *reinterpret_cast<unsigned char*>(eax3 + reinterpret_cast<int32_t>(esi2)) = cl13;
            dl14 = *reinterpret_cast<unsigned char*>(&g42e0d0);
            *reinterpret_cast<unsigned char*>(eax3 + reinterpret_cast<int32_t>(esi2)) = reinterpret_cast<unsigned char>(dl14 ^ cl13);
            ++eax3;
        } while (eax3 < 48);
    }
    goto 2;
}

void fun_40c150() {
    int32_t eax1;

    eax1 = g42e0c8;
    CloseHandle();
    goto eax1;
}

void fun_40c4d7() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
}

struct s1549 {
    signed char[94] pad94;
    uint32_t f94;
};

void fun_40c78a(int32_t ecx, int32_t a2) {
    signed char* edi3;
    int32_t esi4;
    int32_t ebx5;
    struct s1549* edi6;
    void* edi7;
    int32_t ebx8;

    __asm__("retf 0xe183");
    *edi3 = *reinterpret_cast<signed char*>(esi4 + ebx5);
    edi6 = reinterpret_cast<struct s1549*>(reinterpret_cast<int32_t>(edi7) + 1);
    if (!(__intrinsic() || !__intrinsic())) {
        edi6->f94 = edi6->f94 + ebx8 + __intrinsic();
    }
    goto a2;
}

void fun_40c85b() {
    int32_t ebp1;

    if (!*reinterpret_cast<int32_t*>(ebp1 - 4)) 
        goto 0x40c9b6; else 
        goto "???";
}

void fun_40c885() {
    __asm__("out dx, eax");
}

void fun_40c8c9(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40c8c4;
}

struct s1550 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40c8e9(int32_t ecx) {
    int1_t pf2;
    struct s1550* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x40c8e4;
    ebx3->f4 = bh4;
}

void fun_40c940() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40c93b;
}

void fun_40caa8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40caa3;
}

void fun_40cac0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cabb;
}

void fun_40cada() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cad3;
}

void fun_40caf0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40caeb;
}

void fun_40cb08(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cb03;
}

void fun_40cb20() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cb1b;
}

struct s1551 {
    signed char[4] pad4;
    signed char f4;
};

struct s1552 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40cb44() {
    int1_t pf1;
    struct s1551* ebx2;
    struct s1552* ebx3;

    if (!pf1) 
        goto 0x40cb3f;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_40cb5c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cb57;
}

void fun_40cb74() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cb6f;
}

struct s1553 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40cb98() {
    struct s1553* ebx1;
    struct s1553* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40cb93;
    ebx1->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1)) + cf4);
}

struct s1554 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cbb0(int32_t ecx) {
    int1_t pf2;
    struct s1554* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x40cbab;
    ebx3->f4 = edi4;
}

struct s1555 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1556 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cbc8(int32_t ecx) {
    int1_t pf2;
    struct s1555* ebx3;
    struct s1556* ebx4;
    int32_t edi5;

    if (!pf2) 
        goto 0x40cbc3;
    ebx3->f4 = ebx4->f4 + edi5;
}

void fun_40cbe0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cbdb;
}

void fun_40cbf8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cbf3;
}

void fun_40cc2d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cc28;
}

void fun_40cc45() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cc40;
}

struct s1557 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40cc5d() {
    int1_t pf1;
    struct s1557* ebx2;
    int32_t edi3;
    uint1_t cf4;

    if (!pf1) 
        goto 0x40cc58;
    ebx2->f4 = ebx2->f4 + edi3 + cf4;
}

struct s1558 {
    signed char[4] pad4;
    signed char f4;
};

struct s1559 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40cc75() {
    int1_t pf1;
    struct s1558* ebx2;
    struct s1559* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x40cc70;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

struct s1560 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cc8f() {
    int1_t pf1;
    struct s1560* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40cc88;
    ebx2->f4 = edi3;
}

void fun_40cca5() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x40cca0;
    *reinterpret_cast<signed char*>(&gc987047b) = al2;
}

void fun_40ccbf() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ccb8;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_40ccd5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ccd0;
}

struct s1561 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1562 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40ccf9() {
    int1_t pf1;
    struct s1561* ebx2;
    struct s1562* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40ccf4;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

struct s1563 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40cd11() {
    struct s1563* ebx1;
    struct s1563* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40cd0c;
    ebx1->f4 = reinterpret_cast<signed char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_40cd29() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cd24;
}

void fun_40cd41() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cd3c;
}

void fun_40cd59() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cd54;
}

struct s1564 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1565 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40cd71() {
    int1_t pf1;
    struct s1564* ebx2;
    struct s1565* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x40cd6c;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

struct s1566 {
    signed char[4] pad4;
    signed char f4;
};

struct s1567 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40cd89() {
    int1_t pf1;
    struct s1566* ebx2;
    struct s1567* ebx3;

    if (!pf1) 
        goto 0x40cd84;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_40cdaf() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cda8;
}

struct s1568 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1569 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40cdc3() {
    int1_t pf1;
    struct s1568* ebx2;
    struct s1569* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40cdc0;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_40cddd() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x40cdd8;
    *reinterpret_cast<signed char*>(&gc987047b) = al2;
}

void fun_40cdf7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cdf0;
}

void fun_40ce0d(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40ce08;
}

void fun_40ce25() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ce20;
}

void fun_40ce66() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ce61;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_40ce8a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ce85;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_40cea4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ce9d;
}

struct s1570 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1571 {
    signed char[4] pad4;
    signed char f4;
};

struct s1572 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40ceba() {
    int1_t pf1;
    struct s1570* ebx2;
    struct s1571* ebx3;
    signed char bh4;
    struct s1572* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40ceb5;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

void fun_40cef6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cef1;
}

void fun_40cf0e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cf09;
    __asm__("fnstcw word [ebx+0x4]");
}

struct s1573 {
    signed char[4] pad4;
    signed char f4;
};

struct s1574 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40cf26() {
    int1_t pf1;
    struct s1573* ebx2;
    struct s1574* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x40cf21;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

void fun_40cf3e(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40cf39;
}

void fun_40cf6e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cf69;
}

void fun_40cf86() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cf81;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_40cf9e() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x40cf99;
    gd287047b = eax2;
}

void fun_40cfb6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cfb1;
}

void fun_40cfcc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cfc9;
}

void fun_40cfe6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cfe1;
}

void fun_40d000() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40cff9;
}

void fun_40d016() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x40d011;
    *reinterpret_cast<signed char*>(&ged87047b) = al2;
}

void fun_40d02e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d029;
}

void fun_40d046() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d041;
}

struct s1575 {
    signed char[4] pad4;
    signed char f4;
};

struct s1576 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d05e() {
    int1_t pf1;
    struct s1575* ebx2;
    struct s1576* ebx3;

    if (!pf1) 
        goto 0x40d059;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_40d076() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d071;
}

struct s1577 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d08e() {
    struct s1577* ebx1;
    struct s1577* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40d089;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

struct s1578 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1579 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d0a6(int32_t ecx) {
    int1_t pf2;
    struct s1578* ebx3;
    struct s1579* ebx4;
    int32_t edi5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x40d0a1;
    ebx3->f4 = ebx4->f4 + edi5 + cf6;
}

void fun_40d0c0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d0b9;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_40d0d6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d0d1;
    __asm__("fisub word [ecx+0x432304]");
}

void fun_40d110() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d10b;
}

void fun_40d128() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d123;
    __asm__("fidivr dword [ebx+0x4]");
}

struct s1580 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d142() {
    int1_t pf1;
    struct s1580* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40d13b;
    ebx2->f4 = edi3;
}

void fun_40d158(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d153;
}

struct s1581 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d170(signed char cl) {
    int1_t pf2;
    struct s1581* ebx3;

    if (!pf2) 
        goto 0x40d16b;
    ebx3->f4 = reinterpret_cast<signed char>(ebx3->f4 >> cl);
}

void fun_40d188() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d183;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_40d1ba() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d1b3;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_40d1d0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d1cb;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_40d1e8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d1e3;
}

struct s1582 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1583 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40d200() {
    int1_t pf1;
    struct s1582* ebx2;
    struct s1583* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40d1fb;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_40d216(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d213;
}

void fun_40d230() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d22b;
}

void fun_40d254() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d24f;
    __asm__("fidivr word [ebx+0x4]");
}

struct s1584 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1585 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40d26c() {
    int1_t pf1;
    struct s1584* ebx2;
    struct s1585* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40d267;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_40d292() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d28b;
}

void fun_40d2b6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d2af;
}

void fun_40d2cc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d2c7;
}

void fun_40d2e4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d2df;
}

void fun_40d2fc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d2f7;
    __asm__("arpl [ebx+0x4], di");
}

void fun_40d320(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d31b;
}

void fun_40d344() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x40d33f;
    gc987047b = eax2;
}

void fun_40d35c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d357;
    __asm__("fstp tword [ebx+0x4]");
}

struct s1586 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1587 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d42b(int32_t ecx) {
    int1_t pf2;
    struct s1586* ebx3;
    struct s1587* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x40d426;
    ebx3->f4 = ebx4->f4 ^ edi5;
}

struct s1588 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1589 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40d469() {
    int1_t pf1;
    struct s1588* ebx2;
    struct s1589* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40d462;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_40d481() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d47a;
}

void fun_40d497() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d492;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_40d4af() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d4aa;
    __asm__("fstp tword [ebx+0x4]");
}

struct s1590 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d4df() {
    struct s1590* ebx1;
    struct s1590* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40d4da;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

void fun_40d545() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d540;
}

void fun_40d569(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d564;
}

void fun_40d599() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d594;
}

void fun_40d5b3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d5ac;
}

void fun_40d5c9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d5c4;
}

void fun_40d5e1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d5dc;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_40d5f9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d5f4;
}

void fun_40d64a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d645;
}

void fun_40d662() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d65d;
}

struct s1591 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d67a() {
    int1_t pf1;
    struct s1591* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x40d675;
    ebx2->f4 = bh3;
}

struct s1592 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1593 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d694() {
    int1_t pf1;
    struct s1592* ebx2;
    struct s1593* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x40d68d;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_40d6b6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d6b1;
}

void fun_40d6ce() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d6c9;
}

void fun_40d6e6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d6e1;
}

struct s1594 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d70a() {
    int1_t pf1;
    struct s1594* ebx2;

    if (!pf1) 
        goto 0x40d705;
    ebx2->f4 = ebx2->f4 >> 0xffffff87;
}

struct s1595 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d72e() {
    int1_t pf1;
    struct s1595* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40d729;
    ebx2->f4 = ebx2->f4 + edi3;
}

struct s1596 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40d746(int32_t ecx) {
    int1_t pf2;
    struct s1596* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x40d741;
    ebx3->f4 = bh4;
}

void fun_40d75e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d759;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_40d776() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d771;
}

void fun_40d790() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d789;
}

void fun_40d7a6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d7a1;
}

struct s1597 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d7be(int32_t ecx) {
    int1_t pf2;
    struct s1597* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x40d7b9;
    ebx3->f4 = edi4;
}

void fun_40d7d6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d7d1;
    __asm__("fdivr qword [ebx+0x4]");
}

void fun_40d7ee() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d7e9;
}

struct s1598 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1599 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d806() {
    int1_t pf1;
    struct s1598* ebx2;
    struct s1599* ebx3;

    if (!pf1) 
        goto 0x40d801;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_40d81e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d819;
}

void fun_40d836() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d831;
}

void fun_40d84e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d849;
}

void fun_40d866() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d861;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1600 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1601 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1602 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d87e() {
    int1_t pf1;
    struct s1600* ebx2;
    struct s1601* ebx3;
    int32_t edi4;
    struct s1602* ebx5;
    uint1_t cf6;

    if (!pf1) 
        goto 0x40d879;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi4 + cf6));
}

struct s1603 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1604 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d896() {
    int1_t pf1;
    struct s1603* ebx2;
    struct s1604* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x40d891;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_40d8ae(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40d8a9;
    __asm__("fimul word [ebp+0x6852f455]");
}

void fun_40d8f6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d8f1;
}

void fun_40d90e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d909;
}

struct s1605 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1606 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d926() {
    int1_t pf1;
    struct s1605* ebx2;
    struct s1606* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40d921;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_40d94a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d945;
}

void fun_40d970() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d969;
}

void fun_40d9aa() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d9a5;
}

struct s1607 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40d9c2() {
    int1_t pf1;
    struct s1607* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40d9bd;
    ebx2->f4 = edi3;
}

void fun_40d9da() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40d9d5;
}

struct s1608 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40d9f2() {
    int1_t pf1;
    struct s1608* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x40d9ed;
    ebx2->f4 = ebx2->f4 & edi3;
}

void fun_40da0a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40da05;
}

void fun_40da22(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40da1d;
}

void fun_40da3a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40da35;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_40da52() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40da4d;
}

struct s1609 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1610 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40da6c() {
    int1_t pf1;
    struct s1609* ebx2;
    struct s1610* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40da65;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

void fun_40da82(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40da7d;
}

struct s1611 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40dac9() {
    int1_t pf1;
    struct s1611* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x40dac4;
    ebx2->f4 = bh3;
}

struct s1612 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1613 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40dae1() {
    int1_t pf1;
    struct s1612* ebx2;
    struct s1613* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x40dadc;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

void fun_40db05() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40db00;
}

struct s1614 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1615 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40db1f() {
    int1_t pf1;
    struct s1614* ebx2;
    struct s1615* ebx3;

    if (!pf1) 
        goto 0x40db18;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s1616 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1617 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40db41(int32_t ecx) {
    int1_t pf2;
    struct s1616* ebx3;
    struct s1617* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x40db3c;
    ebx3->f4 = ebx4->f4 ^ edi5;
}

void fun_40db59() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40db54;
    __asm__("fnstcw word [ebx+0x4]");
}

struct s1618 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1619 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40db71() {
    int1_t pf1;
    struct s1618* ebx2;
    struct s1619* ebx3;

    if (!pf1) 
        goto 0x40db6c;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_40db8b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40db84;
}

void fun_40dba3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40db9c;
}

void fun_40dbb9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dbb4;
}

struct s1620 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1621 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40dbd3() {
    int1_t pf1;
    struct s1620* ebx2;
    struct s1621* ebx3;

    if (!pf1) 
        goto 0x40dbcc;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s1622 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40dbf5() {
    int1_t pf1;
    struct s1622* ebx2;

    if (!pf1) 
        goto 0x40dbf0;
    ebx2->f4 = 0xff;
}

void fun_40dc0d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dc08;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_40dc25() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dc20;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_40dc3d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dc38;
}

struct s1623 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1624 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1625 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40dc55() {
    int1_t pf1;
    struct s1623* ebx2;
    struct s1624* ebx3;
    int32_t edi4;
    struct s1625* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40dc50;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_40dc6d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dc68;
}

struct s1626 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1627 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40dc85() {
    int1_t pf1;
    struct s1626* ebx2;
    struct s1627* ebx3;

    if (!pf1) 
        goto 0x40dc80;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_40dcab() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dca4;
}

void fun_40dcd9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dcd4;
}

struct s1628 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1629 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1630 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40dcf1() {
    int1_t pf1;
    struct s1628* ebx2;
    struct s1629* ebx3;
    int32_t edi4;
    struct s1630* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40dcec;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

struct s1631 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1632 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40dd09(int32_t ecx) {
    int1_t pf2;
    struct s1631* ebx3;
    struct s1632* ebx4;

    if (!pf2) 
        goto 0x40dd04;
    ebx3->f4 = ebx4->f4 >> 1;
}

void fun_40dd21(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40dd1c;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_40dd39(uint32_t ecx) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;

    if (!pf2) 
        goto 0x40dd34;
    *reinterpret_cast<uint32_t*>(ebx3 - 0x7a990bbb) = *reinterpret_cast<uint32_t*>(ebx4 - 0x7a990bbb) & ecx;
}

struct s1633 {
    signed char[4] pad4;
    signed char f4;
};

struct s1634 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40dd7c() {
    int1_t pf1;
    struct s1633* ebx2;
    struct s1634* ebx3;

    if (!pf1) 
        goto 0x40dd77;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_40dda0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dd9b;
}

struct s1635 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40ddb8() {
    int1_t pf1;
    struct s1635* ebx2;

    if (!pf1) 
        goto 0x40ddb3;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 1);
}

void fun_40ddd2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ddcb;
}

void fun_40dde8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dde3;
}

void fun_40de02() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ddfb;
}

void fun_40de18() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40de13;
    __asm__("fidivr word [ebx+0x4]");
}

struct s1636 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40de30() {
    int1_t pf1;
    struct s1636* ebx2;

    if (!pf1) 
        goto 0x40de2b;
    ebx2->f4 = 0;
}

struct s1637 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40de7e() {
    struct s1637* ebx1;
    struct s1637* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40de79;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 - reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) + reinterpret_cast<uint1_t>(ebx1->f4 < reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) + cf4))));
}

void fun_40de96() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40de91;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_40deae() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dea9;
}

void fun_40dec6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dec1;
}

void fun_40dede() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ded9;
}

void fun_40def6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40def1;
}

void fun_40df0e() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x40df09;
    gd287047b = eax2;
}

void fun_40df26() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40df21;
}

void fun_40df3e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40df39;
}

struct s1638 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40df6e(int32_t ecx) {
    int1_t pf2;
    struct s1638* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x40df69;
    ebx3->f4 = edi4;
}

void fun_40df88() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40df81;
    __asm__("ffreep st7");
}

struct s1639 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40dfa8() {
    struct s1639* ebx1;
    struct s1639* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40dfa3;
    ebx1->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1)) + cf4);
}

void fun_40dfc0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dfbb;
}

void fun_40dfd8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40dfd3;
}

struct s1640 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1641 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1642 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40e008() {
    int1_t pf1;
    struct s1640* ebx2;
    struct s1641* ebx3;
    int32_t edi4;
    struct s1642* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x40e003;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_40e020() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e01b;
}

struct s1643 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1644 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e038() {
    int1_t pf1;
    struct s1643* ebx2;
    struct s1644* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x40e033;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_40e050() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e04b;
}

void fun_40e0bd() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x40e0b8;
    gc987047b = eax2;
}

void fun_40e0d7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e0d0;
}

struct s1645 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40e107() {
    int1_t pf1;
    struct s1645* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x40e102;
    ebx2->f4 = ebx2->f4 ^ edi3;
}

void fun_40e11f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e11a;
}

void fun_40e137() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e132;
    __asm__("fstp tword [ebx+0x4]");
}

struct s1646 {
    signed char[4] pad4;
    signed char f4;
};

struct s1647 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e14f() {
    int1_t pf1;
    struct s1646* ebx2;
    struct s1647* ebx3;

    if (!pf1) 
        goto 0x40e14a;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_40e167() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e162;
}

struct s1648 {
    signed char[4] pad4;
    signed char f4;
};

struct s1649 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e19e() {
    int1_t pf1;
    struct s1648* ebx2;
    struct s1649* ebx3;

    if (!pf1) 
        goto 0x40e199;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

struct s1650 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1651 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e1c4() {
    int1_t pf1;
    struct s1650* ebx2;
    struct s1651* ebx3;

    if (!pf1) 
        goto 0x40e1bd;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_40e1dc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e1d5;
    __asm__("fnstcw word [ebx+0x4]");
}

struct s1652 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1653 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40e1f2(int32_t ecx) {
    int1_t pf2;
    struct s1652* ebx3;
    struct s1653* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x40e1ed;
    ebx3->f4 = ebx4->f4 & edi5;
}

void fun_40e20a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e205;
}

struct s1654 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e22e(int32_t ecx) {
    int1_t pf2;
    struct s1654* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x40e229;
    ebx3->f4 = edi4;
}

struct s1655 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1656 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e246() {
    int1_t pf1;
    struct s1655* ebx2;
    struct s1656* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40e241;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_40e25e(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e259;
}

void fun_40e28f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e28a;
}

struct s1657 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e2a7(signed char cl) {
    int1_t pf2;
    struct s1657* ebx3;

    if (!pf2) 
        goto 0x40e2a2;
    ebx3->f4 = reinterpret_cast<signed char>(ebx3->f4 >> cl);
}

struct s1658 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1659 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e2bf() {
    int1_t pf1;
    struct s1658* ebx2;
    struct s1659* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40e2ba;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_40e2d7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e2d2;
}

void fun_40e2ef() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e2ea;
    __asm__("arpl [ebx+0x4], di");
}

void fun_40e307() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e302;
}

void fun_40e31f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e31a;
}

void fun_40e337() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e332;
}

void fun_40e35b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e356;
}

void fun_40e373() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e36e;
}

void fun_40e38b(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e386;
}

struct s1660 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1661 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e3a3() {
    int1_t pf1;
    struct s1660* ebx2;
    struct s1661* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40e39e;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_40e3bb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e3b6;
}

struct s1662 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e3d3() {
    int1_t pf1;
    struct s1662* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x40e3ce;
    ebx2->f4 = bh3;
}

struct s1663 {
    signed char[4] pad4;
    signed char f4;
};

struct s1664 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e407() {
    int1_t pf1;
    struct s1663* ebx2;
    struct s1664* ebx3;

    if (!pf1) 
        goto 0x40e400;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_40e429() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e424;
}

void fun_40e441(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e43c;
}

struct s1665 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e459() {
    int1_t pf1;
    struct s1665* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40e454;
    ebx2->f4 = edi3;
}

struct s1666 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e471(signed char cl) {
    int1_t pf2;
    struct s1666* ebx3;

    if (!pf2) 
        goto 0x40e46c;
    ebx3->f4 = reinterpret_cast<signed char>(ebx3->f4 >> cl);
}

void fun_40e489() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e484;
}

void fun_40e4a1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e49c;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_40e4b9(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e4b4;
}

void fun_40e4d1(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e4cc;
}

void fun_40e4e9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e4e4;
    __asm__("arpl [ebx+0x4], di");
}

void fun_40e501() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e4fc;
}

struct s1667 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1668 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e531() {
    int1_t pf1;
    struct s1667* ebx2;
    struct s1668* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x40e52c;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_40e549(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e544;
}

struct s1669 {
    signed char[4] pad4;
    signed char f4;
};

struct s1670 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e561(signed char cl) {
    int1_t pf2;
    struct s1669* ebx3;
    struct s1670* ebx4;

    if (!pf2) 
        goto 0x40e55c;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_40e579(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e574;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_40e591(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e58c;
}

struct s1671 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1672 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e5d5(signed char cl) {
    int1_t pf2;
    struct s1671* ebx3;
    struct s1672* ebx4;

    if (!pf2) 
        goto 0x40e5ce;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_40e5ed() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e5e6;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_40e605() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e5fe;
}

void fun_40e61b(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e616;
}

void fun_40e633() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e62e;
}

void fun_40e649() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e646;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_40e663() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e65e;
}

void fun_40e67b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e676;
}

struct s1673 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e693() {
    int1_t pf1;
    struct s1673* ebx2;

    if (!pf1) 
        goto 0x40e68e;
    ebx2->f4 = 0xff;
}

struct s1674 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e6ab() {
    struct s1674* ebx1;
    struct s1674* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40e6a6;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

struct s1675 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1676 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40e6c5() {
    int1_t pf1;
    struct s1675* ebx2;
    struct s1676* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x40e6be;
    ebx2->f4 = ebx3->f4 | edi4;
}

void fun_40e6db() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e6d6;
}

void fun_40e6f3(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e6ee;
}

struct s1677 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1678 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e70b(int32_t ecx) {
    int1_t pf2;
    struct s1677* ebx3;
    struct s1678* ebx4;
    int32_t edi5;

    if (!pf2) 
        goto 0x40e706;
    ebx3->f4 = ebx4->f4 - edi5;
}

void fun_40e723() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e71e;
}

void fun_40e73b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e736;
}

struct s1679 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1680 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e753(int32_t ecx) {
    int1_t pf2;
    struct s1679* ebx3;
    struct s1680* ebx4;
    int32_t edi5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x40e74e;
    ebx3->f4 = ebx4->f4 + edi5 + cf6;
}

void fun_40e76b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e766;
    __asm__("fsubr dword [edx+0x6]");
}

void fun_40e78d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e788;
}

void fun_40e7bd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e7b8;
}

void fun_40e7d5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e7d0;
}

void fun_40e7fb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e7f4;
}

struct s1681 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40e811() {
    int1_t pf1;
    struct s1681* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40e80c;
    ebx2->f4 = ebx2->f4 - edi3;
}

void fun_40e841() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e83c;
}

void fun_40e8b9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e8b4;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_40e8d1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e8cc;
}

void fun_40e8e9(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40e8e4;
}

void fun_40e901() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e8fc;
}

void fun_40e919() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e914;
}

void fun_40e931() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e92c;
}

void fun_40e955() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e950;
}

struct s1682 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40e9c1() {
    int1_t pf1;
    struct s1682* ebx2;

    if (!pf1) 
        goto 0x40e9bc;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 1);
}

void fun_40e9d9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e9d4;
}

void fun_40e9f1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40e9ec;
}

struct s1683 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1684 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40ea09(int32_t ecx) {
    int1_t pf2;
    struct s1683* ebx3;
    struct s1684* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x40ea04;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 | bh5);
}

void fun_40ea21() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ea1c;
}

void fun_40ea39() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ea34;
}

void fun_40ea51() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ea4c;
}

void fun_40ea69(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40ea64;
}

void fun_40ea81() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ea7c;
}

void fun_40eae2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eadd;
}

void fun_40eaf8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eaf5;
}

struct s1685 {
    signed char[4] pad4;
    signed char f4;
};

struct s1686 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40eb12() {
    int1_t pf1;
    struct s1685* ebx2;
    struct s1686* ebx3;

    if (!pf1) 
        goto 0x40eb0d;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

struct s1687 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40eb2a() {
    struct s1687* ebx1;
    struct s1687* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x40eb25;
    ebx1->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1)) + cf4);
}

void fun_40eb42() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eb3d;
}

void fun_40eb5a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x40eb55;
}

struct s1688 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1689 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40eb74(signed char cl) {
    int1_t pf2;
    struct s1688* ebx3;
    struct s1689* ebx4;

    if (!pf2) 
        goto 0x40eb6d;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_40eb8a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eb85;
}

void fun_40eba4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40eb9d;
    __asm__("fild qword [edx+0x0]");
}

struct s1690 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40ec00() {
    int1_t pf1;
    struct s1690* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x40ebf9;
    ebx2->f4 = edi3;
}

void fun_40ec16() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ec11;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_40ec30() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ec29;
}

void fun_40ec50() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ec4d;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1691 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_40ec6a(int32_t ecx) {
    int1_t pf2;
    struct s1691* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x40ec65;
    ebx3->f4 = edi4;
}

struct s1692 {
    signed char[4] pad4;
    signed char f4;
};

struct s1693 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40ec84() {
    int1_t pf1;
    struct s1692* ebx2;
    struct s1693* ebx3;

    if (!pf1) 
        goto 0x40ec7d;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

struct s1694 {
    signed char[4] pad4;
    signed char f4;
};

void fun_40eca6() {
    int1_t pf1;
    struct s1694* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x40eca1;
    ebx2->f4 = bh3;
}

void fun_40ecbe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x40ecb9;
    __asm__("fimul dword [ebx+0x42e0e815]");
}

void fun_410670() {
    int1_t sf1;
    int1_t of2;

    sf1 = reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 64 < 0;
    of2 = __intrinsic();
    do {
    } while (!of2 && of2);
    while (1) {
        if (sf1) 
            goto 0x410691;
        if (!sf1) 
            goto 0x410691;
    }
}

struct s7* fun_4113f0() {
    void* eax1;
    void** esp2;
    void* v3;
    void* esp4;
    struct s7* eax5;
    struct s8* v6;

    eax1 = reinterpret_cast<void*>(GetCurrentProcessId());
    esp2 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 48 - 4 + 4 - 4);
    fun_4150c0(esp2 + 2, 0x42a870, eax1, v3);
    esp4 = reinterpret_cast<void*>(esp2 - 1 - 1 - 1 + 1 + 3);
    eax5 = fun_411600(esp4, reinterpret_cast<uint32_t>(esp4) + 4, esp4);
    if (eax5) {
        eax5->f12 = reinterpret_cast<void**>(0xffff);
        eax5->f8 = 1;
        eax5 = fun_4116a0(v6, eax5);
    }
    return eax5;
}

int32_t fun_4116c0() {
    return 0x42a890;
}

int32_t VerQueryValueA = 0x328ce;

void fun_4117c0() {
    goto VerQueryValueA;
}

int16_t fun_412090(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    int1_t zf8;
    void** esi9;
    void** eax10;
    int1_t zf11;
    int16_t ax12;
    int16_t ax13;

    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a2 + 8) == 100)) {
        zf8 = g42e9f4 == 1;
        if (zf8 || (eax10 = fun_411f10(ecx, esi9, __return_address(), a2, a3, a4, a5, a6, a7), !!*reinterpret_cast<int16_t*>(&eax10))) {
            zf11 = reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a2 + 8) == 0x65);
            if (zf11) {
                ax12 = fun_411ce0(a2, a3, a4, a5);
                return ax12;
            } else {
                ax13 = fun_411e00(a2, a3, a4, a5);
                return ax13;
            }
        } else {
            return *reinterpret_cast<int16_t*>(&eax10);
        }
    } else {
        return 0;
    }
}

int32_t fun_41fb20(void** a1, void** a2) {
    int32_t v3;
    int32_t v4;
    uint32_t v5;
    void** v6;
    int32_t v7;
    int32_t v8;
    int16_t v9;
    int32_t eax10;

    eax10 = fun_41fb40(reinterpret_cast<int32_t>(__zero_stack_offset()) - 64, a1, reinterpret_cast<int32_t>(__zero_stack_offset()) - 64, a2, v3, v4, v5, v6, v7, v8, v9);
    return eax10;
}

signed char g4f7062b4;

void fun_413a70(int32_t ecx) {
    int32_t esi2;
    signed char al3;
    int32_t ebx4;

    *reinterpret_cast<int32_t*>(ecx + (reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) * 8 + 0x3bf0045c) = *reinterpret_cast<int32_t*>(ecx + (reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) * 8 + 0x3bf0045c) + (esi2 - 1);
    __asm__("cdq ");
    g4f7062b4 = al3;
    goto ebx4;
}

void fun_413b60() {
    int1_t sf1;

    sf1 = reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 28 < 0;
    while (1) {
        if (sf1) 
            goto 0x413b75;
        if (!sf1) 
            goto 0x413b75;
    }
}

void fun_413bba() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    uint1_t less_or_equal7;
    signed char* eax8;
    signed char* eax9;
    int32_t ebp10;
    int32_t ebp11;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    less_or_equal7 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(*eax8 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(*eax9 == 0));
    *reinterpret_cast<int32_t*>(ebp10 - 16) = 0;
    *reinterpret_cast<int32_t*>(ebp11 - 24) = 0;
    while (1) {
        if (!less_or_equal7) 
            goto 0x413bd8;
        if (less_or_equal7) 
            goto 0x413bd8;
    }
}

void fun_4143d2() {
    int1_t cf1;
    int1_t cf2;

    while (1) {
        if (!cf1) 
            goto 0x4143de;
        if (cf2) 
            goto 0x4143de;
    }
}

void** fun_415130(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** eax7;
    int32_t eax8;
    int32_t edi9;
    int32_t esi10;
    void** ebx11;
    void** esi12;
    void** edi13;
    void** eax14;
    void** eax15;

    eax7 = g42ed50;
    if (eax7) {
        InterlockedIncrement();
        eax8 = g4313a4;
        edi9 = InterlockedDecrement;
        if (!eax8) {
            esi10 = 0;
        } else {
            edi9(0x4313a8);
            fun_417120(ecx, 19, 0x4313a8, 0x4313a8, ebx11, esi12, edi13, __return_address(), a2, a3, a4, a5, a6);
            esi10 = 1;
        }
        eax14 = fun_4151c0(ecx, __return_address());
        if (!esi10) {
            edi9();
            eax15 = eax14;
        } else {
            fun_4171a0(19);
            goto edi13;
        }
    } else {
        eax15 = a2;
        if (reinterpret_cast<signed char>(eax15) >= reinterpret_cast<signed char>(97) && reinterpret_cast<signed char>(eax15) <= reinterpret_cast<signed char>(0x7a)) {
            return eax15 - 32;
        }
    }
    return eax15;
}

int32_t g42ec38;

uint32_t g42ec3c;

uint32_t fun_4152c0(void** ecx) {
    int32_t ecx2;
    int32_t eax3;
    int32_t v4;
    int32_t eax5;
    int32_t eax6;
    uint32_t ecx7;
    uint32_t v8;

    fun_418940(ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 12);
    ecx2 = g42ec38;
    eax3 = v4 - ecx2;
    eax5 = eax3 + eax3 * 4;
    eax6 = eax5 + eax5 * 4;
    ecx7 = g42ec3c;
    return (v8 & 0xffff) + (eax6 + eax6 * 4) * 8 - (ecx7 & 0xffff);
}

void fun_415485() {
}

int32_t fun_4156e0(void** ecx, void** a2, void** a3) {
    void** eax4;
    void** edx5;

    eax4 = fun_418d80(ecx, a2, __return_address(), a2, a3);
    *reinterpret_cast<void***>(a3) = eax4;
    *reinterpret_cast<void***>(a3 + 4) = edx5;
    if ((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3 + 4))) == 0xffffffff) {
        return -1;
    } else {
        return 0;
    }
}

int32_t fun_415710(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** edi7;
    void** esi8;
    int32_t eax9;

    fun_4171c0(ecx, a2, edi7, esi8, __return_address(), a2, a3, a4, a5, a6);
    eax9 = fun_415750(a2, a3, a4);
    fun_417230(a2);
    return eax9;
}

void** fun_415c40(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** edi7;
    void** esi8;
    void** ebp9;
    struct s38* eax10;
    void** ebx11;
    void** eax12;
    void** eax13;
    void** esi14;
    void** ebx15;
    void*** edi16;
    void*** ebp17;
    void* ecx18;
    void** eax19;
    void** v20;
    void** eax21;
    void** v22;
    void** eax23;
    void** v24;
    void** eax25;
    void** v26;
    void** eax27;
    void* edx28;
    void** eax29;
    void** v30;
    void** eax31;

    eax10 = fun_419530(edi7, esi8, ebp9);
    if (eax10->f56 || (eax12 = fun_414db0(26, edi7, esi8, ebp9, ebx11, __return_address(), a1, a2, a3, a4, a5, a6), eax10->f56 = eax12, eax13 = reinterpret_cast<void**>(0x42eca8), !!eax12)) {
        eax13 = eax10->f56;
    }
    esi14 = a1;
    ebx15 = eax13;
    edi16 = reinterpret_cast<void***>(*reinterpret_cast<void***>(esi14 + 24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi14 + 24)) * 2);
    ebp17 = reinterpret_cast<void***>(*reinterpret_cast<void***>(esi14 + 16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi14 + 16)) * 2);
    ecx18 = reinterpret_cast<void*>(0);
    do {
        ecx18 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx18) + 1);
        *reinterpret_cast<void***>(eax13) = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx18) + reinterpret_cast<uint32_t>(edi16) + reinterpret_cast<int32_t>("SunMonTueWedThuFriSat"));
        *reinterpret_cast<void***>(eax13 + 4) = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx18) + reinterpret_cast<uint32_t>(ebp17) + 0x42810f);
        ++eax13;
    } while (reinterpret_cast<int32_t>(ecx18) < 3);
    *reinterpret_cast<void***>(eax13) = reinterpret_cast<void**>(32);
    eax19 = eax13 + 4;
    *reinterpret_cast<void***>(eax19) = reinterpret_cast<void**>(32);
    v20 = *reinterpret_cast<void***>(esi14 + 12);
    eax21 = fun_415d30(eax19 + 1, v20);
    *reinterpret_cast<void***>(eax21) = reinterpret_cast<void**>(32);
    v22 = *reinterpret_cast<void***>(esi14 + 8);
    eax23 = fun_415d30(eax21 + 1, v22);
    *reinterpret_cast<void***>(eax23) = reinterpret_cast<void**>(58);
    v24 = *reinterpret_cast<void***>(esi14 + 4);
    eax25 = fun_415d30(eax23 + 1, v24);
    *reinterpret_cast<void***>(eax25) = reinterpret_cast<void**>(58);
    v26 = *reinterpret_cast<void***>(esi14);
    eax27 = fun_415d30(eax25 + 1, v26);
    *reinterpret_cast<void***>(eax27) = reinterpret_cast<void**>(32);
    edx28 = reinterpret_cast<void*>(__intrinsic() >> 5);
    eax29 = fun_415d30(eax27 + 1, reinterpret_cast<uint32_t>(edx28) + (reinterpret_cast<uint32_t>(edx28) >> 31) + 19);
    __asm__("cdq ");
    v30 = reinterpret_cast<void**>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi14 + 20)) % 100);
    eax31 = fun_415d30(eax29, v30);
    *reinterpret_cast<void***>(eax31) = reinterpret_cast<void**>(10);
    *reinterpret_cast<void***>(eax31 + 1) = reinterpret_cast<void**>(0);
    return ebx15;
}

void** fun_415fa0(void** a1, void** a2) {
    void** eax3;

    eax3 = fun_415f60(a1, a1, a2, 64, __return_address());
    return eax3;
}

int32_t SetFileAttributesA = 0x32672;

void fun_416060(int32_t a1) {
    int32_t eax2;
    int32_t eax3;
    void** eax4;
    int32_t esi5;

    eax2 = reinterpret_cast<int32_t>(GetFileAttributesA());
    if (eax2 != -1) {
        if (!(*reinterpret_cast<unsigned char*>(&a1) & 0x80)) {
            *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) | 1);
        } else {
            *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) & 0xfe);
        }
        eax3 = reinterpret_cast<int32_t>(SetFileAttributesA());
        if (eax3) {
            goto eax2;
        }
    }
    eax4 = reinterpret_cast<void**>(GetLastError());
    fun_418fa0(eax4);
    goto esi5;
}

struct s1695 {
    signed char[4] pad4;
    uint32_t f4;
};

uint32_t* fun_4160b0(unsigned char* a1, unsigned char a2, uint32_t* a3) {
    uint32_t* eax4;
    unsigned char* edx5;
    uint32_t ebx6;
    struct s1695* eax7;
    uint32_t ebx8;
    uint32_t ecx9;
    uint32_t ecx10;
    uint32_t ecx11;
    int1_t cf12;

    eax4 = a3;
    if (!eax4) 
        goto addr_0x416103_2;
    edx5 = a1;
    ebx6 = 0;
    *reinterpret_cast<unsigned char*>(&ebx6) = a2;
    if (!(reinterpret_cast<uint32_t>(edx5) & 3)) {
        addr_0x4160dd_4:
        eax7 = reinterpret_cast<struct s1695*>(eax4 - 1);
        if (reinterpret_cast<uint32_t>(eax4) < 4) {
            addr_0x4160f4_5:
            eax4 = &eax7->f4;
            if (!eax4) {
                addr_0x416103_2:
                return eax4;
            } else {
                do {
                    ++edx5;
                    if (!(*edx5 ^ *reinterpret_cast<unsigned char*>(&ebx6))) 
                        break;
                    eax4 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4) - 1);
                } while (eax4);
                goto addr_0x416103_2;
            }
        } else {
            ebx8 = (ebx6 << 8) + ebx6;
            ebx6 = (ebx8 << 16) + ebx8;
            do {
                ecx9 = *edx5 ^ ebx6;
                edx5 = edx5 + 4;
                if ((ecx9 ^ 0xffffffff ^ 0x7efefeff + ecx9) & 0x81010100) {
                    ecx10 = *reinterpret_cast<uint32_t*>(edx5 - 4);
                    *reinterpret_cast<unsigned char*>(&ecx10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) ^ *reinterpret_cast<unsigned char*>(&ebx6));
                    if (!*reinterpret_cast<unsigned char*>(&ecx10)) 
                        goto addr_0x41614f_11;
                    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx10) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx10) + 1) ^ *reinterpret_cast<unsigned char*>(&ebx6));
                    if (!*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx10) + 1)) 
                        goto addr_0x416149_13;
                    ecx11 = ecx10 >> 16;
                    if (!(*reinterpret_cast<unsigned char*>(&ecx11) ^ *reinterpret_cast<unsigned char*>(&ebx6))) 
                        goto addr_0x416143_15;
                    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx11) + 1) ^ *reinterpret_cast<unsigned char*>(&ebx6))) 
                        goto addr_0x41613d_17;
                }
                cf12 = reinterpret_cast<uint32_t>(eax7) < 4;
                eax7 = reinterpret_cast<struct s1695*>(reinterpret_cast<uint32_t>(eax7) - 4);
            } while (!cf12);
            goto addr_0x4160f3_20;
        }
    } else {
        do {
            ++edx5;
            if (!(*edx5 ^ *reinterpret_cast<unsigned char*>(&ebx6))) 
                break;
            eax4 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax4) - 1);
            if (!eax4) 
                goto addr_0x416103_2;
        } while (reinterpret_cast<uint32_t>(edx5) & 3);
        goto addr_0x4160dd_4;
    }
    addr_0x41613e_24:
    return edx5 - 1;
    addr_0x4160f3_20:
    goto addr_0x4160f4_5;
    addr_0x41614f_11:
    return edx5 - 4;
    addr_0x416149_13:
    return edx5 - 3;
    addr_0x416143_15:
    return edx5 - 2;
    addr_0x41613d_17:
    goto addr_0x41613e_24;
}

void fun_416812() {
}

int32_t fun_4169bd() {
    int32_t** eax1;
    int32_t ebp2;
    int32_t ecx3;
    int32_t ebp4;
    int32_t eax5;

    eax1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    ecx3 = **eax1;
    *reinterpret_cast<int32_t*>(ebp4 - 0x68) = ecx3;
    eax5 = fun_41b180(ecx3, ecx3, eax1);
    return eax5;
}

void fun_416cbd() {
}

void fun_416d09() {
}

void fun_416e45() {
}

struct s1696 {
    signed char[4] pad4;
    uint32_t f4;
};

int32_t fun_416ef8(struct s1696* a1, int32_t a2);

int32_t fun_416f82() {
    int32_t eax1;
    struct s46* ecx2;

    eax1 = 0;
    ecx2 = g0;
    if (reinterpret_cast<int1_t>(ecx2->f4 == fun_416ef8) && ecx2->f8 == ecx2->f12->f12) {
        eax1 = 1;
    }
    return eax1;
}

struct s1697 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1698 {
    signed char[12] pad12;
    struct s45* f12;
};

int32_t fun_416fc8(struct s1697* a1, struct s45* a2, int32_t a3) {
    unsigned char* esi4;
    unsigned char dh5;
    unsigned char* eax6;
    struct s1698* ebp7;
    struct s45* ebx8;
    int32_t eax9;
    int32_t esi10;
    int32_t* edi11;
    int32_t ecx12;
    int32_t eax13;
    int32_t* edi14;
    int32_t ecx15;

    *esi4 = reinterpret_cast<unsigned char>(*esi4 ^ reinterpret_cast<unsigned char>(dh5 ^ *eax6));
    ebp7 = reinterpret_cast<struct s1698*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 - 4);
    ebx8 = a2;
    if (a1->f4 & 6) {
        fun_416f1a(ebx8, 0xff);
        eax9 = 1;
    } else {
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx8) - 4) = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp7) - 8);
        esi10 = ebx8->f12;
        edi11 = ebx8->f8;
        while (esi10 != -1) {
            ecx12 = esi10 + esi10 * 2;
            if ((edi11 + ecx12)[1] && (eax13 = reinterpret_cast<int32_t>((edi11 + ecx12)[1]()), ebp7 = ebp7, esi10 = esi10, ebx8 = ebp7->f12, !!eax13)) {
                if (__intrinsic()) 
                    goto addr_0x417062_7;
                edi14 = ebx8->f8;
                fun_416ed8(ebx8);
                ebp7 = reinterpret_cast<struct s1698*>(ebx8 + 1);
                fun_416f1a(ebx8, esi10);
                ecx15 = esi10 + esi10 * 2;
                fun_416fae(ecx15, 1);
                ebx8->f12 = edi14[ecx15];
                (edi14 + ecx15)[2]();
            }
            edi11 = ebx8->f8;
            esi10 = edi11[esi10 + esi10 * 2];
        }
        goto addr_0x417069_11;
    }
    addr_0x417085_12:
    return eax9;
    addr_0x417069_11:
    eax9 = 1;
    goto addr_0x417085_12;
    addr_0x417062_7:
    eax9 = 0;
    goto addr_0x417085_12;
}

void fun_416fa5(int32_t ecx) {
    goto 0x416fb8;
}

int32_t fun_416ef8(struct s1696* a1, int32_t a2) {
    int32_t eax3;
    int32_t* v4;

    eax3 = 1;
    if (a1->f4 & 6) {
        *v4 = a2;
        eax3 = 3;
    }
    return eax3;
}

int16_t fun_417ab0(int32_t a1, uint32_t a2, int32_t a3, uint32_t a4) {
    int32_t eax5;
    int32_t eax6;

    if (a4 | a2) {
        eax5 = a1 * a3;
        return *reinterpret_cast<int16_t*>(&eax5);
    } else {
        eax6 = a1 * a3;
        return *reinterpret_cast<int16_t*>(&eax6);
    }
}

int32_t fun_417af0() {
    return 0;
}

void fun_4193d0(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** eax6;
    void** esi7;
    void** eax8;
    void* edx9;
    int32_t ecx10;
    uint32_t ecx11;
    int32_t* edx12;
    uint32_t eax13;

    eax6 = g4313a0;
    if (eax6) {
        if (reinterpret_cast<signed char>(eax6) >= reinterpret_cast<signed char>(20)) {
            addr_0x4193f0_3:
            eax8 = fun_41d0f0(eax6, 4, esi7, __return_address(), a1, a2, a3, a4, a5);
            g430384 = eax8;
            if (!eax8 && (g4313a0 = reinterpret_cast<void**>(20), eax8 = fun_41d0f0(20, 4, esi7, __return_address(), a1, a2, a3, a4, a5), g430384 = eax8, !eax8)) {
                fun_416a10(26, esi7, __return_address(), a1, a2);
                eax8 = g430384;
            }
        } else {
            eax6 = reinterpret_cast<void**>(20);
            goto addr_0x4193eb_6;
        }
    } else {
        eax6 = reinterpret_cast<void**>(0x200);
        goto addr_0x4193eb_6;
    }
    edx9 = reinterpret_cast<void*>(0);
    ecx10 = 0x42d1c0;
    while (*reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(eax8) + reinterpret_cast<uint32_t>(edx9)) = ecx10, ecx10 = ecx10 + 32, edx9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx9) + 4), ecx10 < 0x42d440) {
        eax8 = g430384;
    }
    ecx11 = 0;
    edx12 = reinterpret_cast<int32_t*>(0x42d1d0);
    do {
        eax13 = ecx11 & 31;
        if ((*reinterpret_cast<int32_t**>((reinterpret_cast<int32_t>(ecx11) >> 5) * 4 + 0x430280))[eax13 + eax13 * 8] == -1 || !(*reinterpret_cast<int32_t**>((reinterpret_cast<int32_t>(ecx11) >> 5) * 4 + 0x430280))[eax13 + eax13 * 8]) {
            *edx12 = -1;
        }
        edx12 = edx12 + 8;
        ++ecx11;
    } while (reinterpret_cast<int32_t>(edx12) < 0x42d230);
    return;
    addr_0x4193eb_6:
    g4313a0 = eax6;
    goto addr_0x4193f0_3;
}

int32_t g42ed5c;

void** g42f098;

void** __image_base = reinterpret_cast<void**>(0xc0);

int32_t fun_41bb50(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    int32_t eax16;
    void** edx17;
    void** esi18;
    void** eax19;
    void** eax20;
    uint32_t eax21;
    void** eax22;
    void** ecx23;

    eax16 = g42ed5c;
    if (!eax16) {
        edx17 = g42f098;
        __image_base = reinterpret_cast<void**>(0x42dfc0);
        fun_41bf80(ecx, edx17, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
        eax19 = g42f098;
        fun_414d40(ecx, eax19, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
        g42f098 = reinterpret_cast<void**>(0);
        return 0;
    } else {
        eax20 = fun_41d0f0(1, 0xac, esi18, __return_address(), a2, a3, a4, a5, a6);
        if (eax20) {
            eax21 = fun_41bc00(eax20, esi18, __return_address(), a2);
            if (!eax21) {
                eax22 = g42f098;
                __image_base = eax20;
                fun_41bf80(ecx, eax22, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                ecx23 = g42f098;
                fun_414d40(ecx23, ecx23, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                g42f098 = eax20;
                return 0;
            } else {
                fun_41bf80(ecx, eax20, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                fun_414d40(ecx, eax20, esi18, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                return 1;
            }
        } else {
            return 1;
        }
    }
}

void** __image_base = reinterpret_cast<void**>(0xca);

void** g42f0ac;

void** g42f0b0;

int16_t g42f0c4;

int32_t fun_41c7b0(void** ecx, void** a2, void** a3, void** a4) {
    void** v5;
    void** eax6;
    void** v7;
    void** ebx8;
    void** v9;
    void** ebp10;
    void** v11;
    void** esi12;
    void*** esp13;
    void** v14;
    void** edi15;
    void** edi16;
    void** ebx17;
    void** eax18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** ecx27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    int1_t zf36;
    void** eax37;
    uint32_t eax38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** eax46;
    void** esi47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** eax55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** eax62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** eax68;
    void** v69;
    void* eax70;
    void** edx71;
    void** v72;
    void** v73;
    int32_t eax74;
    void** eax75;
    void** v76;
    void** eax77;
    signed char v78;
    void** v79;
    signed char v80;
    void** ebx81;
    void** eax82;
    void** edx83;
    int32_t eax84;
    void** ebp85;
    void** eax86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** ecx108;
    void** eax109;
    signed char v110;
    void** eax111;
    signed char v112;
    void** edx113;
    signed char v114;
    signed char v115;
    void** eax116;
    void** v117;
    void** v118;
    void** v119;
    void** v120;
    void** v121;
    void** eax122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    void** v131;
    void** v132;
    void** v133;
    void** v134;
    void** v135;
    void** v136;
    void** v137;
    int32_t v138;

    v5 = reinterpret_cast<void**>(__return_address());
    eax6 = g42ed50;
    v7 = ebx8;
    v9 = ebp10;
    v11 = esi12;
    esp13 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 32 - 4 - 4 - 4 - 4);
    v14 = edi15;
    edi16 = reinterpret_cast<void**>(0);
    ebx17 = reinterpret_cast<void**>(0);
    if (!eax6) {
        __image_base = reinterpret_cast<void**>(0x42abca);
        __image_base = reinterpret_cast<void**>(0x42abca);
        eax18 = g42f0ac;
        fun_414d40(ecx, eax18, v14, v11, v9, v7, v19, v20, v21, v22, v23, v24, v25, v26, v5, a2, a3, a4);
        ecx27 = g42f0b0;
        fun_414d40(ecx27, ecx27, v14, v11, v9, v7, v28, v29, v30, v31, v32, v33, v34, v35, v5, a2, a3, a4);
        g42f0ac = reinterpret_cast<void**>(0);
        g42f0b0 = reinterpret_cast<void**>(0);
        return 0;
    }
    zf36 = g42ed60 == 0;
    if (!zf36 || (eax37 = reinterpret_cast<void**>(0), *reinterpret_cast<int16_t*>(&eax37) = g42f0c4, eax38 = fun_41d9c0(0, eax37, 11, 0x42ed60), esp13 = esp13 - 4 - 4 - 4 - 4 - 4 + 4 + 16, !eax38)) {
        eax46 = fun_414db0(0x202, v14, v11, v9, v7, v39, v40, v41, v42, v43, v44, v45);
        esi47 = eax46;
        v48 = esi47;
        eax55 = fun_414db0(0x202, v14, v11, v9, v7, v49, v50, v48, v51, v52, v53, v54);
        v56 = eax55;
        eax62 = fun_414db0(0x101, v14, v11, v9, v7, v57, v56, v48, v58, v59, v60, v61);
        edi16 = eax62;
        eax68 = fun_414db0(0x202, v14, v11, v9, v7, v63, v56, v48, v64, v65, v66, v67);
        esp13 = esp13 - 4 - 4 + 4 + 4 - 4 - 4 + 4 + 4 - 4 - 4 + 4 + 4 - 4 - 4 + 4 + 4;
        v69 = eax68;
        if (!esi47) 
            goto addr_0x41c9ef_5;
        if (!eax55) 
            goto addr_0x41c9ef_5;
        if (!edi16) 
            goto addr_0x41c9ef_5;
        if (!eax68) 
            goto addr_0x41c9ef_5;
        eax70 = reinterpret_cast<void*>(0);
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax70) + reinterpret_cast<unsigned char>(edi16)) = *reinterpret_cast<signed char*>(&eax70);
            eax70 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax70) + 1);
        } while (reinterpret_cast<int32_t>(eax70) < 0x100);
        edx71 = g42ed60;
        ecx = reinterpret_cast<void**>(esp13 + 28);
        v72 = ecx;
        v73 = edx71;
        eax74 = reinterpret_cast<int32_t>(GetCPInfo());
        esp13 = esp13 - 4 - 4 - 4 + 4;
        if (!eax74) 
            goto addr_0x41c9ef_5;
        if (reinterpret_cast<unsigned char>(v56) > reinterpret_cast<unsigned char>(2)) 
            goto addr_0x41c9ef_5;
        eax75 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) & 0xffff);
        g42adcc = eax75;
        if (reinterpret_cast<signed char>(eax75) > reinterpret_cast<signed char>(1) && *reinterpret_cast<signed char*>(&v48 + 2)) {
            ecx = reinterpret_cast<void**>(esp13 + 35);
            do {
                edx71 = v76;
                if (!edx71) 
                    break;
                eax77 = reinterpret_cast<void**>(0);
                edx71 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx71) & 0xff);
                *reinterpret_cast<signed char*>(&eax77) = v78;
                if (reinterpret_cast<signed char>(eax77) <= reinterpret_cast<signed char>(edx71)) {
                    do {
                        edx71 = reinterpret_cast<void**>(0);
                        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax77) + reinterpret_cast<unsigned char>(edi16)) = 0;
                        edx71 = v79;
                        ++eax77;
                    } while (reinterpret_cast<signed char>(eax77) <= reinterpret_cast<signed char>(edx71));
                }
                ecx = ecx + 2;
            } while (v80);
        }
        ebx81 = esi47 + 2;
        eax82 = fun_41a2c0(ecx, 1, edi16, 0x100, ebx81, 0, 0);
        if (!eax82) {
            addr_0x41c9ef_5:
            ebx17 = v69;
        } else {
            edx83 = v9;
            *reinterpret_cast<void***>(esi47) = reinterpret_cast<void**>(0);
            ecx = edx83;
            eax84 = 0;
            do {
                *reinterpret_cast<void***>(ecx) = *reinterpret_cast<void***>(&eax84);
                ecx = ecx + 2;
                ++eax84;
            } while (eax84 < 0x100);
            ebp85 = v7 + 2;
            eax86 = fun_41a130(ecx, 1, edx83, 0x100, ebp85, 0, 0);
            if (!eax86) 
                goto addr_0x41c9ef_5; else 
                goto addr_0x41c92f_23;
        }
    } else {
        esi47 = v87;
    }
    fun_414d40(ecx, esi47, v14, v11, v9, v7, v69, v56, v48, v88, v89, v90, v91, v92, v5, a2, a3, a4);
    fun_414d40(ecx, v56, v14, v11, v9, v7, v69, v56, v48, v93, v94, v95, v96, v97, v5, a2, a3, a4);
    fun_414d40(ecx, edi16, v14, v11, v9, v7, v69, v56, v48, v98, v99, v100, v101, v102, v5, a2, a3, a4);
    fun_414d40(ecx, ebx17, v14, v11, v9, v7, v69, v56, v48, v103, v104, v105, v106, v107, v5, a2, a3, a4);
    return 1;
    addr_0x41c92f_23:
    ecx108 = v7;
    *reinterpret_cast<void***>(ecx108) = reinterpret_cast<void**>(0);
    eax109 = g42adcc;
    if (reinterpret_cast<signed char>(eax109) > reinterpret_cast<signed char>(1) && *reinterpret_cast<signed char*>(&v48 + 2)) {
        do {
            *reinterpret_cast<signed char*>(&ecx108) = v110;
            if (!*reinterpret_cast<signed char*>(&ecx108)) 
                break;
            eax111 = reinterpret_cast<void**>(0);
            ecx108 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx108) & 0xff);
            *reinterpret_cast<signed char*>(&eax111) = v112;
            if (reinterpret_cast<signed char>(eax111) <= reinterpret_cast<signed char>(ecx108)) {
                ecx108 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(v69 + reinterpret_cast<unsigned char>(eax111) * 2) + 2);
                do {
                    edx113 = reinterpret_cast<void**>(0);
                    *reinterpret_cast<void***>(ecx108) = reinterpret_cast<void**>(0x8000);
                    *reinterpret_cast<signed char*>(&edx113) = v114;
                    ++eax111;
                    ecx108 = ecx108 + 2;
                } while (reinterpret_cast<signed char>(eax111) <= reinterpret_cast<signed char>(edx113));
            }
        } while (v115);
        esi47 = v69;
    }
    eax116 = g42f0ac;
    __image_base = ebx81;
    __image_base = ebp85;
    if (eax116) {
        fun_414d40(ecx108, eax116, v73, v72, v14, v11, v9, v7, v69, v56, v48, v117, v118, v119, v120, v121, v5, a2);
    }
    eax122 = g42f0b0;
    g42f0ac = esi47;
    if (eax122) {
        fun_414d40(ecx108, eax122, v73, v72, v14, v11, v9, v7, v69, v56, v48, v123, v124, v125, v126, v127, v5, a2);
    }
    g42f0b0 = v7;
    fun_414d40(ecx108, edi16, v73, v72, v14, v11, v9, v7, v69, v56, v48, v128, v129, v130, v131, v132, v5, a2);
    fun_414d40(v9, v9, v73, v72, v14, v11, v9, v7, v69, v56, v48, v133, v134, v135, v136, v137, v5, a2);
    goto v138;
}

void fun_41d6fd() {
}

void fun_41d749() {
}

void fun_41d885() {
}

void fun_41e9b0() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;
    signed char* eax19;
    signed char* eax20;
    signed char al21;
    signed char* eax22;
    signed char* eax23;
    signed char al24;
    signed char* eax25;
    signed char* eax26;
    signed char al27;
    signed char* eax28;
    signed char* eax29;
    signed char al30;
    signed char* eax31;
    signed char* eax32;
    signed char al33;
    signed char* eax34;
    signed char* eax35;
    signed char al36;
    signed char* eax37;
    signed char* eax38;
    signed char al39;
    signed char* eax40;
    signed char* eax41;
    signed char al42;
    signed char* eax43;
    signed char* eax44;
    signed char al45;
    signed char* eax46;
    signed char* eax47;
    signed char al48;
    signed char* eax49;
    signed char* eax50;
    signed char al51;
    signed char* eax52;
    signed char* eax53;
    signed char al54;
    signed char* eax55;
    signed char* eax56;
    signed char al57;
    signed char* eax58;
    signed char* eax59;
    signed char al60;
    signed char* eax61;
    signed char* eax62;
    signed char al63;
    signed char* eax64;
    signed char* eax65;
    signed char al66;
    signed char* eax67;
    signed char* eax68;
    signed char al69;
    signed char* eax70;
    signed char* eax71;
    signed char al72;
    signed char* eax73;
    signed char* eax74;
    signed char al75;
    signed char* eax76;
    signed char* eax77;
    signed char al78;
    signed char* eax79;
    signed char* eax80;
    signed char al81;
    signed char* eax82;
    signed char* eax83;
    signed char al84;
    signed char* eax85;
    signed char* eax86;
    signed char al87;
    signed char* eax88;
    signed char* eax89;
    signed char al90;
    signed char* eax91;
    signed char* eax92;
    signed char al93;
    signed char* eax94;
    signed char* eax95;
    signed char al96;
    signed char* eax97;
    signed char* eax98;
    signed char al99;
    signed char* eax100;
    signed char* eax101;
    signed char al102;
    signed char* eax103;
    signed char* eax104;
    signed char al105;
    signed char* eax106;
    signed char* eax107;
    signed char al108;
    signed char* eax109;
    signed char* eax110;
    signed char al111;
    signed char* eax112;
    signed char* eax113;
    signed char al114;
    signed char* eax115;
    signed char* eax116;
    signed char al117;
    signed char* eax118;
    signed char* eax119;
    signed char al120;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
    *eax19 = reinterpret_cast<signed char>(*eax20 + al21);
    *eax22 = reinterpret_cast<signed char>(*eax23 + al24);
    *eax25 = reinterpret_cast<signed char>(*eax26 + al27);
    *eax28 = reinterpret_cast<signed char>(*eax29 + al30);
    *eax31 = reinterpret_cast<signed char>(*eax32 + al33);
    *eax34 = reinterpret_cast<signed char>(*eax35 + al36);
    *eax37 = reinterpret_cast<signed char>(*eax38 + al39);
    *eax40 = reinterpret_cast<signed char>(*eax41 + al42);
    *eax43 = reinterpret_cast<signed char>(*eax44 + al45);
    *eax46 = reinterpret_cast<signed char>(*eax47 + al48);
    *eax49 = reinterpret_cast<signed char>(*eax50 + al51);
    *eax52 = reinterpret_cast<signed char>(*eax53 + al54);
    *eax55 = reinterpret_cast<signed char>(*eax56 + al57);
    *eax58 = reinterpret_cast<signed char>(*eax59 + al60);
    *eax61 = reinterpret_cast<signed char>(*eax62 + al63);
    *eax64 = reinterpret_cast<signed char>(*eax65 + al66);
    *eax67 = reinterpret_cast<signed char>(*eax68 + al69);
    *eax70 = reinterpret_cast<signed char>(*eax71 + al72);
    *eax73 = reinterpret_cast<signed char>(*eax74 + al75);
    *eax76 = reinterpret_cast<signed char>(*eax77 + al78);
    *eax79 = reinterpret_cast<signed char>(*eax80 + al81);
    *eax82 = reinterpret_cast<signed char>(*eax83 + al84);
    *eax85 = reinterpret_cast<signed char>(*eax86 + al87);
    *eax88 = reinterpret_cast<signed char>(*eax89 + al90);
    *eax91 = reinterpret_cast<signed char>(*eax92 + al93);
    *eax94 = reinterpret_cast<signed char>(*eax95 + al96);
    *eax97 = reinterpret_cast<signed char>(*eax98 + al99);
    *eax100 = reinterpret_cast<signed char>(*eax101 + al102);
    *eax103 = reinterpret_cast<signed char>(*eax104 + al105);
    *eax106 = reinterpret_cast<signed char>(*eax107 + al108);
    *eax109 = reinterpret_cast<signed char>(*eax110 + al111);
    *eax112 = reinterpret_cast<signed char>(*eax113 + al114);
    *eax115 = reinterpret_cast<signed char>(*eax116 + al117);
    *eax118 = reinterpret_cast<signed char>(*eax119 + al120);
}

void fun_41f08c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f087;
}

void fun_41f0c5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f0be;
}

struct s1699 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1700 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_41f136() {
    int1_t pf1;
    struct s1699* ebx2;
    struct s1700* ebx3;

    if (!pf1) 
        goto 0x41f131;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_41f186() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f181;
}

void fun_41f1ce(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x41f1c9;
}

void fun_41f1eb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f1e6;
}

void fun_41f20b(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x41f206;
    __asm__("ror byte [ebx+0x5b5e5fc6], 1");
}

void fun_41f248(int32_t ecx) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;
    signed char al5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x41f243;
    *reinterpret_cast<unsigned char*>(ebp3 - 0x74ef8a40) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp4 - 0x74ef8a40) + al5) + cf6);
}

struct s1701 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1702 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_41f2f2() {
    int1_t pf1;
    struct s1701* ebx2;
    struct s1702* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x41f2ed;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_41f31b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f316;
}

void fun_41f38c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41f387;
}

void fun_41fe13() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41fe0e;
    __asm__("fimul word [ebx+0x5e5ffc45]");
}

void fun_41fe85() {
    int1_t pf1;

    if (!pf1) 
        goto 0x41fe80;
}

struct s1703 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1704 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_41fe79() {
    int1_t pf1;
    struct s1703* ebx2;
    struct s1704* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x41fe74;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_41ff07(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;

    if (!pf2) 
        goto 0x41ff02;
    *reinterpret_cast<int32_t*>(ebx3 + 0x5e5ffc45) = ecx;
}

void fun_41ff82(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;

    if (!pf2) 
        goto 0x41ff7d;
    *reinterpret_cast<int32_t*>(ebx3 + 0x5e5ffc45) = *reinterpret_cast<int32_t*>(ebx4 + 0x5e5ffc45) + ecx;
}

int32_t g42ea24;

int32_t g42ea20;

int16_t fun_420139(void** ecx, void*** a2) {
    int16_t v3;
    void** eax4;
    void** ecx5;
    int32_t eax6;
    int1_t zf7;
    void** v8;
    int32_t eax9;
    int1_t zf10;

    v3 = 1;
    eax4 = fun_41fdb0(ecx, 0x42aa88);
    *a2 = eax4;
    if (!*a2) {
        v3 = 0;
    } else {
        ecx5 = *a2;
        eax6 = fun_41fe94(ecx5, ecx5, 0x42aa98);
        g42ea24 = eax6;
        zf7 = g42ea24 == 0;
        if (zf7) {
            v3 = 0;
        }
        v8 = *a2;
        eax9 = fun_41fe94(ecx5, v8, 0x42aab0);
        g42ea20 = eax9;
        zf10 = g42ea20 == 0;
        if (zf10) {
            v3 = 0;
        }
    }
    return v3;
}

int16_t fun_4201bb(void** ecx) {
    int16_t ax2;

    ax2 = fun_41ff91(ecx, ecx);
    return ax2;
}

void** fun_420316(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    struct s57* eax10;
    void** ebp11;
    void** eax12;

    eax10 = fun_416a40(a2, ecx);
    eax12 = fun_414db0(&eax10->f1, ecx, ebp11, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
    if (eax12) {
        fun_4202b6(eax12, a2, eax12);
    }
    return eax12;
}

void** fun_42039c(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** v11;
    void** v12;
    void** ebp13;
    void** v14;
    void** esi15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** eax20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** ecx25;
    void** eax26;
    void** eax27;
    void** edx28;
    void** eax29;
    int32_t eax30;
    void** v31;
    int32_t eax32;
    uint32_t eax33;

    v11 = reinterpret_cast<void**>(__return_address());
    v12 = ebp13;
    v14 = esi15;
    eax20 = fun_420230(ecx, a3, v14, v16, v17, v18, v19, v12, v11);
    v21 = eax20;
    if (v21) {
        v22 = a2;
        while (*reinterpret_cast<void***>(v22)) {
            v23 = v22;
            v24 = v21;
            while ((ecx25 = reinterpret_cast<void**>(0), ecx25 = *reinterpret_cast<void***>(v24), !!ecx25) && (eax26 = reinterpret_cast<void**>(0), eax26 = *reinterpret_cast<void***>(v24), eax27 = fun_414f30(ecx25, eax26, v14, v24, v23, v22), edx28 = reinterpret_cast<void**>(0), edx28 = *reinterpret_cast<void***>(v23), eax29 = fun_414f30(v23, edx28, v14, v24, v23, v22), eax27 == eax29)) {
                ++v24;
                ++v23;
            }
            eax30 = 0;
            *reinterpret_cast<void***>(&eax30) = *reinterpret_cast<void***>(v24);
            if (!eax30) 
                goto addr_0x420430_8;
            ++v22;
        }
    } else {
        v31 = reinterpret_cast<void**>(0);
        goto addr_0x420459_11;
    }
    addr_0x42043d_12:
    eax32 = static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(v22)));
    eax33 = reinterpret_cast<uint32_t>(-eax32);
    v31 = reinterpret_cast<void**>(eax33 - (eax33 + reinterpret_cast<uint1_t>(eax33 < eax33 + reinterpret_cast<uint1_t>(!!eax32))) & reinterpret_cast<unsigned char>(v22));
    fun_414d40(v21, v21, v14, v24, v23, v31, v21, v12, v11, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    addr_0x420459_11:
    return v31;
    addr_0x420430_8:
    goto addr_0x42043d_12;
}

void fun_42048c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420487;
}

void fun_4204a4(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42049f;
}

struct s1705 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1706 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4204d5(int32_t ecx) {
    int1_t pf2;
    struct s1705* ebx3;
    struct s1706* ebx4;
    uint32_t edi5;

    if (!pf2) 
        goto 0x4204d0;
    ebx3->f4 = ebx4->f4 | edi5;
}

struct s1707 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1708 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_420536() {
    int1_t pf1;
    struct s1707* ebx2;
    struct s1708* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x420531;
    ebx2->f4 = ebx3->f4 | edi4;
}

void fun_420550() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420549;
}

struct s1709 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4205da() {
    int1_t pf1;
    struct s1709* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4205d3;
    ebx2->f4 = edi3;
}

signed char g50e4458d;

void fun_4205f0() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x4205eb;
    g50e4458d = al2;
}

void fun_420635() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42062e;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_42064b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420646;
}

struct s1710 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1711 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_42066f() {
    int1_t pf1;
    struct s1710* ebx2;
    struct s1711* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x42066a;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

struct s1712 {
    signed char[4] pad4;
    signed char f4;
};

void fun_420687() {
    struct s1712* ebx1;
    struct s1712* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x420682;
    ebx1->f4 = reinterpret_cast<signed char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_42069f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42069a;
}

struct s1713 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4206f2() {
    int1_t pf1;
    struct s1713* ebx2;
    int32_t edi3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x4206ed;
    ebx2->f4 = ebx2->f4 - (edi3 + reinterpret_cast<uint1_t>(ebx2->f4 < edi4 + cf5));
}

void fun_42070a(uint32_t ecx) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;

    if (!pf2) 
        goto 0x420705;
    *reinterpret_cast<uint32_t*>(ebp3 - 0x72af03bb) = *reinterpret_cast<uint32_t*>(ebp4 - 0x72af03bb) ^ ecx;
}

void fun_42074d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420748;
}

void fun_420765() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420760;
}

void fun_42077f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420778;
}

struct s1714 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1715 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_420793() {
    int1_t pf1;
    struct s1714* ebx2;
    struct s1715* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x420790;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_4207ad() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x4207a8;
    *reinterpret_cast<signed char*>(&gc987047b) = al2;
}

void fun_4207c7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4207c0;
}

void fun_4207dd(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4207d8;
}

void fun_4207f5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4207f0;
}

void fun_4208a9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4208a4;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_420829(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420824;
}

void fun_420843() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42083c;
}

void fun_420894() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42088f;
    __asm__("fisttp qword [ebx+0xc283f055]");
}

void fun_4208c1(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4208bc;
}

void fun_420990() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42098b;
}

void fun_4209a8(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4209a3;
}

struct s1716 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4209d4(int32_t ecx) {
    int1_t pf2;
    struct s1716* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x4209cf;
    ebx3->f4 = bh4;
}

void fun_420a74() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420a6f;
}

void fun_420ace() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420ac9;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_420b31(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420b2c;
    __asm__("fdivr qword [ebx+0x4]");
}

struct s1717 {
    signed char[4] pad4;
    signed char f4;
};

struct s1718 {
    signed char[4] pad4;
    signed char f4;
};

void fun_420b49() {
    int1_t pf1;
    struct s1717* ebx2;
    struct s1718* ebx3;

    if (!pf1) 
        goto 0x420b44;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_420b6d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420b68;
}

void fun_420b87() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420b80;
}

void fun_420b9d() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x420b98;
    *reinterpret_cast<signed char*>(&ged87047b) = al2;
}

void fun_420c00(signed char cl) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;

    if (!pf2) 
        goto 0x420bfb;
    *reinterpret_cast<signed char*>(ebp3 - 0x100373) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp4 - 0x100373) - cl);
}

struct s1719 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_420c39() {
    int1_t pf1;
    struct s1719* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x420c34;
    ebx2->f4 = edi3;
}

void fun_420c51() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420c4c;
}

void fun_420c7b() {
    __asm__("out dx, eax");
}

void fun_420d01() {
    int32_t ebp1;
    int32_t edx2;

    *reinterpret_cast<int32_t*>(ebp1 - 0x201c) = edx2;
}

void fun_420d1c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420d15;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_420d32() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420d2d;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_420d4a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420d45;
}

void fun_420d62() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420d5d;
    __asm__("fidivr dword [ebx+0x4]");
}

struct s1720 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_420d7c() {
    int1_t pf1;
    struct s1720* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x420d75;
    ebx2->f4 = edi3;
}

void fun_420d92(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420d8d;
}

void fun_420e0a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420e05;
}

void fun_420e30() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420e29;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_420e46() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420e41;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_420e5e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420e59;
}

struct s1721 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1722 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_420e76() {
    int1_t pf1;
    struct s1721* ebx2;
    struct s1722* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x420e71;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_420e8c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420e89;
}

void fun_420ea6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420ea1;
}

void fun_420eca() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420ec5;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_420ee2(unsigned char cl) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;

    if (!pf2) 
        goto 0x420edd;
    *reinterpret_cast<unsigned char*>(ebx3 + 0x45891c45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx4 + 0x45891c45) & cl);
}

void fun_420f21() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420f1a;
}

void fun_420f45() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420f3e;
}

struct s1723 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_420fa6() {
    int1_t pf1;
    struct s1723* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x420f9f;
    ebx2->f4 = edi3;
}

void fun_420fd1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x420fcc;
    __asm__("arpl [ebx+0x4], di");
}

void fun_420ff5(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x420ff0;
}

int32_t g2be8558b;

void fun_421019() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x421014;
    g2be8558b = eax2;
}

void fun_42103d(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421038;
    __asm__("fstp tword [ebx+0x4]");
}

struct s1724 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1725 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421055() {
    int1_t pf1;
    struct s1724* ebx2;
    struct s1725* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x421050;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

struct s1726 {
    signed char[4] pad4;
    signed char f4;
};

struct s1727 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42106d() {
    int1_t pf1;
    struct s1726* ebx2;
    struct s1727* ebx3;

    if (!pf1) 
        goto 0x421068;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_421091(int32_t ecx) {
    int1_t pf2;
    int32_t esi3;
    int32_t esi4;

    if (!pf2) 
        goto 0x42108c;
    *reinterpret_cast<uint32_t*>(esi3 - 0x75) = *reinterpret_cast<uint32_t*>(esi4 - 0x75) ^ reinterpret_cast<uint32_t>(__zero_stack_offset());
}

struct s1728 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1729 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421134() {
    int1_t pf1;
    struct s1728* ebx2;
    struct s1729* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x42112f;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

struct s1730 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1731 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42114c() {
    int1_t pf1;
    struct s1730* ebx2;
    struct s1731* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x421147;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_421164(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42115f;
}

void fun_42117c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421177;
}

struct s1732 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4211a0() {
    struct s1732* ebx1;
    struct s1732* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x42119b;
    ebx1->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
}

void fun_4211b8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4211b3;
}

void fun_421228() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421223;
}

void fun_42124c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421247;
}

void fun_421266() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42125f;
}

void fun_42127c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421277;
}

void fun_4212af() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4212aa;
}

void fun_4212cc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4212c7;
}

void fun_4212f0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4212eb;
}

void fun_421308() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421303;
}

struct s1733 {
    signed char[4] pad4;
    signed char f4;
};

void fun_421320() {
    int1_t pf1;
    struct s1733* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x42131b;
    ebx2->f4 = bh3;
}

struct s1734 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1735 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42133a() {
    int1_t pf1;
    struct s1734* ebx2;
    struct s1735* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x421333;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_42135c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421357;
}

void fun_421374() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42136f;
}

void fun_42138c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421387;
}

struct s1736 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4213b0() {
    int1_t pf1;
    struct s1736* ebx2;

    if (!pf1) 
        goto 0x4213ab;
    ebx2->f4 = ebx2->f4 >> 0xffffff87;
}

struct s1737 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4213d4() {
    int1_t pf1;
    struct s1737* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4213cf;
    ebx2->f4 = ebx2->f4 + edi3;
}

struct s1738 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4213ec(int32_t ecx) {
    int1_t pf2;
    struct s1738* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x4213e7;
    ebx3->f4 = bh4;
}

void fun_421404() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4213ff;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_42141c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421417;
}

void fun_421436() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42142f;
}

void fun_421475() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421470;
}

struct s1739 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42148d(int32_t ecx) {
    int1_t pf2;
    struct s1739* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x421488;
    ebx3->f4 = edi4;
}

void fun_4214a5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4214a0;
    __asm__("fdivr qword [ebx+0x4]");
}

void fun_4214bd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4214b8;
}

struct s1740 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1741 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4214d5() {
    int1_t pf1;
    struct s1740* ebx2;
    struct s1741* ebx3;

    if (!pf1) 
        goto 0x4214d0;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_4214ed() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4214e8;
}

struct s1742 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1743 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421554() {
    int1_t pf1;
    struct s1742* ebx2;
    struct s1743* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x42154d;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_42156a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421565;
}

struct s1744 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1745 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421582(signed char cl) {
    int1_t pf2;
    struct s1744* ebx3;
    struct s1745* ebx4;

    if (!pf2) 
        goto 0x42157d;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_42159c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421595;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_4215b2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4215ad;
}

struct s1746 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1747 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4215cc() {
    int1_t pf1;
    struct s1746* ebx2;
    struct s1747* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4215c5;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_4215e2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4215dd;
}

void fun_4215fa() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4215f5;
    __asm__("fimul word [ebx+0xff251845]");
}

void fun_421657() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421652;
}

void fun_42166f(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42166a;
}

void fun_4216bd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4216b6;
}

struct s1748 {
    signed char[4] pad4;
    signed char f4;
};

struct s1749 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4216e1() {
    struct s1748* ebx1;
    struct s1749* ebx2;
    signed char bh3;
    int1_t pf4;
    void** eax5;

    ebx1->f4 = reinterpret_cast<signed char>(ebx2->f4 + bh3);
    pf4 = __intrinsic();
    do {
    } while (!pf4);
    ged87047b = eax5;
}

void fun_42170d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421708;
}

struct s1750 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42172a() {
    int1_t pf1;
    struct s1750* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x421725;
    ebx2->f4 = edi3;
}

void fun_421742() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42173d;
}

struct s1751 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42175a() {
    int1_t pf1;
    struct s1751* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x421755;
    ebx2->f4 = ebx2->f4 & edi3;
}

void fun_421772() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42176d;
}

void fun_42178a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421785;
}

void fun_4217a2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42179d;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_4217ba() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4217b5;
}

struct s1752 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1753 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4217d4() {
    int1_t pf1;
    struct s1752* ebx2;
    struct s1753* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4217cd;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

void fun_4217ea(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4217e5;
}

struct s1754 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1755 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_421802() {
    int1_t pf1;
    struct s1754* ebx2;
    struct s1755* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x4217fd;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_42181a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421815;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_421832() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42182d;
}

void fun_4218c9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4218c2;
    __asm__("ror dword [ebx+0x42800c15], 0x0");
}

void fun_421983() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42197e;
}

void fun_4219d5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4219d0;
}

void fun_421a21() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a1a;
}

void fun_421a37() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a32;
}

struct s1756 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1757 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421a51() {
    int1_t pf1;
    struct s1756* ebx2;
    struct s1757* ebx3;

    if (!pf1) 
        goto 0x421a4a;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s1758 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421a73() {
    int1_t pf1;
    struct s1758* ebx2;

    if (!pf1) 
        goto 0x421a6e;
    ebx2->f4 = 0xff;
}

void fun_421a8b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a86;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_421aa3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421a9e;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_421abb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421ab6;
}

struct s1759 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1760 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1761 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_421ad3() {
    int1_t pf1;
    struct s1759* ebx2;
    struct s1760* ebx3;
    int32_t edi4;
    struct s1761* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x421ace;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_421aeb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421ae6;
}

struct s1762 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1763 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421b03() {
    int1_t pf1;
    struct s1762* ebx2;
    struct s1763* ebx3;

    if (!pf1) 
        goto 0x421afe;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_421b29() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421b22;
}

void fun_421c0e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421c09;
}

void fun_421c26() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421c21;
}

void fun_421c3e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421c39;
}

void fun_421c56() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421c51;
}

void fun_421c6e(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421c69;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_421c88() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421c81;
}

void fun_421cb6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421cb1;
}

struct s1764 {
    signed char[4] pad4;
    signed char f4;
};

void fun_421cce() {
    int1_t pf1;
    struct s1764* ebx2;

    if (!pf1) 
        goto 0x421cc9;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 1);
}

void fun_421ce8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421ce1;
}

void fun_421cfe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421cf9;
}

void fun_421d18(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421d11;
}

void fun_421d56() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421d51;
    __asm__("fidivr word [ebx+0x4]");
}

struct s1765 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421d6e() {
    int1_t pf1;
    struct s1765* ebx2;

    if (!pf1) 
        goto 0x421d69;
    ebx2->f4 = 0;
}

void fun_421d86() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421d81;
}

void fun_421d9e(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;
    uint1_t cf4;

    if (!pf2) 
        goto 0x421d99;
    *reinterpret_cast<uint32_t*>(ebx3 - 0xdae7bb) = *reinterpret_cast<uint32_t*>(ebx3 - 0xdae7bb) + ecx + cf4;
}

void fun_421e00(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x421dfb;
}

void fun_421de8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421de3;
}

void fun_421e1a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421e13;
}

struct s1766 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1767 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_421e30() {
    int1_t pf1;
    struct s1766* ebx2;
    struct s1767* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x421e2b;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_421e48(uint32_t ecx) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;

    if (!pf2) 
        goto 0x421e43;
    *reinterpret_cast<uint32_t*>(ebp3 - 0x17ad03ab) = *reinterpret_cast<uint32_t*>(ebp4 - 0x17ad03ab) | ecx;
}

void fun_421e6e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421e67;
}

void fun_421e90() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421e8b;
}

struct s1768 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_421ec0(int32_t ecx) {
    int1_t pf2;
    struct s1768* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x421ebb;
    ebx3->f4 = edi4;
}

void fun_421eda() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421ed3;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1769 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_421ef0() {
    struct s1769* ebx1;
    struct s1769* ebx2;
    int1_t pf3;
    uint1_t cf4;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x421eeb;
    ebx1->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx1->f4 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1)) + cf4);
}

void fun_421f08() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421f03;
}

void fun_421f20() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421f1b;
}

struct s1770 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1771 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1772 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_421f50() {
    int1_t pf1;
    struct s1770* ebx2;
    struct s1771* ebx3;
    int32_t edi4;
    struct s1772* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x421f4b;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_421f68() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421f63;
}

void fun_421f99() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421f94;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_421fb1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421fac; else 
        goto "???";
}

void fun_421fdc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x421fd7;
}

void fun_421ff4() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x421fef;
    gc987047b = eax2;
}

void fun_42200e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422007;
}

struct s1773 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1774 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_422026() {
    int1_t pf1;
    struct s1773* ebx2;
    struct s1774* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x42201f;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

void fun_42203e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422037;
    __asm__("fstp tword [ebx+0x4]");
}

struct s1775 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1776 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422054() {
    int1_t pf1;
    struct s1775* ebx2;
    struct s1776* ebx3;

    if (!pf1) 
        goto 0x42204f;
    ebx2->f4 = ebx3->f4 >> 1;
}

struct s1777 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42206c() {
    int1_t pf1;
    struct s1777* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x422067;
    ebx2->f4 = bh3;
}

struct s1778 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1779 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422084(int32_t ecx) {
    int1_t pf2;
    struct s1778* ebx3;
    struct s1779* ebx4;
    int32_t edi5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x42207f;
    ebx3->f4 = ebx4->f4 + edi5 + cf6;
}

struct s1780 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1781 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1782 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1783 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42209a() {
    int32_t esi1;
    int32_t esi2;
    int1_t pf3;
    struct s1780* ebx4;
    struct s1781* ebx5;
    int1_t pf6;
    struct s1782* ebx7;
    struct s1783* ebx8;
    int1_t pf9;
    signed char* eax10;
    unsigned char ah11;
    signed char al12;

    esi1 = esi2;
    if (!pf3) 
        goto 0x422097;
    ebx4->f4 = ebx5->f4 >> 0xffffff87;
    pf6 = __intrinsic();
    do {
        __asm__("fucomi st0, st3");
    } while (!pf6);
    ebx7->f4 = ebx8->f4 >> 0xffffff87;
    pf9 = __intrinsic();
    do {
        __asm__("fucomi st0, st3");
    } while (!pf9);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax10) + 1) = reinterpret_cast<unsigned char>(ah11 ^ *reinterpret_cast<unsigned char*>(esi1 - 57));
    *eax10 = reinterpret_cast<signed char>(*eax10 + al12);
    goto 0x4220cd;
}

void fun_42210c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422105;
    __asm__("rol dword [ebx+0x7400087d], 1");
}

struct s1784 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1785 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_422164() {
    int1_t pf1;
    struct s1784* ebx2;
    struct s1785* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x42215f;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_42217e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422177;
    __asm__("arpl [ebx+0x4], di");
}

struct s1786 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4221c1(int32_t ecx) {
    int1_t pf2;
    struct s1786* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x4221bc;
    ebx3->f4 = edi4;
}

struct s1787 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1788 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4221d9() {
    int1_t pf1;
    struct s1787* ebx2;
    struct s1788* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4221d4;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_4221f1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4221ec;
}

void fun_422209() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422204;
}

struct s1789 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422221(signed char cl) {
    int1_t pf2;
    struct s1789* ebx3;

    if (!pf2) 
        goto 0x42221c;
    ebx3->f4 = reinterpret_cast<signed char>(ebx3->f4 >> cl);
}

struct s1790 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1791 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_422239() {
    int1_t pf1;
    struct s1790* ebx2;
    struct s1791* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x422234;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_422251() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42224c;
}

void fun_422269() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422264;
    __asm__("arpl [ebx+0x4], di");
}

void fun_422281() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42227c;
}

void fun_422299() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422294;
}

void fun_4222b1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4222ac;
}

void fun_4222d5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4222d0;
}

void fun_4222ed() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4222e8;
}

void fun_422305(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422300;
}

void fun_42231d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422318;
}

void fun_42233e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422339;
}

void fun_422356() {
    int1_t pf1;
    signed char* edx2;
    signed char ch3;

    if (!pf1) 
        goto 0x422351;
    *edx2 = ch3;
}

void fun_422379(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422374;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_4223a9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4223a4;
}

void fun_4223c1(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4223bc;
}

struct s1792 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4223e7() {
    int1_t pf1;
    struct s1792* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4223e2;
    ebx2->f4 = edi3;
}

struct s1793 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s1794 {
    signed char[1] pad1;
    unsigned char f1;
};

void fun_4223ff(signed char cl) {
    int1_t pf2;
    struct s1793* edx3;
    struct s1794* edx4;

    if (!pf2) 
        goto 0x4223fa;
    edx3->f1 = reinterpret_cast<unsigned char>(edx4->f1 >> cl);
}

void fun_422425() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422420;
}

void fun_42243d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422438;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_422455(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422450;
}

void fun_42246d(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422468;
}

void fun_42248f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42248a;
    __asm__("arpl [ebx+0x4], di");
}

void fun_4224a7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4224a2;
}

void fun_4224d7() {
    int1_t pf1;
    int32_t esi2;
    int32_t esi3;

    if (!pf1) 
        goto 0x4224d2;
    *reinterpret_cast<int32_t*>(esi2 - 0x75) = *reinterpret_cast<int32_t*>(esi3 - 0x75) - reinterpret_cast<int32_t>(__zero_stack_offset());
}

void fun_42251c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422517;
}

void fun_422534() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42252f;
    __asm__("ror byte [ebp+0xe852f455], cl");
}

void fun_422558(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422553;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_422570(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42256b;
}

void fun_422598() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422593;
}

void fun_4225b0() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x4225ab;
    gff87047b = eax2;
}

struct s1795 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4225c8() {
    int1_t pf1;
    struct s1795* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4225c3;
    ebx2->f4 = edi3;
}

void fun_4225e0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4225db;
}

void fun_4225fa() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4225f3;
}

void fun_422612() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42260b;
}

void fun_422634() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42262f;
}

void fun_42264c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422647;
}

struct s1796 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_422664() {
    int1_t pf1;
    struct s1796* ebx2;

    if (!pf1) 
        goto 0x42265f;
    ebx2->f4 = 0xff;
}

void fun_4226ae() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4226a9;
}

void fun_4226c6(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4226c1;
}

void fun_4226de() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4226d9;
}

void fun_4226f6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4226f1;
}

void fun_42270e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422709;
    __asm__("fdivr qword [ebx+0x4]");
}

void fun_422732() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42272d;
}

struct s1797 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1798 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42274a(int32_t ecx) {
    int1_t pf2;
    struct s1797* ebx3;
    struct s1798* ebx4;
    int32_t edi5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x422745;
    ebx3->f4 = ebx4->f4 + edi5 + cf6;
}

void fun_422762() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42275d;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_42277a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422775;
}

void fun_4227ac() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4227a7;
}

struct s1799 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4227c4() {
    struct s1799* ebx1;
    struct s1799* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x4227bf;
    ebx1->f4 = reinterpret_cast<signed char>(ebx1->f4 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_4227f6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4227ef;
}

struct s1800 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42280c() {
    int1_t pf1;
    struct s1800* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x422807;
    ebx2->f4 = ebx2->f4 - edi3;
}

void fun_42283c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422837;
}

struct s1801 {
    signed char[4] pad4;
    signed char f4;
};

struct s1802 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422854(signed char cl) {
    int1_t pf2;
    struct s1801* ebx3;
    struct s1802* ebx4;

    if (!pf2) 
        goto 0x42284f;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_42286c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422867;
}

void fun_422884() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42287f;
    __asm__("fsubr qword [edx+0x0]");
}

void fun_4228a8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4228a1;
}

struct s1803 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4228c0() {
    int1_t pf1;
    struct s1803* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x4228b9;
    ebx2->f4 = bh3;
}

struct s1804 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1805 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4228d6() {
    int1_t pf1;
    struct s1804* ebx2;
    struct s1805* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x4228d1;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_4228ee(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4228e9;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_422906() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422901;
}

void fun_42291e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422919;
}

void fun_422936() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422931;
}

void fun_42294e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422949;
}

void fun_4229a9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4229a4;
}

void fun_422b5f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422b5a;
}

void fun_422b77() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422b72;
}

void fun_422bae() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422ba9;
}

void fun_422bc6(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422bc1;
}

void fun_422be7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422be2;
}

void fun_422bff() {
    int1_t pf1;
    int32_t ebx2;
    int32_t ebx3;

    if (!pf1) 
        goto 0x422bfa;
    *reinterpret_cast<unsigned char*>(ebx2 - 0x17aef7b3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx3 - 0x17aef7b3) | 0xf1);
}

struct s1806 {
    signed char[4] pad4;
    signed char f4;
};

struct s1807 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422cab() {
    struct s1806* ebx1;
    struct s1807* ebx2;
    signed char bh3;

    if (!(__intrinsic() || !__intrinsic())) {
        ebx1->f4 = reinterpret_cast<signed char>(ebx2->f4 + bh3);
    }
}

void fun_422c3d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422c3a;
}

void fun_422c7f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422c7a;
}

void fun_422cca() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422cc5;
}

void fun_422ce2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422cdd;
}

void fun_422cfc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422cf5;
    __asm__("rol edi, cl");
}

void fun_422d1c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422d17;
}

struct s1808 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_422d55() {
    int1_t pf1;
    struct s1808* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x422d50;
    ebx2->f4 = ebx2->f4 ^ edi3;
}

void fun_422d82() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422d7d;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_422de4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422de1;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_422dfe(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;

    if (!pf2) 
        goto 0x422df9;
    *reinterpret_cast<int32_t*>(ebx3 - 0x17adf7ab) = ecx;
}

void fun_422ef1() {
    signed char al1;

    if (!(__intrinsic() || !__intrinsic())) {
        *reinterpret_cast<signed char*>(&gc987047b) = al1;
    }
}

struct s1809 {
    signed char[4] pad4;
    signed char f4;
};

struct s1810 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422e37() {
    int1_t pf1;
    struct s1809* ebx2;
    struct s1810* ebx3;

    if (!pf1) 
        goto 0x422e30;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

struct s1811 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422e59() {
    int1_t pf1;
    struct s1811* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x422e54;
    ebx2->f4 = bh3;
}

void fun_422e71() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422e6c;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_422e89(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;

    if (!pf2) 
        goto 0x422e84;
    *reinterpret_cast<int32_t*>(ebx3 + 0x88b0845) = ecx;
}

void fun_422eb1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422eac;
}

void fun_422ed5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422ed0;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_422f10() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422f0b;
}

struct s1812 {
    signed char[4] pad4;
    signed char f4;
};

struct s1813 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422f28(signed char cl) {
    int1_t pf2;
    struct s1812* ebx3;
    struct s1813* ebx4;

    if (!pf2) 
        goto 0x422f23;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

struct s1814 {
    signed char[4] pad4;
    signed char f4;
};

struct s1815 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422f40() {
    int1_t pf1;
    struct s1814* ebx2;
    struct s1815* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x422f3b;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

struct s1816 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422f58() {
    int1_t pf1;
    struct s1816* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x422f53;
    ebx2->f4 = bh3;
}

void fun_422f70(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422f6b;
    __asm__("fidivr dword [ebx+0x4]");
}

struct s1817 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_422f88() {
    int1_t pf1;
    struct s1817* ebx2;

    if (!pf1) 
        goto 0x422f83;
    ebx2->f4 = ebx2->f4 >> 0xffffff87;
}

void fun_422fa0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x422f9b;
}

void fun_422fb8(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x422fb3;
}

struct s1818 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1819 {
    signed char[4] pad4;
    signed char f4;
};

void fun_422ff2() {
    int1_t pf1;
    struct s1818* ebx2;
    struct s1819* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x422fed;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

void fun_42300a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x423005;
    __asm__("fdivr qword [ebx+0x4]");
}

void fun_423022() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x42301d;
    *reinterpret_cast<signed char*>(&gc987047b) = al2;
}

void fun_42303c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423035;
}

struct s1820 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1821 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423052(int32_t ecx) {
    int32_t ecx2;
    int1_t pf3;
    struct s1820* ebx4;
    struct s1821* ebx5;

    ecx2 = ecx;
    if (!pf3) 
        goto 0x42304d;
    ebx4->f4 = ebx5->f4 >> *reinterpret_cast<signed char*>(&ecx2);
}

struct s1822 {
    signed char[4] pad4;
    signed char f4;
};

struct s1823 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42306c(signed char cl) {
    int1_t pf2;
    struct s1822* ebx3;
    struct s1823* ebx4;

    if (!pf2) 
        goto 0x423065;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_423084() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42307d;
}

void fun_42309a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423095;
}

void fun_4230b2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4230ad;
}

void fun_4230ca() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4230c5;
}

void fun_4230e4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4230dd;
}

struct s1824 {
    signed char[4] pad4;
    signed char f4;
};

struct s1825 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423106() {
    int1_t pf1;
    struct s1824* ebx2;
    struct s1825* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x423101;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_42311e() {
    int1_t pf1;
    int32_t ebp2;
    int32_t ebp3;

    if (!pf1) 
        goto 0x423119;
    *reinterpret_cast<uint32_t*>(ebp2 - 0x937b) = *reinterpret_cast<uint32_t*>(ebp3 - 0x937b) | 0x15ff50ff;
}

void fun_42314b() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x423146;
    *reinterpret_cast<signed char*>(&gd287047b) = al2;
}

void fun_423163(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42315e;
}

struct s1826 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1827 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42317b() {
    int1_t pf1;
    struct s1826* ebx2;
    struct s1827* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x423176;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_423195() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42318e;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_4231ab() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4231a6;
}

void fun_4231c3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4231be;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_4231db() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4231d6;
}

void fun_4231f3() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x4231ee;
    *reinterpret_cast<signed char*>(&gc987047b) = al2;
}

void fun_42320b() {
    int1_t pf1;
    int32_t ebx2;

    if (!pf1) 
        goto 0x423206;
    *reinterpret_cast<int32_t*>(ebx2 - 0x8343) = reinterpret_cast<int32_t>(__return_address());
}

void fun_423230() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42322b;
    __asm__("fnstcw word [ebx+0x4]");
}

void fun_423248() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423243;
}

void fun_423260(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42325b;
}

void fun_423278(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x423273;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_42348c(int32_t ecx) {
    if (__intrinsic() || !__intrinsic()) {
    }
}

void fun_4232bb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4232b6;
}

void fun_4232df() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4232da;
}

void fun_4232f7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4232f2;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_42330f() {
    int1_t pf1;
    int32_t ebx2;
    signed char al3;

    if (!pf1) 
        goto 0x42330a;
    *reinterpret_cast<signed char*>(ebx2 - 0x8343) = al3;
}

void fun_42334e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423347;
}

void fun_423370() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x42336b;
    gc087047b = eax2;
}

void fun_423388() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423383;
}

void fun_4233a0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42339b;
}

void fun_4233b8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4233b3;
}

void fun_4233d0(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4233cb;
}

void fun_4233f6(uint32_t ecx) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;

    if (!pf2) 
        goto 0x4233ef;
    *reinterpret_cast<uint32_t*>(ebx3 - 0x17adf7ab) = *reinterpret_cast<uint32_t*>(ebx4 - 0x17adf7ab) | ecx;
}

struct s1828 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1829 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423428() {
    int1_t pf1;
    struct s1828* ebx2;
    struct s1829* ebx3;

    if (!pf1) 
        goto 0x423423;
    ebx2->f4 = ebx3->f4 >> 1;
}

struct s1830 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1831 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423440() {
    int1_t pf1;
    struct s1830* ebx2;
    struct s1831* ebx3;

    if (!pf1) 
        goto 0x42343b;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_423458() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423453;
}

struct s1832 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1833 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4234ab(int32_t ecx) {
    int1_t pf2;
    struct s1832* ebx3;
    struct s1833* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x4234a6;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 ^ bh5);
}

struct s1834 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1835 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4234c3() {
    int1_t pf1;
    struct s1834* ebx2;
    struct s1835* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x4234be;
    ebx2->f4 = ebx3->f4 | edi4;
}

struct s1836 {
    signed char[4] pad4;
    signed char f4;
};

struct s1837 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4234db() {
    int1_t pf1;
    struct s1836* ebx2;
    struct s1837* ebx3;

    if (!pf1) 
        goto 0x4234d6;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

struct s1838 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1839 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4234f3() {
    int1_t pf1;
    struct s1838* ebx2;
    struct s1839* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x4234ee;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_42350b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423506;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_42352f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42352a;
}

void fun_423547(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x423542;
}

void fun_42355f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42355a;
}

void fun_423583() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42357c;
}

struct s1840 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1841 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4235bd() {
    int1_t pf1;
    struct s1840* ebx2;
    struct s1841* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4235b8;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_4235d7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4235d0;
}

struct s1842 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1843 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4235ed(signed char cl) {
    int1_t pf2;
    struct s1842* ebx3;
    struct s1843* ebx4;

    if (!pf2) 
        goto 0x4235e8;
    ebx3->f4 = ebx4->f4 >> cl;
}

struct s1844 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1845 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423605() {
    int1_t pf1;
    struct s1844* ebx2;
    struct s1845* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x423600;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_42361d(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x423618;
}

void fun_423635() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423630;
}

void fun_42364d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423648;
}

void fun_423665() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423660;
    __asm__("fdivr qword [ebx+0x4]");
}

struct s1846 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1847 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42367d() {
    int1_t pf1;
    struct s1846* ebx2;
    struct s1847* ebx3;

    if (!pf1) 
        goto 0x423678;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_423695() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423690;
}

struct s1848 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4236ad() {
    int1_t pf1;
    struct s1848* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x4236a8;
    ebx2->f4 = edi3;
}

void fun_4236fe() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4236f9;
}

void fun_423718() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423711;
}

void fun_423730() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423729;
}

void fun_423746() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423741;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_42375e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423759;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_423778() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423771;
}

void fun_42378e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423789;
}

void fun_4237a6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4237a1;
    __asm__("rol byte [ebx+0xffff7cbd], 0xff");
}

void fun_4237d7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4237d2;
    __asm__("fnstcw word [ebx+0x4]");
}

struct s1849 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1850 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4237ef() {
    int1_t pf1;
    struct s1849* ebx2;
    struct s1850* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4237ea;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

struct s1851 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1852 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_423807() {
    int1_t pf1;
    struct s1851* ebx2;
    struct s1852* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x423802;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

void fun_42381f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42381a;
}

void fun_423856() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423851;
}

void fun_42386e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423869;
    __asm__("fdivr qword [ebx+0x4]");
}

struct s1853 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1854 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423886() {
    int1_t pf1;
    struct s1853* ebx2;
    struct s1854* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x423881;
    ebx2->f4 = ebx3->f4 - edi4;
}

void fun_42389e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423899;
    __asm__("fnstsw word [ebx+0x4]");
}

struct s1855 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4238e3() {
    int1_t pf1;
    struct s1855* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x4238de;
    ebx2->f4 = bh3;
}

void fun_4238fb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4238f6;
    __asm__("fdivr dword [ebx+0x4]");
}

struct s1856 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423913(int32_t ecx) {
    int1_t pf2;
    struct s1856* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x42390e;
    ebx3->f4 = bh4;
}

void fun_42392d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423926;
}

struct s1857 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1858 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4239df() {
    struct s1857* ebx1;
    struct s1858* ebx2;

    if (!(__intrinsic() || !__intrinsic())) {
        ebx1->f4 = ebx2->f4 >> 1;
    }
    do {
    } while (!__undefined());
}

struct s1859 {
    signed char[4] pad4;
    signed char f4;
};

struct s1860 {
    signed char[4] pad4;
    signed char f4;
};

void fun_423a08() {
    int1_t pf1;
    struct s1859* ebx2;
    struct s1860* ebx3;

    if (!pf1) 
        goto 0x423a03;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_423a2e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423a27;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_423a44() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423a3f;
}

void fun_423a9a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423a93;
}

struct s1861 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1862 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423ab0() {
    int1_t pf1;
    struct s1861* ebx2;
    struct s1862* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x423aab;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_423ae5(signed char cl) {
    int1_t pf2;

    if (!pf2) 
        goto 0x423ae2;
    do {
    } while (!__intrinsic());
}

void fun_423b7e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423b79;
}

void fun_423b96(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x423b91;
}

void fun_423bae() {
    int1_t pf1;
    int1_t pf2;

    if (!pf1) 
        goto 0x423ba9;
    if (!pf2) 
        goto 0x417045; else 
        goto "???";
}

struct s1863 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1864 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423bed() {
    int1_t pf1;
    struct s1863* ebx2;
    struct s1864* ebx3;

    if (!pf1) 
        goto 0x423be8;
    ebx2->f4 = ebx3->f4 >> 1;
}

void fun_423c05() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423c00;
}

struct s1865 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_423c3a() {
    struct s1865* ebx1;
    struct s1865* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x423c35;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_423c52() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423c4d;
    __asm__("fld qword [ebx+0xffff2cbd]");
}

void fun_423c91() {
    int1_t pf1;
    int32_t esi2;

    if (!pf1) 
        goto 0x423c8c;
    *reinterpret_cast<signed char*>(esi2 - 57) = 0;
}

void fun_423cb4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423cad;
}

void fun_423cca() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423cc5;
}

void fun_423d4c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423d47;
}

void fun_423d70() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423d6b;
    __asm__("arpl [ebx+0xffff5495], cx");
}

void fun_423dce() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x423dc9;
    gc987047b = eax2;
}

void fun_423e17() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423e12;
}

void fun_423e51(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x423e4c;
}

struct s1866 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1867 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_423eb2(int32_t ecx) {
    int1_t pf2;
    struct s1866* ebx3;
    struct s1867* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x423ead;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 & bh5);
}

struct s1868 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423eca(int32_t ecx) {
    int1_t pf2;
    struct s1868* ebx3;
    int32_t edi4;

    if (!pf2) 
        goto 0x423ec5;
    ebx3->f4 = edi4;
}

void fun_423f04() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423eff;
}

void fun_423f1c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423f17;
}

void fun_423f47() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423f42;
}

struct s1869 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1870 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_423fc7() {
    int1_t pf1;
    struct s1869* ebx2;
    struct s1870* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x423fc0;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_423ff2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x423fed;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_42400c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424005;
}

void fun_424028() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424023;
}

struct s1871 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424083() {
    int1_t pf1;
    struct s1871* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x42407e;
    ebx2->f4 = bh3;
}

void fun_42409d(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424096;
}

void fun_4240d2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4240cd;
}

void fun_4240ea() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4240e5;
}

struct s1872 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424108(signed char cl) {
    int1_t pf2;
    struct s1872* ebx3;

    if (!pf2) 
        goto 0x424103;
    ebx3->f4 = ebx3->f4 >> cl;
}

void fun_424120(uint32_t ecx) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;

    if (!pf2) 
        goto 0x42411b;
    *reinterpret_cast<uint32_t*>(ebx3 - 0xa773) = *reinterpret_cast<uint32_t*>(ebx4 - 0xa773) ^ ecx;
}

void fun_424157(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424152;
}

struct s1873 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42418d() {
    int1_t pf1;
    struct s1873* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x424188;
    ebx2->f4 = edi3;
}

void fun_4241a5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4241a0;
    __asm__("fldenv [esi-0x75]");
}

void fun_4241d4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4241cf;
}

void fun_4241ec() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4241e7;
}

void fun_424204() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4241ff;
    __asm__("arpl [ebx+0x4], di");
}

void fun_42421c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424217;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_42425c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424257;
}

struct s1874 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1875 {
    signed char[4] pad4;
    signed char f4;
};

struct s1876 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_42428c() {
    int1_t pf1;
    struct s1874* ebx2;
    struct s1875* ebx3;
    signed char bh4;
    struct s1876* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x424287;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

void fun_4242a4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42429f;
    __asm__("fld tword [eax+0x50]");
}

void fun_424274() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42426f;
}

void fun_424309(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424304;
}

struct s1877 {
    signed char[4] pad4;
    signed char f4;
};

struct s1878 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4242fd() {
    int1_t pf1;
    struct s1877* ebx2;
    struct s1878* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x4242f8;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_424321(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x42431c;
}

void fun_42434e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424347;
}

void fun_424364() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42435f;
}

struct s1879 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_424394() {
    int1_t pf1;
    struct s1879* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x42438f;
    ebx2->f4 = ebx2->f4 | edi3;
}

struct s1880 {
    signed char[4] pad4;
    signed char f4;
};

struct s1881 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4243ac(int32_t ecx) {
    int1_t pf2;
    struct s1880* ebx3;
    struct s1881* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x4243a7;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 - bh5);
}

void fun_4243c4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4243bf;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_4243dc(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4243d7;
}

void fun_42442f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42442a;
}

void fun_424447() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424442;
}

void fun_424478() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424473;
    __asm__("fld tword [edx+0x67]");
}

void fun_42449f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42449a;
}

void fun_4244b7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4244b2;
}

void fun_4244c5() {
    int32_t ebx1;
    int32_t ebx2;

    *reinterpret_cast<int32_t*>(ebx1 + 0x47b08c4) = *reinterpret_cast<int32_t*>(ebx2 + 0x47b08c4) + 1;
}

void fun_4244ed(signed char cl) {
    int1_t pf2;
    int32_t ebx3;

    if (!pf2) 
        goto 0x4244e8;
    *reinterpret_cast<signed char*>(ebx3 + 0x42ec2015) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx3 + 0x42ec2015) - cl);
}

struct s1882 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1883 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_424517() {
    int1_t pf1;
    struct s1882* ebx2;
    struct s1883* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x424512;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_424531() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42452a;
}

void fun_42457f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42457a;
    __asm__("fstp tword [ebx+0x4]");
}

void fun_4245f8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4245f3;
}

void fun_424610() {
    int1_t pf1;
    int1_t pf2;

    if (!pf1) 
        goto 0x42460b;
    if (pf2) 
        goto "???";
}

void fun_424646() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424641;
}

void fun_42466d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424668;
}

void fun_424685(int16_t cx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424680;
}

void fun_4246a2() {
    int1_t pf1;
    int32_t esi2;
    signed char ah3;

    if (!pf1) 
        goto 0x42469d;
    *reinterpret_cast<signed char*>(esi2 - 57) = ah3;
}

void fun_4246d9(signed char cl) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;

    if (!pf2) 
        goto 0x4246d4;
    *reinterpret_cast<signed char*>(ebp3 - 0xa36b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp4 - 0xa36b) + cl);
}

void fun_424799() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    if (__intrinsic() || !__intrinsic()) {
    }
}

void fun_42473f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42473a;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_424778() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424773;
}

void fun_424790() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42478b;
}

void fun_4247ae() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4247a9;
}

struct s1884 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1885 {
    signed char[4] pad4;
    signed char f4;
};

struct s1886 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4247c6(int32_t ecx) {
    int1_t pf2;
    struct s1884* ebx3;
    struct s1885* ebx4;
    signed char bh5;
    struct s1886* ebx6;
    signed char bh7;
    uint1_t cf8;

    if (!pf2) 
        goto 0x4247c1;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 - reinterpret_cast<unsigned char>(bh5 + reinterpret_cast<uint1_t>(ebx6->f4 < reinterpret_cast<unsigned char>(bh7 + cf8))));
}

void fun_4247de() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4247d9;
    __asm__("fisubr word [edx+0x4]");
}

void fun_424826() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424821;
}

void fun_4248ad(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4248a8;
}

void fun_4248ea() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4248e5;
}

void fun_42491a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424915;
    __asm__("fistp qword [ebx+0x4]");
}

struct s1887 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1888 {
    signed char[4] pad4;
    signed char f4;
};

struct s1889 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_424932(int32_t ecx) {
    int1_t pf2;
    struct s1887* ebx3;
    struct s1888* ebx4;
    signed char bh5;
    struct s1889* ebx6;
    signed char bh7;
    uint1_t cf8;

    if (!pf2) 
        goto 0x42492d;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 - reinterpret_cast<unsigned char>(bh5 + reinterpret_cast<uint1_t>(ebx6->f4 < reinterpret_cast<unsigned char>(bh7 + cf8))));
}

void fun_42494a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424945;
}

void fun_424962() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42495d;
}

struct s1890 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42497a() {
    int1_t pf1;
    struct s1890* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x424975;
    ebx2->f4 = bh3;
}

void fun_424994() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42498d;
}

struct s1891 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4249aa() {
    int1_t pf1;
    struct s1891* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x4249a5;
    ebx2->f4 = bh3;
}

struct s1892 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1893 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4249c2() {
    int1_t pf1;
    struct s1892* ebx2;
    struct s1893* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x4249bd;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

void fun_4249f2(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4249ed;
}

void fun_424a16() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424a11;
}

struct s1894 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424a30() {
    int1_t pf1;
    struct s1894* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x424a29;
    ebx2->f4 = bh3;
}

struct s1895 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1896 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424a46(signed char cl) {
    int1_t pf2;
    struct s1895* ebx3;
    struct s1896* ebx4;

    if (!pf2) 
        goto 0x424a41;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_424a7f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424a7a;
}

struct s1897 {
    signed char[4] pad4;
    signed char f4;
};

struct s1898 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424a97(signed char cl) {
    int1_t pf2;
    struct s1897* ebx3;
    struct s1898* ebx4;

    if (!pf2) 
        goto 0x424a92;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_424aaf() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424aaa;
}

void fun_424ac9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424ac2;
}

struct s1899 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424ad7() {
    struct s1899* ebx1;
    signed char bh2;

    if (!(__intrinsic() || !__intrinsic())) {
        ebx1->f4 = bh2;
    }
}

struct s1900 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_424af6() {
    int1_t pf1;
    struct s1900* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x424af1;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_424b0e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424b09;
}

void fun_424b28() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424b21;
}

struct s1901 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_424b4a() {
    struct s1901* ebx1;
    struct s1901* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x424b45;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_424b62(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424b5d;
}

void fun_424b7a(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x424b75;
    __asm__("fnstsw word [ebx+0x4]");
}

struct s1902 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1903 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1904 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_424b92() {
    int1_t pf1;
    struct s1902* ebx2;
    struct s1903* ebx3;
    int32_t edi4;
    struct s1904* ebx5;
    uint1_t cf6;

    if (!pf1) 
        goto 0x424b8d;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi4 + cf6));
}

struct s1905 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1906 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424baa() {
    int1_t pf1;
    struct s1905* ebx2;
    struct s1906* ebx3;

    if (!pf1) 
        goto 0x424ba5;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_424bc2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424bbd;
}

void fun_424bdc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424bd5;
}

struct s1907 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1908 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_424bf4() {
    int1_t pf1;
    struct s1907* ebx2;
    struct s1908* ebx3;

    if (!pf1) 
        goto 0x424bed;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

struct s1909 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_424c16() {
    int1_t pf1;
    struct s1909* ebx2;
    uint32_t edi3;

    if (!pf1) 
        goto 0x424c11;
    ebx2->f4 = ebx2->f4 | edi3;
}

void fun_424c2e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424c29;
    __asm__("arpl [ebx+0x4], di");
}

void fun_424c46() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424c41;
}

void fun_424c5e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424c59;
}

void fun_424ca1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424c9c;
}

void fun_424cda() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424cd5;
}

void fun_424d15() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424d0e;
}

void fun_424d2b() {
    int1_t pf1;
    int32_t esi2;
    signed char ah3;

    if (!pf1) 
        goto 0x424d26;
    *reinterpret_cast<signed char*>(esi2 - 57) = ah3;
}

void fun_424d4e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424d47;
}

signed char gec2805c7;

void fun_424d64() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x424d5f;
    gec2805c7 = al2;
}

void fun_424d8b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424d86;
}

void fun_424da3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424d9e;
}

void fun_424ddd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424dd8;
}

void fun_424df7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424df0;
}

struct s1910 {
    signed char[4] pad4;
    signed char f4;
};

void fun_424e0f() {
    int1_t pf1;
    struct s1910* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x424e08;
    ebx2->f4 = bh3;
}

void fun_424e3d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424e38;
}

void fun_424e55() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424e50;
    __asm__("fmul dword [ebx+0x118b084d]");
}

struct s1911 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1912 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_424e7d() {
    int1_t pf1;
    struct s1911* ebx2;
    struct s1912* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x424e78;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

void fun_424e95() {
    int1_t pf1;
    int32_t esi2;

    if (!pf1) 
        goto 0x424e90;
    *reinterpret_cast<void**>(esi2 - 57) = __zero_stack_offset();
}

void fun_424eb3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424eae;
}

void fun_424ecb(int32_t ecx) {
    int1_t pf2;
    int1_t pf3;

    if (!pf2) 
        goto 0x424ec6;
    if (!pf3) 
        goto 0x41b362; else 
        goto "???";
}

struct s1913 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_424f08() {
    int1_t pf1;
    struct s1913* ebx2;

    if (!pf1) 
        goto 0x424f03;
    ebx2->f4 = 0xff;
}

void fun_424f22() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424f1b;
}

void fun_424f38() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424f33;
}

void fun_424f4e(int32_t ecx) {
    int1_t pf2;
    int32_t eax3;

    if (!pf2) 
        goto 0x424f4b;
    gf687047b = eax3;
}

struct s1914 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1915 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_424f6a() {
    int1_t pf1;
    struct s1914* ebx2;
    struct s1915* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x424f63;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

struct s1916 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_424fd0() {
    int1_t pf1;
    struct s1916* ebx2;

    if (!pf1) 
        goto 0x424fcb;
    ebx2->f4 = 0xff;
}

void fun_424fe8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424fe3;
}

void fun_425002() {
    int1_t pf1;

    if (!pf1) 
        goto 0x424ffb;
}

struct s1917 {
    signed char[4] pad4;
    signed char f4;
};

struct s1918 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425018(signed char cl) {
    int1_t pf2;
    struct s1917* ebx3;
    struct s1918* ebx4;

    if (!pf2) 
        goto 0x425013;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_425030() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42502b;
}

struct s1919 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425048() {
    int1_t pf1;
    struct s1919* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x425043;
    ebx2->f4 = bh3;
}

void fun_425060() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42505b;
}

void fun_425078() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425073;
    __asm__("arpl [ebx+0x4], di");
}

void fun_425090() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42508b;
}

void fun_4250a8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4250a3;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_4250c0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4250bb;
}

struct s1920 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1921 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4250e6() {
    int1_t pf1;
    struct s1920* ebx2;
    struct s1921* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x4250df;
    ebx2->f4 = ebx3->f4 & edi4;
}

struct s1922 {
    signed char[4] pad4;
    signed char f4;
};

struct s1923 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4250fe(signed char cl) {
    int1_t pf2;
    struct s1922* ebx3;
    struct s1923* ebx4;

    if (!pf2) 
        goto 0x4250f7;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

struct s1924 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425114() {
    int1_t pf1;
    struct s1924* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x42510f;
    ebx2->f4 = ebx2->f4 + edi3;
}

void fun_42512c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425127;
}

struct s1925 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425144() {
    int1_t pf1;
    struct s1925* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x42513f;
    ebx2->f4 = edi3;
}

void fun_42515c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425157;
}

void fun_425174() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42516f;
}

struct s1926 {
    signed char[4] pad4;
    signed char f4;
};

struct s1927 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42518c() {
    int1_t pf1;
    struct s1926* ebx2;
    struct s1927* ebx3;

    if (!pf1) 
        goto 0x425187;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_4251a6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4251a1;
}

struct s1928 {
    signed char[4] pad4;
    signed char f4;
};

struct s1929 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4251be() {
    int1_t pf1;
    struct s1928* ebx2;
    struct s1929* ebx3;

    if (!pf1) 
        goto 0x4251b9;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

struct s1930 {
    signed char[4] pad4;
    signed char f4;
};

struct s1931 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4251e2() {
    int1_t pf1;
    struct s1930* ebx2;
    struct s1931* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x4251dd;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

struct s1932 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1933 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4251fa() {
    int1_t pf1;
    struct s1932* ebx2;
    struct s1933* ebx3;

    if (!pf1) 
        goto 0x4251f5;
    ebx2->f4 = ebx3->f4 >> 1;
}

struct s1934 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1935 {
    signed char[4] pad4;
    signed char f4;
};

struct s1936 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_425212(int32_t ecx) {
    int1_t pf2;
    struct s1934* ebx3;
    struct s1935* ebx4;
    signed char bh5;
    struct s1936* ebx6;
    signed char bh7;
    uint1_t cf8;

    if (!pf2) 
        goto 0x42520d;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 - reinterpret_cast<unsigned char>(bh5 + reinterpret_cast<uint1_t>(ebx6->f4 < reinterpret_cast<unsigned char>(bh7 + cf8))));
}

void fun_42522a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425225;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_425242() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42523d;
}

void fun_425266() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425261;
}

struct s1937 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1938 {
    signed char[4] pad4;
    signed char f4;
};

void fun_42527e(int32_t ecx) {
    int1_t pf2;
    struct s1937* ebx3;
    struct s1938* ebx4;
    signed char bh5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x425279;
    ebx3->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx4->f4 + bh5) + cf6);
}

void fun_425296() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425291;
    __asm__("fidivr word [ebx+0x4]");
}

void fun_4252ae() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4252a9;
}

void fun_4252e0() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x4252d9;
    gc987047b = eax2;
}

void fun_4252f8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4252f1;
}

void fun_42530e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425309;
}

void fun_425342() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42533d;
    __asm__("fdivr dword [ebx+0x4]");
}

struct s1939 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1940 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42535a() {
    int1_t pf1;
    struct s1939* ebx2;
    struct s1940* ebx3;

    if (!pf1) 
        goto 0x425355;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_42537e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425379;
}

void fun_425396() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425391;
}

void fun_4253b0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4253a9;
    __asm__("fdivr dword [ebx+0x4]");
}

void fun_4253c6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4253c1;
}

struct s1941 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1942 {
    signed char[4] pad4;
    signed char f4;
};

struct s1943 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4253de() {
    int1_t pf1;
    struct s1941* ebx2;
    struct s1942* ebx3;
    signed char bh4;
    struct s1943* ebx5;
    signed char bh6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x4253d9;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 - reinterpret_cast<unsigned char>(bh4 + reinterpret_cast<uint1_t>(ebx5->f4 < reinterpret_cast<unsigned char>(bh6 + cf7))));
}

struct s1944 {
    signed char[4] pad4;
    signed char f4;
};

struct s1945 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4253f6(int32_t ecx) {
    int1_t pf2;
    struct s1944* ebx3;
    struct s1945* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x4253f1;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 - bh5);
}

void fun_42541a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425415;
}

struct s1946 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1947 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425432() {
    int1_t pf1;
    struct s1946* ebx2;
    struct s1947* ebx3;

    if (!pf1) 
        goto 0x42542d;
    ebx2->f4 = ebx3->f4 >> 1;
}

struct s1948 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42546e(signed char cl) {
    int1_t pf2;
    struct s1948* ebx3;

    if (!pf2) 
        goto 0x425469;
    ebx3->f4 = ebx3->f4 >> cl;
}

void fun_425486() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425481;
    __asm__("ffree st7");
}

struct s1949 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4254bc() {
    struct s1949* ebx1;
    struct s1949* ebx2;
    int1_t pf3;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x4254b7;
    ebx1->f4 = reinterpret_cast<unsigned char>(ebx1->f4 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_4254d4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4254cf;
}

void fun_4254ee() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4254e7;
}

struct s1950 {
    signed char[4] pad4;
    signed char f4;
};

struct s1951 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425510() {
    int1_t pf1;
    struct s1950* ebx2;
    struct s1951* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x42550b;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 + bh4);
}

void fun_425528() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425523;
}

struct s1952 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1953 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425540() {
    int1_t pf1;
    struct s1952* ebx2;
    struct s1953* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x42553b;
    ebx2->f4 = ebx3->f4 - edi4;
}

struct s1954 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1955 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_42555a() {
    int1_t pf1;
    struct s1954* ebx2;
    struct s1955* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x425553;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

struct s1956 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1957 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1958 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_425570() {
    int1_t pf1;
    struct s1956* ebx2;
    struct s1957* ebx3;
    int32_t edi4;
    struct s1958* ebx5;
    uint1_t cf6;

    if (!pf1) 
        goto 0x42556b;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi4 + cf6));
}

void fun_425588(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425583;
}

struct s1959 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1960 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4255a0() {
    int1_t pf1;
    struct s1959* ebx2;
    struct s1960* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x42559b;
    ebx2->f4 = ebx3->f4 & edi4;
}

void fun_4255b8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4255b3;
}

void fun_4255d0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4255cb;
}

void fun_4255e8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4255e3;
}

void fun_425600() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x4255fb;
    *reinterpret_cast<signed char*>(&gdb87047b) = al2;
}

void fun_425630() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42562b;
}

void fun_425648() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425643;
}

struct s1961 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1962 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_42566c(int32_t ecx) {
    int1_t pf2;
    struct s1961* ebx3;
    struct s1962* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x425667;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 | bh5);
}

void fun_4256ab() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4256a4;
}

struct s1963 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4256d9(signed char cl) {
    int1_t pf2;
    struct s1963* ebx3;

    if (!pf2) 
        goto 0x4256d4;
    ebx3->f4 = ebx3->f4 >> cl;
}

struct s1964 {
    signed char[4] pad4;
    signed char f4;
};

struct s1965 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4256f1() {
    int1_t pf1;
    struct s1964* ebx2;
    struct s1965* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x4256ec;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_425709() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425704;
}

struct s1966 {
    signed char[4] pad4;
    signed char f4;
};

struct s1967 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425721(int32_t ecx) {
    int1_t pf2;
    struct s1966* ebx3;
    struct s1967* ebx4;

    if (!pf2) 
        goto 0x42571c;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> 0x87);
}

void fun_425739() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425734;
}

void fun_425751() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42574c;
}

struct s1968 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425769(signed char cl) {
    int1_t pf2;
    struct s1968* ebx3;

    if (!pf2) 
        goto 0x425764;
    ebx3->f4 = ebx3->f4 >> cl;
}

struct s1969 {
    signed char[4] pad4;
    signed char f4;
};

struct s1970 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425781(int32_t ecx) {
    int1_t pf2;
    struct s1969* ebx3;
    struct s1970* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x42577c;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 + bh5);
}

void fun_42579b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425794;
}

struct s1971 {
    signed char[1] pad1;
    signed char f1;
};

struct s1972 {
    signed char[1] pad1;
    signed char f1;
};

void fun_4257b1() {
    int32_t ebx1;
    int32_t ebx2;
    int1_t pf3;
    struct s1971* eax4;
    struct s1972* eax5;

    ebx1 = ebx2;
    if (!pf3) 
        goto 0x4257ac;
    eax4->f1 = reinterpret_cast<signed char>(eax5->f1 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1));
}

void fun_4257de() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4257d7;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_4257f4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4257ef;
    __asm__("fdivr qword [ebx+0x4]");
}

void fun_42580c(signed char cl) {
    int1_t pf2;
    int32_t ebx3;

    if (!pf2) 
        goto 0x425807;
    *reinterpret_cast<signed char*>(ebx3 + 0x88b0845) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx3 + 0x88b0845) - cl);
}

void fun_42582e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425829;
}

struct s1973 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425846() {
    int1_t pf1;
    struct s1973* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x425841;
    ebx2->f4 = edi3;
}

void fun_42585e(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425859;
}

void fun_425878() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x425871;
    ged87047b = eax2;
}

void fun_42588e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425889;
}

void fun_4258a6(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4258a1;
}

struct s1974 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1975 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4258cb() {
    int1_t pf1;
    struct s1974* ebx2;
    struct s1975* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4258c6;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 & bh4);
}

void fun_4258e3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4258de;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_4258fb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4258f6;
    __asm__("fcmovb st0, st7");
}

void fun_42591d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425918;
}

struct s1976 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1977 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1978 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_425935() {
    int1_t pf1;
    struct s1976* ebx2;
    struct s1977* ebx3;
    int32_t edi4;
    struct s1978* ebx5;
    int32_t edi6;
    uint1_t cf7;

    if (!pf1) 
        goto 0x425930;
    ebx2->f4 = ebx3->f4 - (edi4 + reinterpret_cast<uint1_t>(ebx5->f4 < edi6 + cf7));
}

void fun_42594d(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425948;
}

void fun_42596e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425969;
}

void fun_425988() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425981;
}

void fun_4259a0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425999;
}

struct s1979 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s1980 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4259bd() {
    int1_t pf1;
    struct s1979* ebx2;
    struct s1980* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x4259b8;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 ^ bh4);
}

void fun_4259d5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4259d0;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_4259ed() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4259e8;
}

struct s1981 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1982 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_425a27() {
    int1_t pf1;
    struct s1981* ebx2;
    struct s1982* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x425a22;
    ebx2->f4 = ebx3->f4 | edi4;
}

struct s1983 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1984 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425a3f() {
    int1_t pf1;
    struct s1983* ebx2;
    struct s1984* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x425a3a;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_425a57() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425a52;
}

struct s1985 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1986 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_425a6f() {
    int1_t pf1;
    struct s1985* ebx2;
    struct s1986* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x425a6a;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_425a87() {
    int1_t pf1;
    void** eax2;

    if (!pf1) 
        goto 0x425a82;
    gdb87047b = eax2;
}

void fun_425a9f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425a9a;
}

struct s1987 {
    signed char[4] pad4;
    signed char f4;
};

struct s1988 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425ab7() {
    int1_t pf1;
    struct s1987* ebx2;
    struct s1988* ebx3;
    signed char bh4;

    if (!pf1) 
        goto 0x425ab2;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 - bh4);
}

void fun_425acf() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425aca;
}

void fun_425ae7() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425ae2;
    __asm__("fsubr dword [eax+0x0]");
}

void fun_425b5d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425b58;
}

void fun_425b75() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425b70;
}

void fun_425b8d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425b88;
    __asm__("fmul qword [ebx+0xffff5c8d]");
}

struct s1989 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425beb(signed char cl) {
    int1_t pf2;
    struct s1989* ebx3;

    if (!pf2) 
        goto 0x425be6;
    ebx3->f4 = ebx3->f4 >> cl;
}

void fun_425c34() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425c2f;
}

void fun_425c70() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425c69;
}

void fun_425cdb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425cd6;
}

void fun_425d15() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425d10;
}

struct s1990 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1991 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425da4(int32_t ecx) {
    int1_t pf2;
    struct s1990* ebx3;
    struct s1991* ebx4;
    int32_t edi5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x425d9f;
    ebx3->f4 = ebx4->f4 + edi5 + cf6;
}

void fun_425dbc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425db7;
}

void fun_425df6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425df1;
}

struct s1992 {
    signed char[4] pad4;
    int32_t f4;
};

struct s1993 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425e18() {
    int1_t pf1;
    struct s1992* ebx2;
    struct s1993* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x425e13;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_425e30() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425e2b;
}

void fun_425e48() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425e43;
}

void fun_425e62() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425e5b;
}

struct s1994 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425e8d(int32_t ecx) {
    int1_t pf2;
    struct s1994* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x425e88;
    ebx3->f4 = bh4;
}

void fun_425ea9() {
    __asm__("in eax, dx");
}

struct s1995 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1996 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_425ed3() {
    int1_t pf1;
    struct s1995* ebx2;
    struct s1996* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x425ece;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

struct s1997 {
    signed char[4] pad4;
    signed char f4;
};

void fun_425ef5(int32_t ecx) {
    int1_t pf2;
    struct s1997* ebx3;
    signed char bh4;

    if (!pf2) 
        goto 0x425ef0;
    ebx3->f4 = bh4;
}

void fun_425f0d(int32_t ecx) {
    int32_t ecx2;
    int1_t pf3;
    int32_t ebp4;
    int32_t ebp5;

    ecx2 = ecx;
    if (!pf3) 
        goto 0x425f08;
    *reinterpret_cast<unsigned char*>(ebp4 - 0x9373) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp5 - 0x9373) ^ *reinterpret_cast<unsigned char*>(&ecx2));
}

void fun_425f54() {
    int1_t pf1;

    if (!pf1) 
        goto 0x425f4d;
}

void fun_425f73(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425f6e;
}

void fun_425fad(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425fa8;
}

void fun_425fc5() {
    int1_t pf1;
    int32_t ebx2;
    int32_t ebx3;

    if (!pf1) 
        goto 0x425fc0;
    *reinterpret_cast<unsigned char*>(ebx2 + 0x28b0855) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx3 + 0x28b0855) | 35);
}

void fun_426005() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x426000;
    *reinterpret_cast<signed char*>(&gc987047b) = al2;
}

struct s1998 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s1999 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_42601d() {
    int1_t pf1;
    struct s1998* ebx2;
    struct s1999* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x426018;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

struct s2000 {
    signed char[4] pad4;
    signed char f4;
};

struct s2001 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426035(signed char cl) {
    int1_t pf2;
    struct s2000* ebx3;
    struct s2001* ebx4;

    if (!pf2) 
        goto 0x426030;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_42604d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426048;
}

struct s2002 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426065() {
    int1_t pf1;
    struct s2002* ebx2;
    signed char bh3;

    if (!pf1) 
        goto 0x426060;
    ebx2->f4 = bh3;
}

void fun_426095() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426090;
}

void fun_4260ad() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4260a8;
}

struct s2003 {
    signed char[4] pad4;
    int32_t f4;
};

struct s2004 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_4260c3() {
    int1_t pf1;
    struct s2003* ebx2;
    struct s2004* ebx3;

    if (!pf1) 
        goto 0x4260c0;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_426101() {
    int1_t pf1;
    unsigned char* ebx2;
    unsigned char* ebx3;

    if (!pf1) 
        goto 0x4260fc;
    *ebx2 = reinterpret_cast<unsigned char>(*ebx3 ^ 0xc0);
}

struct s2005 {
    signed char[4] pad4;
    int32_t f4;
};

struct s2006 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426141() {
    int1_t pf1;
    struct s2005* ebx2;
    struct s2006* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x42613c;
    ebx2->f4 = ebx3->f4 - edi4;
}

struct s2007 {
    signed char[100] pad100;
    uint32_t f100;
};

struct s2008 {
    signed char[100] pad100;
    uint32_t f100;
};

void fun_426159() {
    int1_t pf1;
    struct s2007* eax2;
    struct s2008* eax3;

    if (!pf1) 
        goto 0x426154;
    eax2->f100 = eax3->f100 & reinterpret_cast<uint32_t>(__zero_stack_offset());
}

void fun_426199() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426194;
}

void fun_4261b1(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4261ac;
}

void fun_4261c9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4261c4;
}

void fun_4261e1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4261dc;
}

void fun_426243() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42623e;
}

void fun_42625b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426256;
}

void fun_426273() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42626e;
}

void fun_426358() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426353;
}

void fun_426370() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42636b;
}

struct s2009 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s2010 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426388() {
    int1_t pf1;
    struct s2009* ebx2;
    struct s2010* ebx3;
    int32_t edi4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x426383;
    ebx2->f4 = ebx3->f4 + edi4 + cf5;
}

signed char g4fe90001;

void fun_4263a0() {
    int32_t ebp1;
    int32_t ebp2;
    signed char al3;

    *reinterpret_cast<signed char*>(ebp1 + 0x660974c0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp2 + 0x660974c0) + al3);
    g4fe90001 = reinterpret_cast<signed char>(g4fe90001 + 1);
    if (!(__intrinsic() || !__intrinsic())) {
        __asm__("fdivr dword [ebx+0x4]");
    }
    if (__intrinsic() || !__intrinsic()) {
    }
}

void fun_4263c3() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4263bc;
}

struct s2011 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s2012 {
    signed char[4] pad4;
    signed char f4;
};

struct s2013 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4263d9(int32_t ecx) {
    int1_t pf2;
    struct s2011* ebx3;
    struct s2012* ebx4;
    signed char bh5;
    struct s2013* ebx6;
    signed char bh7;
    uint1_t cf8;

    if (!pf2) 
        goto 0x4263d4;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 - reinterpret_cast<unsigned char>(bh5 + reinterpret_cast<uint1_t>(ebx6->f4 < reinterpret_cast<unsigned char>(bh7 + cf8))));
}

void fun_4263f1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4263ec;
}

void fun_426409(int32_t ecx) {
    int1_t pf2;
    int32_t ebp3;
    int32_t ebp4;
    int32_t ebp5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x426404;
    *reinterpret_cast<uint32_t*>(ebp3 - 0x9b73) = *reinterpret_cast<int32_t*>(ebp4 - 0x9b73) - (ecx + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebp5 - 0x9b73) < ecx + cf6));
}

void fun_4264de(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4264d9;
}

struct s2014 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42645d() {
    int1_t pf1;
    struct s2014* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x426458;
    ebx2->f4 = edi3;
}

void fun_426475() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426470;
}

void fun_42648d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426488;
}

struct s2015 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s2016 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_4264ae(int32_t ecx) {
    int1_t pf2;
    struct s2015* ebx3;
    struct s2016* ebx4;
    unsigned char bh5;

    if (!pf2) 
        goto 0x4264a9;
    ebx3->f4 = reinterpret_cast<unsigned char>(ebx4->f4 ^ bh5);
}

void fun_4264c6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4264c1;
}

void fun_4264f6() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4264f1;
}

void fun_42650e() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426509;
}

void fun_426526(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426521;
}

void fun_42654a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426545;
}

void fun_42656c() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426567;
}

void fun_4265a5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4265a0;
}

void fun_4265bd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4265b8;
}

void fun_42663c(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426637;
}

void fun_4265de() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4265d9;
    __asm__("fdivr qword [ebx+0x4]");
}

void fun_4265f6(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4265f1;
}

void fun_426618() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426613;
}

void fun_426654() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42664f;
    __asm__("fidivr dword [ebx+0x4]");
}

void fun_426697() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426692;
}

void fun_4266af(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x4266aa;
    __asm__("fidivr word [ebx+0x4]");
}

struct s2017 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s2018 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_4266c7() {
    int1_t pf1;
    struct s2017* ebx2;
    struct s2018* ebx3;
    uint32_t edi4;

    if (!pf1) 
        goto 0x4266c2;
    ebx2->f4 = ebx3->f4 ^ edi4;
}

void fun_426710() {
    int1_t pf1;
    int32_t esi2;
    int32_t esi3;
    signed char ah4;

    if (!pf1) 
        goto 0x42670b;
    *reinterpret_cast<signed char*>(esi2 - 57) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi3 - 57) + ah4);
}

void fun_426741() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42673c;
}

void fun_426771() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42676c;
}

struct s2019 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s2020 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426789(int32_t ecx) {
    int1_t pf2;
    struct s2019* ebx3;
    struct s2020* ebx4;
    signed char bh5;
    uint1_t cf6;

    if (!pf2) 
        goto 0x426784;
    ebx3->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx4->f4 + bh5) + cf6);
}

void fun_4267a1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42679c;
}

void fun_4267fb() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4267f8;
}

void fun_426817() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426810;
}

struct s2021 {
    signed char[4] pad4;
    int32_t f4;
};

struct s2022 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42682d(signed char cl) {
    int1_t pf2;
    struct s2021* ebx3;
    struct s2022* ebx4;

    if (!pf2) 
        goto 0x426828;
    ebx3->f4 = ebx4->f4 >> cl;
}

void fun_426845(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426840;
}

void fun_42685d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426858;
}

void fun_426877() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426870;
}

void fun_42688d(int32_t ecx) {
    int1_t pf2;
    int32_t ebx3;
    int32_t ebx4;
    int32_t eax5;
    int32_t ebx6;
    int32_t eax7;
    uint1_t cf8;

    if (!pf2) 
        goto 0x426888;
    *reinterpret_cast<uint32_t*>(ebx3 + 0x7400087d) = *reinterpret_cast<int32_t*>(ebx4 + 0x7400087d) - (eax5 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(ebx6 + 0x7400087d) < eax7 + cf8));
}

struct s2023 {
    signed char[4] pad4;
    signed char f4;
};

struct s2024 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4268b4(signed char cl) {
    int1_t pf2;
    struct s2023* ebx3;
    struct s2024* ebx4;

    if (!pf2) 
        goto 0x4268af;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

void fun_4268cc() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4268c7;
}

void fun_4268e4() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4268df;
    __asm__("fistp qword [ebx+0x4]");
}

struct s2025 {
    signed char[51] pad51;
    signed char f51;
};

struct s2026 {
    signed char[51] pad51;
    signed char f51;
};

void fun_4268fc(int32_t ecx) {
    int1_t pf2;
    struct s2025* esi3;
    struct s2026* esi4;
    signed char ah5;

    if (!pf2) 
        goto 0x4268f7;
    esi3->f51 = reinterpret_cast<signed char>(esi4->f51 + ah5);
}

void fun_426928() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426923;
}

void fun_426940() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42693b;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_426958() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426953;
}

void fun_426988(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426983;
}

void fun_4269a2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42699b;
}

void fun_4269b8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4269b3;
    __asm__("fnstsw word [ebx+0x4]");
}

void fun_4269d0() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4269cb;
}

struct s2027 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s2028 {
    signed char[4] pad4;
    signed char f4;
};

void fun_4269e8() {
    int1_t pf1;
    struct s2027* ebx2;
    struct s2028* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x4269e3;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

struct s2029 {
    signed char[4] pad4;
    int32_t f4;
};

struct s2030 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426a10(int32_t ecx) {
    struct s2029* ebx2;
    struct s2030* ebx3;
    int32_t edi4;

    if (!(__intrinsic() || !__intrinsic())) {
        ebx2->f4 = ebx3->f4 - edi4;
    }
}

void fun_426a39() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426a34;
}

void fun_426a51() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426a4c;
}

void fun_426a69() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426a64;
}

struct s2031 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s2032 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426a81() {
    int1_t pf1;
    struct s2031* ebx2;
    struct s2032* ebx3;
    signed char bh4;
    uint1_t cf5;

    if (!pf1) 
        goto 0x426a7c;
    ebx2->f4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx3->f4 + bh4) + cf5);
}

void fun_426a99() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426a94;
}

void fun_426ab1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426aac;
}

void fun_426ac9(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426ac4;
}

void fun_426ae1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426adc;
}

struct s2033 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426af9() {
    int1_t pf1;
    struct s2033* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x426af4;
    ebx2->f4 = edi3;
}

struct s2034 {
    signed char[4] pad4;
    signed char f4;
};

struct s2035 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426b11() {
    int1_t pf1;
    struct s2034* ebx2;
    struct s2035* ebx3;

    if (!pf1) 
        goto 0x426b0c;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

void fun_426b29() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426b24;
}

void fun_426b43() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426b3c;
}

void fun_426b59() {
    int1_t pf1;
    int32_t eax2;

    if (!pf1) 
        goto 0x426b54;
    gff87047b = eax2;
}

void fun_426b71() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426b6c;
    __asm__("fistp qword [ebx+0x4]");
}

void fun_426b89() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x426b84;
    *reinterpret_cast<signed char*>(&gf687047b) = al2;
}

void fun_426ba1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426b9c;
}

void fun_426bb9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426bb4;
}

struct s2036 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426bdd() {
    int1_t pf1;
    struct s2036* ebx2;

    if (!pf1) 
        goto 0x426bd8;
    ebx2->f4 = reinterpret_cast<signed char>(ebx2->f4 >> 0x87);
}

void fun_426bf5() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x426bf0;
    *reinterpret_cast<signed char*>(&gff87047b) = al2;
}

void fun_426c0d(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426c08;
}

void fun_426c25() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426c20;
}

void fun_426c3d() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426c38;
}

void fun_426c55() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426c50;
}

struct s2037 {
    signed char[4] pad4;
    int32_t f4;
};

struct s2038 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426c7b() {
    int1_t pf1;
    struct s2037* ebx2;
    struct s2038* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x426c74;
    ebx2->f4 = ebx3->f4 + edi4;
}

struct s2039 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426c93() {
    int1_t pf1;
    struct s2039* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x426c8c;
    ebx2->f4 = edi3;
}

void fun_426ca9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426ca4;
}

void fun_426cc1() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426cbc;
}

struct s2040 {
    signed char[4] pad4;
    signed char f4;
};

struct s2041 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426d0b() {
    int1_t pf1;
    struct s2040* ebx2;
    struct s2041* ebx3;

    if (!pf1) 
        goto 0x426d06;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 0x87);
}

void fun_426d23() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426d1e;
}

void fun_426d3b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426d36;
}

void fun_426d53() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426d4e;
    __asm__("rol bh, 1");
}

void fun_426d7f() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426d7a;
}

void fun_426d97() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426d92;
}

void fun_426daf(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426daa;
    __asm__("fidivr word [ebx+0x4]");
}

struct s2042 {
    signed char[4] pad4;
    signed char f4;
};

struct s2043 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426dc7(int32_t ecx) {
    int1_t pf2;
    struct s2042* ebx3;
    struct s2043* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x426dc2;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 - bh5);
}

void fun_426ded() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426de6;
}

void fun_426e03() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426dfe;
}

void fun_426e1b() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426e16;
}

void fun_426e33() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426e2e;
}

struct s2044 {
    signed char[4] pad4;
    signed char f4;
};

struct s2045 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426e55(int32_t ecx) {
    int1_t pf2;
    struct s2044* ebx3;
    struct s2045* ebx4;
    signed char bh5;

    if (!pf2) 
        goto 0x426e50;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 - bh5);
}

void fun_426e9a() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426e95;
}

void fun_426eb2() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426ead;
    __asm__("fld qword [ebx+0xffff7cbd]");
}

struct s2046 {
    signed char[4] pad4;
    int32_t f4;
};

struct s2047 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426ed3() {
    int1_t pf1;
    struct s2046* ebx2;
    struct s2047* ebx3;
    int32_t edi4;

    if (!pf1) 
        goto 0x426ece;
    ebx2->f4 = ebx3->f4 + edi4;
}

void fun_426eeb(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x426ee6;
}

void fun_426f25() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426f20;
}

struct s2048 {
    signed char[4] pad4;
    signed char f4;
};

struct s2049 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426f4a(signed char cl) {
    int1_t pf2;
    struct s2048* ebx3;
    struct s2049* ebx4;

    if (!pf2) 
        goto 0x426f45;
    ebx3->f4 = reinterpret_cast<signed char>(ebx4->f4 >> cl);
}

struct s2050 {
    signed char[4] pad4;
    signed char f4;
};

struct s2051 {
    signed char[4] pad4;
    signed char f4;
};

void fun_426f64() {
    int1_t pf1;
    struct s2050* ebx2;
    struct s2051* ebx3;

    if (!pf1) 
        goto 0x426f5d;
    ebx2->f4 = reinterpret_cast<signed char>(ebx3->f4 >> 1);
}

struct s2052 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_426f7a() {
    int1_t pf1;
    struct s2052* ebx2;
    int32_t edi3;

    if (!pf1) 
        goto 0x426f75;
    ebx2->f4 = edi3;
}

void fun_426f92() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426f8d;
    __asm__("rol dword [ebx+0x7400087d], 1");
}

signed char g8b084d8b;

void fun_426fb0() {
    int1_t pf1;
    signed char al2;

    if (!pf1) 
        goto 0x426fab;
    g8b084d8b = al2;
}

void fun_426fd8() {
    int1_t pf1;

    if (!pf1) 
        goto 0x426fd3;
}

void fun_427005() {
    int1_t pf1;

    if (!pf1) 
        goto 0x427000;
}

void fun_427035(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x427030;
}

struct s2053 {
    signed char[4] pad4;
    int32_t f4;
};

struct s2054 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_42704d() {
    int1_t pf1;
    struct s2053* ebx2;
    struct s2054* ebx3;

    if (!pf1) 
        goto 0x427048;
    ebx2->f4 = ebx3->f4 >> 0xffffff87;
}

void fun_427073() {
    int1_t pf1;

    if (!pf1) 
        goto 0x42706c;
}

void fun_4270f4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;
    signed char* eax19;
    signed char* eax20;
    signed char al21;
    signed char* eax22;
    signed char* eax23;
    signed char al24;
    signed char* eax25;
    signed char* eax26;
    signed char al27;
    signed char* eax28;
    signed char* eax29;
    signed char al30;
    signed char* eax31;
    signed char* eax32;
    signed char al33;
    signed char* eax34;
    signed char* eax35;
    signed char al36;
    signed char* eax37;
    signed char* eax38;
    signed char al39;
    signed char* eax40;
    signed char* eax41;
    signed char al42;
    signed char* eax43;
    signed char* eax44;
    signed char al45;
    signed char* eax46;
    signed char* eax47;
    signed char al48;
    signed char* eax49;
    signed char* eax50;
    signed char al51;
    signed char* eax52;
    signed char* eax53;
    signed char al54;
    signed char* eax55;
    signed char* eax56;
    signed char al57;
    signed char* eax58;
    signed char* eax59;
    signed char al60;
    signed char* eax61;
    signed char* eax62;
    signed char al63;
    signed char* eax64;
    signed char* eax65;
    signed char al66;
    signed char* eax67;
    signed char* eax68;
    signed char al69;
    signed char* eax70;
    signed char* eax71;
    signed char al72;
    signed char* eax73;
    signed char* eax74;
    signed char al75;
    signed char* eax76;
    signed char* eax77;
    signed char al78;
    signed char* eax79;
    signed char* eax80;
    signed char al81;
    signed char* eax82;
    signed char* eax83;
    signed char al84;
    signed char* eax85;
    signed char* eax86;
    signed char al87;
    signed char* eax88;
    signed char* eax89;
    signed char al90;
    signed char* eax91;
    signed char* eax92;
    signed char al93;
    signed char* eax94;
    signed char* eax95;
    signed char al96;
    signed char* eax97;
    signed char* eax98;
    signed char al99;
    signed char* eax100;
    signed char* eax101;
    signed char al102;
    signed char* eax103;
    signed char* eax104;
    signed char al105;
    signed char* eax106;
    signed char* eax107;
    signed char al108;
    signed char* eax109;
    signed char* eax110;
    signed char al111;
    signed char* eax112;
    signed char* eax113;
    signed char al114;
    signed char* eax115;
    signed char* eax116;
    signed char al117;
    signed char* eax118;
    signed char* eax119;
    signed char al120;
    signed char* eax121;
    signed char* eax122;
    signed char al123;
    signed char* eax124;
    signed char* eax125;
    signed char al126;
    signed char* eax127;
    signed char* eax128;
    signed char al129;
    signed char* eax130;
    signed char* eax131;
    signed char al132;
    signed char* eax133;
    signed char* eax134;
    signed char al135;
    signed char* eax136;
    signed char* eax137;
    signed char al138;
    signed char* eax139;
    signed char* eax140;
    signed char al141;
    signed char* eax142;
    signed char* eax143;
    signed char al144;
    signed char* eax145;
    signed char* eax146;
    signed char al147;
    signed char* eax148;
    signed char* eax149;
    signed char al150;
    signed char* eax151;
    signed char* eax152;
    signed char al153;
    signed char* eax154;
    signed char* eax155;
    signed char al156;
    signed char* eax157;
    signed char* eax158;
    signed char al159;
    signed char* eax160;
    signed char* eax161;
    signed char al162;
    signed char* eax163;
    signed char* eax164;
    signed char al165;
    signed char* eax166;
    signed char* eax167;
    signed char al168;
    signed char* eax169;
    signed char* eax170;
    signed char al171;
    signed char* eax172;
    signed char* eax173;
    signed char al174;
    signed char* eax175;
    signed char* eax176;
    signed char al177;
    signed char* eax178;
    signed char* eax179;
    signed char al180;
    signed char* eax181;
    signed char* eax182;
    signed char al183;
    signed char* eax184;
    signed char* eax185;
    signed char al186;
    signed char* eax187;
    signed char* eax188;
    signed char al189;
    signed char* eax190;
    signed char* eax191;
    signed char al192;
    signed char* eax193;
    signed char* eax194;
    signed char al195;
    signed char* eax196;
    signed char* eax197;
    signed char al198;
    signed char* eax199;
    signed char* eax200;
    signed char al201;
    signed char* eax202;
    signed char* eax203;
    signed char al204;
    signed char* eax205;
    signed char* eax206;
    signed char al207;
    signed char* eax208;
    signed char* eax209;
    signed char al210;
    signed char* eax211;
    signed char* eax212;
    signed char al213;
    signed char* eax214;
    signed char* eax215;
    signed char al216;
    signed char* eax217;
    signed char* eax218;
    signed char al219;
    signed char* eax220;
    signed char* eax221;
    signed char al222;
    signed char* eax223;
    signed char* eax224;
    signed char al225;
    signed char* eax226;
    signed char* eax227;
    signed char al228;
    signed char* eax229;
    signed char* eax230;
    signed char al231;
    signed char* eax232;
    signed char* eax233;
    signed char al234;
    signed char* eax235;
    signed char* eax236;
    signed char al237;
    signed char* eax238;
    signed char* eax239;
    signed char al240;
    signed char* eax241;
    signed char* eax242;
    signed char al243;
    signed char* eax244;
    signed char* eax245;
    signed char al246;
    signed char* eax247;
    signed char* eax248;
    signed char al249;
    signed char* eax250;
    signed char* eax251;
    signed char al252;
    signed char* eax253;
    signed char* eax254;
    signed char al255;
    signed char* eax256;
    signed char* eax257;
    signed char al258;
    signed char* eax259;
    signed char* eax260;
    signed char al261;
    signed char* eax262;
    signed char* eax263;
    signed char al264;
    signed char* eax265;
    signed char* eax266;
    signed char al267;
    signed char* eax268;
    signed char* eax269;
    signed char al270;
    signed char* eax271;
    signed char* eax272;
    signed char al273;
    signed char* eax274;
    signed char* eax275;
    signed char al276;
    signed char* eax277;
    signed char* eax278;
    signed char al279;
    signed char* eax280;
    signed char* eax281;
    signed char al282;
    signed char* eax283;
    signed char* eax284;
    signed char al285;
    signed char* eax286;
    signed char* eax287;
    signed char al288;
    signed char* eax289;
    signed char* eax290;
    signed char al291;
    signed char* eax292;
    signed char* eax293;
    signed char al294;
    signed char* eax295;
    signed char* eax296;
    signed char al297;
    signed char* eax298;
    signed char* eax299;
    signed char al300;
    signed char* eax301;
    signed char* eax302;
    signed char al303;
    signed char* eax304;
    signed char* eax305;
    signed char al306;
    signed char* eax307;
    signed char* eax308;
    signed char al309;
    signed char* eax310;
    signed char* eax311;
    signed char al312;
    signed char* eax313;
    signed char* eax314;
    signed char al315;
    signed char* eax316;
    signed char* eax317;
    signed char al318;
    signed char* eax319;
    signed char* eax320;
    signed char al321;
    signed char* eax322;
    signed char* eax323;
    signed char al324;
    signed char* eax325;
    signed char* eax326;
    signed char al327;
    signed char* eax328;
    signed char* eax329;
    signed char al330;
    signed char* eax331;
    signed char* eax332;
    signed char al333;
    signed char* eax334;
    signed char* eax335;
    signed char al336;
    signed char* eax337;
    signed char* eax338;
    signed char al339;
    signed char* eax340;
    signed char* eax341;
    signed char al342;
    signed char* eax343;
    signed char* eax344;
    signed char al345;
    signed char* eax346;
    signed char* eax347;
    signed char al348;
    signed char* eax349;
    signed char* eax350;
    signed char al351;
    signed char* eax352;
    signed char* eax353;
    signed char al354;
    signed char* eax355;
    signed char* eax356;
    signed char al357;
    signed char* eax358;
    signed char* eax359;
    signed char al360;
    signed char* eax361;
    signed char* eax362;
    signed char al363;
    signed char* eax364;
    signed char* eax365;
    signed char al366;
    signed char* eax367;
    signed char* eax368;
    signed char al369;
    signed char* eax370;
    signed char* eax371;
    signed char al372;
    signed char* eax373;
    signed char* eax374;
    signed char al375;
    signed char* eax376;
    signed char* eax377;
    signed char al378;
    signed char* eax379;
    signed char* eax380;
    signed char al381;
    signed char* eax382;
    signed char* eax383;
    signed char al384;
    signed char* eax385;
    signed char* eax386;
    signed char al387;
    signed char* eax388;
    signed char* eax389;
    signed char al390;
    signed char* eax391;
    signed char* eax392;
    signed char al393;
    signed char* eax394;
    signed char* eax395;
    signed char al396;
    signed char* eax397;
    signed char* eax398;
    signed char al399;
    signed char* eax400;
    signed char* eax401;
    signed char al402;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
    *eax19 = reinterpret_cast<signed char>(*eax20 + al21);
    *eax22 = reinterpret_cast<signed char>(*eax23 + al24);
    *eax25 = reinterpret_cast<signed char>(*eax26 + al27);
    *eax28 = reinterpret_cast<signed char>(*eax29 + al30);
    *eax31 = reinterpret_cast<signed char>(*eax32 + al33);
    *eax34 = reinterpret_cast<signed char>(*eax35 + al36);
    *eax37 = reinterpret_cast<signed char>(*eax38 + al39);
    *eax40 = reinterpret_cast<signed char>(*eax41 + al42);
    *eax43 = reinterpret_cast<signed char>(*eax44 + al45);
    *eax46 = reinterpret_cast<signed char>(*eax47 + al48);
    *eax49 = reinterpret_cast<signed char>(*eax50 + al51);
    *eax52 = reinterpret_cast<signed char>(*eax53 + al54);
    *eax55 = reinterpret_cast<signed char>(*eax56 + al57);
    *eax58 = reinterpret_cast<signed char>(*eax59 + al60);
    *eax61 = reinterpret_cast<signed char>(*eax62 + al63);
    *eax64 = reinterpret_cast<signed char>(*eax65 + al66);
    *eax67 = reinterpret_cast<signed char>(*eax68 + al69);
    *eax70 = reinterpret_cast<signed char>(*eax71 + al72);
    *eax73 = reinterpret_cast<signed char>(*eax74 + al75);
    *eax76 = reinterpret_cast<signed char>(*eax77 + al78);
    *eax79 = reinterpret_cast<signed char>(*eax80 + al81);
    *eax82 = reinterpret_cast<signed char>(*eax83 + al84);
    *eax85 = reinterpret_cast<signed char>(*eax86 + al87);
    *eax88 = reinterpret_cast<signed char>(*eax89 + al90);
    *eax91 = reinterpret_cast<signed char>(*eax92 + al93);
    *eax94 = reinterpret_cast<signed char>(*eax95 + al96);
    *eax97 = reinterpret_cast<signed char>(*eax98 + al99);
    *eax100 = reinterpret_cast<signed char>(*eax101 + al102);
    *eax103 = reinterpret_cast<signed char>(*eax104 + al105);
    *eax106 = reinterpret_cast<signed char>(*eax107 + al108);
    *eax109 = reinterpret_cast<signed char>(*eax110 + al111);
    *eax112 = reinterpret_cast<signed char>(*eax113 + al114);
    *eax115 = reinterpret_cast<signed char>(*eax116 + al117);
    *eax118 = reinterpret_cast<signed char>(*eax119 + al120);
    *eax121 = reinterpret_cast<signed char>(*eax122 + al123);
    *eax124 = reinterpret_cast<signed char>(*eax125 + al126);
    *eax127 = reinterpret_cast<signed char>(*eax128 + al129);
    *eax130 = reinterpret_cast<signed char>(*eax131 + al132);
    *eax133 = reinterpret_cast<signed char>(*eax134 + al135);
    *eax136 = reinterpret_cast<signed char>(*eax137 + al138);
    *eax139 = reinterpret_cast<signed char>(*eax140 + al141);
    *eax142 = reinterpret_cast<signed char>(*eax143 + al144);
    *eax145 = reinterpret_cast<signed char>(*eax146 + al147);
    *eax148 = reinterpret_cast<signed char>(*eax149 + al150);
    *eax151 = reinterpret_cast<signed char>(*eax152 + al153);
    *eax154 = reinterpret_cast<signed char>(*eax155 + al156);
    *eax157 = reinterpret_cast<signed char>(*eax158 + al159);
    *eax160 = reinterpret_cast<signed char>(*eax161 + al162);
    *eax163 = reinterpret_cast<signed char>(*eax164 + al165);
    *eax166 = reinterpret_cast<signed char>(*eax167 + al168);
    *eax169 = reinterpret_cast<signed char>(*eax170 + al171);
    *eax172 = reinterpret_cast<signed char>(*eax173 + al174);
    *eax175 = reinterpret_cast<signed char>(*eax176 + al177);
    *eax178 = reinterpret_cast<signed char>(*eax179 + al180);
    *eax181 = reinterpret_cast<signed char>(*eax182 + al183);
    *eax184 = reinterpret_cast<signed char>(*eax185 + al186);
    *eax187 = reinterpret_cast<signed char>(*eax188 + al189);
    *eax190 = reinterpret_cast<signed char>(*eax191 + al192);
    *eax193 = reinterpret_cast<signed char>(*eax194 + al195);
    *eax196 = reinterpret_cast<signed char>(*eax197 + al198);
    *eax199 = reinterpret_cast<signed char>(*eax200 + al201);
    *eax202 = reinterpret_cast<signed char>(*eax203 + al204);
    *eax205 = reinterpret_cast<signed char>(*eax206 + al207);
    *eax208 = reinterpret_cast<signed char>(*eax209 + al210);
    *eax211 = reinterpret_cast<signed char>(*eax212 + al213);
    *eax214 = reinterpret_cast<signed char>(*eax215 + al216);
    *eax217 = reinterpret_cast<signed char>(*eax218 + al219);
    *eax220 = reinterpret_cast<signed char>(*eax221 + al222);
    *eax223 = reinterpret_cast<signed char>(*eax224 + al225);
    *eax226 = reinterpret_cast<signed char>(*eax227 + al228);
    *eax229 = reinterpret_cast<signed char>(*eax230 + al231);
    *eax232 = reinterpret_cast<signed char>(*eax233 + al234);
    *eax235 = reinterpret_cast<signed char>(*eax236 + al237);
    *eax238 = reinterpret_cast<signed char>(*eax239 + al240);
    *eax241 = reinterpret_cast<signed char>(*eax242 + al243);
    *eax244 = reinterpret_cast<signed char>(*eax245 + al246);
    *eax247 = reinterpret_cast<signed char>(*eax248 + al249);
    *eax250 = reinterpret_cast<signed char>(*eax251 + al252);
    *eax253 = reinterpret_cast<signed char>(*eax254 + al255);
    *eax256 = reinterpret_cast<signed char>(*eax257 + al258);
    *eax259 = reinterpret_cast<signed char>(*eax260 + al261);
    *eax262 = reinterpret_cast<signed char>(*eax263 + al264);
    *eax265 = reinterpret_cast<signed char>(*eax266 + al267);
    *eax268 = reinterpret_cast<signed char>(*eax269 + al270);
    *eax271 = reinterpret_cast<signed char>(*eax272 + al273);
    *eax274 = reinterpret_cast<signed char>(*eax275 + al276);
    *eax277 = reinterpret_cast<signed char>(*eax278 + al279);
    *eax280 = reinterpret_cast<signed char>(*eax281 + al282);
    *eax283 = reinterpret_cast<signed char>(*eax284 + al285);
    *eax286 = reinterpret_cast<signed char>(*eax287 + al288);
    *eax289 = reinterpret_cast<signed char>(*eax290 + al291);
    *eax292 = reinterpret_cast<signed char>(*eax293 + al294);
    *eax295 = reinterpret_cast<signed char>(*eax296 + al297);
    *eax298 = reinterpret_cast<signed char>(*eax299 + al300);
    *eax301 = reinterpret_cast<signed char>(*eax302 + al303);
    *eax304 = reinterpret_cast<signed char>(*eax305 + al306);
    *eax307 = reinterpret_cast<signed char>(*eax308 + al309);
    *eax310 = reinterpret_cast<signed char>(*eax311 + al312);
    *eax313 = reinterpret_cast<signed char>(*eax314 + al315);
    *eax316 = reinterpret_cast<signed char>(*eax317 + al318);
    *eax319 = reinterpret_cast<signed char>(*eax320 + al321);
    *eax322 = reinterpret_cast<signed char>(*eax323 + al324);
    *eax325 = reinterpret_cast<signed char>(*eax326 + al327);
    *eax328 = reinterpret_cast<signed char>(*eax329 + al330);
    *eax331 = reinterpret_cast<signed char>(*eax332 + al333);
    *eax334 = reinterpret_cast<signed char>(*eax335 + al336);
    *eax337 = reinterpret_cast<signed char>(*eax338 + al339);
    *eax340 = reinterpret_cast<signed char>(*eax341 + al342);
    *eax343 = reinterpret_cast<signed char>(*eax344 + al345);
    *eax346 = reinterpret_cast<signed char>(*eax347 + al348);
    *eax349 = reinterpret_cast<signed char>(*eax350 + al351);
    *eax352 = reinterpret_cast<signed char>(*eax353 + al354);
    *eax355 = reinterpret_cast<signed char>(*eax356 + al357);
    *eax358 = reinterpret_cast<signed char>(*eax359 + al360);
    *eax361 = reinterpret_cast<signed char>(*eax362 + al363);
    *eax364 = reinterpret_cast<signed char>(*eax365 + al366);
    *eax367 = reinterpret_cast<signed char>(*eax368 + al369);
    *eax370 = reinterpret_cast<signed char>(*eax371 + al372);
    *eax373 = reinterpret_cast<signed char>(*eax374 + al375);
    *eax376 = reinterpret_cast<signed char>(*eax377 + al378);
    *eax379 = reinterpret_cast<signed char>(*eax380 + al381);
    *eax382 = reinterpret_cast<signed char>(*eax383 + al384);
    *eax385 = reinterpret_cast<signed char>(*eax386 + al387);
    *eax388 = reinterpret_cast<signed char>(*eax389 + al390);
    *eax391 = reinterpret_cast<signed char>(*eax392 + al393);
    *eax394 = reinterpret_cast<signed char>(*eax395 + al396);
    *eax397 = reinterpret_cast<signed char>(*eax398 + al399);
    *eax400 = reinterpret_cast<signed char>(*eax401 + al402);
}

void fun_40134f() {
    int1_t pf1;

    __asm__("enter 0x5844, 0x49");
    if (!pf1) 
        goto 0x401371;
    __asm__("rcr byte [eax], 0x36");
}

struct s2055 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_4018c5() {
    unsigned char al1;
    uint1_t cf2;
    unsigned char ch3;
    unsigned char al4;
    signed char ch5;
    signed char al6;
    uint1_t cf7;
    unsigned char* esi8;
    unsigned char* edi9;
    signed char* edi10;
    signed char* esi11;
    struct s2055* esi12;
    signed char dl13;
    unsigned char* edx14;
    unsigned char dl15;
    unsigned char* edx16;

    if (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>((al1 & 0xcc) == 0)))) 
        goto 0x4018b6;
    __asm__("pushad ");
    __asm__("sti ");
    cf2 = reinterpret_cast<uint1_t>(ch3 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(al4)));
    if (reinterpret_cast<signed char>(ch5 - reinterpret_cast<unsigned char>(al6 + cf2)) >= reinterpret_cast<signed char>(static_cast<uint32_t>(cf2))) 
        goto 0x401946;
    cf7 = reinterpret_cast<uint1_t>(*esi8 < *edi9);
    *edi10 = *esi11;
    *reinterpret_cast<unsigned char*>(esi12->f1 - 49) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi12->f1 - 49) + dl13) + cf7);
    *reinterpret_cast<unsigned char*>(&edx14) = reinterpret_cast<unsigned char>(dl15 ^ *edx16);
    __asm__("int 0xba");
    __asm__("insd ");
    *edx14 = reinterpret_cast<unsigned char>(*edx14 ^ 0xeb);
    __asm__("sti ");
    __asm__("o16 wait ");
}

void fun_401c85(int32_t ecx) {
    int1_t sf2;
    int1_t less_or_equal3;
    void* eax4;
    uint32_t eax5;
    int32_t* edi6;
    int32_t* esi7;
    int32_t ebp8;

    if (sf2) 
        goto 0x401c61;
    if (less_or_equal3) 
        goto 0x401c0e;
    eax4 = reinterpret_cast<void*>(eax5 ^ 0x5a73df85);
    __asm__("aaa ");
    __asm__("popad ");
    *edi6 = *esi7;
    __asm__("insd ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax4) + reinterpret_cast<uint32_t>(eax4) * 8 + 59) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax4) + reinterpret_cast<uint32_t>(eax4) * 8 + 59) - 6;
    __asm__("pushad ");
    *reinterpret_cast<unsigned char*>(ebp8 + 1 - 0x322eae3f) = 0;
}

void fun_4022df(int32_t ecx) {
    int1_t sf2;
    int1_t less3;
    int1_t zf4;
    int1_t cf5;
    signed char* edi6;
    signed char dl7;
    void* ebp8;

    if (!sf2) 
        goto 0x40226a;
    if (less3) {
        if (!zf4) {
            addr_0x402310_4:
            __asm__("pushad ");
        } else {
            if (!cf5) 
                goto 0x402322;
            __asm__("out dx, al");
            *edi6 = dl7;
            if (reinterpret_cast<int32_t>(ebp8) > reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 - 4) 
                goto 0x40234f;
            __asm__("ficom word [ebx+eax*8]");
            __asm__("enter 0xf5ca, 0x4a");
            __asm__("ror byte [esi+esi*8+0x3e8e8ae7], 1");
            __asm__("popad ");
        }
    }
    __asm__("aaa ");
    goto addr_0x402310_4;
}

void fun_4025ab() {
}

struct s2056 {
    signed char[67] pad67;
    unsigned char f67;
};

struct s2057 {
    signed char[67] pad67;
    unsigned char f67;
};

void fun_4038c5(int32_t ecx) {
    signed char* edi2;
    signed char* edi3;
    signed char bl4;
    struct s2056* eax5;
    struct s2057* eax6;
    unsigned char bh7;
    int32_t eax8;
    int32_t eax9;
    uint32_t edx10;

    if (ecx - 1) 
        goto 0x403915;
    __asm__("daa ");
    __asm__("int 0xb0");
    *edi2 = reinterpret_cast<signed char>(*edi3 - bl4);
    __asm__("in al, 0xec");
    eax5->f67 = reinterpret_cast<unsigned char>(eax6->f67 & bh7);
    *reinterpret_cast<uint32_t*>(eax8 - 0x18141dc5) = *reinterpret_cast<uint32_t*>(eax9 - 0x18141dc5) | edx10;
}

void fun_403f5b() {
    uint32_t eax1;
    int32_t eax2;
    uint1_t cf3;

    eax1 = eax2 + 0x1a43b1f8 + cf3;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax1) + 1) = -93;
    __asm__("int1 ");
    __asm__("lahf ");
    if (reinterpret_cast<int32_t>(eax1 + 0x5d440e60) < reinterpret_cast<int32_t>(0) == __intrinsic()) 
        goto 0x403fa2;
    __asm__("lodsd ");
}

struct s2058 {
    uint32_t f0;
    signed char[84] pad88;
    signed char f88;
};

struct s2059 {
    signed char[80] pad80;
    int32_t f80;
};

struct s2060 {
    signed char[80] pad80;
    int32_t f80;
};

struct s2061 {
    signed char[80] pad80;
    int32_t f80;
};

struct s2064 {
    struct s2063* f0;
    signed char[3] pad4;
    int32_t f4;
    signed char[71] pad79;
    signed char f79;
};

struct s2063 {
    struct s2064* f0;
    signed char[2] pad4;
    struct s2064* f4;
    unsigned char f5;
    signed char[40163838] pad40163845;
    uint32_t f40163845;
};

struct s2062 {
    int32_t f0;
    struct s2063* f4;
};

struct s2065 {
    signed char[4] pad4;
    int32_t f4;
};

struct s2066 {
    signed char[31] pad31;
    void* f31;
};

struct s2063* gae7f6381;

struct s2067 {
    struct s2063* f0;
    signed char[1] pad2;
    struct s2064* f2;
};

struct s2068 {
    struct s2064* f0;
    signed char[2] pad4;
    struct s2064* f4;
};

signed char gea8320ed;

signed char gfe1dd226;

struct s2069 {
    int32_t f0;
    int32_t f4;
};

void fun_e01d985f();

struct s2070 {
    int32_t f0;
    uint32_t f4;
};

uint32_t g35e5e8ae;

void fun_404475(struct s2058* ecx) {
    uint32_t eflags2;
    uint32_t ebp3;
    uint32_t* ebp4;
    struct s2059* eax5;
    struct s2060* eax6;
    int1_t sf7;
    struct s2061* eax8;
    int32_t* esp9;
    int32_t edi10;
    uint32_t* esi11;
    uint32_t* edi12;
    int32_t* esi13;
    int32_t* edi14;
    int32_t* esi15;
    int32_t* edi16;
    int1_t less17;
    int32_t* esi18;
    int32_t* edi19;
    int1_t less_or_equal20;
    int32_t* esi21;
    int32_t* edi22;
    int1_t below_or_equal23;
    uint32_t* esi24;
    uint32_t* edi25;
    int32_t* edi26;
    int32_t* esi27;
    struct s2062* edi28;
    struct s2065* edi29;
    int16_t* esp30;
    int16_t ss31;
    struct s2066* ebx32;
    struct s2063* esp33;
    int32_t eax34;
    struct s2064* edi35;
    struct s2064* esi36;
    void* esi37;
    struct s2063* eax38;
    struct s2067* esp39;
    struct s2067* esp40;
    struct s2063* esp41;
    struct s2068* esp42;
    struct s2064* edx43;
    uint1_t cf44;
    struct s2063* eax45;
    struct s2063* tmp32_46;
    struct s2064** esp47;
    struct s2064* ss48;
    void* esp49;
    int1_t less_or_equal50;
    int1_t below_or_equal51;
    struct s2064** esp52;
    struct s2064* ss53;
    struct s2069* esp54;
    int32_t edx55;
    int32_t edx56;
    uint32_t edx57;
    int32_t ebx58;
    int32_t edx59;
    signed char dl60;
    struct s2070* edi61;
    signed char dh62;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    ebp3 = *ebp4;
    eax5->f80 = eax6->f80 - 84;
    sf7 = eax8->f80 < 0;
    __asm__("in eax, 0x9e");
    esp9 = reinterpret_cast<int32_t*>(ebp4 + 1 - 1);
    *esp9 = edi10;
    if (sf7) 
        goto 0x404421;
    __asm__("das ");
    *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(*esi11 < *edi12);
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = *esi13 == *edi14;
    *reinterpret_cast<int1_t*>(&eflags2) = *esi15 < *edi16;
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
    less17 = *esi18 < *edi19;
    less_or_equal20 = *esi21 <= *edi22;
    below_or_equal23 = *esi24 <= *edi25;
    *edi26 = *esi27;
    edi28 = reinterpret_cast<struct s2062*>(&edi29->f4);
    if (below_or_equal23) 
        goto 0x404441;
    esp30 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp9) - 2);
    *esp30 = ss31;
    *reinterpret_cast<unsigned char*>(&ebx32) = 0x84;
    esp33 = reinterpret_cast<struct s2063*>(esp30 - 2);
    *reinterpret_cast<struct s2064**>(&esp33->f0) = reinterpret_cast<struct s2064*>(eflags2 & 0xfcffff);
    edi28->f0 = eax34;
    edi35 = reinterpret_cast<struct s2064*>(&edi28->f4);
    esi36 = reinterpret_cast<struct s2064*>(reinterpret_cast<int32_t>(esi37) + 4 + 4);
    __asm__("into ");
    if (less_or_equal20) {
        __asm__("cli ");
        eax38 = gae7f6381;
        if (ecx) 
            goto addr_0x40454b_12;
        while (!*reinterpret_cast<int1_t*>(&eflags2)) {
        }
        __asm__("cli ");
        esp39 = reinterpret_cast<struct s2067*>(reinterpret_cast<unsigned char>(esp33) - 4);
        esp39->f0 = reinterpret_cast<struct s2063*>(0xfa);
        esp33 = reinterpret_cast<struct s2063*>(&esp39->f2);
        *reinterpret_cast<uint32_t*>(ebp3 - 0x236085c) = *reinterpret_cast<uint32_t*>(ebp3 - 0x236085c) + reinterpret_cast<unsigned char>(esp33);
        while (1) {
            addr_0x4044e8_16:
            while (1) {
                addr_0x4044eb_17:
                __asm__("stc ");
                esp40 = reinterpret_cast<struct s2067*>(reinterpret_cast<unsigned char>(esp33) - 4);
                esp40->f0 = eax38;
                esp41 = reinterpret_cast<struct s2063*>(&esp40->f2);
                __asm__("rol dword [esi], 0xc1");
                esi36 = *reinterpret_cast<struct s2064**>(&esp41->f0);
                esp42 = reinterpret_cast<struct s2068*>(&esp41->f4);
                *reinterpret_cast<signed char*>(&eax38) = 95;
                edx43 = esp42->f0;
                esp33 = reinterpret_cast<struct s2063*>(&esp42->f4);
                ebp3 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(edx43) + 0xbd6b10ec) * 0x65);
                goto addr_0x4044fb_18;
                while (1) {
                    addr_0x404555_19:
                    __asm__("retf 0x8ea");
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx43) + 1) = 83;
                    __asm__("iretd ");
                    gea8320ed = *reinterpret_cast<signed char*>(&eax38);
                    cf44 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax38) < reinterpret_cast<unsigned char>(0x32753e5e + *reinterpret_cast<uint1_t*>(&eflags2)));
                    eax45 = reinterpret_cast<struct s2063*>(reinterpret_cast<unsigned char>(eax38) - (0x32753e5e + cf44));
                    __asm__("sahf ");
                    ebx32 = reinterpret_cast<struct s2066*>(reinterpret_cast<uint32_t>(ebx32) - (reinterpret_cast<uint16_t>(*reinterpret_cast<struct s2064**>(&eax45->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(ebx32) < reinterpret_cast<uint16_t>(*reinterpret_cast<struct s2064**>(&eax45->f0)) + cf44)));
                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax45) + 5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax45) + 5) ^ *reinterpret_cast<unsigned char*>(&ebx32));
                    *reinterpret_cast<uint1_t*>(&eflags2) = 0;
                    *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
                    less17 = __intrinsic();
                    tmp32_46 = esp33;
                    esp33 = eax45;
                    eax38 = tmp32_46;
                    if (less17) 
                        goto addr_0x404576_20;
                    while (1) {
                        if (less17) 
                            goto addr_0x4044e8_16;
                        if (*reinterpret_cast<int1_t*>(&eflags2)) 
                            break;
                        addr_0x4044fb_18:
                        *reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(eax38) + 0xffffffa4) = *reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(eax38) + 0xffffffa4) - reinterpret_cast<uint16_t>(edx43);
                        __asm__("iretd ");
                        esi36->f79 = reinterpret_cast<signed char>(esi36->f79 >> 0x74);
                        __asm__("aad 0x93");
                        esp47 = reinterpret_cast<struct s2064**>(reinterpret_cast<unsigned char>(esp33) - 2);
                        *esp47 = ss48;
                        *reinterpret_cast<signed char*>(&eax38) = 96;
                        ebx32 = reinterpret_cast<struct s2066*>(reinterpret_cast<uint32_t>(ebx32) + 1);
                        *reinterpret_cast<uint16_t*>(ebp3 - 84) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(ebp3 - 84) | 0x7cf0);
                        esi36 = reinterpret_cast<struct s2064*>(&esi36->pad4);
                        __asm__("salc ");
                        edi35 = *esp47;
                        esp49 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp47 + 2) + *reinterpret_cast<uint32_t*>(reinterpret_cast<uint16_t>(esi36) + 0xffffffe7) + __intrinsic());
                        eax38->f40163845 = eax38->f40163845 - (28 + reinterpret_cast<uint1_t>(eax38->f40163845 < 28 + __intrinsic()));
                        *reinterpret_cast<unsigned char*>(&ebx32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx32) + *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp47) * 66 + 88));
                        less_or_equal50 = reinterpret_cast<signed char>(eax38) <= reinterpret_cast<signed char>(reinterpret_cast<int32_t>(ebx32->f31) + __intrinsic());
                        *reinterpret_cast<uint1_t*>(&eflags2) = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax38) < reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(ebx32->f31) + __intrinsic()));
                        below_or_equal51 = reinterpret_cast<unsigned char>(eax38) <= reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(ebx32->f31) + *reinterpret_cast<uint1_t*>(&eflags2));
                        eax38 = reinterpret_cast<struct s2063*>(reinterpret_cast<unsigned char>(eax38) - (reinterpret_cast<int32_t>(ebx32->f31) + *reinterpret_cast<uint1_t*>(&eflags2)));
                        __asm__("ror byte [edi], 1");
                        esp33 = reinterpret_cast<struct s2063*>(reinterpret_cast<uint32_t>(esp49) - 4);
                        *reinterpret_cast<struct s2064**>(&esp33->f0) = edi35;
                        __asm__("into ");
                        if (!below_or_equal51) 
                            goto addr_0x404555_19;
                        esp33 = reinterpret_cast<struct s2063*>(&esp33->f4);
                        *reinterpret_cast<struct s2063**>(&edi35->f0) = eax38;
                        esi36 = reinterpret_cast<struct s2064*>(&esi36->f4);
                        if (__intrinsic()) 
                            goto addr_0x4044cb_27;
                        if (!less_or_equal50) 
                            goto addr_0x4044eb_17;
                        __asm__("rcr dword [edi-0x70], 1");
                        __asm__("sahf ");
                        *reinterpret_cast<struct s2063**>(&esi36->f0) = reinterpret_cast<struct s2063*>(0);
                        esp33 = reinterpret_cast<struct s2063*>(reinterpret_cast<unsigned char>(esp33) - 4);
                        *reinterpret_cast<struct s2064**>(&esp33->f0) = edx43;
                        eax38 = reinterpret_cast<struct s2063*>(reinterpret_cast<unsigned char>(eax38) & 0xee98cbf7);
                        *reinterpret_cast<uint1_t*>(&eflags2) = 0;
                        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
                        less17 = __intrinsic();
                        addr_0x40454b_12:
                    }
                    *reinterpret_cast<signed char*>(&eax38) = gfe1dd226;
                }
            }
        }
    } else {
        __asm__("fcom dword [esi+eax+0x491b6ddd]");
        esp52 = reinterpret_cast<struct s2064**>(reinterpret_cast<unsigned char>(esp33) - 2);
        *esp52 = ss53;
        esp54 = reinterpret_cast<struct s2069*>(esp52 - 2);
        esp54->f0 = 0x404499;
        fun_e01d985f();
        *reinterpret_cast<uint32_t*>(edx55 + reinterpret_cast<uint32_t>(ecx) * 8 - 0xec73a1f) = *reinterpret_cast<uint32_t*>(edx56 + reinterpret_cast<uint32_t>(ecx) * 8 - 0xec73a1f) | edx57;
        ebx58 = esp54->f4;
        *reinterpret_cast<unsigned char*>(&edx59) = reinterpret_cast<unsigned char>(dl60 - reinterpret_cast<unsigned char>(*reinterpret_cast<struct s2063**>(&edi35->f0)));
        *reinterpret_cast<struct s2063**>(&edi35->f0) = *reinterpret_cast<struct s2063**>(&esi36->f0);
        edi61 = reinterpret_cast<struct s2070*>(&edi35->f4);
        edi61->f0 = esi36->f4;
        __asm__("popad ");
        edi61->f4 = ebp3 & 0xfe7a055d;
        **reinterpret_cast<uint32_t**>(&ebx58) = **reinterpret_cast<uint32_t**>(&ebx58) ^ 0x9d6e0572;
        *reinterpret_cast<unsigned char*>(edx59 + 0x65ca23c3) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx59 + 0x65ca23c3) + dh62)));
        goto addr_0x4044cb_27;
    }
    addr_0x404576_20:
    __asm__("aaa ");
    g35e5e8ae = g35e5e8ae | 65;
    if (reinterpret_cast<int32_t>(reinterpret_cast<uint16_t>(esi36) - 1) >= reinterpret_cast<int32_t>(0)) 
        goto 0x404593; else 
        goto "???";
    addr_0x4044cb_27:
    __asm__("into ");
}

struct s2071 {
    signed char[9] pad9;
    int32_t f9;
};

struct s2072 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_405fd7(struct s2071* ecx) {
    struct s2072* ebp2;
    signed char bl3;
    uint32_t edx4;
    uint16_t fs5;

    __asm__("xlatb ");
    ecx->f9 = ebp2->f4 + 4 + 2 + 4;
    __asm__("sahf ");
    if (reinterpret_cast<signed char>(bl3 - 1) < 0 != __intrinsic()) 
        goto 0x405f72;
    __asm__("ror byte [edi+0xf9bb0fb4], 1");
    if (__intrinsic()) 
        goto 0x40604b;
    *reinterpret_cast<uint32_t*>((edx4 ^ reinterpret_cast<uint32_t>(ecx)) - 0x70ffcaab) = static_cast<uint32_t>(fs5);
}

void fun_406fec(int32_t ecx) {
    int1_t of2;
    signed char dh3;

    if (!of2) 
        goto 0x406fb1;
    *reinterpret_cast<signed char*>(ecx + 0x32a0f9ae) = dh3;
    __asm__("fcmovnbe st0, st0");
    __asm__("pushad ");
    __asm__("out dx, al");
    __asm__("insd ");
}

void fun_408815(int32_t ecx) {
    int1_t of2;
    int32_t eax3;
    int32_t eax4;
    int32_t edi5;
    int32_t edi6;
    int32_t eax7;
    int32_t edi8;
    int32_t eax9;
    int32_t esi10;
    int32_t esi11;
    unsigned char al12;

    if (of2) 
        goto 0x408853;
    *reinterpret_cast<int32_t*>(eax3 + 0x49ffb0bb) = *reinterpret_cast<int32_t*>(eax4 + 0x49ffb0bb) + 78;
    *reinterpret_cast<uint32_t*>(edi5 + 0x4a3181b8) = *reinterpret_cast<int32_t*>(edi6 + 0x4a3181b8) - (eax7 + reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(edi8 + 0x4a3181b8) < eax9 + __intrinsic()));
    *reinterpret_cast<unsigned char*>(esi10 + ecx) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi11 + ecx) | al12);
}

void fun_409fd9(signed char cl) {
    int32_t* esi2;
    int32_t ebx3;
    int32_t edx4;

    __asm__("les ebp, [edi+0xdab26fa3]");
    *esi2 = ebx3;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx4) + 1) = 66;
    *reinterpret_cast<signed char*>(edx4 - 0xe7eeeb0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx4 - 0xe7eeeb0) - 5);
}

void fun_40c160(uint32_t a1, uint32_t a2) {
    uint32_t esi3;
    uint32_t* eax4;
    uint32_t edx5;
    int32_t edi6;
    uint32_t ecx7;
    uint32_t ecx8;

    esi3 = a1;
    eax4 = reinterpret_cast<uint32_t*>(0x42e0d8);
    edx5 = a2 & 0xff;
    edi6 = 4;
    while (1) {
        ecx7 = edx5 - 10;
        if (!ecx7) {
            ecx8 = *eax4 + esi3;
        } else {
            if (ecx7 - 1) {
                addr_0x40c190_5:
                ++eax4;
                --edi6;
                if (edi6) 
                    continue; else 
                    break;
            } else {
                ecx8 = *eax4 ^ esi3;
            }
        }
        *eax4 = ecx8;
        goto addr_0x40c190_5;
    }
    return;
}

void fun_40c5f7() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
}

void fun_40c4f7() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
}

struct s2073 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s2074 {
    signed char[4] pad4;
    unsigned char f4;
};

void fun_40e8a1() {
    int1_t pf1;
    struct s2073* ebx2;
    struct s2074* ebx3;
    unsigned char bh4;

    if (!pf1) 
        goto 0x40e89c;
    ebx2->f4 = reinterpret_cast<unsigned char>(ebx3->f4 | bh4);
}

struct s2075 {
    signed char[12] pad12;
    int32_t f12;
};

struct s2076 {
    signed char[16] pad16;
    int32_t f16;
};

void fun_4113b5(int32_t a1, int32_t a2, int16_t a3) {
    int32_t eax4;
    int32_t ecx5;
    struct s2075* ebp6;
    int32_t v7;
    struct s2076* ebp8;

    if (eax4 == 2) {
        ecx5 = ebp6->f12;
        v7 = ebp8->f16;
        fun_4103d0(ecx5, v7, __return_address(), a1, a2, a3);
        goto 0x4113d1;
    }
}

int32_t fun_4116d0() {
    return 0xc8;
}

int32_t GetFileVersionInfoA = 0x328e0;

void fun_4117c6() {
    goto GetFileVersionInfoA;
}

void fun_413a98() {
    goto 0x413a96;
}

void fun_415310(void** ecx) {
    fun_418940(ecx, 0x42ec38);
    return;
}

void** fun_415550(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** edi7;
    void** esi8;
    void** eax9;

    fun_4171c0(ecx, a5, edi7, esi8, __return_address(), a2, a3, a4, a5, a6);
    eax9 = fun_415590(a3, a2, a3, a4, a5);
    fun_417230(a5);
    return eax9;
}

struct s2077 {
    int32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
};

void fun_4169d2(void** ecx) {
    int32_t* esp2;
    int32_t ebp3;
    int32_t ebp4;
    struct s2077* esp5;

    esp2 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp3 - 24)) - 4);
    *esp2 = *reinterpret_cast<int32_t*>(ebp4 - 0x68);
    esp5 = reinterpret_cast<struct s2077*>(esp2 - 1);
    esp5->f0 = 0x4169de;
    fun_415840(ecx, esp5->f4, esp5->f8);
}

struct s2078 {
    signed char[24] pad24;
    struct s45* f24;
    int32_t f28;
};

void fun_41708d(struct s2078* a1) {
    int32_t v2;
    struct s45* v3;

    v2 = a1->f28;
    v3 = a1->f24;
    fun_416f1a(v3, v2);
    return;
}

void fun_41deb0(void** a1, void** a2, void** a3) {
    fun_416a10(2, __return_address(), a1, a2, a3);
    return;
}

void fun_4216e9() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4216e4;
}

void fun_4244d5() {
    int1_t pf1;

    if (!pf1) 
        goto 0x4244d0;
}

void fun_425eaf(int32_t ecx) {
    int1_t pf2;

    if (!pf2) 
        goto 0x425eaa;
}

int32_t GetFileVersionInfoSizeA = 0x328f6;

void fun_4117cc() {
    goto GetFileVersionInfoSizeA;
}

uint32_t fun_41ca70(uint32_t ecx, signed char* a2, signed char* a3) {
    signed char* edx4;
    int32_t eax5;
    signed char* esi6;
    uint32_t ecx7;

    edx4 = a3;
    eax5 = 0;
    while (*edx4) {
        ++edx4;
        __asm__("bts [esp], eax");
    }
    esi6 = a2;
    ecx7 = 0xffffffff;
    do {
        ++ecx7;
        *reinterpret_cast<signed char*>(&eax5) = *esi6;
        if (!*reinterpret_cast<signed char*>(&eax5)) 
            break;
        ++esi6;
    } while (!static_cast<int1_t>(0 >> eax5));
    return ecx7;
}

void fun_40c617() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
}

void** fun_40c630(int32_t ecx) {
    void** esi2;
    int32_t edi3;
    int32_t esi4;
    int32_t ebx5;
    void** eax6;
    void** eax7;
    int32_t eax8;
    void** ecx9;
    void** eax10;
    void** eax11;
    void** v12;
    int32_t eax13;
    void** v14;

    esi2 = reinterpret_cast<void**>(0);
    eax6 = fun_40c5f0(ecx, edi3, esi4, ebx5);
    eax7 = fun_40c610(ecx, edi3, esi4, ebx5);
    eax8 = reinterpret_cast<int32_t>(GetModuleFileNameA());
    if (eax8 && (ecx9 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffef4), eax10 = reinterpret_cast<void**>(CreateFileA(ecx9, 0x80000000, 1, 0, 3, 0x80, 0)), eax10 != 0xffffffff)) {
        SetFilePointer(eax10, eax7, 0, 0, ecx9, 0x80000000, 1, 0, 3, 0x80, 0);
        eax11 = fun_414db0(eax6, eax10, eax7, 0, 0, ecx9, 0x80000000, 1, 0, 3, 0x80, 0);
        esi2 = eax11;
        v12 = esi2;
        eax13 = reinterpret_cast<int32_t>(ReadFile(eax10, v12, eax6, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, 0, eax10, eax7, 0, 0, ecx9, 0x80000000, 1, 0, 3, 0x80, 0));
        if (!eax13 || v14 != eax6) {
            fun_414d40(ecx9, esi2, eax10, v12, eax6, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, 0, eax10, eax7, 0, 0, ecx9, 0x80000000, 1, 0, 3, 0x80, 0);
            esi2 = reinterpret_cast<void**>(0);
        }
        CloseHandle(eax10, eax10, v12, eax6, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, 0, eax10, eax7, 0, 0, ecx9, 0x80000000, 1, 0, 3, 0x80, 0);
    }
    return esi2;
}

void fun_66557a41(int24_t a1);

void fun_404b2d() {
    int32_t v1;
    int32_t ecx2;
    int32_t eax3;
    int32_t ebx4;
    int32_t ebp5;
    int32_t ebp6;
    int32_t ebx7;

    do {
        v1 = reinterpret_cast<int32_t>(__return_address());
        __asm__("clc ");
        --ecx2;
    } while (ecx2);
    eax3 = ebx4;
    *reinterpret_cast<unsigned char*>(ebp5 - 0x2548a675) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp6 - 0x2548a675) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 1) < reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx7 - 0x2b02eb67) * 0x8a67353c + 0x6d1639ba))));
    __asm__("into ");
    fun_66557a41(*reinterpret_cast<int24_t*>(reinterpret_cast<int32_t>(&v1) + 1));
}

void fun_407e6e(int32_t a1, int32_t a2) {
    uint1_t cf3;
    uint32_t* edi4;
    int32_t ebp5;
    uint32_t* edi6;
    int32_t* edi7;
    int32_t ebp8;
    int32_t ecx9;
    uint32_t* edi10;
    int32_t eax11;
    uint32_t edi12;

    do {
        cf3 = reinterpret_cast<uint1_t>(*edi4 < ebp5 + __intrinsic());
        *edi6 = *edi7 - (ebp8 + cf3);
        --ecx9;
        if (reinterpret_cast<uint1_t>(!!ecx9) & reinterpret_cast<uint1_t>(*edi10 != static_cast<uint32_t>(cf3))) 
            goto 0x407e28;
        *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) + 90) + cf3);
    } while (__intrinsic());
    *reinterpret_cast<uint32_t*>(eax11 + 0x6ad6c2f6) = *reinterpret_cast<uint32_t*>(eax11 + 0x6ad6c2f6) | edi12;
}

struct s2079 {
    uint32_t f0;
    signed char[54] pad58;
    signed char f58;
};

uint32_t fun_94606b72(int32_t a1);

struct s2080 {
    signed char[1] pad1;
    uint32_t f1;
};

void fun_408b19() {
    uint64_t v1;
    signed char* ecx2;
    int32_t ebx3;
    struct s2079* ecx4;
    uint1_t zf5;
    int1_t cf6;
    uint32_t esi7;
    uint32_t esi8;
    uint1_t less_or_equal9;
    uint32_t esi10;
    int32_t ebp11;
    uint32_t eax12;
    uint32_t* edx13;
    struct s2080* edx14;
    signed char* edi15;
    signed char* esi16;
    int32_t* edi17;
    void* edi18;
    int32_t edi19;

    while (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 2) = reinterpret_cast<int32_t>(__return_address()), *ecx2 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx3) + 1), ecx4 = reinterpret_cast<struct s2079*>(ecx2 - 1), !(reinterpret_cast<uint1_t>(!!ecx4) & reinterpret_cast<uint1_t>(!zf5))) {
        cf6 = esi7 < ecx4->f0;
        zf5 = reinterpret_cast<uint1_t>(esi8 == ecx4->f0);
        less_or_equal9 = reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi10) <= reinterpret_cast<int32_t>(ecx4->f0));
        ecx2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx4) - 1);
        if (!ecx2) {
            ++ebx3;
            __asm__("daa ");
            *reinterpret_cast<signed char*>(&ebx3) = *reinterpret_cast<signed char*>(&ebx3);
            cf6 = 0;
            zf5 = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(&ebx3) == 0);
            less_or_equal9 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | zf5);
            *reinterpret_cast<int32_t*>(ebx3 - 76)();
            --ecx2;
            if (!(reinterpret_cast<uint1_t>(!!ecx2) & zf5)) 
                goto addr_0x408b31_4;
            __asm__("fsub dword [eax+0x55]");
        }
        if (!cf6) 
            goto 0x408aa0;
    }
    addr_0x408b50_8:
    if (!less_or_equal9) 
        goto 0x408add;
    ecx4->f58 = reinterpret_cast<signed char>(ecx4->f58 - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx4) + 1));
    __asm__("retf 0x1896");
    eax12 = fun_94606b72(ebp11);
    if (!__intrinsic()) 
        goto 0x408b0c;
    __asm__("salc ");
    edx13 = &edx14->f1;
    __asm__("lodsb ");
    __asm__("out dx, al");
    *edx13 = *edx13 & eax12;
    addr_0x408b31_4:
    __asm__("lds ebx, [eax]");
    *edi15 = *esi16;
    __asm__("in al, 0xc3");
    __asm__("insb ");
    __asm__("out 0x15, eax");
    __asm__("fidivr word [esi+0x7a]");
    edi17 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi18) + 1 - 1);
    __asm__("lodsb ");
    *edi17 = 0;
    ecx4 = *reinterpret_cast<struct s2079**>(reinterpret_cast<int32_t>(&v1) + 4);
    edi19 = reinterpret_cast<int32_t>(edi17) - 1;
    less_or_equal9 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(edi19 < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(edi19 == 0));
    goto addr_0x408b50_8;
}
